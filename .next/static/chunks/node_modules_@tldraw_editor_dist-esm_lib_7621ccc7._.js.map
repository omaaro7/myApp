{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/globals/environment.ts"],"sourcesContent":["/**\n * An object that contains information about the current device and environment.\n *\n * @public\n */\nconst tlenv = {\n\tisSafari: false,\n\tisIos: false,\n\tisChromeForIos: false,\n\tisFirefox: false,\n\tisAndroid: false,\n\tisWebview: false,\n\tisDarwin: false,\n\thasCanvasSupport: false,\n}\n\nif (typeof window !== 'undefined' && 'navigator' in window) {\n\ttlenv.isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n\ttlenv.isIos = !!navigator.userAgent.match(/iPad/i) || !!navigator.userAgent.match(/iPhone/i)\n\ttlenv.isChromeForIos = /crios.*safari/i.test(navigator.userAgent)\n\ttlenv.isFirefox = /firefox/i.test(navigator.userAgent)\n\ttlenv.isAndroid = /android/i.test(navigator.userAgent)\n\ttlenv.isDarwin = window.navigator.userAgent.toLowerCase().indexOf('mac') > -1\n\ttlenv.hasCanvasSupport =\n\t\ttypeof window !== 'undefined' && 'Promise' in window && 'HTMLCanvasElement' in window\n}\n\nexport { tlenv }\n"],"names":[],"mappings":";;;AAKA,MAAM,QAAQ;IACb,UAAU;IACV,OAAO;IACP,gBAAgB;IAChB,WAAW;IACX,WAAW;IACX,WAAW;IACX,UAAU;IACV,kBAAkB;AACnB;AAEA,IAAI,OAAO,WAAW,eAAe,eAAe,QAAQ;IAC3D,MAAM,QAAA,GAAW,iCAAiC,IAAA,CAAK,UAAU,SAAS;IAC1E,MAAM,KAAA,GAAQ,CAAC,CAAC,UAAU,SAAA,CAAU,KAAA,CAAM,OAAO,KAAK,CAAC,CAAC,UAAU,SAAA,CAAU,KAAA,CAAM,SAAS;IAC3F,MAAM,cAAA,GAAiB,iBAAiB,IAAA,CAAK,UAAU,SAAS;IAChE,MAAM,SAAA,GAAY,WAAW,IAAA,CAAK,UAAU,SAAS;IACrD,MAAM,SAAA,GAAY,WAAW,IAAA,CAAK,UAAU,SAAS;IACrD,MAAM,QAAA,GAAW,OAAO,SAAA,CAAU,SAAA,CAAU,WAAA,CAAY,EAAE,OAAA,CAAQ,KAAK,IAAI,CAAA;IAC3E,MAAM,gBAAA,GACL,OAAO,WAAW,eAAe,aAAa,UAAU,uBAAuB;AACjF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/globals/menus.ts"],"sourcesContent":["import { atom } from '@tldraw/state'\n\n/** @public */\nexport const tlmenus = {\n\t/**\n\t * A set of strings representing any open menus. When menus are open,\n\t * certain interactions will behave differently; for example, when a\n\t * draw tool is selected and a menu is open, a pointer-down will not\n\t * create a dot (because the user is probably trying to close the menu)\n\t * however a pointer-down event followed by a drag will begin drawing\n\t * a line (because the user is BOTH trying to close the menu AND start\n\t * drawing a line).\n\t *\n\t * @public\n\t */\n\tmenus: atom<string[]>('open menus', []),\n\n\t/**\n\t * Get the current open menus.\n\t *\n\t * @param contextId - An optional context to get menus for.\n\t *\n\t * @public\n\t */\n\tgetOpenMenus(contextId?: string) {\n\t\tif (contextId) return this.menus.get().filter((m) => m.endsWith('-' + contextId))\n\t\treturn this.menus.get()\n\t},\n\n\t/**\n\t * Add an open menu.\n\t *\n\t * @example\n\t * ```ts\n\t * addOpenMenu('menu-id')\n\t * addOpenMenu('menu-id', myEditorId)\n\t * ```\n\t *\n\t * @param id - The id of the menu to add.\n\t * @param contextId - An optional context to add the menu to.\n\t *\n\t * @public\n\t */\n\taddOpenMenu(id: string, contextId = '') {\n\t\tconst idWithContext = contextId ? `${id}-${contextId}` : id\n\t\tconst menus = new Set(this.menus.get())\n\t\tif (!menus.has(idWithContext)) {\n\t\t\tmenus.add(idWithContext)\n\t\t\tthis.menus.set([...menus])\n\t\t}\n\t},\n\n\t/**\n\t * Delete an open menu.\n\t *\n\t * @example\n\t * ```ts\n\t * deleteOpenMenu('menu-id')\n\t * deleteOpenMenu('menu-id', myEditorId)\n\t * ```\n\t *\n\t * @param id - The id of the menu to delete.\n\t * @param contextId - An optional context to delete the menu from.\n\t *\n\t * @public\n\t */\n\tdeleteOpenMenu(id: string, contextId = '') {\n\t\tconst idWithContext = contextId ? `${id}-${contextId}` : id\n\t\tconst menus = new Set(this.menus.get())\n\t\tif (menus.has(idWithContext)) {\n\t\t\tmenus.delete(idWithContext)\n\t\t\tthis.menus.set([...menus])\n\t\t}\n\t},\n\n\t/**\n\t * Clear all open menus.\n\t *\n\t * @example\n\t * ```ts\n\t * clearOpenMenus()\n\t * clearOpenMenus(myEditorId)\n\t * ```\n\t *\n\t * @param contextId - An optional context to clear menus for.\n\t *\n\t * @public\n\t */\n\tclearOpenMenus(contextId?: string) {\n\t\tthis.menus.set(contextId ? this.menus.get().filter((m) => !m.endsWith('-' + contextId)) : [])\n\t},\n\n\t_hiddenMenus: [] as string[],\n\n\t/**\n\t * Hide all open menus. Restore them with the `showOpenMenus` method.\n\t *\n\t * @example\n\t * ```ts\n\t * hideOpenMenus()\n\t * hideOpenMenus(myEditorId)\n\t * ```\n\t *\n\t * @param contextId - An optional context to hide menus for.\n\t *\n\t * @public\n\t */\n\thideOpenMenus(contextId?: string) {\n\t\tthis._hiddenMenus = [...this.getOpenMenus(contextId)]\n\t\tif (this._hiddenMenus.length === 0) return\n\t\tfor (const menu of this._hiddenMenus) {\n\t\t\tthis.deleteOpenMenu(menu, contextId)\n\t\t}\n\t},\n\n\t/**\n\t * Show all hidden menus.\n\t *\n\t * @example\n\t * ```ts\n\t * showOpenMenus()\n\t * showOpenMenus(myEditorId)\n\t * ```\n\t *\n\t * @param contextId - An optional context to show menus for.\n\t *\n\t * @public\n\t */\n\tshowOpenMenus(contextId?: string) {\n\t\tif (this._hiddenMenus.length === 0) return\n\t\tfor (const menu of this._hiddenMenus) {\n\t\t\tthis.addOpenMenu(menu, contextId)\n\t\t}\n\t\tthis._hiddenMenus = []\n\t},\n\n\t/**\n\t * Get whether a menu is open for a given context.\n\t *\n\t * @example\n\t * ```ts\n\t * isMenuOpem(id, myEditorId)\n\t * ```\n\t *\n\t * @param id - The id of the menu to check.\n\t * @param contextId - An optional context to check menus for.\n\t *\n\t * @public\n\t */\n\tisMenuOpen(id: string, contextId?: string): boolean {\n\t\treturn this.getOpenMenus(contextId).includes(id)\n\t},\n\n\t/**\n\t * Get whether any menus are open for a given context.\n\t *\n\t * @example\n\t * ```ts\n\t * hasOpenMenus(myEditorId)\n\t * ```\n\t *\n\t * @param contextId - A context to check menus for.\n\t *\n\t * @public\n\t */\n\thasOpenMenus(contextId: string): boolean {\n\t\treturn this.getOpenMenus(contextId).length > 0\n\t},\n\n\t/**\n\t * Get whether any menus are open for any context.\n\t *\n\t * @example\n\t * ```ts\n\t * hasAnyOpenMenus()\n\t * ```\n\t *\n\t * @public\n\t */\n\thasAnyOpenMenus(): boolean {\n\t\treturn this.getOpenMenus().length > 0\n\t},\n\n\tforContext(contextId: string) {\n\t\treturn {\n\t\t\tgetOpenMenus: () => this.getOpenMenus(contextId),\n\t\t\taddOpenMenu: (id: string) => this.addOpenMenu(id, contextId),\n\t\t\tdeleteOpenMenu: (id: string) => this.deleteOpenMenu(id, contextId),\n\t\t\tclearOpenMenus: () => this.clearOpenMenus(contextId),\n\t\t\t// Gets whether any menus are open\n\t\t\tisMenuOpen: (id: string) => this.isMenuOpen(id, contextId),\n\t\t\thasOpenMenus: () => this.hasOpenMenus(contextId),\n\t\t\thasAnyOpenMenus: () => this.hasAnyOpenMenus(),\n\t\t}\n\t},\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/globals/time.ts"],"sourcesContent":["import { Timers } from '@tldraw/utils'\n\n/**\n * A global timer manager.\n *\n * @public\n */\nexport const tltime = new Timers()\n"],"names":[],"mappings":";;;;AAAA,SAAS,cAAc;;AAOhB,MAAM,SAAS,0KAAI,SAAA,CAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/constants.ts"],"sourcesContent":["import { TLCameraOptions } from './editor/types/misc-types'\nimport { EASINGS } from './primitives/easings'\n\n/** @internal */\nexport const DEFAULT_CAMERA_OPTIONS: TLCameraOptions = {\n\tisLocked: false,\n\twheelBehavior: 'pan',\n\tpanSpeed: 1,\n\tzoomSpeed: 1,\n\tzoomSteps: [0.05, 0.1, 0.25, 0.5, 1, 2, 4, 8],\n}\n\n/** @internal */\nexport const DEFAULT_ANIMATION_OPTIONS = {\n\tduration: 0,\n\teasing: EASINGS.easeInOutCubic,\n}\n\n/**\n * Negative pointer ids are reserved for internal use.\n *\n * @internal */\nexport const INTERNAL_POINTER_IDS = {\n\tCAMERA_MOVE: -10,\n} as const\n\n/** @public */\nexport const SIDES = ['top', 'right', 'bottom', 'left'] as const\n\nexport const LEFT_MOUSE_BUTTON = 0\nexport const RIGHT_MOUSE_BUTTON = 2\nexport const MIDDLE_MOUSE_BUTTON = 1\nexport const STYLUS_ERASER_BUTTON = 5\n\nexport const ZOOM_TO_FIT_PADDING = 128\n"],"names":[],"mappings":";;;;;;;;;;;AACA,SAAS,eAAe;;AAGjB,MAAM,yBAA0C;IACtD,UAAU;IACV,eAAe;IACf,UAAU;IACV,WAAW;IACX,WAAW;QAAC;QAAM;QAAK;QAAM;QAAK;QAAG;QAAG;QAAG,CAAC;KAAA;AAC7C;AAGO,MAAM,4BAA4B;IACxC,UAAU;IACV,8LAAQ,UAAA,CAAQ,cAAA;AACjB;AAMO,MAAM,uBAAuB;IACnC,aAAa,CAAA;AACd;AAGO,MAAM,QAAQ;IAAC;IAAO;IAAS;IAAU,MAAM;CAAA;AAE/C,MAAM,oBAAoB;AAC1B,MAAM,qBAAqB;AAC3B,MAAM,sBAAsB;AAC5B,MAAM,uBAAuB;AAE7B,MAAM,sBAAsB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/debug-flags.ts"],"sourcesContent":["import { Atom, atom, react } from '@tldraw/state'\nimport { deleteFromSessionStorage, getFromSessionStorage, setInSessionStorage } from '@tldraw/utils'\n\n// --- 1. DEFINE ---\n//\n// Define your debug values and feature flags here. Use `createDebugValue` to\n// create an arbitrary value with defaults for production, staging, and\n// development. Use `createFeatureFlag` to create a boolean flag which will be\n// `true` by default in development and staging, and `false` in production.\n/** @internal */\nexport const featureFlags: Record<string, DebugFlag<boolean>> = {}\n\n/** @internal */\nexport const pointerCaptureTrackingObject = createDebugValue(\n\t'pointerCaptureTrackingObject',\n\t// ideally we wouldn't store this mutable value in an atom but it's not\n\t// a big deal for debug values\n\t{\n\t\tdefaults: { all: new Map<Element, number>() },\n\t\tshouldStoreForSession: false,\n\t}\n)\n\n/** @internal */\nexport const debugFlags = {\n\t// --- DEBUG VALUES ---\n\tlogPreventDefaults: createDebugValue('logPreventDefaults', {\n\t\tdefaults: { all: false },\n\t}),\n\tlogPointerCaptures: createDebugValue('logPointerCaptures', {\n\t\tdefaults: { all: false },\n\t}),\n\tlogElementRemoves: createDebugValue('logElementRemoves', {\n\t\tdefaults: { all: false },\n\t}),\n\tdebugSvg: createDebugValue('debugSvg', {\n\t\tdefaults: { all: false },\n\t}),\n\tshowFps: createDebugValue('showFps', {\n\t\tdefaults: { all: false },\n\t}),\n\tmeasurePerformance: createDebugValue('measurePerformance', { defaults: { all: false } }),\n\tthrowToBlob: createDebugValue('throwToBlob', {\n\t\tdefaults: { all: false },\n\t}),\n\treconnectOnPing: createDebugValue('reconnectOnPing', {\n\t\tdefaults: { all: false },\n\t}),\n\tdebugCursors: createDebugValue('debugCursors', {\n\t\tdefaults: { all: false },\n\t}),\n\tforceSrgb: createDebugValue('forceSrgbColors', { defaults: { all: false } }),\n\tdebugGeometry: createDebugValue('debugGeometry', { defaults: { all: false } }),\n\thideShapes: createDebugValue('hideShapes', { defaults: { all: false } }),\n\teditOnType: createDebugValue('editOnType', { defaults: { all: false } }),\n\ta11y: createDebugValue('a11y', { defaults: { all: false } }),\n\tdebugElbowArrows: createDebugValue('debugElbowArrows', { defaults: { all: false } }),\n} as const\n\ndeclare global {\n\tinterface Window {\n\t\ttldrawLog(message: any): void\n\t}\n}\n\n// --- 2. USE ---\n// In normal code, read from debug flags directly by calling .value on them:\n//    if (debugFlags.preventDefaultLogging.value) { ... }\n//\n// In react, wrap your reads in `useValue` (or your component in `track`)\n// so they react to changes:\n//    const shouldLog = useValue(debugFlags.preventDefaultLogging)\n\n// --- 3. GET FUNKY ---\n// If you need to do fun stuff like monkey-patching in response to flag changes,\n// add that here. Make sure you wrap your code in `react` so it runs\n// automatically when values change!\n\nif (typeof Element !== 'undefined') {\n\tconst nativeElementRemoveChild = Element.prototype.removeChild\n\treact('element removal logging', () => {\n\t\tif (debugFlags.logElementRemoves.get()) {\n\t\t\tElement.prototype.removeChild = function <T extends Node>(this: any, child: Node): T {\n\t\t\t\tconsole.warn('[tldraw] removing child:', child)\n\t\t\t\treturn nativeElementRemoveChild.call(this, child) as T\n\t\t\t}\n\t\t} else {\n\t\t\tElement.prototype.removeChild = nativeElementRemoveChild\n\t\t}\n\t})\n}\n\n// --- IMPLEMENTATION ---\n// you probably don't need to read this if you're just using the debug values system\nfunction createDebugValue<T>(\n\tname: string,\n\t{\n\t\tdefaults,\n\t\tshouldStoreForSession = true,\n\t}: { defaults: DebugFlagDefaults<T>; shouldStoreForSession?: boolean }\n) {\n\treturn createDebugValueBase({\n\t\tname,\n\t\tdefaults,\n\t\tshouldStoreForSession,\n\t})\n}\n\n// function createFeatureFlag<T>(\n// \tname: string,\n// \t{\n// \t\tdefaults,\n// \t\tshouldStoreForSession = true,\n// \t}: { defaults: DebugFlagDefaults<T>; shouldStoreForSession?: boolean }\n// ) {\n// \treturn createDebugValueBase({\n// \t\tname,\n// \t\tdefaults,\n// \t\tshouldStoreForSession,\n// \t})\n// }\n\nfunction createDebugValueBase<T>(def: DebugFlagDef<T>): DebugFlag<T> {\n\tconst defaultValue = getDefaultValue(def)\n\tconst storedValue = def.shouldStoreForSession\n\t\t? (getStoredInitialValue(def.name) as T | null)\n\t\t: null\n\tconst valueAtom = atom(`debug:${def.name}`, storedValue ?? defaultValue)\n\n\tif (typeof window !== 'undefined') {\n\t\tif (def.shouldStoreForSession) {\n\t\t\treact(`debug:${def.name}`, () => {\n\t\t\t\tconst currentValue = valueAtom.get()\n\t\t\t\tif (currentValue === defaultValue) {\n\t\t\t\t\tdeleteFromSessionStorage(`tldraw_debug:${def.name}`)\n\t\t\t\t} else {\n\t\t\t\t\tsetInSessionStorage(`tldraw_debug:${def.name}`, JSON.stringify(currentValue))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tObject.defineProperty(window, `tldraw${def.name.replace(/^[a-z]/, (l) => l.toUpperCase())}`, {\n\t\t\tget() {\n\t\t\t\treturn valueAtom.get()\n\t\t\t},\n\t\t\tset(newValue) {\n\t\t\t\tvalueAtom.set(newValue)\n\t\t\t},\n\t\t\tconfigurable: true,\n\t\t})\n\t}\n\n\treturn Object.assign(valueAtom, def, {\n\t\treset: () => valueAtom.set(defaultValue),\n\t})\n}\n\nfunction getStoredInitialValue(name: string) {\n\ttry {\n\t\treturn JSON.parse(getFromSessionStorage(`tldraw_debug:${name}`) ?? 'null')\n\t} catch {\n\t\treturn null\n\t}\n}\n\n// process.env might not be defined, but we can't access it using optional\n// chaining because some bundlers search for `process.env.SOMETHING` as a string\n// and replace it with its value.\nfunction readEnv(fn: () => string | undefined) {\n\ttry {\n\t\treturn fn()\n\t} catch {\n\t\treturn null\n\t}\n}\n\nfunction getDefaultValue<T>(def: DebugFlagDef<T>): T {\n\tconst env =\n\t\treadEnv(() => process.env.TLDRAW_ENV) ??\n\t\treadEnv(() => process.env.VERCEL_PUBLIC_TLDRAW_ENV) ??\n\t\treadEnv(() => process.env.NEXT_PUBLIC_TLDRAW_ENV) ??\n\t\t// default to production because if we don't have one of these, this is probably a library use\n\t\t'production'\n\n\tswitch (env) {\n\t\tcase 'production':\n\t\t\treturn def.defaults.production ?? def.defaults.all\n\t\tcase 'preview':\n\t\tcase 'staging':\n\t\t\treturn def.defaults.staging ?? def.defaults.all\n\t\tdefault:\n\t\t\treturn def.defaults.development ?? def.defaults.all\n\t}\n}\n\n/** @internal */\nexport interface DebugFlagDefaults<T> {\n\tdevelopment?: T\n\tstaging?: T\n\tproduction?: T\n\tall: T\n}\n\n/** @internal */\nexport interface DebugFlagDef<T> {\n\tname: string\n\tdefaults: DebugFlagDefaults<T>\n\tshouldStoreForSession: boolean\n}\n\n/** @internal */\nexport interface DebugFlag<T> extends DebugFlagDef<T>, Atom<T> {\n\treset(): void\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 483, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/dom.ts"],"sourcesContent":["/*\nThis is used to facilitate double clicking and pointer capture on elements.\n\nThe events in this file are possibly set on individual SVG elements, \nsuch as handles or corner handles, rather than on HTML elements or \nSVGSVGElements. Raw SVG elemnets do not support pointerCapture in \nmost cases, meaning that in order for pointer capture to work, we \nneed to crawl up the DOM tree to find the nearest HTML element. Then,\nin order for that element to also call the `onPointerUp` event from\nthis file, we need to manually set that event on that element and\nlater remove it when the pointerup occurs. This is a potential leak\nif the user clicks on a handle but the pointerup does not fire for\nwhatever reason.\n*/\n\nimport React from 'react'\nimport { debugFlags, pointerCaptureTrackingObject } from './debug-flags'\n\n/** @public */\nexport function loopToHtmlElement(elm: Element): HTMLElement {\n\tif (elm.nodeType === Node.ELEMENT_NODE) return elm as HTMLElement\n\tif (elm.parentElement) return loopToHtmlElement(elm.parentElement)\n\telse throw Error('Could not find a parent element of an HTML type!')\n}\n\n/**\n * This function calls `event.preventDefault()` for you. Why is that useful?\n *\n * Beacuase if you enable `window.preventDefaultLogging = true` it'll log out a message when it\n * happens. Because we use console.warn rather than (log) you'll get a stack trace in the inspector\n * telling you exactly where it happened. This is important because `e.preventDefault()` is the\n * source of many bugs, but unfortuantly it can't be avoided because it also stops a lot of default\n * behaviour which doesn't make sense in our UI\n *\n * @param event - To prevent default on\n * @public\n */\nexport function preventDefault(event: React.BaseSyntheticEvent | Event) {\n\tevent.preventDefault()\n\tif (debugFlags.logPreventDefaults.get()) {\n\t\tconsole.warn('preventDefault called on event:', event)\n\t}\n}\n\n/** @public */\nexport function setPointerCapture(\n\telement: Element,\n\tevent: React.PointerEvent<Element> | PointerEvent\n) {\n\telement.setPointerCapture(event.pointerId)\n\tif (debugFlags.logPointerCaptures.get()) {\n\t\tconst trackingObj = pointerCaptureTrackingObject.get()\n\t\ttrackingObj.set(element, (trackingObj.get(element) ?? 0) + 1)\n\t\tconsole.warn('setPointerCapture called on element:', element, event)\n\t}\n}\n\n/** @public */\nexport function releasePointerCapture(\n\telement: Element,\n\tevent: React.PointerEvent<Element> | PointerEvent\n) {\n\tif (!element.hasPointerCapture(event.pointerId)) {\n\t\treturn\n\t}\n\n\telement.releasePointerCapture(event.pointerId)\n\tif (debugFlags.logPointerCaptures.get()) {\n\t\tconst trackingObj = pointerCaptureTrackingObject.get()\n\t\tif (trackingObj.get(element) === 1) {\n\t\t\ttrackingObj.delete(element)\n\t\t} else if (trackingObj.has(element)) {\n\t\t\ttrackingObj.set(element, trackingObj.get(element)! - 1)\n\t\t} else {\n\t\t\tconsole.warn('Release without capture')\n\t\t}\n\t\tconsole.warn('releasePointerCapture called on element:', element, event)\n\t}\n}\n\n/** @public */\nexport const stopEventPropagation = (e: any) => e.stopPropagation()\n\n/** @internal */\nexport const setStyleProperty = (\n\telm: HTMLElement | null,\n\tproperty: string,\n\tvalue: string | number\n) => {\n\tif (!elm) return\n\telm.style.setProperty(property, value as string)\n}\n\n/** @internal */\nexport function activeElementShouldCaptureKeys(allowButtons = false) {\n\tconst { activeElement } = document\n\tconst elements = allowButtons ? ['input', 'textarea'] : ['input', 'select', 'button', 'textarea']\n\treturn !!(\n\t\tactiveElement &&\n\t\t((activeElement as HTMLElement).isContentEditable ||\n\t\t\telements.indexOf(activeElement.tagName.toLowerCase()) > -1 ||\n\t\t\tactiveElement.classList.contains('tlui-slider__thumb'))\n\t)\n}\n"],"names":[],"mappings":";;;;;;;;;AAgBA,SAAS,YAAY,oCAAoC;;AAGlD,SAAS,kBAAkB,GAAA,EAA2B;IAC5D,IAAI,IAAI,QAAA,KAAa,KAAK,YAAA,CAAc,CAAA,OAAO;IAC/C,IAAI,IAAI,aAAA,CAAe,CAAA,OAAO,kBAAkB,IAAI,aAAa;SAC5D,MAAM,MAAM,kDAAkD;AACpE;AAcO,SAAS,eAAe,KAAA,EAAyC;IACvE,MAAM,cAAA,CAAe;IACrB,4LAAI,aAAA,CAAW,kBAAA,CAAmB,GAAA,CAAI,GAAG;QACxC,QAAQ,IAAA,CAAK,mCAAmC,KAAK;IACtD;AACD;AAGO,SAAS,kBACf,OAAA,EACA,KAAA,EACC;IACD,QAAQ,iBAAA,CAAkB,MAAM,SAAS;IACzC,4LAAI,aAAA,CAAW,kBAAA,CAAmB,GAAA,CAAI,GAAG;QACxC,MAAM,sMAAc,+BAAA,CAA6B,GAAA,CAAI;QACrD,YAAY,GAAA,CAAI,SAAA,CAAU,YAAY,GAAA,CAAI,OAAO,KAAK,CAAA,IAAK,CAAC;QAC5D,QAAQ,IAAA,CAAK,wCAAwC,SAAS,KAAK;IACpE;AACD;AAGO,SAAS,sBACf,OAAA,EACA,KAAA,EACC;IACD,IAAI,CAAC,QAAQ,iBAAA,CAAkB,MAAM,SAAS,GAAG;QAChD;IACD;IAEA,QAAQ,qBAAA,CAAsB,MAAM,SAAS;IAC7C,4LAAI,aAAA,CAAW,kBAAA,CAAmB,GAAA,CAAI,GAAG;QACxC,MAAM,sMAAc,+BAAA,CAA6B,GAAA,CAAI;QACrD,IAAI,YAAY,GAAA,CAAI,OAAO,MAAM,GAAG;YACnC,YAAY,MAAA,CAAO,OAAO;QAC3B,OAAA,IAAW,YAAY,GAAA,CAAI,OAAO,GAAG;YACpC,YAAY,GAAA,CAAI,SAAS,YAAY,GAAA,CAAI,OAAO,IAAK,CAAC;QACvD,OAAO;YACN,QAAQ,IAAA,CAAK,yBAAyB;QACvC;QACA,QAAQ,IAAA,CAAK,4CAA4C,SAAS,KAAK;IACxE;AACD;AAGO,MAAM,uBAAuB,CAAC,IAAW,EAAE,eAAA,CAAgB;AAG3D,MAAM,mBAAmB,CAC/B,KACA,UACA,UACI;IACJ,IAAI,CAAC,IAAK,CAAA;IACV,IAAI,KAAA,CAAM,WAAA,CAAY,UAAU,KAAe;AAChD;AAGO,SAAS,+BAA+B,eAAe,KAAA,EAAO;IACpE,MAAM,EAAE,aAAA,CAAc,CAAA,GAAI;IAC1B,MAAM,WAAW,eAAe;QAAC;QAAS,UAAU;KAAA,GAAI;QAAC;QAAS;QAAU;QAAU,UAAU;KAAA;IAChG,OAAO,CAAC,CAAA,CACP,iBAAA,CACE,cAA8B,iBAAA,IAC/B,SAAS,OAAA,CAAQ,cAAc,OAAA,CAAQ,WAAA,CAAY,CAAC,IAAI,CAAA,KACxD,cAAc,SAAA,CAAU,QAAA,CAAS,oBAAoB,CAAA,CAAA;AAExD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/keyboard.ts"],"sourcesContent":["import { tlenv } from '../globals/environment'\n\n/** @internal */\nexport const isAccelKey = <InputType extends { metaKey: boolean; ctrlKey: boolean }>(\n\te: InputType\n) => {\n\treturn tlenv.isDarwin ? e.metaKey : e.ctrlKey || e.metaKey\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,aAAa;;AAGf,MAAM,aAAa,CACzB,MACI;IACJ,8LAAO,QAAA,CAAM,QAAA,GAAW,EAAE,OAAA,GAAU,EAAE,OAAA,IAAW,EAAE,OAAA;AACpD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 572, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/getPointerInfo.ts"],"sourcesContent":["import { isAccelKey } from './keyboard'\n\n/** @public */\nexport function getPointerInfo(e: React.PointerEvent | PointerEvent) {\n\t;(e as any).isKilled = true\n\n\treturn {\n\t\tpoint: {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY,\n\t\t\tz: e.pressure,\n\t\t},\n\t\tshiftKey: e.shiftKey,\n\t\taltKey: e.altKey,\n\t\tctrlKey: e.metaKey || e.ctrlKey,\n\t\tmetaKey: e.metaKey,\n\t\taccelKey: isAccelKey(e),\n\t\tpointerId: e.pointerId,\n\t\tbutton: e.button,\n\t\tisPen: e.pointerType === 'pen',\n\t}\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,kBAAkB;;AAGpB,SAAS,eAAe,CAAA,EAAsC;;IAClE,EAAU,QAAA,GAAW;IAEvB,OAAO;QACN,OAAO;YACN,GAAG,EAAE,OAAA;YACL,GAAG,EAAE,OAAA;YACL,GAAG,EAAE,QAAA;QACN;QACA,UAAU,EAAE,QAAA;QACZ,QAAQ,EAAE,MAAA;QACV,SAAS,EAAE,OAAA,IAAW,EAAE,OAAA;QACxB,SAAS,EAAE,OAAA;QACX,gMAAU,aAAA,EAAW,CAAC;QACtB,WAAW,EAAE,SAAA;QACb,QAAQ,EAAE,MAAA;QACV,OAAO,EAAE,WAAA,KAAgB;IAC1B;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 604, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/runtime.ts"],"sourcesContent":["/** @public */\nexport const runtime: {\n\topenWindow(url: string, target: string): void\n\trefreshPage(): void\n\thardReset(): void\n} = {\n\topenWindow(url, target) {\n\t\twindow.open(url, target, 'noopener noreferrer')\n\t},\n\trefreshPage() {\n\t\twindow.location.reload()\n\t},\n\tasync hardReset() {\n\t\treturn await (window as any).__tldraw__hardReset?.()\n\t},\n}\n\n/** @public */\nexport function setRuntimeOverrides(input: Partial<typeof runtime>) {\n\tObject.assign(runtime, input)\n}\n"],"names":[],"mappings":";;;;AACO,MAAM,UAIT;IACH,YAAW,GAAA,EAAK,MAAA,EAAQ;QACvB,OAAO,IAAA,CAAK,KAAK,QAAQ,qBAAqB;IAC/C;IACA,cAAc;QACb,OAAO,QAAA,CAAS,MAAA,CAAO;IACxB;IACA,MAAM,YAAY;QACjB,OAAO,MAAO,OAAe,mBAAA,GAAsB;IACpD;AACD;AAGO,SAAS,oBAAoB,KAAA,EAAgC;IACnE,OAAO,MAAA,CAAO,SAAS,KAAK;AAC7B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/hardResetEditor.ts"],"sourcesContent":["import { runtime } from './runtime'\n\n/** @public */\nexport function hardResetEditor() {\n\truntime.hardReset()\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,eAAe;;AAGjB,SAAS,kBAAkB;IACjC,gLAAA,CAAA,UAAA,CAAQ,SAAA,CAAU;AACnB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 646, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/refreshPage.ts"],"sourcesContent":["import { runtime } from './runtime'\n\n/** @public */\nexport function refreshPage() {\n\truntime.refreshPage()\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,eAAe;;AAGjB,SAAS,cAAc;IAC7B,gLAAA,CAAA,UAAA,CAAQ,WAAA,CAAY;AACrB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 662, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/areShapesContentEqual.ts"],"sourcesContent":["import { TLShape } from '@tldraw/tlschema'\n\nexport const areShapesContentEqual = (a: TLShape, b: TLShape) =>\n\ta.props === b.props && a.meta === b.meta\n"],"names":[],"mappings":";;;AAEO,MAAM,wBAAwB,CAAC,GAAY,IACjD,EAAE,KAAA,KAAU,EAAE,KAAA,IAAS,EAAE,IAAA,KAAS,EAAE,IAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/browserCanvasMaxSize.ts"],"sourcesContent":["/** @internal */\nexport interface CanvasMaxSize {\n\tmaxWidth: number\n\tmaxHeight: number\n\tmaxArea: number\n}\n\n// Cache this, only want to do this once per browser session\nlet maxCanvasSizes: CanvasMaxSize | null = null\n\nfunction getBrowserCanvasMaxSize(): CanvasMaxSize {\n\tif (!maxCanvasSizes) {\n\t\tmaxCanvasSizes = {\n\t\t\tmaxWidth: getCanvasSize('width'), // test very wide but 1 pixel tall canvases\n\t\t\tmaxHeight: getCanvasSize('height'), // test very tall but 1 pixel wide canvases\n\t\t\tmaxArea: getCanvasSize('area'), // test square canvases\n\t\t}\n\t}\n\treturn maxCanvasSizes\n}\n\n/*!\n * Extracted from https://github.com/jhildenbiddle/canvas-size\n * MIT License: https://github.com/jhildenbiddle/canvas-size/blob/master/LICENSE\n * Copyright (c) John Hildenbiddle\n */\n\nconst MAX_SAFE_CANVAS_DIMENSION = 8192\nconst MAX_SAFE_CANVAS_AREA = 4096 * 4096\n\nconst TEST_SIZES = {\n\tarea: [\n\t\t// Chrome 70 (Mac, Win)\n\t\t// Chrome 68 (Android 4.4)\n\t\t// Edge 17 (Win)\n\t\t// Safari 7-12 (Mac)\n\t\t16384,\n\t\t// Chrome 68 (Android 7.1-9)\n\t\t14188,\n\t\t// Chrome 68 (Android 5)\n\t\t11402,\n\t\t// Firefox 63 (Mac, Win)\n\t\t11180,\n\t\t// Chrome 68 (Android 6)\n\t\t10836,\n\t\t// IE 9-11 (Win)\n\t\t8192,\n\t\t// IE Mobile (Windows Phone 8.x)\n\t\t// Safari (iOS 9 - 12)\n\t\t4096,\n\t],\n\theight: [\n\t\t// Safari 7-12 (Mac)\n\t\t// Safari (iOS 9-12)\n\t\t8388607,\n\t\t// Chrome 83 (Mac, Win)\n\t\t65535,\n\t\t// Chrome 70 (Mac, Win)\n\t\t// Chrome 68 (Android 4.4-9)\n\t\t// Firefox 63 (Mac, Win)\n\t\t32767,\n\t\t// Edge 17 (Win)\n\t\t// IE11 (Win)\n\t\t16384,\n\t\t// IE 9-10 (Win)\n\t\t8192,\n\t\t// IE Mobile (Windows Phone 8.x)\n\t\t4096,\n\t],\n\twidth: [\n\t\t// Safari 7-12 (Mac)\n\t\t// Safari (iOS 9-12)\n\t\t4194303,\n\t\t// Chrome 83 (Mac, Win)\n\t\t65535,\n\t\t// Chrome 70 (Mac, Win)\n\t\t// Chrome 68 (Android 4.4-9)\n\t\t// Firefox 63 (Mac, Win)\n\t\t32767,\n\t\t// Edge 17 (Win)\n\t\t// IE11 (Win)\n\t\t16384,\n\t\t// IE 9-10 (Win)\n\t\t8192,\n\t\t// IE Mobile (Windows Phone 8.x)\n\t\t4096,\n\t],\n} as const\n\n/**\n * Tests ability to read pixel data from canvas elements of various dimensions\n * by decreasing canvas height and/or width until a test succeeds.\n */\nexport function getCanvasSize(dimension: 'width' | 'height' | 'area') {\n\tconst cropCvs = document.createElement('canvas')\n\tcropCvs.width = 1\n\tcropCvs.height = 1\n\tconst cropCtx = cropCvs.getContext('2d')!\n\n\tfor (const size of TEST_SIZES[dimension]) {\n\t\tconst w = dimension === 'height' ? 1 : size\n\t\tconst h = dimension === 'width' ? 1 : size\n\n\t\tconst testCvs = document.createElement('canvas')\n\t\ttestCvs.width = w\n\t\ttestCvs.height = h\n\t\tconst testCtx = testCvs.getContext('2d')!\n\n\t\ttestCtx.fillRect(w - 1, h - 1, 1, 1)\n\t\tcropCtx.drawImage(testCvs, w - 1, h - 1, 1, 1, 0, 0, 1, 1)\n\n\t\tconst isTestPassed = cropCtx.getImageData(0, 0, 1, 1).data[3] !== 0\n\t\t// release memory\n\t\ttestCvs.width = 0\n\t\ttestCvs.height = 0\n\n\t\tif (isTestPassed) {\n\t\t\t// release memory\n\t\t\tcropCvs.width = 0\n\t\t\tcropCvs.height = 0\n\n\t\t\tif (dimension === 'area') {\n\t\t\t\treturn size * size\n\t\t\t} else {\n\t\t\t\treturn size\n\t\t\t}\n\t\t}\n\t}\n\n\t// didn't find a good size, release memory and error\n\tcropCvs.width = 0\n\tcropCvs.height = 0\n\n\tthrow Error('Failed to determine maximum canvas dimension')\n}\n\n/** @internal */\nexport function clampToBrowserMaxCanvasSize(width: number, height: number) {\n\tif (\n\t\twidth <= MAX_SAFE_CANVAS_DIMENSION &&\n\t\theight <= MAX_SAFE_CANVAS_DIMENSION &&\n\t\twidth * height <= MAX_SAFE_CANVAS_AREA\n\t) {\n\t\treturn [width, height]\n\t}\n\n\tconst { maxWidth, maxHeight, maxArea } = getBrowserCanvasMaxSize()\n\tconst aspectRatio = width / height\n\n\tif (width > maxWidth) {\n\t\twidth = maxWidth\n\t\theight = width / aspectRatio\n\t}\n\n\tif (height > maxHeight) {\n\t\theight = maxHeight\n\t\twidth = height * aspectRatio\n\t}\n\n\tif (width * height > maxArea) {\n\t\tconst ratio = Math.sqrt(maxArea / (width * height))\n\t\twidth *= ratio\n\t\theight *= ratio\n\t}\n\n\treturn [width, height]\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 821, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/SharedStylesMap.ts"],"sourcesContent":["import { StyleProp } from '@tldraw/tlschema'\nimport { exhaustiveSwitchError } from '@tldraw/utils'\n\n/**\n * The value of a particular {@link @tldraw/tlschema#StyleProp}.\n *\n * A `mixed` style means that in the current selection, there are lots of different values for the\n * same style prop - e.g. a red and a blue shape are selected.\n *\n * A `shared` style means that all shapes in the selection share the same value for this style prop.\n *\n * @public\n */\nexport type SharedStyle<T> =\n\t| { readonly type: 'mixed' }\n\t| { readonly type: 'shared'; readonly value: T }\n\nfunction sharedStyleEquals<T>(a: SharedStyle<T>, b: SharedStyle<T> | undefined) {\n\tif (!b) return false\n\tswitch (a.type) {\n\t\tcase 'mixed':\n\t\t\treturn b.type === 'mixed'\n\t\tcase 'shared':\n\t\t\treturn b.type === 'shared' && a.value === b.value\n\t\tdefault:\n\t\t\tthrow exhaustiveSwitchError(a)\n\t}\n}\n\n/**\n * A map of {@link @tldraw/tlschema#StyleProp | StyleProps} to their {@link SharedStyle} values. See\n * {@link Editor.getSharedStyles}.\n *\n * @public\n */\nexport class ReadonlySharedStyleMap {\n\t/** @internal */\n\tprotected map: Map<StyleProp<any>, SharedStyle<unknown>>\n\n\tconstructor(entries?: Iterable<[StyleProp<unknown>, SharedStyle<unknown>]>) {\n\t\tthis.map = new Map(entries)\n\t}\n\n\tget<T>(prop: StyleProp<T>): SharedStyle<T> | undefined {\n\t\treturn this.map.get(prop) as SharedStyle<T> | undefined\n\t}\n\n\tgetAsKnownValue<T>(prop: StyleProp<T>): T | undefined {\n\t\tconst value = this.get(prop)\n\t\tif (!value) return undefined\n\t\tif (value.type === 'mixed') return undefined\n\t\treturn value.value\n\t}\n\n\t// eslint-disable-next-line no-restricted-syntax\n\tget size() {\n\t\treturn this.map.size\n\t}\n\n\tequals(other: ReadonlySharedStyleMap) {\n\t\tif (this.size !== other.size) return false\n\n\t\tconst checkedKeys = new Set()\n\t\tfor (const [styleProp, value] of this) {\n\t\t\tif (!sharedStyleEquals(value, other.get(styleProp))) return false\n\t\t\tcheckedKeys.add(styleProp)\n\t\t}\n\t\tfor (const [styleProp, value] of other) {\n\t\t\tif (checkedKeys.has(styleProp)) continue\n\t\t\tif (!sharedStyleEquals(value, this.get(styleProp))) return false\n\t\t}\n\n\t\treturn true\n\t}\n\n\tkeys() {\n\t\treturn this.map.keys()\n\t}\n\n\tvalues() {\n\t\treturn this.map.values()\n\t}\n\n\tentries() {\n\t\treturn this.map.entries()\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.map[Symbol.iterator]()\n\t}\n}\n\n/** @internal */\nexport class SharedStyleMap extends ReadonlySharedStyleMap {\n\tset<T>(prop: StyleProp<T>, value: SharedStyle<T>) {\n\t\tthis.map.set(prop, value)\n\t}\n\n\tapplyValue<T>(prop: StyleProp<T>, value: T) {\n\t\tconst existingValue = this.get(prop)\n\n\t\t// if we don't have a value yet, set it\n\t\tif (!existingValue) {\n\t\t\tthis.set(prop, { type: 'shared', value })\n\t\t\treturn\n\t\t}\n\n\t\tswitch (existingValue.type) {\n\t\t\tcase 'mixed':\n\t\t\t\t// we're already mixed, adding new values won't help\n\t\t\t\treturn\n\t\t\tcase 'shared':\n\t\t\t\tif (existingValue.value !== value) {\n\t\t\t\t\t// if the value is different, we're now mixed:\n\t\t\t\t\tthis.set(prop, { type: 'mixed' })\n\t\t\t\t}\n\t\t\t\treturn\n\t\t\tdefault:\n\t\t\t\texhaustiveSwitchError(existingValue, 'type')\n\t\t}\n\t}\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,6BAA6B;;;AAgBtC,SAAS,kBAAqB,CAAA,EAAmB,CAAA,EAA+B;IAC/E,IAAI,CAAC,EAAG,CAAA,OAAO;IACf,OAAQ,EAAE,IAAA,EAAM;QACf,KAAK;YACJ,OAAO,EAAE,IAAA,KAAS;QACnB,KAAK;YACJ,OAAO,EAAE,IAAA,KAAS,YAAY,EAAE,KAAA,KAAU,EAAE,KAAA;QAC7C;YACC,iLAAM,wBAAA,EAAsB,CAAC;IAC/B;AACD;AAQO,MAAM,uBAAuB;IAAA,cAAA,GAEzB,IAAA;IAEV,YAAY,OAAA,CAAgE;QAC3E,IAAA,CAAK,GAAA,GAAM,IAAI,IAAI,OAAO;IAC3B;IAEA,IAAO,IAAA,EAAgD;QACtD,OAAO,IAAA,CAAK,GAAA,CAAI,GAAA,CAAI,IAAI;IACzB;IAEA,gBAAmB,IAAA,EAAmC;QACrD,MAAM,QAAQ,IAAA,CAAK,GAAA,CAAI,IAAI;QAC3B,IAAI,CAAC,MAAO,CAAA,OAAO,KAAA;QACnB,IAAI,MAAM,IAAA,KAAS,QAAS,CAAA,OAAO,KAAA;QACnC,OAAO,MAAM,KAAA;IACd;IAAA,gDAAA;IAGA,IAAI,OAAO;QACV,OAAO,IAAA,CAAK,GAAA,CAAI,IAAA;IACjB;IAEA,OAAO,KAAA,EAA+B;QACrC,IAAI,IAAA,CAAK,IAAA,KAAS,MAAM,IAAA,CAAM,CAAA,OAAO;QAErC,MAAM,cAAc,aAAA,GAAA,IAAI,IAAI;QAC5B,KAAA,MAAW,CAAC,WAAW,KAAK,CAAA,IAAK,IAAA,CAAM;YACtC,IAAI,CAAC,kBAAkB,OAAO,MAAM,GAAA,CAAI,SAAS,CAAC,EAAG,CAAA,OAAO;YAC5D,YAAY,GAAA,CAAI,SAAS;QAC1B;QACA,KAAA,MAAW,CAAC,WAAW,KAAK,CAAA,IAAK,MAAO;YACvC,IAAI,YAAY,GAAA,CAAI,SAAS,EAAG,CAAA;YAChC,IAAI,CAAC,kBAAkB,OAAO,IAAA,CAAK,GAAA,CAAI,SAAS,CAAC,EAAG,CAAA,OAAO;QAC5D;QAEA,OAAO;IACR;IAEA,OAAO;QACN,OAAO,IAAA,CAAK,GAAA,CAAI,IAAA,CAAK;IACtB;IAEA,SAAS;QACR,OAAO,IAAA,CAAK,GAAA,CAAI,MAAA,CAAO;IACxB;IAEA,UAAU;QACT,OAAO,IAAA,CAAK,GAAA,CAAI,OAAA,CAAQ;IACzB;IAEA,CAAC,OAAO,QAAQ,CAAA,GAAI;QACnB,OAAO,IAAA,CAAK,GAAA,CAAI,OAAO,QAAQ,CAAA,CAAE;IAClC;AACD;AAGO,MAAM,uBAAuB,uBAAuB;IAC1D,IAAO,IAAA,EAAoB,KAAA,EAAuB;QACjD,IAAA,CAAK,GAAA,CAAI,GAAA,CAAI,MAAM,KAAK;IACzB;IAEA,WAAc,IAAA,EAAoB,KAAA,EAAU;QAC3C,MAAM,gBAAgB,IAAA,CAAK,GAAA,CAAI,IAAI;QAGnC,IAAI,CAAC,eAAe;YACnB,IAAA,CAAK,GAAA,CAAI,MAAM;gBAAE,MAAM;gBAAU;YAAM,CAAC;YACxC;QACD;QAEA,OAAQ,cAAc,IAAA,EAAM;YAC3B,KAAK;gBAEJ;YACD,KAAK;gBACJ,IAAI,cAAc,KAAA,KAAU,OAAO;oBAElC,IAAA,CAAK,GAAA,CAAI,MAAM;wBAAE,MAAM;oBAAQ,CAAC;gBACjC;gBACA;YACD;gBACC,CAAA,GAAA,sKAAA,CAAA,wBAAA,EAAsB,eAAe,MAAM;QAC7C;IACD;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 919, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/assets.ts"],"sourcesContent":["import { fetch } from '@tldraw/utils'\nimport { version } from '../../version'\n\n/** @public */\nexport function dataUrlToFile(url: string, filename: string, mimeType: string) {\n\treturn fetch(url)\n\t\t.then(function (res) {\n\t\t\treturn res.arrayBuffer()\n\t\t})\n\t\t.then(function (buf) {\n\t\t\treturn new File([buf], filename, { type: mimeType })\n\t\t})\n}\n\n/** @internal */\nconst CDN_BASE_URL = 'https://cdn.tldraw.com'\n\n/** @public */\nexport function getDefaultCdnBaseUrl() {\n\treturn `${CDN_BASE_URL}/${version}`\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,aAAa;;AACtB,SAAS,eAAe;;;AAGjB,SAAS,cAAc,GAAA,EAAa,QAAA,EAAkB,QAAA,EAAkB;IAC9E,kLAAO,QAAA,EAAM,GAAG,EACd,IAAA,CAAK,SAAU,GAAA,EAAK;QACpB,OAAO,IAAI,WAAA,CAAY;IACxB,CAAC,EACA,IAAA,CAAK,SAAU,GAAA,EAAK;QACpB,OAAO,IAAI,KAAK;YAAC,GAAG;SAAA,EAAG,UAAU;YAAE,MAAM;QAAS,CAAC;IACpD,CAAC;AACH;AAGA,MAAM,eAAe;AAGd,SAAS,uBAAuB;IACtC,OAAO,GAAG,YAAY,CAAA,CAAA,mKAAI,UAAO,EAAA;AAClC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 951, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/deepLinks.ts"],"sourcesContent":["import { BoxModel, PageRecordType, TLPageId, TLShapeId, createShapeId } from '@tldraw/tlschema'\nimport { exhaustiveSwitchError } from '@tldraw/utils'\nimport { Editor } from '../editor/Editor'\nimport { Box } from '../primitives/Box'\n\n/** @public */\nexport type TLDeepLink =\n\t| {\n\t\t\ttype: 'shapes'\n\t\t\tshapeIds: TLShapeId[]\n\t  }\n\t| { type: 'viewport'; bounds: BoxModel; pageId?: TLPageId }\n\t| { type: 'page'; pageId: TLPageId }\n\n/**\n * Converts a deep link descriptor to a url-safe string\n *\n * @example\n * ```ts\n * const url = `https://example.com?d=${createDeepLinkString({ type: 'shapes', shapeIds: ['shape:1', 'shape:2'] })}`\n * navigator.clipboard.writeText(url)\n * ```\n *\n * @param deepLink - the deep link descriptor\n * @returns a url-safe string\n *\n * @public\n */\nexport function createDeepLinkString(deepLink: TLDeepLink): string {\n\tswitch (deepLink.type) {\n\t\tcase 'shapes': {\n\t\t\tconst ids = deepLink.shapeIds.map((id) => encodeId(id.slice('shape:'.length)))\n\t\t\treturn `s${ids.join('.')}`\n\t\t}\n\t\tcase 'page': {\n\t\t\treturn 'p' + encodeId(PageRecordType.parseId(deepLink.pageId))\n\t\t}\n\t\tcase 'viewport': {\n\t\t\tconst { bounds, pageId } = deepLink\n\t\t\tlet res = `v${Math.round(bounds.x)}.${Math.round(bounds.y)}.${Math.round(bounds.w)}.${Math.round(bounds.h)}`\n\t\t\tif (pageId) {\n\t\t\t\tres += '.' + encodeId(PageRecordType.parseId(pageId))\n\t\t\t}\n\t\t\treturn res\n\t\t}\n\t\tdefault:\n\t\t\texhaustiveSwitchError(deepLink)\n\t}\n}\n\n/**\n * Parses a string created by {@link createDeepLinkString} back into a deep link descriptor.\n *\n * @param deepLinkString - the deep link string\n * @returns a deep link descriptor\n *\n * @public\n */\nexport function parseDeepLinkString(deepLinkString: string): TLDeepLink {\n\tconst type = deepLinkString[0]\n\tswitch (type) {\n\t\tcase 's': {\n\t\t\tconst shapeIds = deepLinkString\n\t\t\t\t.slice(1)\n\t\t\t\t.split('.')\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.map((id) => createShapeId(decodeURIComponent(id)))\n\t\t\treturn { type: 'shapes', shapeIds }\n\t\t}\n\t\tcase 'p': {\n\t\t\tconst pageId = PageRecordType.createId(decodeURIComponent(deepLinkString.slice(1)))\n\t\t\treturn { type: 'page', pageId }\n\t\t}\n\t\tcase 'v': {\n\t\t\tconst [x, y, w, h, pageId] = deepLinkString.slice(1).split('.')\n\t\t\treturn {\n\t\t\t\ttype: 'viewport',\n\t\t\t\tbounds: new Box(Number(x), Number(y), Number(w), Number(h)),\n\t\t\t\tpageId: pageId ? PageRecordType.createId(decodeURIComponent(pageId)) : undefined,\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\tthrow Error('Invalid deep link string')\n\t}\n}\n\nfunction encodeId(str: string): string {\n\t// need to encode dots because they are used as separators\n\treturn encodeURIComponent(str).replace(/\\./g, '%2E')\n}\n\n/** @public */\nexport interface TLDeepLinkOptions {\n\t/**\n\t * The name of the url search param to use for the deep link.\n\t *\n\t * Defaults to `'d'`\n\t */\n\tparam?: string\n\t/**\n\t * The debounce time in ms for updating the url.\n\t */\n\tdebounceMs?: number\n\t/**\n\t * Should return the current url to augment with a deep link query parameter.\n\t * If you supply this function, you must also supply an `onChange` function.\n\t */\n\tgetUrl?(editor: Editor): string | URL\n\t/**\n\t * Should return the current deep link target.\n\t * Defaults to returning the current page and viewport position.\n\t */\n\tgetTarget?(editor: Editor): TLDeepLink\n\t/**\n\t * This is fired when the URL is updated.\n\t *\n\t * If not supplied, the default behavior is to update `window.location`.\n\t *\n\t * @param url - the updated URL\n\t */\n\tonChange?(url: URL, editor: Editor): void\n}\n"],"names":[],"mappings":";;;;AAAA,SAAmB,gBAAqC,qBAAqB;;;AAC7E,SAAS,6BAA6B;;AAEtC,SAAS,WAAW;;;;AAyBb,SAAS,qBAAqB,QAAA,EAA8B;IAClE,OAAQ,SAAS,IAAA,EAAM;QACtB,KAAK;YAAU;gBACd,MAAM,MAAM,SAAS,QAAA,CAAS,GAAA,CAAI,CAAC,KAAO,SAAS,GAAG,KAAA,CAAM,SAAS,MAAM,CAAC,CAAC;gBAC7E,OAAO,CAAA,CAAA,EAAI,IAAI,IAAA,CAAK,GAAG,CAAC,EAAA;YACzB;QACA,KAAK;YAAQ;gBACZ,OAAO,MAAM,SAAS,8LAAA,CAAe,OAAA,CAAQ,SAAS,MAAM,CAAC;YAC9D;QACA,KAAK;YAAY;gBAChB,MAAM,EAAE,MAAA,EAAQ,MAAA,CAAO,CAAA,GAAI;gBAC3B,IAAI,MAAM,CAAA,CAAA,EAAI,KAAK,KAAA,CAAM,OAAO,CAAC,CAAC,CAAA,CAAA,EAAI,KAAK,KAAA,CAAM,OAAO,CAAC,CAAC,CAAA,CAAA,EAAI,KAAK,KAAA,CAAM,OAAO,CAAC,CAAC,CAAA,CAAA,EAAI,KAAK,KAAA,CAAM,OAAO,CAAC,CAAC,EAAA;gBAC1G,IAAI,QAAQ;oBACX,OAAO,MAAM,sLAAS,iBAAA,CAAe,OAAA,CAAQ,MAAM,CAAC;gBACrD;gBACA,OAAO;YACR;QACA;YACC,CAAA,GAAA,sKAAA,CAAA,wBAAA,EAAsB,QAAQ;IAChC;AACD;AAUO,SAAS,oBAAoB,cAAA,EAAoC;IACvE,MAAM,OAAO,cAAA,CAAe,CAAC,CAAA;IAC7B,OAAQ,MAAM;QACb,KAAK;YAAK;gBACT,MAAM,WAAW,eACf,KAAA,CAAM,CAAC,EACP,KAAA,CAAM,GAAG,EACT,MAAA,CAAO,OAAO,EACd,GAAA,CAAI,CAAC,uLAAO,gBAAA,EAAc,mBAAmB,EAAE,CAAC,CAAC;gBACnD,OAAO;oBAAE,MAAM;oBAAU;gBAAS;YACnC;QACA,KAAK;YAAK;gBACT,MAAM,sLAAS,iBAAA,CAAe,QAAA,CAAS,mBAAmB,eAAe,KAAA,CAAM,CAAC,CAAC,CAAC;gBAClF,OAAO;oBAAE,MAAM;oBAAQ;gBAAO;YAC/B;QACA,KAAK;YAAK;gBACT,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,MAAM,CAAA,GAAI,eAAe,KAAA,CAAM,CAAC,EAAE,KAAA,CAAM,GAAG;gBAC9D,OAAO;oBACN,MAAM;oBACN,QAAQ,sLAAI,MAAA,CAAI,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC;oBAC1D,QAAQ,sLAAS,iBAAA,CAAe,QAAA,CAAS,mBAAmB,MAAM,CAAC,IAAI,KAAA;gBACxE;YACD;QACA;YACC,MAAM,MAAM,0BAA0B;IACxC;AACD;AAEA,SAAS,SAAS,GAAA,EAAqB;IAEtC,OAAO,mBAAmB,GAAG,EAAE,OAAA,CAAQ,OAAO,KAAK;AACpD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1031, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/getIncrementedName.ts"],"sourcesContent":["/**\n * Get an incremented name (e.g. New page (2)) from a name (e.g. New page), based on an array of\n * existing names.\n *\n * @param name - The name to increment.\n * @param others - The array of existing names.\n * @public\n */\nexport function getIncrementedName(name: string, others: string[]) {\n\tlet result = name\n\tconst set = new Set(others)\n\n\twhile (set.has(result)) {\n\t\tresult = /^.*(\\d+)$/.exec(result)?.[1]\n\t\t\t? result.replace(/(\\d+)(?=\\D?)$/, (m) => {\n\t\t\t\t\treturn (+m + 1).toString()\n\t\t\t\t})\n\t\t\t: `${result} 1`\n\t}\n\n\treturn result\n}\n"],"names":[],"mappings":";;;AAQO,SAAS,mBAAmB,IAAA,EAAc,MAAA,EAAkB;IAClE,IAAI,SAAS;IACb,MAAM,MAAM,IAAI,IAAI,MAAM;IAE1B,MAAO,IAAI,GAAA,CAAI,MAAM,EAAG;QACvB,SAAS,YAAY,IAAA,CAAK,MAAM,GAAA,CAAI,CAAC,CAAA,GAClC,OAAO,OAAA,CAAQ,iBAAiB,CAAC,MAAM;YACvC,OAAA,CAAQ,CAAC,IAAI,CAAA,EAAG,QAAA,CAAS;QAC1B,CAAC,IACA,GAAG,MAAM,CAAA,EAAA,CAAA;IACb;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1052, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/reorderShapes.ts"],"sourcesContent":["import { TLParentId, TLShape, TLShapeId, TLShapePartial } from '@tldraw/tlschema'\nimport { IndexKey, compact, getIndicesBetween, sortByIndex } from '@tldraw/utils'\nimport { Editor } from '../editor/Editor'\n\nexport function getReorderingShapesChanges(\n\teditor: Editor,\n\toperation: 'toBack' | 'toFront' | 'forward' | 'backward',\n\tids: TLShapeId[],\n\topts?: { considerAllShapes?: boolean }\n) {\n\tif (ids.length === 0) return []\n\n\t// From the ids that are moving, collect the parents, their children, and which of those children are moving\n\tconst parents = new Map<TLParentId, { moving: Set<TLShape>; children: TLShape[] }>()\n\n\tfor (const shape of compact(ids.map((id) => editor.getShape(id)))) {\n\t\tconst { parentId } = shape\n\t\tif (!parents.has(parentId)) {\n\t\t\tparents.set(parentId, {\n\t\t\t\tchildren: compact(\n\t\t\t\t\teditor.getSortedChildIdsForParent(parentId).map((id) => editor.getShape(id))\n\t\t\t\t),\n\t\t\t\tmoving: new Set(),\n\t\t\t})\n\t\t}\n\t\tparents.get(parentId)!.moving.add(shape)\n\t}\n\n\tconst changes: TLShapePartial[] = []\n\n\tswitch (operation) {\n\t\tcase 'toBack': {\n\t\t\tparents.forEach(({ moving, children }) => reorderToBack(moving, children, changes))\n\t\t\tbreak\n\t\t}\n\t\tcase 'toFront': {\n\t\t\tparents.forEach(({ moving, children }) => reorderToFront(moving, children, changes))\n\t\t\tbreak\n\t\t}\n\t\tcase 'forward': {\n\t\t\tparents.forEach(({ moving, children }) =>\n\t\t\t\treorderForward(editor, moving, children, changes, opts)\n\t\t\t)\n\t\t\tbreak\n\t\t}\n\t\tcase 'backward': {\n\t\t\tparents.forEach(({ moving, children }) =>\n\t\t\t\treorderBackward(editor, moving, children, changes, opts)\n\t\t\t)\n\t\t\tbreak\n\t\t}\n\t}\n\n\treturn changes\n}\n\n/**\n * Reorders the moving shapes to the back of the parent's children.\n *\n * @param moving The set of shapes that are moving\n * @param children The parent's children\n * @param changes The changes array to push changes to\n */\nfunction reorderToBack(moving: Set<TLShape>, children: TLShape[], changes: TLShapePartial[]) {\n\tconst len = children.length\n\n\t// If all of the children are moving, there's nothing to do\n\tif (moving.size === len) return\n\n\tlet below: IndexKey | undefined\n\tlet above: IndexKey | undefined\n\n\t// Starting at the bottom of this parent's children...\n\tfor (let i = 0; i < len; i++) {\n\t\tconst shape = children[i]\n\n\t\tif (moving.has(shape)) {\n\t\t\t// If we've found a moving shape before we've found a non-moving shape,\n\t\t\t// then that shape is already at the back; we can remove it from the\n\t\t\t// moving set and mark it as the shape that will be below the moved shapes.\n\t\t\tbelow = shape.index\n\t\t\tmoving.delete(shape)\n\t\t} else {\n\t\t\t// The first non-moving shape we find will be above our moved shapes; we'll\n\t\t\t// put our moving shapes between it and the shape marked as below (if any).\n\t\t\tabove = shape.index\n\t\t\tbreak\n\t\t}\n\t}\n\n\tif (moving.size === 0) {\n\t\t// If our moving set is empty, there's nothing to do; all of our shapes were\n\t\t// already at the back of the parent's children.\n\t\treturn\n\t} else {\n\t\t// Sort the moving shapes by their current index, then apply the new indices\n\t\tconst indices = getIndicesBetween(below, above, moving.size)\n\t\tchanges.push(\n\t\t\t...Array.from(moving.values())\n\t\t\t\t.sort(sortByIndex)\n\t\t\t\t.map((shape, i) => ({ ...shape, index: indices[i] }))\n\t\t)\n\t}\n}\n\n/**\n * Reorders the moving shapes to the front of the parent's children.\n *\n * @param moving The set of shapes that are moving\n * @param children The parent's children\n * @param changes The changes array to push changes to\n */\nfunction reorderToFront(moving: Set<TLShape>, children: TLShape[], changes: TLShapePartial[]) {\n\tconst len = children.length\n\n\t// If all of the children are moving, there's nothing to do\n\tif (moving.size === len) return\n\n\tlet below: IndexKey | undefined\n\tlet above: IndexKey | undefined\n\n\t// Starting at the top of this parent's children...\n\tfor (let i = len - 1; i > -1; i--) {\n\t\tconst shape = children[i]\n\n\t\tif (moving.has(shape)) {\n\t\t\t// If we've found a moving shape before we've found a non-moving shape,\n\t\t\t// then that shape is already at the front; we can remove it from the\n\t\t\t// moving set and mark it as the shape that will be above the moved shapes.\n\t\t\tabove = shape.index\n\t\t\tmoving.delete(shape)\n\t\t} else {\n\t\t\t// The first non-moving shape we find will be below our moved shapes; we'll\n\t\t\t// put our moving shapes between it and the shape marked as above (if any).\n\t\t\tbelow = shape.index\n\t\t\tbreak\n\t\t}\n\t}\n\n\tif (moving.size === 0) {\n\t\t// If our moving set is empty, there's nothing to do; all of our shapes were\n\t\t// already at the front of the parent's children.\n\t\treturn\n\t} else {\n\t\t// Sort the moving shapes by their current index, then apply the new indices\n\t\tconst indices = getIndicesBetween(below, above, moving.size)\n\t\tchanges.push(\n\t\t\t...Array.from(moving.values())\n\t\t\t\t.sort(sortByIndex)\n\t\t\t\t.map((shape, i) => ({ ...shape, index: indices[i] }))\n\t\t)\n\t}\n}\n\nfunction getOverlapChecker(editor: Editor, moving: Set<TLShape>) {\n\tconst movingBounds = compact(\n\t\tArray.from(moving).map((shape) => {\n\t\t\tconst bounds = editor.getShapePageBounds(shape)\n\t\t\tif (!bounds) return null\n\t\t\treturn { shape, bounds }\n\t\t})\n\t)\n\tconst isOverlapping = (child: TLShape) => {\n\t\tconst bounds = editor.getShapePageBounds(child)\n\t\tif (!bounds) return false\n\t\treturn movingBounds.some((other) => {\n\t\t\treturn other.bounds.includes(bounds)\n\t\t})\n\t}\n\n\treturn isOverlapping\n}\n\n/**\n * Reorders the moving shapes forward in the parent's children.\n *\n * @param editor The editor\n * @param moving The set of shapes that are moving\n * @param children The parent's children\n * @param changes The changes array to push changes to\n * @param opts The options\n */\nfunction reorderForward(\n\teditor: Editor,\n\tmoving: Set<TLShape>,\n\tchildren: TLShape[],\n\tchanges: TLShapePartial[],\n\topts?: { considerAllShapes?: boolean }\n) {\n\tconst isOverlapping = getOverlapChecker(editor, moving)\n\n\tconst len = children.length\n\n\t// If all of the children are moving, there's nothing to do\n\tif (moving.size === len) return\n\n\tlet state = { name: 'skipping' } as\n\t\t| { name: 'skipping' }\n\t\t| { name: 'selecting'; selectIndex: number }\n\n\t// Starting at the bottom of this parent's children...\n\tfor (let i = 0; i < len; i++) {\n\t\tconst isMoving = moving.has(children[i])\n\n\t\tswitch (state.name) {\n\t\t\tcase 'skipping': {\n\t\t\t\tif (!isMoving) continue\n\t\t\t\t// If we find a moving shape while skipping, start selecting\n\t\t\t\tstate = { name: 'selecting', selectIndex: i }\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'selecting': {\n\t\t\t\tif (isMoving) continue\n\t\t\t\tif (!opts?.considerAllShapes && !isOverlapping(children[i])) continue\n\t\t\t\t// if we find a non-moving and overlapping shape while selecting, move all selected\n\t\t\t\t// shapes in front of the not moving shape; and start skipping\n\t\t\t\tconst { selectIndex } = state\n\t\t\t\tgetIndicesBetween(children[i].index, children[i + 1]?.index, i - selectIndex).forEach(\n\t\t\t\t\t(index, k) => {\n\t\t\t\t\t\tconst child = children[selectIndex + k]\n\t\t\t\t\t\t// If the shape is not moving (therefore also not overlapping), skip it\n\t\t\t\t\t\tif (!moving.has(child)) return\n\t\t\t\t\t\tchanges.push({ ...child, index })\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tstate = { name: 'skipping' }\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Reorders the moving shapes backward in the parent's children.\n *\n * @param editor The editor\n * @param moving The set of shapes that are moving\n * @param children The parent's children\n * @param changes The changes array to push changes to\n * @param opts The options\n */\nfunction reorderBackward(\n\teditor: Editor,\n\tmoving: Set<TLShape>,\n\tchildren: TLShape[],\n\tchanges: TLShapePartial[],\n\topts?: { considerAllShapes?: boolean }\n) {\n\tconst isOverlapping = getOverlapChecker(editor, moving)\n\n\tconst len = children.length\n\n\tif (moving.size === len) return\n\n\tlet state = { name: 'skipping' } as\n\t\t| { name: 'skipping' }\n\t\t| { name: 'selecting'; selectIndex: number }\n\n\t// Starting at the top of this parent's children...\n\tfor (let i = len - 1; i > -1; i--) {\n\t\tconst isMoving = moving.has(children[i])\n\n\t\tswitch (state.name) {\n\t\t\tcase 'skipping': {\n\t\t\t\tif (!isMoving) continue\n\t\t\t\t// If we find a moving shape while skipping, start selecting\n\t\t\t\tstate = { name: 'selecting', selectIndex: i }\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'selecting': {\n\t\t\t\tif (isMoving) continue\n\t\t\t\tif (!opts?.considerAllShapes && !isOverlapping(children[i])) continue\n\t\t\t\t// if we find a non-moving and overlapping shape while selecting, move all selected\n\t\t\t\t// shapes in behind of the not moving shape; and start skipping\n\t\t\t\tgetIndicesBetween(children[i - 1]?.index, children[i].index, state.selectIndex - i).forEach(\n\t\t\t\t\t(index, k) => {\n\t\t\t\t\t\tconst child = children[i + k + 1]\n\t\t\t\t\t\t// If the shape is not moving (therefore also not overlapping), skip it\n\t\t\t\t\t\tif (!moving.has(child)) return\n\t\t\t\t\t\tchanges.push({ ...child, index })\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tstate = { name: 'skipping' }\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1252, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/rotation.ts"],"sourcesContent":["import { isShapeId, TLShape, TLShapeId, TLShapePartial } from '@tldraw/tlschema'\nimport { compact } from '@tldraw/utils'\nimport { Editor } from '../editor/Editor'\nimport { Mat } from '../primitives/Mat'\nimport { canonicalizeRotation } from '../primitives/utils'\nimport { Vec, VecLike } from '../primitives/Vec'\n\n/** @internal */\nexport function getRotationSnapshot({\n\teditor,\n\tids,\n}: {\n\teditor: Editor\n\tids: TLShapeId[]\n}): TLRotationSnapshot | null {\n\tconst shapes = compact(ids.map((id) => editor.getShape(id)))\n\tconst rotation = editor.getShapesSharedRotation(ids)\n\tconst rotatedPageBounds = editor.getShapesRotatedPageBounds(ids)\n\n\t// todo: this assumes we're rotating the selected shapes\n\t// if we try to rotate shapes that aren't selected, this\n\t// will produce the wrong results\n\n\t// Return null if there are no selected shapes\n\tif (!rotatedPageBounds) {\n\t\treturn null\n\t}\n\n\tconst initialPageCenter = rotatedPageBounds.center\n\t\t.clone()\n\t\t.rotWith(rotatedPageBounds.point, rotation)\n\n\treturn {\n\t\tinitialPageCenter,\n\t\tinitialCursorAngle: initialPageCenter.angle(editor.inputs.originPagePoint),\n\t\tinitialShapesRotation: rotation,\n\t\tshapeSnapshots: shapes.map((shape) => ({\n\t\t\tshape,\n\t\t\tinitialPagePoint: editor.getShapePageTransform(shape.id)!.point(),\n\t\t})),\n\t}\n}\n\n/**\n * @internal\n **/\nexport interface TLRotationSnapshot {\n\tinitialPageCenter: Vec\n\tinitialCursorAngle: number\n\tinitialShapesRotation: number\n\tshapeSnapshots: {\n\t\tshape: TLShape\n\t\tinitialPagePoint: Vec\n\t}[]\n}\n\n/** @internal */\nexport function applyRotationToSnapshotShapes({\n\tdelta,\n\teditor,\n\tsnapshot,\n\tstage,\n\tcenterOverride,\n}: {\n\tdelta: number\n\tsnapshot: TLRotationSnapshot\n\teditor: Editor\n\tstage: 'start' | 'update' | 'end' | 'one-off'\n\tcenterOverride?: VecLike\n}) {\n\tconst { initialPageCenter, shapeSnapshots } = snapshot\n\n\teditor.updateShapes(\n\t\tshapeSnapshots.map(({ shape, initialPagePoint }) => {\n\t\t\t// We need to both rotate each shape individually and rotate the shapes\n\t\t\t// around the pivot point (the average center of all rotating shapes.)\n\n\t\t\tconst parentTransform = isShapeId(shape.parentId)\n\t\t\t\t? editor.getShapePageTransform(shape.parentId)!\n\t\t\t\t: Mat.Identity()\n\n\t\t\tconst newPagePoint = Vec.RotWith(initialPagePoint, centerOverride ?? initialPageCenter, delta)\n\n\t\t\tconst newLocalPoint = Mat.applyToPoint(\n\t\t\t\t// use the current parent transform in case it has moved/resized since the start\n\t\t\t\t// (e.g. if rotating a shape at the edge of a group)\n\t\t\t\tMat.Inverse(parentTransform),\n\t\t\t\tnewPagePoint\n\t\t\t)\n\t\t\tconst newRotation = canonicalizeRotation(shape.rotation + delta)\n\n\t\t\treturn {\n\t\t\t\tid: shape.id,\n\t\t\t\ttype: shape.type,\n\t\t\t\tx: newLocalPoint.x,\n\t\t\t\ty: newLocalPoint.y,\n\t\t\t\trotation: newRotation,\n\t\t\t}\n\t\t})\n\t)\n\n\t// Handle change\n\n\tconst changes: TLShapePartial[] = []\n\n\tshapeSnapshots.forEach(({ shape }) => {\n\t\tconst current = editor.getShape(shape.id)\n\t\tif (!current) return\n\t\tconst util = editor.getShapeUtil(shape)\n\n\t\tif (stage === 'start' || stage === 'one-off') {\n\t\t\tconst changeStart = util.onRotateStart?.(shape)\n\t\t\tif (changeStart) changes.push(changeStart)\n\t\t}\n\n\t\tconst changeUpdate = util.onRotate?.(shape, current)\n\t\tif (changeUpdate) changes.push(changeUpdate)\n\n\t\tif (stage === 'end' || stage === 'one-off') {\n\t\t\tconst changeEnd = util.onRotateEnd?.(shape, current)\n\t\t\tif (changeEnd) changes.push(changeEnd)\n\t\t}\n\t})\n\n\tif (changes.length > 0) {\n\t\teditor.updateShapes(changes)\n\t}\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,iBAAqD;;AAC9D,SAAS,eAAe;;AAExB,SAAS,WAAW;AACpB,SAAS,4BAA4B;AACrC,SAAS,WAAoB;;;;;;AAGtB,SAAS,oBAAoB,EACnC,MAAA,EACA,GAAA,EACD,EAG8B;IAC7B,MAAM,kLAAS,UAAA,EAAQ,IAAI,GAAA,CAAI,CAAC,KAAO,OAAO,QAAA,CAAS,EAAE,CAAC,CAAC;IAC3D,MAAM,WAAW,OAAO,uBAAA,CAAwB,GAAG;IACnD,MAAM,oBAAoB,OAAO,0BAAA,CAA2B,GAAG;IAO/D,IAAI,CAAC,mBAAmB;QACvB,OAAO;IACR;IAEA,MAAM,oBAAoB,kBAAkB,MAAA,CAC1C,KAAA,CAAM,EACN,OAAA,CAAQ,kBAAkB,KAAA,EAAO,QAAQ;IAE3C,OAAO;QACN;QACA,oBAAoB,kBAAkB,KAAA,CAAM,OAAO,MAAA,CAAO,eAAe;QACzE,uBAAuB;QACvB,gBAAgB,OAAO,GAAA,CAAI,CAAC,QAAA,CAAW;gBACtC;gBACA,kBAAkB,OAAO,qBAAA,CAAsB,MAAM,EAAE,EAAG,KAAA,CAAM;YACjE,CAAA,CAAE;IACH;AACD;AAgBO,SAAS,8BAA8B,EAC7C,KAAA,EACA,MAAA,EACA,QAAA,EACA,KAAA,EACA,cAAA,EACD,EAMG;IACF,MAAM,EAAE,iBAAA,EAAmB,cAAA,CAAe,CAAA,GAAI;IAE9C,OAAO,YAAA,CACN,eAAe,GAAA,CAAI,CAAC,EAAE,KAAA,EAAO,gBAAA,CAAiB,CAAA,KAAM;QAInD,MAAM,oMAAkB,YAAA,EAAU,MAAM,QAAQ,IAC7C,OAAO,qBAAA,CAAsB,MAAM,QAAQ,sLAC3C,MAAA,CAAI,QAAA,CAAS;QAEhB,MAAM,gMAAe,OAAA,CAAI,OAAA,CAAQ,kBAAkB,kBAAkB,mBAAmB,KAAK;QAE7F,MAAM,kMAAgB,MAAA,CAAI,YAAA,CAAA,gFAAA;QAAA,oDAAA;0LAGzB,MAAA,CAAI,OAAA,CAAQ,eAAe,GAC3B;QAED,MAAM,sMAAc,uBAAA,EAAqB,MAAM,QAAA,GAAW,KAAK;QAE/D,OAAO;YACN,IAAI,MAAM,EAAA;YACV,MAAM,MAAM,IAAA;YACZ,GAAG,cAAc,CAAA;YACjB,GAAG,cAAc,CAAA;YACjB,UAAU;QACX;IACD,CAAC;IAKF,MAAM,UAA4B,CAAC,CAAA;IAEnC,eAAe,OAAA,CAAQ,CAAC,EAAE,KAAA,CAAM,CAAA,KAAM;QACrC,MAAM,UAAU,OAAO,QAAA,CAAS,MAAM,EAAE;QACxC,IAAI,CAAC,QAAS,CAAA;QACd,MAAM,OAAO,OAAO,YAAA,CAAa,KAAK;QAEtC,IAAI,UAAU,WAAW,UAAU,WAAW;YAC7C,MAAM,cAAc,KAAK,aAAA,GAAgB,KAAK;YAC9C,IAAI,YAAa,CAAA,QAAQ,IAAA,CAAK,WAAW;QAC1C;QAEA,MAAM,eAAe,KAAK,QAAA,GAAW,OAAO,OAAO;QACnD,IAAI,aAAc,CAAA,QAAQ,IAAA,CAAK,YAAY;QAE3C,IAAI,UAAU,SAAS,UAAU,WAAW;YAC3C,MAAM,YAAY,KAAK,WAAA,GAAc,OAAO,OAAO;YACnD,IAAI,UAAW,CAAA,QAAQ,IAAA,CAAK,SAAS;QACtC;IACD,CAAC;IAED,IAAI,QAAQ,MAAA,GAAS,GAAG;QACvB,OAAO,YAAA,CAAa,OAAO;IAC5B;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1331, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/sync/LocalIndexedDb.ts"],"sourcesContent":["import { RecordsDiff, SerializedSchema, SerializedStore } from '@tldraw/store'\nimport { TLRecord, TLStoreSchema } from '@tldraw/tlschema'\nimport { assert, getFromLocalStorage, noop, setInLocalStorage } from '@tldraw/utils'\nimport { IDBPDatabase, IDBPTransaction, deleteDB, openDB } from 'idb'\nimport { TLSessionStateSnapshot } from '../../config/TLSessionStateSnapshot'\n\n// DO NOT CHANGE THESE WITHOUT ADDING MIGRATION LOGIC. DOING SO WOULD WIPE ALL EXISTING DATA.\nconst STORE_PREFIX = 'TLDRAW_DOCUMENT_v2'\nconst LEGACY_ASSET_STORE_PREFIX = 'TLDRAW_ASSET_STORE_v1'\nconst dbNameIndexKey = 'TLDRAW_DB_NAME_INDEX_v2'\n\n/** @internal */\nexport const Table = {\n\tRecords: 'records',\n\tSchema: 'schema',\n\tSessionState: 'session_state',\n\tAssets: 'assets',\n} as const\n\n/** @internal */\nexport type StoreName = (typeof Table)[keyof typeof Table]\n\nasync function openLocalDb(persistenceKey: string) {\n\tconst storeId = STORE_PREFIX + persistenceKey\n\n\taddDbName(storeId)\n\n\treturn await openDB<StoreName>(storeId, 4, {\n\t\tupgrade(database) {\n\t\t\tif (!database.objectStoreNames.contains(Table.Records)) {\n\t\t\t\tdatabase.createObjectStore(Table.Records)\n\t\t\t}\n\t\t\tif (!database.objectStoreNames.contains(Table.Schema)) {\n\t\t\t\tdatabase.createObjectStore(Table.Schema)\n\t\t\t}\n\t\t\tif (!database.objectStoreNames.contains(Table.SessionState)) {\n\t\t\t\tdatabase.createObjectStore(Table.SessionState)\n\t\t\t}\n\t\t\tif (!database.objectStoreNames.contains(Table.Assets)) {\n\t\t\t\tdatabase.createObjectStore(Table.Assets)\n\t\t\t}\n\t\t},\n\t})\n}\n\nasync function migrateLegacyAssetDbIfNeeded(persistenceKey: string) {\n\tconst databases = window.indexedDB.databases\n\t\t? (await window.indexedDB.databases()).map((db) => db.name)\n\t\t: getAllIndexDbNames()\n\tconst oldStoreId = LEGACY_ASSET_STORE_PREFIX + persistenceKey\n\tconst existing = databases.find((dbName) => dbName === oldStoreId)\n\tif (!existing) return\n\n\tconst oldAssetDb = await openDB<StoreName>(oldStoreId, 1, {\n\t\tupgrade(database) {\n\t\t\tif (!database.objectStoreNames.contains('assets')) {\n\t\t\t\tdatabase.createObjectStore('assets')\n\t\t\t}\n\t\t},\n\t})\n\tif (!oldAssetDb.objectStoreNames.contains('assets')) return\n\n\tconst oldTx = oldAssetDb.transaction(['assets'], 'readonly')\n\tconst oldAssetStore = oldTx.objectStore('assets')\n\tconst oldAssetsKeys = await oldAssetStore.getAllKeys()\n\tconst oldAssets = await Promise.all(\n\t\toldAssetsKeys.map(async (key) => [key, await oldAssetStore.get(key)] as const)\n\t)\n\tawait oldTx.done\n\n\tconst newDb = await openLocalDb(persistenceKey)\n\tconst newTx = newDb.transaction([Table.Assets], 'readwrite')\n\tconst newAssetTable = newTx.objectStore(Table.Assets)\n\tfor (const [key, value] of oldAssets) {\n\t\tnewAssetTable.put(value, key)\n\t}\n\tawait newTx.done\n\n\toldAssetDb.close()\n\tnewDb.close()\n\n\tawait deleteDB(oldStoreId)\n}\n\ninterface LoadResult {\n\trecords: TLRecord[]\n\tschema?: SerializedSchema\n\tsessionStateSnapshot?: TLSessionStateSnapshot | null\n}\n\ninterface SessionStateSnapshotRow {\n\tid: string\n\tsnapshot: TLSessionStateSnapshot\n\tupdatedAt: number\n}\n\n/** @internal */\nexport class LocalIndexedDb {\n\tprivate getDbPromise: Promise<IDBPDatabase<StoreName>>\n\tprivate isClosed = false\n\tprivate pendingTransactionSet = new Set<Promise<unknown>>()\n\n\t/** @internal */\n\tstatic connectedInstances = new Set<LocalIndexedDb>()\n\n\tconstructor(persistenceKey: string) {\n\t\tLocalIndexedDb.connectedInstances.add(this)\n\t\tthis.getDbPromise = (async () => {\n\t\t\tawait migrateLegacyAssetDbIfNeeded(persistenceKey)\n\t\t\treturn await openLocalDb(persistenceKey)\n\t\t})()\n\t}\n\n\tprivate getDb() {\n\t\treturn this.getDbPromise\n\t}\n\n\t/**\n\t * Wait for any pending transactions to be completed. Useful for tests.\n\t *\n\t * @internal\n\t */\n\tpending(): Promise<void> {\n\t\treturn Promise.allSettled([this.getDbPromise, ...this.pendingTransactionSet]).then(noop)\n\t}\n\n\tasync close() {\n\t\tif (this.isClosed) return\n\t\tthis.isClosed = true\n\t\tawait this.pending()\n\t\t;(await this.getDb()).close()\n\t\tLocalIndexedDb.connectedInstances.delete(this)\n\t}\n\n\tprivate tx<Names extends StoreName[], Mode extends IDBTransactionMode, T>(\n\t\tmode: Mode,\n\t\tnames: Names,\n\t\tcb: (tx: IDBPTransaction<StoreName, Names, Mode>) => Promise<T>\n\t): Promise<T> {\n\t\tconst txPromise = (async () => {\n\t\t\tassert(!this.isClosed, 'db is closed')\n\t\t\tconst db = await this.getDb()\n\t\t\tconst tx = db.transaction(names, mode)\n\t\t\t// need to add a catch here early to prevent unhandled promise rejection\n\t\t\t// during react-strict-mode where this tx.done promise can be rejected\n\t\t\t// before we have a chance to await on it\n\t\t\tconst done = tx.done.catch((e: unknown) => {\n\t\t\t\tif (!this.isClosed) {\n\t\t\t\t\tthrow e\n\t\t\t\t}\n\t\t\t})\n\t\t\ttry {\n\t\t\t\treturn await cb(tx)\n\t\t\t} finally {\n\t\t\t\tif (!this.isClosed) {\n\t\t\t\t\tawait done\n\t\t\t\t} else {\n\t\t\t\t\ttx.abort()\n\t\t\t\t}\n\t\t\t}\n\t\t})()\n\t\tthis.pendingTransactionSet.add(txPromise)\n\t\ttxPromise.finally(() => this.pendingTransactionSet.delete(txPromise))\n\t\treturn txPromise\n\t}\n\n\tasync load({ sessionId }: { sessionId?: string } = {}) {\n\t\treturn await this.tx(\n\t\t\t'readonly',\n\t\t\t[Table.Records, Table.Schema, Table.SessionState],\n\t\t\tasync (tx) => {\n\t\t\t\tconst recordsStore = tx.objectStore(Table.Records)\n\t\t\t\tconst schemaStore = tx.objectStore(Table.Schema)\n\t\t\t\tconst sessionStateStore = tx.objectStore(Table.SessionState)\n\t\t\t\tlet sessionStateSnapshot = sessionId\n\t\t\t\t\t? ((await sessionStateStore.get(sessionId)) as SessionStateSnapshotRow | undefined)\n\t\t\t\t\t\t\t?.snapshot\n\t\t\t\t\t: null\n\t\t\t\tif (!sessionStateSnapshot) {\n\t\t\t\t\t// get the most recent session state\n\t\t\t\t\tconst all = (await sessionStateStore.getAll()) as SessionStateSnapshotRow[]\n\t\t\t\t\tsessionStateSnapshot = all.sort((a, b) => a.updatedAt - b.updatedAt).pop()?.snapshot\n\t\t\t\t}\n\t\t\t\tconst result = {\n\t\t\t\t\trecords: await recordsStore.getAll(),\n\t\t\t\t\tschema: await schemaStore.get(Table.Schema),\n\t\t\t\t\tsessionStateSnapshot,\n\t\t\t\t} satisfies LoadResult\n\n\t\t\t\treturn result\n\t\t\t}\n\t\t)\n\t}\n\n\tasync storeChanges({\n\t\tschema,\n\t\tchanges,\n\t\tsessionId,\n\t\tsessionStateSnapshot,\n\t}: {\n\t\tschema: TLStoreSchema\n\t\tchanges: RecordsDiff<any>\n\t\tsessionId?: string | null\n\t\tsessionStateSnapshot?: TLSessionStateSnapshot | null\n\t}) {\n\t\tawait this.tx('readwrite', [Table.Records, Table.Schema, Table.SessionState], async (tx) => {\n\t\t\tconst recordsStore = tx.objectStore(Table.Records)\n\t\t\tconst schemaStore = tx.objectStore(Table.Schema)\n\t\t\tconst sessionStateStore = tx.objectStore(Table.SessionState)\n\n\t\t\tfor (const [id, record] of Object.entries(changes.added)) {\n\t\t\t\tawait recordsStore.put(record, id)\n\t\t\t}\n\n\t\t\tfor (const [_prev, updated] of Object.values(changes.updated)) {\n\t\t\t\tawait recordsStore.put(updated, updated.id)\n\t\t\t}\n\n\t\t\tfor (const id of Object.keys(changes.removed)) {\n\t\t\t\tawait recordsStore.delete(id)\n\t\t\t}\n\n\t\t\tschemaStore.put(schema.serialize(), Table.Schema)\n\t\t\tif (sessionStateSnapshot && sessionId) {\n\t\t\t\tsessionStateStore.put(\n\t\t\t\t\t{\n\t\t\t\t\t\tsnapshot: sessionStateSnapshot,\n\t\t\t\t\t\tupdatedAt: Date.now(),\n\t\t\t\t\t\tid: sessionId,\n\t\t\t\t\t} satisfies SessionStateSnapshotRow,\n\t\t\t\t\tsessionId\n\t\t\t\t)\n\t\t\t} else if (sessionStateSnapshot || sessionId) {\n\t\t\t\tconsole.error('sessionStateSnapshot and instanceId must be provided together')\n\t\t\t}\n\t\t})\n\t}\n\n\tasync storeSnapshot({\n\t\tschema,\n\t\tsnapshot,\n\t\tsessionId,\n\t\tsessionStateSnapshot,\n\t}: {\n\t\tschema: TLStoreSchema\n\t\tsnapshot: SerializedStore<any>\n\t\tsessionId?: string | null\n\t\tsessionStateSnapshot?: TLSessionStateSnapshot | null\n\t}) {\n\t\tawait this.tx('readwrite', [Table.Records, Table.Schema, Table.SessionState], async (tx) => {\n\t\t\tconst recordsStore = tx.objectStore(Table.Records)\n\t\t\tconst schemaStore = tx.objectStore(Table.Schema)\n\t\t\tconst sessionStateStore = tx.objectStore(Table.SessionState)\n\n\t\t\tawait recordsStore.clear()\n\n\t\t\tfor (const [id, record] of Object.entries(snapshot)) {\n\t\t\t\tawait recordsStore.put(record, id)\n\t\t\t}\n\n\t\t\tschemaStore.put(schema.serialize(), Table.Schema)\n\n\t\t\tif (sessionStateSnapshot && sessionId) {\n\t\t\t\tsessionStateStore.put(\n\t\t\t\t\t{\n\t\t\t\t\t\tsnapshot: sessionStateSnapshot,\n\t\t\t\t\t\tupdatedAt: Date.now(),\n\t\t\t\t\t\tid: sessionId,\n\t\t\t\t\t} satisfies SessionStateSnapshotRow,\n\t\t\t\t\tsessionId\n\t\t\t\t)\n\t\t\t} else if (sessionStateSnapshot || sessionId) {\n\t\t\t\tconsole.error('sessionStateSnapshot and instanceId must be provided together')\n\t\t\t}\n\t\t})\n\t}\n\n\tasync pruneSessions() {\n\t\tawait this.tx('readwrite', [Table.SessionState], async (tx) => {\n\t\t\tconst sessionStateStore = tx.objectStore(Table.SessionState)\n\t\t\tconst all = (await sessionStateStore.getAll()).sort((a, b) => a.updatedAt - b.updatedAt)\n\t\t\tif (all.length < 10) {\n\t\t\t\tawait tx.done\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst toDelete = all.slice(0, all.length - 10)\n\t\t\tfor (const { id } of toDelete) {\n\t\t\t\tawait sessionStateStore.delete(id)\n\t\t\t}\n\t\t})\n\t}\n\n\tasync getAsset(assetId: string): Promise<File | undefined> {\n\t\treturn await this.tx('readonly', [Table.Assets], async (tx) => {\n\t\t\tconst assetsStore = tx.objectStore(Table.Assets)\n\t\t\treturn await assetsStore.get(assetId)\n\t\t})\n\t}\n\n\tasync storeAsset(assetId: string, blob: File) {\n\t\tawait this.tx('readwrite', [Table.Assets], async (tx) => {\n\t\t\tconst assetsStore = tx.objectStore(Table.Assets)\n\t\t\tawait assetsStore.put(blob, assetId)\n\t\t})\n\t}\n\n\tasync removeAssets(assetId: string[]) {\n\t\tawait this.tx('readwrite', [Table.Assets], async (tx) => {\n\t\t\tconst assetsStore = tx.objectStore(Table.Assets)\n\t\t\tfor (const id of assetId) {\n\t\t\t\tawait assetsStore.delete(id)\n\t\t\t}\n\t\t})\n\t}\n}\n\n/** @internal */\nexport function getAllIndexDbNames(): string[] {\n\tconst result = JSON.parse(getFromLocalStorage(dbNameIndexKey) || '[]') ?? []\n\tif (!Array.isArray(result)) {\n\t\treturn []\n\t}\n\treturn result\n}\n\nfunction addDbName(name: string) {\n\tconst all = new Set(getAllIndexDbNames())\n\tall.add(name)\n\tsetInLocalStorage(dbNameIndexKey, JSON.stringify([...all]))\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1607, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/sync/alerts.ts"],"sourcesContent":["/** @internal */\nexport function showCantWriteToIndexDbAlert() {\n\twindow.alert(\n\t\t`Oops! We could not save changes to your browser's storage. We now need to reload the page and try again.\n\nKeep seeing this message?\n• If you're using tldraw in a private or \"incognito\" window, try loading tldraw in a regular window or in a different browser.\n• If your hard disk is full, try clearing up some space and then reload the page.`\n\t)\n}\n\n/** @internal */\nexport function showCantReadFromIndexDbAlert() {\n\twindow.alert(\n\t\t`Oops! We could not access your browser's storage—and the app won't work correctly without that. We now need to reload the page and try again.\n\nKeep seeing this message?\n• If you're using tldraw in a private or \"incognito\" window, try loading tldraw in a regular window or in a different browser.`\n\t)\n}\n"],"names":[],"mappings":";;;;AACO,SAAS,8BAA8B;IAC7C,OAAO,KAAA,CACN,CAAA;;;;sFAAA,CAAA;AAMF;AAGO,SAAS,+BAA+B;IAC9C,OAAO,KAAA,CACN,CAAA;;;mIAAA,CAAA;AAKF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1632, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/sync/TLLocalSyncClient.ts"],"sourcesContent":["import { Signal, transact } from '@tldraw/state'\nimport { RecordsDiff, SerializedSchema, UnknownRecord, squashRecordDiffs } from '@tldraw/store'\nimport { TLStore } from '@tldraw/tlschema'\nimport { assert } from '@tldraw/utils'\nimport {\n\tTAB_ID,\n\tTLSessionStateSnapshot,\n\tcreateSessionStateSnapshotSignal,\n\textractSessionStateFromLegacySnapshot,\n\tloadSessionStateSnapshotIntoStore,\n} from '../../config/TLSessionStateSnapshot'\nimport { LocalIndexedDb } from './LocalIndexedDb'\nimport { showCantReadFromIndexDbAlert, showCantWriteToIndexDbAlert } from './alerts'\n\n/** How should we debounce persists? */\nconst PERSIST_THROTTLE_MS = 350\n/** If we're in an error state, how long should we wait before retrying a write? */\nconst PERSIST_RETRY_THROTTLE_MS = 10_000\n\nconst UPDATE_INSTANCE_STATE = Symbol('UPDATE_INSTANCE_STATE')\n\n/**\n * IMPORTANT!!!\n *\n * This is just a quick-n-dirty temporary solution that will be replaced with the remote sync client\n * once it has the db integrated\n */\n\ninterface SyncMessage {\n\ttype: 'diff'\n\tstoreId: string\n\tchanges: RecordsDiff<UnknownRecord>\n\tschema: SerializedSchema\n}\n\n// Sent by new clients when they connect\n// If another client is on the channel with a newer schema version\n// It will\ninterface AnnounceMessage {\n\ttype: 'announce'\n\tschema: SerializedSchema\n}\n\ntype Message = SyncMessage | AnnounceMessage\n\ntype UnpackPromise<T> = T extends Promise<infer U> ? U : T\n\nconst msg = (msg: Message) => msg\n\n/** @internal */\nexport class BroadcastChannelMock {\n\tonmessage?: (e: MessageEvent) => void\n\tconstructor(_name: string) {\n\t\t// noop\n\t}\n\tpostMessage(_msg: Message) {\n\t\t// noop\n\t}\n\tclose() {\n\t\t// noop\n\t}\n}\n\nconst BC = typeof BroadcastChannel === 'undefined' ? BroadcastChannelMock : BroadcastChannel\n\n/** @internal */\nexport class TLLocalSyncClient {\n\tprivate disposables = new Set<() => void>()\n\tprivate diffQueue: Array<RecordsDiff<UnknownRecord> | typeof UPDATE_INSTANCE_STATE> = []\n\tprivate didDispose = false\n\tprivate shouldDoFullDBWrite = true\n\tprivate isReloading = false\n\treadonly persistenceKey: string\n\treadonly sessionId: string\n\treadonly serializedSchema: SerializedSchema\n\tprivate isDebugging = false\n\tprivate readonly documentTypes: ReadonlySet<string>\n\tprivate readonly $sessionStateSnapshot: Signal<TLSessionStateSnapshot | null>\n\t/** @internal */\n\treadonly db: LocalIndexedDb\n\n\tinitTime = Date.now()\n\tprivate debug(...args: any[]) {\n\t\tif (this.isDebugging) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.debug(...args)\n\t\t}\n\t}\n\tconstructor(\n\t\tpublic readonly store: TLStore,\n\t\t{\n\t\t\tpersistenceKey,\n\t\t\tsessionId = TAB_ID,\n\t\t\tonLoad,\n\t\t\tonLoadError,\n\t\t}: {\n\t\t\tpersistenceKey: string\n\t\t\tsessionId?: string\n\t\t\tonLoad(self: TLLocalSyncClient): void\n\t\t\tonLoadError(error: Error): void\n\t\t},\n\t\tpublic readonly channel = new BC(`tldraw-tab-sync-${persistenceKey}`)\n\t) {\n\t\tif (typeof window !== 'undefined') {\n\t\t\t;(window as any).tlsync = this\n\t\t}\n\t\tthis.persistenceKey = persistenceKey\n\t\tthis.sessionId = sessionId\n\t\tthis.db = new LocalIndexedDb(persistenceKey)\n\t\tthis.disposables.add(() => this.db.close())\n\n\t\tthis.serializedSchema = this.store.schema.serialize()\n\t\tthis.$sessionStateSnapshot = createSessionStateSnapshotSignal(this.store)\n\n\t\tthis.disposables.add(\n\t\t\t// Set up a subscription to changes from the store: When\n\t\t\t// the store changes (and if the change was made by the user)\n\t\t\t// then immediately send the diff to other tabs via postMessage\n\t\t\t// and schedule a persist.\n\t\t\tstore.listen(\n\t\t\t\t({ changes }) => {\n\t\t\t\t\tthis.diffQueue.push(changes)\n\t\t\t\t\tthis.channel.postMessage(\n\t\t\t\t\t\tmsg({\n\t\t\t\t\t\t\ttype: 'diff',\n\t\t\t\t\t\t\tstoreId: this.store.id,\n\t\t\t\t\t\t\tchanges,\n\t\t\t\t\t\t\tschema: this.serializedSchema,\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t\tthis.schedulePersist()\n\t\t\t\t},\n\t\t\t\t{ source: 'user', scope: 'document' }\n\t\t\t)\n\t\t)\n\t\tthis.disposables.add(\n\t\t\tstore.listen(\n\t\t\t\t() => {\n\t\t\t\t\tthis.diffQueue.push(UPDATE_INSTANCE_STATE)\n\t\t\t\t\tthis.schedulePersist()\n\t\t\t\t},\n\t\t\t\t{ scope: 'session' }\n\t\t\t)\n\t\t)\n\n\t\tthis.connect(onLoad, onLoadError)\n\n\t\tthis.documentTypes = new Set(\n\t\t\tObject.values(this.store.schema.types)\n\t\t\t\t.filter((t) => t.scope === 'document')\n\t\t\t\t.map((t) => t.typeName)\n\t\t)\n\t}\n\n\tprivate async connect(onLoad: (client: this) => void, onLoadError: (error: Error) => void) {\n\t\tthis.debug('connecting')\n\t\tlet data: UnpackPromise<ReturnType<LocalIndexedDb['load']>> | undefined\n\n\t\ttry {\n\t\t\tdata = await this.db.load({ sessionId: this.sessionId })\n\t\t} catch (error: any) {\n\t\t\tonLoadError(error)\n\t\t\tshowCantReadFromIndexDbAlert()\n\t\t\treturn\n\t\t}\n\n\t\tthis.debug('loaded data from store', data, 'didDispose', this.didDispose)\n\t\tif (this.didDispose) return\n\n\t\ttry {\n\t\t\tif (data) {\n\t\t\t\tconst documentSnapshot = Object.fromEntries(data.records.map((r) => [r.id, r]))\n\t\t\t\tconst sessionStateSnapshot =\n\t\t\t\t\tdata.sessionStateSnapshot ?? extractSessionStateFromLegacySnapshot(documentSnapshot)\n\t\t\t\tconst migrationResult = this.store.schema.migrateStoreSnapshot({\n\t\t\t\t\tstore: documentSnapshot,\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-deprecated\n\t\t\t\t\tschema: data.schema ?? this.store.schema.serializeEarliestVersion(),\n\t\t\t\t})\n\n\t\t\t\tif (migrationResult.type === 'error') {\n\t\t\t\t\tconsole.error('failed to migrate store', migrationResult)\n\t\t\t\t\tonLoadError(new Error(`Failed to migrate store: ${migrationResult.reason}`))\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst records = Object.values(migrationResult.value).filter((r) =>\n\t\t\t\t\tthis.documentTypes.has(r.typeName)\n\t\t\t\t)\n\t\t\t\tif (records.length > 0) {\n\t\t\t\t\t// 3. Merge the changes into the REAL STORE\n\t\t\t\t\tthis.store.mergeRemoteChanges(() => {\n\t\t\t\t\t\t// Calling put will validate the records!\n\t\t\t\t\t\tthis.store.put(records, 'initialize')\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif (sessionStateSnapshot) {\n\t\t\t\t\tloadSessionStateSnapshotIntoStore(this.store, sessionStateSnapshot, {\n\t\t\t\t\t\tforceOverwrite: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.channel.onmessage = ({ data }) => {\n\t\t\t\tthis.debug('got message', data)\n\t\t\t\tconst msg = data as Message\n\t\t\t\t// if their schema is earlier than ours, we need to tell them so they can refresh\n\t\t\t\t// if their schema is later than ours, we need to refresh\n\t\t\t\tconst res = this.store.schema.getMigrationsSince(msg.schema)\n\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\t// we are older, refresh\n\t\t\t\t\t// but add a safety check to make sure we don't get in an infinite loop\n\t\t\t\t\tconst timeSinceInit = Date.now() - this.initTime\n\t\t\t\t\tif (timeSinceInit < 5000) {\n\t\t\t\t\t\t// This tab was just reloaded, but is out of date compared to other tabs.\n\t\t\t\t\t\t// Not expecting this to ever happen. It should only happen if we roll back a release that incremented\n\t\t\t\t\t\t// the schema version (which we should never do)\n\t\t\t\t\t\t// Or maybe during development if you have multiple local tabs open running the app on prod mode and you\n\t\t\t\t\t\t// check out an older commit. Dev server should be fine.\n\t\t\t\t\t\tonLoadError(new Error('Schema mismatch, please close other tabs and reload the page'))\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tthis.debug('reloading')\n\t\t\t\t\tthis.isReloading = true\n\t\t\t\t\twindow?.location?.reload?.()\n\t\t\t\t\treturn\n\t\t\t\t} else if (res.value.length > 0) {\n\t\t\t\t\t// they are older, tell them to refresh and not write any more data\n\t\t\t\t\tthis.debug('telling them to reload')\n\t\t\t\t\tthis.channel.postMessage({ type: 'announce', schema: this.serializedSchema })\n\t\t\t\t\t// schedule a full db write in case they wrote data anyway\n\t\t\t\t\tthis.shouldDoFullDBWrite = true\n\t\t\t\t\tthis.persistIfNeeded()\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t// otherwise, all good, same version :)\n\t\t\t\tif (msg.type === 'diff') {\n\t\t\t\t\tthis.debug('applying diff')\n\t\t\t\t\ttransact(() => {\n\t\t\t\t\t\tthis.store.mergeRemoteChanges(() => {\n\t\t\t\t\t\t\tthis.store.applyDiff(msg.changes as any)\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.channel.postMessage({ type: 'announce', schema: this.serializedSchema })\n\t\t\tthis.disposables.add(() => {\n\t\t\t\tthis.channel.close()\n\t\t\t})\n\t\t\tonLoad(this)\n\t\t} catch (e: any) {\n\t\t\tthis.debug('error loading data from store', e)\n\t\t\tif (this.didDispose) return\n\t\t\tonLoadError(e)\n\t\t\treturn\n\t\t}\n\t}\n\n\tclose() {\n\t\tthis.debug('closing')\n\t\tthis.didDispose = true\n\t\tthis.disposables.forEach((d) => d())\n\t}\n\n\tprivate isPersisting = false\n\tprivate didLastWriteError = false\n\tprivate scheduledPersistTimeout: ReturnType<typeof setTimeout> | null = null\n\n\t/**\n\t * Schedule a persist. Persists don't happen immediately: they are throttled to avoid writing too\n\t * often, and will retry if failed.\n\t *\n\t * @internal\n\t */\n\tprivate schedulePersist() {\n\t\tthis.debug('schedulePersist', this.scheduledPersistTimeout)\n\t\tif (this.scheduledPersistTimeout) return\n\t\t// eslint-disable-next-line no-restricted-globals\n\t\tthis.scheduledPersistTimeout = setTimeout(\n\t\t\t() => {\n\t\t\t\tthis.scheduledPersistTimeout = null\n\t\t\t\tthis.persistIfNeeded()\n\t\t\t},\n\t\t\tthis.didLastWriteError ? PERSIST_RETRY_THROTTLE_MS : PERSIST_THROTTLE_MS\n\t\t)\n\t}\n\n\t/**\n\t * Persist to IndexedDB only under certain circumstances:\n\t *\n\t * - If we're not already persisting\n\t * - If we're not reloading the page\n\t * - And we have something to persist (a full db write scheduled or changes in the diff queue)\n\t *\n\t * @internal\n\t */\n\tprivate persistIfNeeded() {\n\t\tthis.debug('persistIfNeeded', {\n\t\t\tisPersisting: this.isPersisting,\n\t\t\tisReloading: this.isReloading,\n\t\t\tshouldDoFullDBWrite: this.shouldDoFullDBWrite,\n\t\t\tdiffQueueLength: this.diffQueue.length,\n\t\t\tstoreIsPossiblyCorrupt: this.store.isPossiblyCorrupted(),\n\t\t})\n\n\t\t// if we've scheduled a persist for the future, that's no longer needed\n\t\tif (this.scheduledPersistTimeout) {\n\t\t\tclearTimeout(this.scheduledPersistTimeout)\n\t\t\tthis.scheduledPersistTimeout = null\n\t\t}\n\n\t\t// if a persist is already in progress, we don't need to do anything -\n\t\t// if there are still outstanding changes once it's finished, it'll\n\t\t// schedule another persist\n\t\tif (this.isPersisting) return\n\n\t\t// if we're reloading the page, it's because there's a newer client\n\t\t// present so lets not overwrite their changes\n\t\tif (this.isReloading) return\n\n\t\t// if the store is possibly corrupted, we don't want to persist\n\t\tif (this.store.isPossiblyCorrupted()) return\n\n\t\t// if we're scheduled for a full write or if we have changes outstanding, let's persist them!\n\t\tif (this.shouldDoFullDBWrite || this.diffQueue.length > 0) {\n\t\t\tthis.doPersist()\n\t\t}\n\t}\n\n\t/**\n\t * Actually persist to IndexedDB. If the write fails, then we'll retry with a full db write after\n\t * a short delay.\n\t */\n\tprivate async doPersist() {\n\t\tassert(!this.isPersisting, 'persist already in progress')\n\t\tif (this.didDispose) return\n\t\tthis.isPersisting = true\n\n\t\tthis.debug('doPersist start')\n\n\t\t// instantly empty the diff queue, but keep our own copy of it. this way\n\t\t// diffs that come in during the persist will still get tracked\n\t\tconst diffQueue = this.diffQueue\n\t\tthis.diffQueue = []\n\n\t\ttry {\n\t\t\tif (this.shouldDoFullDBWrite) {\n\t\t\t\tthis.shouldDoFullDBWrite = false\n\t\t\t\tawait this.db.storeSnapshot({\n\t\t\t\t\tschema: this.store.schema,\n\t\t\t\t\tsnapshot: this.store.serialize(),\n\t\t\t\t\tsessionId: this.sessionId,\n\t\t\t\t\tsessionStateSnapshot: this.$sessionStateSnapshot.get(),\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tconst diffs = squashRecordDiffs(\n\t\t\t\t\tdiffQueue.filter((d): d is RecordsDiff<UnknownRecord> => d !== UPDATE_INSTANCE_STATE)\n\t\t\t\t)\n\t\t\t\tawait this.db.storeChanges({\n\t\t\t\t\tchanges: diffs,\n\t\t\t\t\tschema: this.store.schema,\n\t\t\t\t\tsessionId: this.sessionId,\n\t\t\t\t\tsessionStateSnapshot: this.$sessionStateSnapshot.get(),\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis.didLastWriteError = false\n\t\t} catch (e) {\n\t\t\t// set this.shouldDoFullDBWrite because we clear the diffQueue no matter what,\n\t\t\t// so if this is just a temporary error, we will still persist all changes\n\t\t\tthis.shouldDoFullDBWrite = true\n\t\t\tthis.didLastWriteError = true\n\t\t\tconsole.error('failed to store changes in indexed db', e)\n\n\t\t\tshowCantWriteToIndexDbAlert()\n\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\t// adios\n\t\t\t\twindow.location.reload()\n\t\t\t}\n\t\t}\n\n\t\tthis.isPersisting = false\n\t\tthis.debug('doPersist end')\n\n\t\t// changes might have come in between when we started the persist and\n\t\t// now. we request another persist so any new changes can get written\n\t\tthis.schedulePersist()\n\t}\n}\n"],"names":["msg","data"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1910, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/licensing.ts"],"sourcesContent":["/*\n  Convert a string into an ArrayBuffer\n  from https://developers.google.com/web/updates/2012/06/How-to-convert-ArrayBuffer-to-and-from-String\n*/\nexport function str2ab(str: string) {\n\tconst buf = new ArrayBuffer(str.length)\n\tconst bufView = new Uint8Array(buf)\n\tfor (let i = 0, strLen = str.length; i < strLen; i++) {\n\t\tbufView[i] = str.charCodeAt(i)\n\t}\n\treturn buf\n}\n\nexport function importPublicKey(pemContents: string) {\n\t// base64 decode the string to get the binary data\n\tconst binaryDerString = atob(pemContents)\n\t// convert from a binary string to an ArrayBuffer\n\tconst binaryDer = str2ab(binaryDerString)\n\n\treturn crypto.subtle.importKey(\n\t\t'spki',\n\t\tnew Uint8Array(binaryDer),\n\t\t{\n\t\t\tname: 'ECDSA',\n\t\t\tnamedCurve: 'P-256',\n\t\t},\n\t\ttrue,\n\t\t['verify']\n\t)\n}\n"],"names":[],"mappings":";;;;AAIO,SAAS,OAAO,GAAA,EAAa;IACnC,MAAM,MAAM,IAAI,YAAY,IAAI,MAAM;IACtC,MAAM,UAAU,IAAI,WAAW,GAAG;IAClC,IAAA,IAAS,IAAI,GAAG,SAAS,IAAI,MAAA,EAAQ,IAAI,QAAQ,IAAK;QACrD,OAAA,CAAQ,CAAC,CAAA,GAAI,IAAI,UAAA,CAAW,CAAC;IAC9B;IACA,OAAO;AACR;AAEO,SAAS,gBAAgB,WAAA,EAAqB;IAEpD,MAAM,kBAAkB,KAAK,WAAW;IAExC,MAAM,YAAY,OAAO,eAAe;IAExC,OAAO,OAAO,MAAA,CAAO,SAAA,CACpB,QACA,IAAI,WAAW,SAAS,GACxB;QACC,MAAM;QACN,YAAY;IACb,GACA,MACA;QAAC,QAAQ;KAAA;AAEX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1940, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/getSvgPathFromPoints.ts"],"sourcesContent":["import { VecLike } from '../primitives/Vec'\nimport { average, precise } from '../primitives/utils'\n\n/**\n * Turn an array of points into a path of quadradic curves.\n *\n * @param points - The points returned from perfect-freehand\n * @param closed - Whether the stroke is closed\n *\n * @public\n */\nexport function getSvgPathFromPoints(points: VecLike[], closed = true): string {\n\tconst len = points.length\n\n\tif (len < 2) {\n\t\treturn ''\n\t}\n\n\tlet a = points[0]\n\tlet b = points[1]\n\n\tif (len === 2) {\n\t\t// If only two points, just draw a line\n\t\treturn `M${precise(a)}L${precise(b)}`\n\t}\n\n\tlet result = ''\n\n\tfor (let i = 2, max = len - 1; i < max; i++) {\n\t\ta = points[i]\n\t\tb = points[i + 1]\n\t\tresult += average(a, b)\n\t}\n\n\tif (closed) {\n\t\t// If closed, draw a curve from the last point to the first\n\t\treturn `M${average(points[0], points[1])}Q${precise(points[1])}${average(\n\t\t\tpoints[1],\n\t\t\tpoints[2]\n\t\t)}T${result}${average(points[len - 1], points[0])}${average(points[0], points[1])}Z`\n\t} else {\n\t\t// If not closed, draw a curve starting at the first point and\n\t\t// ending at the midpoint of the last and second-last point, then\n\t\t// complete the curve with a line segment to the last point.\n\t\treturn `M${precise(points[0])}Q${precise(points[1])}${average(points[1], points[2])}${\n\t\t\tpoints.length > 3 ? 'T' : ''\n\t\t}${result}L${precise(points[len - 1])}`\n\t}\n}\n"],"names":[],"mappings":";;;AACA,SAAS,SAAS,eAAe;;AAU1B,SAAS,qBAAqB,MAAA,EAAmB,SAAS,IAAA,EAAc;IAC9E,MAAM,MAAM,OAAO,MAAA;IAEnB,IAAI,MAAM,GAAG;QACZ,OAAO;IACR;IAEA,IAAI,IAAI,MAAA,CAAO,CAAC,CAAA;IAChB,IAAI,IAAI,MAAA,CAAO,CAAC,CAAA;IAEhB,IAAI,QAAQ,GAAG;QAEd,OAAO,CAAA,CAAA,EAAI,kMAAA,EAAQ,CAAC,CAAC,CAAA,CAAA,0LAAI,UAAA,EAAQ,CAAC,CAAC,EAAA;IACpC;IAEA,IAAI,SAAS;IAEb,IAAA,IAAS,IAAI,GAAG,MAAM,MAAM,GAAG,IAAI,KAAK,IAAK;QAC5C,IAAI,MAAA,CAAO,CAAC,CAAA;QACZ,IAAI,MAAA,CAAO,IAAI,CAAC,CAAA;QAChB,kMAAU,UAAA,EAAQ,GAAG,CAAC;IACvB;IAEA,IAAI,QAAQ;QAEX,OAAO,CAAA,CAAA,GAAI,iMAAA,EAAQ,MAAA,CAAO,CAAC,CAAA,EAAG,MAAA,CAAO,CAAC,CAAC,CAAC,CAAA,CAAA,EAAI,kMAAA,EAAQ,MAAA,CAAO,CAAC,CAAC,CAAC,2LAAG,UAAA,EAChE,MAAA,CAAO,CAAC,CAAA,EACR,MAAA,CAAO,CAAC,CAAA,EACR,CAAA,EAAI,MAAM,2LAAG,UAAA,EAAQ,MAAA,CAAO,MAAM,CAAC,CAAA,EAAG,MAAA,CAAO,CAAC,CAAC,CAAC,IAAG,iMAAA,EAAQ,MAAA,CAAO,CAAC,CAAA,EAAG,MAAA,CAAO,CAAC,CAAC,CAAC,CAAA,CAAA,CAAA;IAClF,OAAO;QAIN,OAAO,CAAA,CAAA,0LAAI,UAAA,EAAQ,MAAA,CAAO,CAAC,CAAC,CAAC,CAAA,CAAA,0LAAI,UAAA,EAAQ,MAAA,CAAO,CAAC,CAAC,CAAC,2LAAG,UAAA,EAAQ,MAAA,CAAO,CAAC,CAAA,EAAG,MAAA,CAAO,CAAC,CAAC,CAAC,GAClF,OAAO,MAAA,GAAS,IAAI,MAAM,EAC3B,GAAG,MAAM,CAAA,CAAA,0LAAI,UAAA,EAAQ,MAAA,CAAO,MAAM,CAAC,CAAC,CAAC,EAAA;IACtC;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1975, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/normalizeWheel.ts"],"sourcesContent":["// Reasonable defaults\nconst MAX_ZOOM_STEP = 10\nconst IS_DARWIN = /Mac|iPod|iPhone|iPad/.test(\n\t// eslint-disable-next-line @typescript-eslint/no-deprecated\n\ttypeof window === 'undefined' ? 'node' : window.navigator.platform\n)\n\n// Adapted from https://stackoverflow.com/a/13650579\n/** @internal */\nexport function normalizeWheel(event: WheelEvent | React.WheelEvent<HTMLElement>) {\n\tlet { deltaY, deltaX } = event\n\tlet deltaZ = 0\n\n\t// wheeling\n\tif (event.ctrlKey || event.altKey || event.metaKey) {\n\t\tdeltaZ = (Math.abs(deltaY) > MAX_ZOOM_STEP ? MAX_ZOOM_STEP * Math.sign(deltaY) : deltaY) / 100\n\t} else {\n\t\tif (event.shiftKey && !IS_DARWIN) {\n\t\t\tdeltaX = deltaY\n\t\t\tdeltaY = 0\n\t\t}\n\t}\n\n\treturn { x: -deltaX, y: -deltaY, z: -deltaZ }\n}\n"],"names":[],"mappings":";;;AACA,MAAM,gBAAgB;AACtB,MAAM,YAAY,uBAAuB,IAAA,CAAA,4DAAA;AAExC,OAAO,WAAW,cAAc,SAAS,OAAO,SAAA,CAAU,QAAA;AAKpD,SAAS,eAAe,KAAA,EAAmD;IACjF,IAAI,EAAE,MAAA,EAAQ,MAAA,CAAO,CAAA,GAAI;IACzB,IAAI,SAAS;IAGb,IAAI,MAAM,OAAA,IAAW,MAAM,MAAA,IAAU,MAAM,OAAA,EAAS;QACnD,SAAA,CAAU,KAAK,GAAA,CAAI,MAAM,IAAI,gBAAgB,gBAAgB,KAAK,IAAA,CAAK,MAAM,IAAI,MAAA,IAAU;IAC5F,OAAO;QACN,IAAI,MAAM,QAAA,IAAY,CAAC,WAAW;YACjC,SAAS;YACT,SAAS;QACV;IACD;IAEA,OAAO;QAAE,GAAG,CAAC;QAAQ,GAAG,CAAC;QAAQ,GAAG,CAAC;IAAO;AAC7C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2006, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/nearestMultiple.ts"],"sourcesContent":["// Euclidean algorithm to find the GCD\nfunction gcd(a: number, b: number): number {\n\treturn b === 0 ? a : gcd(b, a % b)\n}\n\n// Returns the lowest value that the given number can be multiplied by to reach an integer\nexport function nearestMultiple(float: number) {\n\tconst decimal = float.toString().split('.')[1]\n\tif (!decimal) return 1\n\tconst denominator = Math.pow(10, decimal.length)\n\tconst numerator = parseInt(decimal, 10)\n\treturn denominator / gcd(numerator, denominator)\n}\n"],"names":[],"mappings":";;;AACA,SAAS,IAAI,CAAA,EAAW,CAAA,EAAmB;IAC1C,OAAO,MAAM,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC;AAClC;AAGO,SAAS,gBAAgB,KAAA,EAAe;IAC9C,MAAM,UAAU,MAAM,QAAA,CAAS,EAAE,KAAA,CAAM,GAAG,CAAA,CAAE,CAAC,CAAA;IAC7C,IAAI,CAAC,QAAS,CAAA,OAAO;IACrB,MAAM,cAAc,KAAK,GAAA,CAAI,IAAI,QAAQ,MAAM;IAC/C,MAAM,YAAY,SAAS,SAAS,EAAE;IACtC,OAAO,cAAc,IAAI,WAAW,WAAW;AAChD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2027, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/uniq.ts"],"sourcesContent":["import { uniq as _uniq } from '@tldraw/utils'\n\n/** @public */\nexport function uniq<T>(\n\tarray:\n\t\t| {\n\t\t\t\treadonly length: number\n\t\t\t\treadonly [n: number]: T\n\t\t  }\n\t\t| null\n\t\t| undefined\n): T[] {\n\treturn _uniq(array)\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,QAAQ,aAAa;;AAGvB,SAAS,KACf,KAAA,EAOM;IACN,yLAAO,OAAA,EAAM,KAAK;AACnB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2044, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/reparenting.ts"],"sourcesContent":["import { EMPTY_ARRAY } from '@tldraw/state'\nimport { TLGroupShape, TLParentId, TLShape, TLShapeId } from '@tldraw/tlschema'\nimport { IndexKey, compact, getIndexAbove, getIndexBetween } from '@tldraw/utils'\nimport { Editor } from '../editor/Editor'\nimport { Vec } from '../primitives/Vec'\nimport { Geometry2d } from '../primitives/geometry/Geometry2d'\nimport { Group2d } from '../primitives/geometry/Group2d'\nimport {\n\tintersectPolygonPolygon,\n\tpolygonIntersectsPolyline,\n\tpolygonsIntersect,\n} from '../primitives/intersect'\nimport { pointInPolygon } from '../primitives/utils'\n\n/**\n * Reparents shapes that are no longer contained within their parent shapes.\n * todo: rename me to something more descriptive, like `reparentOccludedShapes` or `reparentAutoDroppedShapes`\n *\n * @param editor - The editor instance.\n * @param shapeIds - The IDs of the shapes to reparent.\n * @param opts - Optional options, including a callback to filter out certain parents, such as when removing a frame.\n *\n * @public\n */\nexport function kickoutOccludedShapes(\n\teditor: Editor,\n\tshapeIds: TLShapeId[],\n\topts?: { filter?(parent: TLShape): boolean }\n) {\n\tconst parentsToCheck = new Set<TLShape>()\n\n\tfor (const id of shapeIds) {\n\t\tconst shape = editor.getShape(id)\n\n\t\tif (!shape) continue\n\t\tparentsToCheck.add(shape)\n\n\t\tconst parent = editor.getShape(shape.parentId)\n\t\tif (!parent) continue\n\t\tparentsToCheck.add(parent)\n\t}\n\n\t// Check all of the parents and gather up parents who have lost children\n\tconst parentsToLostChildren = new Map<TLShape, TLShapeId[]>()\n\n\tfor (const parent of parentsToCheck) {\n\t\tconst childIds = editor.getSortedChildIdsForParent(parent)\n\t\tif (opts?.filter && !opts.filter(parent)) {\n\t\t\t// If the shape is filtered out, we kick out all of its children\n\t\t\tparentsToLostChildren.set(parent, childIds)\n\t\t} else {\n\t\t\tconst overlappingChildren = getOverlappingShapes(editor, parent.id, childIds)\n\t\t\tif (overlappingChildren.length < childIds.length) {\n\t\t\t\tparentsToLostChildren.set(\n\t\t\t\t\tparent,\n\t\t\t\t\tchildIds.filter((id) => !overlappingChildren.includes(id))\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\t// Get all of the shapes on the current page, sorted by their index\n\tconst sortedShapeIds = editor.getCurrentPageShapesSorted().map((s) => s.id)\n\n\tconst parentsToNewChildren: Record<\n\t\tTLParentId,\n\t\t{ parentId: TLParentId; shapeIds: TLShapeId[]; index?: IndexKey }\n\t> = {}\n\n\tfor (const [prevParent, lostChildrenIds] of parentsToLostChildren) {\n\t\tconst lostChildren = compact(lostChildrenIds.map((id) => editor.getShape(id)))\n\n\t\t// Don't fall \"up\" into frames in front of the shape\n\t\t// if (pageShapes.indexOf(shape) < frameSortPosition) continue shapeCheck\n\n\t\t// Otherwise, we have no next dropping shape under the cursor, so go find\n\t\t// all the frames on the page where the moving shapes will fall into\n\t\tconst { reparenting, remainingShapesToReparent } = getDroppedShapesToNewParents(\n\t\t\teditor,\n\t\t\tlostChildren,\n\t\t\t(shape, maybeNewParent) => {\n\t\t\t\t// If we're filtering out a potential parent, don't reparent shapes to the filtered out shape\n\t\t\t\tif (opts?.filter && !opts.filter(maybeNewParent)) return false\n\t\t\t\treturn (\n\t\t\t\t\tmaybeNewParent.id !== prevParent.id &&\n\t\t\t\t\tsortedShapeIds.indexOf(maybeNewParent.id) < sortedShapeIds.indexOf(shape.id)\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\n\t\treparenting.forEach((childrenToReparent, newParentId) => {\n\t\t\tif (childrenToReparent.length === 0) return\n\t\t\tif (!parentsToNewChildren[newParentId]) {\n\t\t\t\tparentsToNewChildren[newParentId] = {\n\t\t\t\t\tparentId: newParentId,\n\t\t\t\t\tshapeIds: [],\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentsToNewChildren[newParentId].shapeIds.push(...childrenToReparent.map((s) => s.id))\n\t\t})\n\n\t\t// Reparent the rest to the page (or containing group)\n\t\tif (remainingShapesToReparent.size > 0) {\n\t\t\t// The remaining shapes are going to be reparented to the old parent's containing group, if there was one, or else to the page\n\t\t\tconst newParentId =\n\t\t\t\teditor.findShapeAncestor(prevParent, (s) => editor.isShapeOfType<TLGroupShape>(s, 'group'))\n\t\t\t\t\t?.id ?? editor.getCurrentPageId()\n\n\t\t\tremainingShapesToReparent.forEach((shape) => {\n\t\t\t\tif (!parentsToNewChildren[newParentId]) {\n\t\t\t\t\tlet insertIndexKey: IndexKey | undefined\n\n\t\t\t\t\tconst oldParentSiblingIds = editor.getSortedChildIdsForParent(newParentId)\n\t\t\t\t\tconst oldParentIndex = oldParentSiblingIds.indexOf(prevParent.id)\n\t\t\t\t\tif (oldParentIndex > -1) {\n\t\t\t\t\t\t// If the old parent is a direct child of the new parent, then we'll add them above the old parent but below the next sibling.\n\t\t\t\t\t\tconst siblingsIndexAbove = oldParentSiblingIds[oldParentIndex + 1]\n\t\t\t\t\t\tconst indexKeyAbove = siblingsIndexAbove\n\t\t\t\t\t\t\t? editor.getShape(siblingsIndexAbove)!.index\n\t\t\t\t\t\t\t: getIndexAbove(prevParent.index)\n\t\t\t\t\t\tinsertIndexKey = getIndexBetween(prevParent.index, indexKeyAbove)\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If the old parent is not a direct child of the new parent, then we'll add them to the \"top\" of the new parent's children.\n\t\t\t\t\t\t// This is done automatically if we leave the index undefined, so let's do that.\n\t\t\t\t\t}\n\n\t\t\t\t\tparentsToNewChildren[newParentId] = {\n\t\t\t\t\t\tparentId: newParentId,\n\t\t\t\t\t\tshapeIds: [],\n\t\t\t\t\t\tindex: insertIndexKey,\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tparentsToNewChildren[newParentId].shapeIds.push(shape.id)\n\t\t\t})\n\t\t}\n\t}\n\n\teditor.run(() => {\n\t\tObject.values(parentsToNewChildren).forEach(({ parentId, shapeIds, index }) => {\n\t\t\tif (shapeIds.length === 0) return\n\t\t\t// Before we reparent, sort the new shape ids by their place in the original absolute order on the page\n\t\t\tshapeIds.sort((a, b) => (sortedShapeIds.indexOf(a) < sortedShapeIds.indexOf(b) ? -1 : 1))\n\t\t\teditor.reparentShapes(shapeIds, parentId, index)\n\t\t})\n\t})\n}\n\n/**\n * Get the shapes that overlap with a given shape.\n *\n * @param editor - The editor instance.\n * @param shape - The shapes or shape IDs to check against.\n * @param otherShapes - The shapes or shape IDs to check for overlap.\n * @returns An array of shapes or shape IDs that overlap with the given shape.\n */\nfunction getOverlappingShapes<T extends TLShape[] | TLShapeId[]>(\n\teditor: Editor,\n\tshape: T[number],\n\totherShapes: T\n) {\n\tif (otherShapes.length === 0) {\n\t\treturn EMPTY_ARRAY\n\t}\n\n\tconst parentPageBounds = editor.getShapePageBounds(shape)\n\tif (!parentPageBounds) return EMPTY_ARRAY\n\n\tconst parentGeometry = editor.getShapeGeometry(shape)\n\tconst parentPageTransform = editor.getShapePageTransform(shape)\n\tconst parentPageCorners = parentPageTransform.applyToPoints(parentGeometry.vertices)\n\n\tconst parentPageMaskVertices = editor.getShapeMask(shape)\n\tconst parentPagePolygon = parentPageMaskVertices\n\t\t? intersectPolygonPolygon(parentPageMaskVertices, parentPageCorners)\n\t\t: parentPageCorners\n\n\tif (!parentPagePolygon) return EMPTY_ARRAY\n\n\treturn otherShapes.filter((childId) => {\n\t\tconst shapePageBounds = editor.getShapePageBounds(childId)\n\t\tif (!shapePageBounds || !parentPageBounds.includes(shapePageBounds)) return false\n\n\t\tconst parentPolygonInShapeShape = editor\n\t\t\t.getShapePageTransform(childId)\n\t\t\t.clone()\n\t\t\t.invert()\n\t\t\t.applyToPoints(parentPagePolygon)\n\n\t\tconst geometry = editor.getShapeGeometry(childId)\n\n\t\treturn doesGeometryOverlapPolygon(geometry, parentPolygonInShapeShape)\n\t})\n}\n\n/**\n * @public\n */\nexport function doesGeometryOverlapPolygon(\n\tgeometry: Geometry2d,\n\tparentCornersInShapeSpace: Vec[]\n): boolean {\n\t// If the child is a group, check if any of its children overlap the box\n\tif (geometry instanceof Group2d) {\n\t\treturn geometry.children.some((childGeometry) =>\n\t\t\tdoesGeometryOverlapPolygon(childGeometry, parentCornersInShapeSpace)\n\t\t)\n\t}\n\n\t// Otherwise, check if the geometry overlaps the box\n\tconst { vertices, center, isFilled, isEmptyLabel, isClosed } = geometry\n\n\t// We'll do things in order of cheapest to most expensive checks\n\n\t// Skip empty labels\n\tif (isEmptyLabel) return false\n\n\t// If any of the shape's vertices are inside the occluder, it's inside\n\tif (vertices.some((v) => pointInPolygon(v, parentCornersInShapeSpace))) {\n\t\treturn true\n\t}\n\n\t// If the shape is filled and closed and its center is inside the parent, it's inside\n\tif (isClosed) {\n\t\tif (isFilled) {\n\t\t\t// If closed and filled, check if the center is inside the parent\n\t\t\tif (pointInPolygon(center, parentCornersInShapeSpace)) {\n\t\t\t\treturn true\n\t\t\t}\n\n\t\t\t// ..then, slightly more expensive check, see the shape covers the entire parent but not its center\n\t\t\tif (parentCornersInShapeSpace.every((v) => pointInPolygon(v, vertices))) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\n\t\t// If any the shape's vertices intersect the edge of the occluder, it's inside.\n\t\t// for example when a rotated rectangle is moved over the corner of a parent rectangle\n\t\t// If the child shape is closed, intersect as a polygon\n\t\tif (polygonsIntersect(parentCornersInShapeSpace, vertices)) {\n\t\t\treturn true\n\t\t}\n\t} else {\n\t\t// if the child shape is not closed, intersect as a polyline\n\t\tif (polygonIntersectsPolyline(parentCornersInShapeSpace, vertices)) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\t// If none of the above checks passed, the shape is outside the parent\n\treturn false\n}\n\n/**\n * Get the shapes that will be reparented to new parents when the shapes are dropped.\n *\n * @param editor - The editor instance.\n * @param shapes - The shapes to check.\n * @param cb - A callback to filter out certain shapes.\n * @returns An object with the shapes that will be reparented to new parents and the shapes that will be reparented to the page or their ancestral group.\n *\n * @public\n */\nexport function getDroppedShapesToNewParents(\n\teditor: Editor,\n\tshapes: Set<TLShape> | TLShape[],\n\tcb?: (shape: TLShape, parent: TLShape) => boolean\n) {\n\tconst shapesToActuallyCheck = new Set<TLShape>(shapes)\n\tconst movingGroups = new Set<TLGroupShape>()\n\n\tfor (const shape of shapes) {\n\t\tconst parent = editor.getShapeParent(shape)\n\t\tif (parent && editor.isShapeOfType<TLGroupShape>(parent, 'group')) {\n\t\t\tif (!movingGroups.has(parent)) {\n\t\t\t\tmovingGroups.add(parent)\n\t\t\t}\n\t\t}\n\t}\n\n\t// If all of a group's children are moving, then move the group instead\n\tfor (const movingGroup of movingGroups) {\n\t\tconst children = compact(\n\t\t\teditor.getSortedChildIdsForParent(movingGroup).map((id) => editor.getShape(id))\n\t\t)\n\t\tfor (const child of children) {\n\t\t\tshapesToActuallyCheck.delete(child)\n\t\t}\n\t\tshapesToActuallyCheck.add(movingGroup)\n\t}\n\n\t// this could be cached and passed in\n\tconst shapeGroupIds = new Map<TLShapeId, TLShapeId | undefined>()\n\n\tconst reparenting = new Map<TLShapeId, TLShape[]>()\n\n\tconst remainingShapesToReparent = new Set(shapesToActuallyCheck)\n\n\tconst potentialParentShapes = editor\n\t\t.getCurrentPageShapesSorted()\n\t\t// filter out any shapes that aren't frames or that are included among the provided shapes\n\t\t.filter(\n\t\t\t(s) =>\n\t\t\t\teditor.getShapeUtil(s).canReceiveNewChildrenOfType?.(s, s.type) &&\n\t\t\t\t!remainingShapesToReparent.has(s)\n\t\t)\n\n\tparentCheck: for (let i = potentialParentShapes.length - 1; i >= 0; i--) {\n\t\tconst parentShape = potentialParentShapes[i]\n\t\tconst parentShapeContainingGroupId = editor.findShapeAncestor(parentShape, (s) =>\n\t\t\teditor.isShapeOfType<TLGroupShape>(s, 'group')\n\t\t)?.id\n\n\t\tconst parentGeometry = editor.getShapeGeometry(parentShape)\n\t\tconst parentPageTransform = editor.getShapePageTransform(parentShape)\n\t\tconst parentPageMaskVertices = editor.getShapeMask(parentShape)\n\t\tconst parentPageCorners = parentPageTransform.applyToPoints(parentGeometry.vertices)\n\t\tconst parentPagePolygon = parentPageMaskVertices\n\t\t\t? intersectPolygonPolygon(parentPageMaskVertices, parentPageCorners)\n\t\t\t: parentPageCorners\n\n\t\tif (!parentPagePolygon) continue parentCheck\n\n\t\tconst childrenToReparent = []\n\n\t\t// For each of the dropping shapes...\n\t\tshapeCheck: for (const shape of remainingShapesToReparent) {\n\t\t\t// Don't reparent a frame to itself\n\t\t\tif (parentShape.id === shape.id) continue shapeCheck\n\n\t\t\t// Use the callback to filter out certain shapes\n\t\t\tif (cb && !cb(shape, parentShape)) continue shapeCheck\n\n\t\t\tif (!shapeGroupIds.has(shape.id)) {\n\t\t\t\tshapeGroupIds.set(\n\t\t\t\t\tshape.id,\n\t\t\t\t\teditor.findShapeAncestor(shape, (s) => editor.isShapeOfType<TLGroupShape>(s, 'group'))?.id\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tconst shapeGroupId = shapeGroupIds.get(shape.id)\n\n\t\t\t// Are the shape and the parent part of different groups?\n\t\t\tif (shapeGroupId !== parentShapeContainingGroupId) continue shapeCheck\n\n\t\t\t// Is the shape is actually the ancestor of the parent?\n\t\t\tif (editor.findShapeAncestor(parentShape, (s) => shape.id === s.id)) continue shapeCheck\n\n\t\t\t// Convert the parent polygon to the shape's space\n\t\t\tconst parentPolygonInShapeSpace = editor\n\t\t\t\t.getShapePageTransform(shape)\n\t\t\t\t.clone()\n\t\t\t\t.invert()\n\t\t\t\t.applyToPoints(parentPagePolygon)\n\n\t\t\t// If the shape overlaps the parent polygon, reparent it to that parent\n\t\t\tif (doesGeometryOverlapPolygon(editor.getShapeGeometry(shape), parentPolygonInShapeSpace)) {\n\t\t\t\t// Use the util to check if the shape can be reparented to the parent\n\t\t\t\tif (\n\t\t\t\t\t!editor.getShapeUtil(parentShape).canReceiveNewChildrenOfType?.(parentShape, shape.type)\n\t\t\t\t)\n\t\t\t\t\tcontinue shapeCheck\n\n\t\t\t\tif (shape.parentId !== parentShape.id) {\n\t\t\t\t\tchildrenToReparent.push(shape)\n\t\t\t\t}\n\t\t\t\tremainingShapesToReparent.delete(shape)\n\t\t\t\tcontinue shapeCheck\n\t\t\t}\n\t\t}\n\n\t\tif (childrenToReparent.length) {\n\t\t\treparenting.set(parentShape.id, childrenToReparent)\n\t\t}\n\t}\n\n\treturn {\n\t\t// these are the shapes that will be reparented to new parents\n\t\treparenting,\n\t\t// these are the shapes that will be reparented to the page or their ancestral group\n\t\tremainingShapesToReparent,\n\t}\n}\n"],"names":["shapeIds"],"mappings":";;;;;;AAAA,SAAS,mBAAmB;AAE5B,SAAmB,SAAS,eAAe,uBAAuB;;;AAIlE,SAAS,eAAe;AACxB;AAKA,SAAS,sBAAsB;;;;;;AAYxB,SAAS,sBACf,MAAA,EACA,QAAA,EACA,IAAA,EACC;IACD,MAAM,iBAAiB,aAAA,GAAA,IAAI,IAAa;IAExC,KAAA,MAAW,MAAM,SAAU;QAC1B,MAAM,QAAQ,OAAO,QAAA,CAAS,EAAE;QAEhC,IAAI,CAAC,MAAO,CAAA;QACZ,eAAe,GAAA,CAAI,KAAK;QAExB,MAAM,SAAS,OAAO,QAAA,CAAS,MAAM,QAAQ;QAC7C,IAAI,CAAC,OAAQ,CAAA;QACb,eAAe,GAAA,CAAI,MAAM;IAC1B;IAGA,MAAM,wBAAwB,aAAA,GAAA,IAAI,IAA0B;IAE5D,KAAA,MAAW,UAAU,eAAgB;QACpC,MAAM,WAAW,OAAO,0BAAA,CAA2B,MAAM;QACzD,IAAI,MAAM,UAAU,CAAC,KAAK,MAAA,CAAO,MAAM,GAAG;YAEzC,sBAAsB,GAAA,CAAI,QAAQ,QAAQ;QAC3C,OAAO;YACN,MAAM,sBAAsB,qBAAqB,QAAQ,OAAO,EAAA,EAAI,QAAQ;YAC5E,IAAI,oBAAoB,MAAA,GAAS,SAAS,MAAA,EAAQ;gBACjD,sBAAsB,GAAA,CACrB,QACA,SAAS,MAAA,CAAO,CAAC,KAAO,CAAC,oBAAoB,QAAA,CAAS,EAAE,CAAC;YAE3D;QACD;IACD;IAGA,MAAM,iBAAiB,OAAO,0BAAA,CAA2B,EAAE,GAAA,CAAI,CAAC,IAAM,EAAE,EAAE;IAE1E,MAAM,uBAGF,CAAC;IAEL,KAAA,MAAW,CAAC,YAAY,eAAe,CAAA,IAAK,sBAAuB;QAClE,MAAM,wLAAe,UAAA,EAAQ,gBAAgB,GAAA,CAAI,CAAC,KAAO,OAAO,QAAA,CAAS,EAAE,CAAC,CAAC;QAO7E,MAAM,EAAE,WAAA,EAAa,yBAAA,CAA0B,CAAA,GAAI,6BAClD,QACA,cACA,CAAC,OAAO,mBAAmB;YAE1B,IAAI,MAAM,UAAU,CAAC,KAAK,MAAA,CAAO,cAAc,EAAG,CAAA,OAAO;YACzD,OACC,eAAe,EAAA,KAAO,WAAW,EAAA,IACjC,eAAe,OAAA,CAAQ,eAAe,EAAE,IAAI,eAAe,OAAA,CAAQ,MAAM,EAAE;QAE7E;QAGD,YAAY,OAAA,CAAQ,CAAC,oBAAoB,gBAAgB;YACxD,IAAI,mBAAmB,MAAA,KAAW,EAAG,CAAA;YACrC,IAAI,CAAC,oBAAA,CAAqB,WAAW,CAAA,EAAG;gBACvC,oBAAA,CAAqB,WAAW,CAAA,GAAI;oBACnC,UAAU;oBACV,UAAU,CAAC,CAAA;gBACZ;YACD;YACA,oBAAA,CAAqB,WAAW,CAAA,CAAE,QAAA,CAAS,IAAA,CAAK,GAAG,mBAAmB,GAAA,CAAI,CAAC,IAAM,EAAE,EAAE,CAAC;QACvF,CAAC;QAGD,IAAI,0BAA0B,IAAA,GAAO,GAAG;YAEvC,MAAM,cACL,OAAO,iBAAA,CAAkB,YAAY,CAAC,IAAM,OAAO,aAAA,CAA4B,GAAG,OAAO,CAAC,GACvF,MAAM,OAAO,gBAAA,CAAiB;YAElC,0BAA0B,OAAA,CAAQ,CAAC,UAAU;gBAC5C,IAAI,CAAC,oBAAA,CAAqB,WAAW,CAAA,EAAG;oBACvC,IAAI;oBAEJ,MAAM,sBAAsB,OAAO,0BAAA,CAA2B,WAAW;oBACzE,MAAM,iBAAiB,oBAAoB,OAAA,CAAQ,WAAW,EAAE;oBAChE,IAAI,iBAAiB,CAAA,GAAI;wBAExB,MAAM,qBAAqB,mBAAA,CAAoB,iBAAiB,CAAC,CAAA;wBACjE,MAAM,gBAAgB,qBACnB,OAAO,QAAA,CAAS,kBAAkB,EAAG,KAAA,iLACrC,gBAAA,EAAc,WAAW,KAAK;wBACjC,+LAAiB,kBAAA,EAAgB,WAAW,KAAA,EAAO,aAAa;oBACjE,OAAO,CAGP;oBAEA,oBAAA,CAAqB,WAAW,CAAA,GAAI;wBACnC,UAAU;wBACV,UAAU,CAAC,CAAA;wBACX,OAAO;oBACR;gBACD;gBAEA,oBAAA,CAAqB,WAAW,CAAA,CAAE,QAAA,CAAS,IAAA,CAAK,MAAM,EAAE;YACzD,CAAC;QACF;IACD;IAEA,OAAO,GAAA,CAAI,MAAM;QAChB,OAAO,MAAA,CAAO,oBAAoB,EAAE,OAAA,CAAQ,CAAC,EAAE,QAAA,EAAU,UAAAA,SAAAA,EAAU,KAAA,CAAM,CAAA,KAAM;YAC9E,IAAIA,UAAS,MAAA,KAAW,EAAG,CAAA;YAE3BA,UAAS,IAAA,CAAK,CAAC,GAAG,IAAO,eAAe,OAAA,CAAQ,CAAC,IAAI,eAAe,OAAA,CAAQ,CAAC,IAAI,CAAA,IAAK,CAAE;YACxF,OAAO,cAAA,CAAeA,WAAU,UAAU,KAAK;QAChD,CAAC;IACF,CAAC;AACF;AAUA,SAAS,qBACR,MAAA,EACA,KAAA,EACA,WAAA,EACC;IACD,IAAI,YAAY,MAAA,KAAW,GAAG;QAC7B,8KAAO,cAAA;IACR;IAEA,MAAM,mBAAmB,OAAO,kBAAA,CAAmB,KAAK;IACxD,IAAI,CAAC,iBAAkB,CAAA,8KAAO,cAAA;IAE9B,MAAM,iBAAiB,OAAO,gBAAA,CAAiB,KAAK;IACpD,MAAM,sBAAsB,OAAO,qBAAA,CAAsB,KAAK;IAC9D,MAAM,oBAAoB,oBAAoB,aAAA,CAAc,eAAe,QAAQ;IAEnF,MAAM,yBAAyB,OAAO,YAAA,CAAa,KAAK;IACxD,MAAM,oBAAoB,qNACvB,0BAAA,EAAwB,wBAAwB,iBAAiB,IACjE;IAEH,IAAI,CAAC,kBAAmB,CAAA,8KAAO,cAAA;IAE/B,OAAO,YAAY,MAAA,CAAO,CAAC,YAAY;QACtC,MAAM,kBAAkB,OAAO,kBAAA,CAAmB,OAAO;QACzD,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,QAAA,CAAS,eAAe,EAAG,CAAA,OAAO;QAE5E,MAAM,4BAA4B,OAChC,qBAAA,CAAsB,OAAO,EAC7B,KAAA,CAAM,EACN,MAAA,CAAO,EACP,aAAA,CAAc,iBAAiB;QAEjC,MAAM,WAAW,OAAO,gBAAA,CAAiB,OAAO;QAEhD,OAAO,2BAA2B,UAAU,yBAAyB;IACtE,CAAC;AACF;AAKO,SAAS,2BACf,QAAA,EACA,yBAAA,EACU;IAEV,IAAI,sNAAoB,UAAA,EAAS;QAChC,OAAO,SAAS,QAAA,CAAS,IAAA,CAAK,CAAC,gBAC9B,2BAA2B,eAAe,yBAAyB;IAErE;IAGA,MAAM,EAAE,QAAA,EAAU,MAAA,EAAQ,QAAA,EAAU,YAAA,EAAc,QAAA,CAAS,CAAA,GAAI;IAK/D,IAAI,aAAc,CAAA,OAAO;IAGzB,IAAI,SAAS,IAAA,CAAK,CAAC,IAAM,yMAAA,EAAe,GAAG,yBAAyB,CAAC,GAAG;QACvE,OAAO;IACR;IAGA,IAAI,UAAU;QACb,IAAI,UAAU;YAEb,4LAAI,iBAAA,EAAe,QAAQ,yBAAyB,GAAG;gBACtD,OAAO;YACR;YAGA,IAAI,0BAA0B,KAAA,CAAM,CAAC,4LAAM,iBAAA,EAAe,GAAG,QAAQ,CAAC,GAAG;gBACxE,OAAO;YACR;QACD;QAKA,gMAAI,oBAAA,EAAkB,2BAA2B,QAAQ,GAAG;YAC3D,OAAO;QACR;IACD,OAAO;QAEN,gMAAI,4BAAA,EAA0B,2BAA2B,QAAQ,GAAG;YACnE,OAAO;QACR;IACD;IAGA,OAAO;AACR;AAYO,SAAS,6BACf,MAAA,EACA,MAAA,EACA,EAAA,EACC;IACD,MAAM,wBAAwB,IAAI,IAAa,MAAM;IACrD,MAAM,eAAe,aAAA,GAAA,IAAI,IAAkB;IAE3C,KAAA,MAAW,SAAS,OAAQ;QAC3B,MAAM,SAAS,OAAO,cAAA,CAAe,KAAK;QAC1C,IAAI,UAAU,OAAO,aAAA,CAA4B,QAAQ,OAAO,GAAG;YAClE,IAAI,CAAC,aAAa,GAAA,CAAI,MAAM,GAAG;gBAC9B,aAAa,GAAA,CAAI,MAAM;YACxB;QACD;IACD;IAGA,KAAA,MAAW,eAAe,aAAc;QACvC,MAAM,WAAW,mLAAA,EAChB,OAAO,0BAAA,CAA2B,WAAW,EAAE,GAAA,CAAI,CAAC,KAAO,OAAO,QAAA,CAAS,EAAE,CAAC;QAE/E,KAAA,MAAW,SAAS,SAAU;YAC7B,sBAAsB,MAAA,CAAO,KAAK;QACnC;QACA,sBAAsB,GAAA,CAAI,WAAW;IACtC;IAGA,MAAM,gBAAgB,aAAA,GAAA,IAAI,IAAsC;IAEhE,MAAM,cAAc,aAAA,GAAA,IAAI,IAA0B;IAElD,MAAM,4BAA4B,IAAI,IAAI,qBAAqB;IAE/D,MAAM,wBAAwB,OAC5B,0BAAA,CAA2B,EAE3B,MAAA,CACA,CAAC,IACA,OAAO,YAAA,CAAa,CAAC,EAAE,2BAAA,GAA8B,GAAG,EAAE,IAAI,KAC9D,CAAC,0BAA0B,GAAA,CAAI,CAAC;IAGnC,YAAa,CAAA,IAAA,IAAS,IAAI,sBAAsB,MAAA,GAAS,GAAG,KAAK,GAAG,IAAK;QACxE,MAAM,cAAc,qBAAA,CAAsB,CAAC,CAAA;QAC3C,MAAM,+BAA+B,OAAO,iBAAA,CAAkB,aAAa,CAAC,IAC3E,OAAO,aAAA,CAA4B,GAAG,OAAO,IAC3C;QAEH,MAAM,iBAAiB,OAAO,gBAAA,CAAiB,WAAW;QAC1D,MAAM,sBAAsB,OAAO,qBAAA,CAAsB,WAAW;QACpE,MAAM,yBAAyB,OAAO,YAAA,CAAa,WAAW;QAC9D,MAAM,oBAAoB,oBAAoB,aAAA,CAAc,eAAe,QAAQ;QACnF,MAAM,oBAAoB,qNACvB,0BAAA,EAAwB,wBAAwB,iBAAiB,IACjE;QAEH,IAAI,CAAC,kBAAmB,CAAA,SAAS;QAEjC,MAAM,qBAAqB,CAAC,CAAA;QAG5B,WAAY,CAAA,KAAA,MAAW,SAAS,0BAA2B;YAE1D,IAAI,YAAY,EAAA,KAAO,MAAM,EAAA,CAAI,CAAA,SAAS;YAG1C,IAAI,MAAM,CAAC,GAAG,OAAO,WAAW,EAAG,CAAA,SAAS;YAE5C,IAAI,CAAC,cAAc,GAAA,CAAI,MAAM,EAAE,GAAG;gBACjC,cAAc,GAAA,CACb,MAAM,EAAA,EACN,OAAO,iBAAA,CAAkB,OAAO,CAAC,IAAM,OAAO,aAAA,CAA4B,GAAG,OAAO,CAAC,GAAG;YAE1F;YAEA,MAAM,eAAe,cAAc,GAAA,CAAI,MAAM,EAAE;YAG/C,IAAI,iBAAiB,6BAA8B,CAAA,SAAS;YAG5D,IAAI,OAAO,iBAAA,CAAkB,aAAa,CAAC,IAAM,MAAM,EAAA,KAAO,EAAE,EAAE,EAAG,CAAA,SAAS;YAG9E,MAAM,4BAA4B,OAChC,qBAAA,CAAsB,KAAK,EAC3B,KAAA,CAAM,EACN,MAAA,CAAO,EACP,aAAA,CAAc,iBAAiB;YAGjC,IAAI,2BAA2B,OAAO,gBAAA,CAAiB,KAAK,GAAG,yBAAyB,GAAG;gBAE1F,IACC,CAAC,OAAO,YAAA,CAAa,WAAW,EAAE,2BAAA,GAA8B,aAAa,MAAM,IAAI,GAEvF,SAAS;gBAEV,IAAI,MAAM,QAAA,KAAa,YAAY,EAAA,EAAI;oBACtC,mBAAmB,IAAA,CAAK,KAAK;gBAC9B;gBACA,0BAA0B,MAAA,CAAO,KAAK;gBACtC,SAAS;YACV;QACD;QAEA,IAAI,mBAAmB,MAAA,EAAQ;YAC9B,YAAY,GAAA,CAAI,YAAY,EAAA,EAAI,kBAAkB;QACnD;IACD;IAEA,OAAO;QAAA,8DAAA;QAEN;QAAA,oFAAA;QAEA;IACD;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2250, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/richText.ts"],"sourcesContent":["import { getSchema, JSONContent, Editor as TTEditor } from '@tiptap/core'\nimport { Node, Schema } from '@tiptap/pm/model'\nimport { EditorProviderProps } from '@tiptap/react'\nimport { TLRichText } from '@tldraw/tlschema'\nimport { assert, WeakCache } from '@tldraw/utils'\nimport { Editor } from '../editor/Editor'\nimport { TLFontFace } from '../editor/managers/FontManager/FontManager'\n\n/**\n * This is the TipTap editor! Docs are {@link https://tiptap.dev/docs}.\n *\n * @public\n */\nexport type TiptapEditor = TTEditor\n\n/**\n * A TipTap node. See {@link https://tiptap.dev/docs}.\n * @public\n */\nexport type TiptapNode = Node\n\n/** @public */\nexport interface TLTextOptions {\n\ttipTapConfig?: EditorProviderProps\n\taddFontsFromNode?: RichTextFontVisitor\n}\n\n/** @public */\nexport interface RichTextFontVisitorState {\n\treadonly family: string\n\treadonly weight: string\n\treadonly style: string\n}\n\n/** @public */\nexport type RichTextFontVisitor = (\n\tnode: TiptapNode,\n\tstate: RichTextFontVisitorState,\n\taddFont: (font: TLFontFace) => void\n) => RichTextFontVisitorState\n\nconst schemaCache = new WeakCache<EditorProviderProps, Schema>()\nexport function getTipTapSchema(tipTapConfig: EditorProviderProps) {\n\treturn schemaCache.get(tipTapConfig, () => getSchema(tipTapConfig.extensions ?? []))\n}\n\n/** @public */\nexport function getFontsFromRichText(\n\teditor: Editor,\n\trichText: TLRichText,\n\tinitialState: RichTextFontVisitorState\n) {\n\tconst { tipTapConfig, addFontsFromNode } = editor.getTextOptions()\n\tassert(tipTapConfig, 'textOptions.tipTapConfig must be set to use rich text')\n\tassert(addFontsFromNode, 'textOptions.addFontsFromNode must be set to use rich text')\n\n\tconst schema = getTipTapSchema(tipTapConfig)\n\n\tconst rootNode = Node.fromJSON(schema, richText as JSONContent)\n\n\tconst fonts = new Set<TLFontFace>()\n\n\tfunction addFont(font: TLFontFace) {\n\t\tfonts.add(font)\n\t}\n\n\tfunction visit(node: TiptapNode, state: RichTextFontVisitorState) {\n\t\tstate = addFontsFromNode!(node, state, addFont)\n\n\t\tfor (const child of node.children) {\n\t\t\tvisit(child, state)\n\t\t}\n\t}\n\n\tvisit(rootNode, initialState)\n\n\treturn Array.from(fonts)\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,iBAAkD;AAC3D,SAAS,YAAoB;;;;AAG7B,SAAS,QAAQ,iBAAiB;;;;AAqClC,MAAM,cAAc,yKAAI,YAAA,CAAuC;AACxD,SAAS,gBAAgB,YAAA,EAAmC;IAClE,OAAO,YAAY,GAAA,CAAI,cAAc,KAAM,oKAAA,EAAU,aAAa,UAAA,IAAc,CAAC,CAAC,CAAC;AACpF;AAGO,SAAS,qBACf,MAAA,EACA,QAAA,EACA,YAAA,EACC;IACD,MAAM,EAAE,YAAA,EAAc,gBAAA,CAAiB,CAAA,GAAI,OAAO,cAAA,CAAe;IACjE,CAAA,GAAA,sKAAA,CAAA,SAAA,EAAO,cAAc,uDAAuD;IAC5E,CAAA,GAAA,sKAAA,CAAA,SAAA,EAAO,kBAAkB,2DAA2D;IAEpF,MAAM,SAAS,gBAAgB,YAAY;IAE3C,MAAM,oKAAW,OAAA,CAAK,QAAA,CAAS,QAAQ,QAAuB;IAE9D,MAAM,QAAQ,aAAA,GAAA,IAAI,IAAgB;IAElC,SAAS,QAAQ,IAAA,EAAkB;QAClC,MAAM,GAAA,CAAI,IAAI;IACf;IAEA,SAAS,MAAM,IAAA,EAAkB,KAAA,EAAiC;QACjE,QAAQ,iBAAkB,MAAM,OAAO,OAAO;QAE9C,KAAA,MAAW,SAAS,KAAK,QAAA,CAAU;YAClC,MAAM,OAAO,KAAK;QACnB;IACD;IAEA,MAAM,UAAU,YAAY;IAE5B,OAAO,MAAM,IAAA,CAAK,KAAK;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2294, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/sync/hardReset.ts"],"sourcesContent":["import { clearLocalStorage, clearSessionStorage } from '@tldraw/utils'\nimport { deleteDB } from 'idb'\nimport { LocalIndexedDb, getAllIndexDbNames } from './LocalIndexedDb'\n\n/**\n * Clear the database of all data associated with tldraw.\n *\n * @public */\nexport async function hardReset({ shouldReload = true } = {}) {\n\tclearSessionStorage()\n\n\tfor (const instance of LocalIndexedDb.connectedInstances) {\n\t\tawait instance.close()\n\t}\n\tawait Promise.all(getAllIndexDbNames().map((db) => deleteDB(db)))\n\n\tclearLocalStorage()\n\tif (shouldReload) {\n\t\twindow.location.reload()\n\t}\n}\n\nif (typeof window !== 'undefined') {\n\tif (process.env.NODE_ENV === 'development') {\n\t\t;(window as any).hardReset = hardReset\n\t}\n\t// window.__tldraw__hardReset is used to inject the logic into the tldraw library\n\t;(window as any).__tldraw__hardReset = hardReset\n}\n"],"names":[],"mappings":";;;AAuBK,QAAQ,IAAI,aAAa;AAvB9B,SAAS,mBAAmB,2BAA2B;;;AACvD,SAAS,gBAAgB;AACzB,SAAS,gBAAgB,0BAA0B;;;;AAMnD,eAAsB,UAAU,EAAE,eAAe,IAAA,CAAK,CAAA,GAAI,CAAC,CAAA,EAAG;IAC7D,CAAA,GAAA,sKAAA,CAAA,sBAAA,CAAoB;IAEpB,KAAA,MAAW,4MAAY,iBAAA,CAAe,kBAAA,CAAoB;QACzD,MAAM,SAAS,KAAA,CAAM;IACtB;IACA,MAAM,QAAQ,GAAA,qMAAI,qBAAA,CAAmB,GAAE,GAAA,CAAI,CAAC,kKAAO,WAAA,EAAS,EAAE,CAAC,CAAC;IAEhE,CAAA,GAAA,sKAAA,CAAA,oBAAA,CAAkB;IAClB,IAAI,cAAc;QACjB,OAAO,QAAA,CAAS,MAAA,CAAO;IACxB;AACD;AAEA,IAAI,OAAO,WAAW,aAAa;IAClC,wCAA4C;;QACzC,OAAe,SAAA,GAAY;IAC9B;;IAEE,OAAe,mBAAA,GAAsB;AACxC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2333, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/utils/window-open.ts"],"sourcesContent":["import { runtime } from './runtime'\n\n/** @public */\nexport function openWindow(url: string, target = '_blank') {\n\truntime.openWindow(url, target)\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,eAAe;;AAGjB,SAAS,WAAW,GAAA,EAAa,SAAS,QAAA,EAAU;IAC1D,gLAAA,CAAA,UAAA,CAAQ,UAAA,CAAW,KAAK,MAAM;AAC/B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2349, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/config/TLUserPreferences.ts"],"sourcesContent":["import { atom } from '@tldraw/state'\nimport { getDefaultTranslationLocale } from '@tldraw/tlschema'\nimport { getFromLocalStorage, setInLocalStorage, structuredClone, uniqueId } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\n\nconst USER_DATA_KEY = 'TLDRAW_USER_DATA_v3'\n\n/**\n * A user of tldraw\n *\n * @public\n */\nexport interface TLUserPreferences {\n\tid: string\n\tname?: string | null\n\tcolor?: string | null\n\t// N.B. These are duplicated in TLdrawAppUser.\n\tlocale?: string | null\n\tanimationSpeed?: number | null\n\tareKeyboardShortcutsEnabled?: boolean | null\n\tedgeScrollSpeed?: number | null\n\tcolorScheme?: 'light' | 'dark' | 'system'\n\tisSnapMode?: boolean | null\n\tisWrapMode?: boolean | null\n\tisDynamicSizeMode?: boolean | null\n\tisPasteAtCursorMode?: boolean | null\n}\n\ninterface UserDataSnapshot {\n\tversion: number\n\tuser: TLUserPreferences\n}\n\ninterface UserChangeBroadcastMessage {\n\ttype: typeof broadcastEventKey\n\torigin: string\n\tdata: UserDataSnapshot\n}\n\n/** @public */\nexport const userTypeValidator: T.Validator<TLUserPreferences> = T.object<TLUserPreferences>({\n\tid: T.string,\n\tname: T.string.nullable().optional(),\n\tcolor: T.string.nullable().optional(),\n\t// N.B. These are duplicated in TLdrawAppUser.\n\tlocale: T.string.nullable().optional(),\n\tanimationSpeed: T.number.nullable().optional(),\n\tareKeyboardShortcutsEnabled: T.boolean.nullable().optional(),\n\tedgeScrollSpeed: T.number.nullable().optional(),\n\tcolorScheme: T.literalEnum('light', 'dark', 'system').optional(),\n\tisSnapMode: T.boolean.nullable().optional(),\n\tisWrapMode: T.boolean.nullable().optional(),\n\tisDynamicSizeMode: T.boolean.nullable().optional(),\n\tisPasteAtCursorMode: T.boolean.nullable().optional(),\n})\n\nconst Versions = {\n\tAddAnimationSpeed: 1,\n\tAddIsSnapMode: 2,\n\tMakeFieldsNullable: 3,\n\tAddEdgeScrollSpeed: 4,\n\tAddExcalidrawSelectMode: 5,\n\tAddDynamicSizeMode: 6,\n\tAllowSystemColorScheme: 7,\n\tAddPasteAtCursor: 8,\n\tAddKeyboardShortcuts: 9,\n} as const\n\nconst CURRENT_VERSION = Math.max(...Object.values(Versions))\n\nfunction migrateSnapshot(data: { version: number; user: any }) {\n\tif (data.version < Versions.AddAnimationSpeed) {\n\t\tdata.user.animationSpeed = 1\n\t}\n\tif (data.version < Versions.AddIsSnapMode) {\n\t\tdata.user.isSnapMode = false\n\t}\n\tif (data.version < Versions.MakeFieldsNullable) {\n\t\t// noop\n\t}\n\tif (data.version < Versions.AddEdgeScrollSpeed) {\n\t\tdata.user.edgeScrollSpeed = 1\n\t}\n\tif (data.version < Versions.AddExcalidrawSelectMode) {\n\t\tdata.user.isWrapMode = false\n\t}\n\tif (data.version < Versions.AllowSystemColorScheme) {\n\t\tif (data.user.isDarkMode === true) {\n\t\t\tdata.user.colorScheme = 'dark'\n\t\t} else if (data.user.isDarkMode === false) {\n\t\t\tdata.user.colorScheme = 'light'\n\t\t}\n\t\tdelete data.user.isDarkMode\n\t}\n\n\tif (data.version < Versions.AddDynamicSizeMode) {\n\t\tdata.user.isDynamicSizeMode = false\n\t}\n\tif (data.version < Versions.AddPasteAtCursor) {\n\t\tdata.user.isPasteAtCursorMode = false\n\t}\n\tif (data.version < Versions.AddKeyboardShortcuts) {\n\t\tdata.user.areKeyboardShortcutsEnabled = true\n\t}\n\n\t// finally\n\tdata.version = CURRENT_VERSION\n}\n\n/** @internal */\nexport const USER_COLORS = [\n\t'#FF802B',\n\t'#EC5E41',\n\t'#F2555A',\n\t'#F04F88',\n\t'#E34BA9',\n\t'#BD54C6',\n\t'#9D5BD2',\n\t'#7B66DC',\n\t'#02B1CC',\n\t'#11B3A3',\n\t'#39B178',\n\t'#55B467',\n] as const\n\nfunction getRandomColor() {\n\treturn USER_COLORS[Math.floor(Math.random() * USER_COLORS.length)]\n}\n\n/** @internal */\nexport function userPrefersReducedMotion() {\n\tif (typeof window !== 'undefined' && 'matchMedia' in window) {\n\t\treturn window.matchMedia?.('(prefers-reduced-motion: reduce)')?.matches ?? false\n\t}\n\n\treturn false\n}\n\n/** @public */\nexport const defaultUserPreferences = Object.freeze({\n\tname: '',\n\tlocale: getDefaultTranslationLocale(),\n\tcolor: getRandomColor(),\n\n\t// N.B. These are duplicated in TLdrawAppUser.\n\tedgeScrollSpeed: 1,\n\tanimationSpeed: userPrefersReducedMotion() ? 0 : 1,\n\tareKeyboardShortcutsEnabled: true,\n\tisSnapMode: false,\n\tisWrapMode: false,\n\tisDynamicSizeMode: false,\n\tisPasteAtCursorMode: false,\n\tcolorScheme: 'light',\n}) satisfies Readonly<Omit<TLUserPreferences, 'id'>>\n\n/** @public */\nexport function getFreshUserPreferences(): TLUserPreferences {\n\treturn {\n\t\tid: uniqueId(),\n\t\tcolor: getRandomColor(),\n\t}\n}\n\nfunction migrateUserPreferences(userData: unknown): TLUserPreferences {\n\tif (userData === null || typeof userData !== 'object') {\n\t\treturn getFreshUserPreferences()\n\t}\n\n\tif (!('version' in userData) || !('user' in userData) || typeof userData.version !== 'number') {\n\t\treturn getFreshUserPreferences()\n\t}\n\n\tconst snapshot = structuredClone(userData) as any\n\n\tmigrateSnapshot(snapshot)\n\n\ttry {\n\t\treturn userTypeValidator.validate(snapshot.user)\n\t} catch {\n\t\treturn getFreshUserPreferences()\n\t}\n}\n\nfunction loadUserPreferences(): TLUserPreferences {\n\tconst userData = (JSON.parse(getFromLocalStorage(USER_DATA_KEY) || 'null') ??\n\t\tnull) as null | UserDataSnapshot\n\n\treturn migrateUserPreferences(userData)\n}\n\nconst globalUserPreferences = atom<TLUserPreferences | null>('globalUserData', null)\n\nfunction storeUserPreferences() {\n\tsetInLocalStorage(\n\t\tUSER_DATA_KEY,\n\t\tJSON.stringify({\n\t\t\tversion: CURRENT_VERSION,\n\t\t\tuser: globalUserPreferences.get(),\n\t\t})\n\t)\n}\n\n/** @public */\nexport function setUserPreferences(user: TLUserPreferences) {\n\tuserTypeValidator.validate(user)\n\tglobalUserPreferences.set(user)\n\tstoreUserPreferences()\n\tbroadcastUserPreferencesChange()\n}\n\nconst isTest = typeof process !== 'undefined' && process.env.NODE_ENV === 'test'\n\nconst channel =\n\ttypeof BroadcastChannel !== 'undefined' && !isTest\n\t\t? new BroadcastChannel('tldraw-user-sync')\n\t\t: null\n\nchannel?.addEventListener('message', (e) => {\n\tconst data = e.data as undefined | UserChangeBroadcastMessage\n\tif (data?.type === broadcastEventKey && data?.origin !== getBroadcastOrigin()) {\n\t\tglobalUserPreferences.set(migrateUserPreferences(data.data))\n\t}\n})\n\nlet _broadcastOrigin = null as null | string\nfunction getBroadcastOrigin() {\n\tif (_broadcastOrigin === null) {\n\t\t_broadcastOrigin = uniqueId()\n\t}\n\treturn _broadcastOrigin\n}\nconst broadcastEventKey = 'tldraw-user-preferences-change' as const\n\nfunction broadcastUserPreferencesChange() {\n\tchannel?.postMessage({\n\t\ttype: broadcastEventKey,\n\t\torigin: getBroadcastOrigin(),\n\t\tdata: {\n\t\t\tuser: getUserPreferences(),\n\t\t\tversion: CURRENT_VERSION,\n\t\t},\n\t} satisfies UserChangeBroadcastMessage)\n}\n\n/** @public */\nexport function getUserPreferences(): TLUserPreferences {\n\tlet prefs = globalUserPreferences.get()\n\tif (!prefs) {\n\t\tprefs = loadUserPreferences()\n\t\tsetUserPreferences(prefs)\n\t}\n\treturn prefs\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2551, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/config/createTLUser.ts"],"sourcesContent":["import { Signal, computed, isSignal } from '@tldraw/state'\nimport { useAtom } from '@tldraw/state-react'\nimport { useEffect, useMemo } from 'react'\nimport { useShallowObjectIdentity } from '../hooks/useIdentity'\nimport { TLUserPreferences, getUserPreferences, setUserPreferences } from './TLUserPreferences'\n\n/** @public */\nexport interface TLUser {\n\treadonly userPreferences: Signal<TLUserPreferences>\n\t// eslint-disable-next-line @typescript-eslint/method-signature-style\n\treadonly setUserPreferences: (userPreferences: TLUserPreferences) => void\n}\n\nconst defaultLocalStorageUserPrefs = computed('defaultLocalStorageUserPrefs', () =>\n\tgetUserPreferences()\n)\n\n/** @public */\nexport function createTLUser(\n\topts = {} as {\n\t\tuserPreferences?: Signal<TLUserPreferences>\n\t\t// eslint-disable-next-line @typescript-eslint/method-signature-style\n\t\tsetUserPreferences?: (userPreferences: TLUserPreferences) => void\n\t}\n): TLUser {\n\treturn {\n\t\tuserPreferences: opts.userPreferences ?? defaultLocalStorageUserPrefs,\n\t\tsetUserPreferences: opts.setUserPreferences ?? setUserPreferences,\n\t}\n}\n\n/**\n * @public\n */\nexport function useTldrawUser(opts: {\n\tuserPreferences?: Signal<TLUserPreferences> | TLUserPreferences\n\t// eslint-disable-next-line @typescript-eslint/method-signature-style\n\tsetUserPreferences?: (userPreferences: TLUserPreferences) => void\n}): TLUser {\n\tconst prefs = useShallowObjectIdentity(opts.userPreferences ?? defaultLocalStorageUserPrefs)\n\tconst userAtom = useAtom<TLUserPreferences | Signal<TLUserPreferences>>('userAtom', prefs)\n\tuseEffect(() => {\n\t\tuserAtom.set(prefs)\n\t}, [prefs, userAtom])\n\n\treturn useMemo(\n\t\t() =>\n\t\t\tcreateTLUser({\n\t\t\t\tuserPreferences: computed('userPreferences', () => {\n\t\t\t\t\tconst userStuff = userAtom.get()\n\t\t\t\t\treturn isSignal(userStuff) ? userStuff.get() : userStuff\n\t\t\t\t}),\n\t\t\t\tsetUserPreferences: opts.setUserPreferences,\n\t\t\t}),\n\t\t[userAtom, opts.setUserPreferences]\n\t)\n}\n"],"names":[],"mappings":";;;;AAAA,SAAiB,UAAU,gBAAgB;;;;AAC3C,SAAS,eAAe;AACxB,SAAS,WAAW,eAAe;AACnC,SAAS,gCAAgC;AACzC,SAA4B,oBAAoB,0BAA0B;;;;;;AAS1E,MAAM,2MAA+B,WAAA,EAAS,gCAAgC,QAC7E,iNAAA,CAAmB;AAIb,SAAS,aACf,OAAO,CAAC,CAAA,EAKC;IACT,OAAO;QACN,iBAAiB,KAAK,eAAA,IAAmB;QACzC,oBAAoB,KAAK,kBAAA,IAAsB,iNAAA;IAChD;AACD;AAKO,SAAS,cAAc,IAAA,EAInB;IACV,MAAM,SAAQ,mNAAA,EAAyB,KAAK,eAAA,IAAmB,4BAA4B;IAC3F,MAAM,+LAAW,UAAA,EAAuD,YAAY,KAAK;IACzF,CAAA,GAAA,6JAAA,CAAA,YAAA;mCAAU,MAAM;YACf,SAAS,GAAA,CAAI,KAAK;QACnB;kCAAG;QAAC;QAAO,QAAQ;KAAC;IAEpB,QAAO,2KAAA;iCACN,IACC,aAAa;gBACZ,6LAAiB,WAAA,EAAS;6CAAmB,MAAM;wBAClD,MAAM,YAAY,SAAS,GAAA,CAAI;wBAC/B,mLAAO,WAAA,EAAS,SAAS,IAAI,UAAU,GAAA,CAAI,IAAI;oBAChD,CAAC;;gBACD,oBAAoB,KAAK,kBAAA;YAC1B,CAAC;gCACF;QAAC;QAAU,KAAK,kBAAkB;KAAA;AAEpC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2609, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/config/TLSessionStateSnapshot.ts"],"sourcesContent":["import { Signal, computed } from '@tldraw/state'\nimport { UnknownRecord } from '@tldraw/store'\nimport {\n\tCameraRecordType,\n\tInstancePageStateRecordType,\n\tTLINSTANCE_ID,\n\tTLPageId,\n\tTLShapeId,\n\tTLStore,\n\tpageIdValidator,\n\tpluckPreservingValues,\n\tshapeIdValidator,\n} from '@tldraw/tlschema'\nimport {\n\tdeleteFromSessionStorage,\n\tgetFromSessionStorage,\n\tisEqual,\n\tsetInSessionStorage,\n\tstructuredClone,\n\tuniqueId,\n} from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { tlenv } from '../globals/environment'\n\nconst tabIdKey = 'TLDRAW_TAB_ID_v2' as const\n\nconst window = globalThis.window as\n\t| {\n\t\t\tnavigator: Window['navigator']\n\t\t\taddEventListener: Window['addEventListener']\n\t\t\tTLDRAW_TAB_ID_v2?: string\n\t  }\n\t| undefined\n\n// https://stackoverflow.com/a/9039885\nfunction iOS() {\n\tif (!window) return false\n\treturn (\n\t\t['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-deprecated\n\t\t\twindow.navigator.platform\n\t\t) ||\n\t\t// iPad on iOS 13 detection\n\t\t(tlenv.isDarwin && 'ontouchend' in document)\n\t)\n}\n\n/**\n * A string that is unique per browser tab\n * @public\n */\nexport const TAB_ID: string = window\n\t? (window[tabIdKey] ??\n\t\tgetFromSessionStorage(tabIdKey) ??\n\t\t`TLDRAW_INSTANCE_STATE_V1_` + uniqueId())\n\t: '<error>'\nif (window) {\n\twindow[tabIdKey] = TAB_ID\n\tif (iOS()) {\n\t\t// iOS does not trigger beforeunload\n\t\t// so we need to keep the sessionStorage value around\n\t\t// and hope the user doesn't figure out a way to duplicate their tab\n\t\t// in which case they'll have two tabs with the same UI state.\n\t\t// It's not a big deal, but it's not ideal.\n\t\t// And anyway I can't see a way to duplicate a tab in iOS Safari.\n\t\tsetInSessionStorage(tabIdKey, TAB_ID)\n\t} else {\n\t\tdeleteFromSessionStorage(tabIdKey)\n\t}\n}\n\nwindow?.addEventListener('beforeunload', () => {\n\tsetInSessionStorage(tabIdKey, TAB_ID)\n})\n\nconst Versions = {\n\tInitial: 0,\n} as const\n\nconst CURRENT_SESSION_STATE_SNAPSHOT_VERSION = Math.max(...Object.values(Versions))\n\nfunction migrate(snapshot: any) {\n\tif (snapshot.version < Versions.Initial) {\n\t\t// initial version\n\t\t// noop\n\t}\n\t// add further migrations down here. see TLUserPreferences.ts for an example.\n\n\t// finally\n\tsnapshot.version = CURRENT_SESSION_STATE_SNAPSHOT_VERSION\n}\n\n/**\n * The state of the editor instance, not including any document state.\n *\n * @public\n */\nexport interface TLSessionStateSnapshot {\n\tversion: number\n\tcurrentPageId?: TLPageId\n\tisFocusMode?: boolean\n\texportBackground?: boolean\n\tisDebugMode?: boolean\n\tisToolLocked?: boolean\n\tisGridMode?: boolean\n\tpageStates?: Array<{\n\t\tpageId: TLPageId\n\t\tcamera?: { x: number; y: number; z: number }\n\t\tselectedShapeIds?: TLShapeId[]\n\t\tfocusedGroupId?: TLShapeId | null\n\t}>\n}\n\nconst sessionStateSnapshotValidator: T.Validator<TLSessionStateSnapshot> = T.object({\n\tversion: T.number,\n\tcurrentPageId: pageIdValidator.optional(),\n\tisFocusMode: T.boolean.optional(),\n\texportBackground: T.boolean.optional(),\n\tisDebugMode: T.boolean.optional(),\n\tisToolLocked: T.boolean.optional(),\n\tisGridMode: T.boolean.optional(),\n\tpageStates: T.arrayOf(\n\t\tT.object({\n\t\t\tpageId: pageIdValidator,\n\t\t\tcamera: T.object({\n\t\t\t\tx: T.number,\n\t\t\t\ty: T.number,\n\t\t\t\tz: T.number,\n\t\t\t}).optional(),\n\t\t\tselectedShapeIds: T.arrayOf(shapeIdValidator).optional(),\n\t\t\tfocusedGroupId: shapeIdValidator.nullable().optional(),\n\t\t})\n\t).optional(),\n})\n\nfunction migrateAndValidateSessionStateSnapshot(state: unknown): TLSessionStateSnapshot | null {\n\tif (!state || typeof state !== 'object') {\n\t\tconsole.warn('Invalid instance state')\n\t\treturn null\n\t}\n\tif (!('version' in state) || typeof state.version !== 'number') {\n\t\tconsole.warn('No version in instance state')\n\t\treturn null\n\t}\n\tif (state.version !== CURRENT_SESSION_STATE_SNAPSHOT_VERSION) {\n\t\tstate = structuredClone(state)\n\t\tmigrate(state)\n\t}\n\n\ttry {\n\t\treturn sessionStateSnapshotValidator.validate(state)\n\t} catch (e) {\n\t\tconsole.warn(e)\n\t\treturn null\n\t}\n}\n\n/**\n * Creates a signal of the instance state for a given store.\n * @public\n * @param store - The store to create the instance state snapshot signal for\n * @returns\n */\nexport function createSessionStateSnapshotSignal(\n\tstore: TLStore\n): Signal<TLSessionStateSnapshot | null> {\n\tconst $allPageIds = store.query.ids('page')\n\n\treturn computed<TLSessionStateSnapshot | null>(\n\t\t'sessionStateSnapshot',\n\t\t() => {\n\t\t\tconst instanceState = store.get(TLINSTANCE_ID)\n\t\t\tif (!instanceState) return null\n\n\t\t\tconst allPageIds = [...$allPageIds.get()]\n\t\t\treturn {\n\t\t\t\tversion: CURRENT_SESSION_STATE_SNAPSHOT_VERSION,\n\t\t\t\tcurrentPageId: instanceState.currentPageId,\n\t\t\t\texportBackground: instanceState.exportBackground,\n\t\t\t\tisFocusMode: instanceState.isFocusMode,\n\t\t\t\tisDebugMode: instanceState.isDebugMode,\n\t\t\t\tisToolLocked: instanceState.isToolLocked,\n\t\t\t\tisGridMode: instanceState.isGridMode,\n\t\t\t\tpageStates: allPageIds.map((id) => {\n\t\t\t\t\tconst ps = store.get(InstancePageStateRecordType.createId(id))\n\t\t\t\t\tconst camera = store.get(CameraRecordType.createId(id))\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpageId: id,\n\t\t\t\t\t\tcamera: {\n\t\t\t\t\t\t\tx: camera?.x ?? 0,\n\t\t\t\t\t\t\ty: camera?.y ?? 0,\n\t\t\t\t\t\t\tz: camera?.z ?? 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tselectedShapeIds: ps?.selectedShapeIds ?? [],\n\t\t\t\t\t\tfocusedGroupId: ps?.focusedGroupId ?? null,\n\t\t\t\t\t} satisfies NonNullable<TLSessionStateSnapshot['pageStates']>[0]\n\t\t\t\t}),\n\t\t\t} satisfies TLSessionStateSnapshot\n\t\t},\n\t\t{ isEqual }\n\t)\n}\n\n/**\n * Options for {@link loadSessionStateSnapshotIntoStore}\n * @public\n */\nexport interface TLLoadSessionStateSnapshotOptions {\n\t/**\n\t * By default, some session state flags like `isDebugMode` are not overwritten when loading a snapshot.\n\t * These are usually considered \"sticky\" by users while the document data is not.\n\t * If you want to overwrite these flags, set this to `true`.\n\t */\n\tforceOverwrite?: boolean\n}\n\n/**\n * Loads a snapshot of the editor's instance state into the store of a new editor instance.\n *\n * @public\n * @param store - The store to load the instance state into\n * @param snapshot - The instance state snapshot to load\n * @returns\n */\nexport function loadSessionStateSnapshotIntoStore(\n\tstore: TLStore,\n\tsnapshot: TLSessionStateSnapshot,\n\topts?: TLLoadSessionStateSnapshotOptions\n) {\n\tconst res = migrateAndValidateSessionStateSnapshot(snapshot)\n\tif (!res) return\n\n\tconst preserved = pluckPreservingValues(store.get(TLINSTANCE_ID))\n\tconst primary = opts?.forceOverwrite ? res : preserved\n\tconst secondary = opts?.forceOverwrite ? preserved : res\n\n\tconst instanceState = store.schema.types.instance.create({\n\t\tid: TLINSTANCE_ID,\n\t\t...preserved,\n\t\t// the integrity checker will ensure that the currentPageId is valid\n\t\tcurrentPageId: res.currentPageId,\n\t\tisDebugMode: primary?.isDebugMode ?? secondary?.isDebugMode,\n\t\tisFocusMode: primary?.isFocusMode ?? secondary?.isFocusMode,\n\t\tisToolLocked: primary?.isToolLocked ?? secondary?.isToolLocked,\n\t\tisGridMode: primary?.isGridMode ?? secondary?.isGridMode,\n\t\texportBackground: primary?.exportBackground ?? secondary?.exportBackground,\n\t})\n\n\tstore.atomic(() => {\n\t\tfor (const ps of res.pageStates ?? []) {\n\t\t\tif (!store.has(ps.pageId)) continue\n\t\t\tconst cameraId = CameraRecordType.createId(ps.pageId)\n\t\t\tconst instancePageState = InstancePageStateRecordType.createId(ps.pageId)\n\t\t\tconst previousCamera = store.get(cameraId)\n\t\t\tconst previousInstanceState = store.get(instancePageState)\n\t\t\tstore.put([\n\t\t\t\tCameraRecordType.create({\n\t\t\t\t\tid: cameraId,\n\t\t\t\t\tx: ps.camera?.x ?? previousCamera?.x,\n\t\t\t\t\ty: ps.camera?.y ?? previousCamera?.y,\n\t\t\t\t\tz: ps.camera?.z ?? previousCamera?.z,\n\t\t\t\t}),\n\t\t\t\tInstancePageStateRecordType.create({\n\t\t\t\t\tid: instancePageState,\n\t\t\t\t\tpageId: ps.pageId,\n\t\t\t\t\tselectedShapeIds: ps.selectedShapeIds ?? previousInstanceState?.selectedShapeIds,\n\t\t\t\t\tfocusedGroupId: ps.focusedGroupId ?? previousInstanceState?.focusedGroupId,\n\t\t\t\t}),\n\t\t\t])\n\t\t}\n\n\t\tstore.put([instanceState])\n\t\tstore.ensureStoreIsUsable()\n\t})\n}\n\n/**\n * @internal\n */\nexport function extractSessionStateFromLegacySnapshot(\n\tstore: Record<string, UnknownRecord>\n): TLSessionStateSnapshot | null {\n\tconst instanceRecords = []\n\tfor (const record of Object.values(store)) {\n\t\tif (record.typeName?.match(/^(instance.*|pointer|camera)$/)) {\n\t\t\tinstanceRecords.push(record)\n\t\t}\n\t}\n\n\t// for scratch documents, we need to extract the most recently-used instance and it's associated page states\n\t// but oops we don't have the concept of \"most recently-used\" so we'll just take the first one\n\tconst oldInstance = instanceRecords.filter(\n\t\t(r) => r.typeName === 'instance' && r.id !== TLINSTANCE_ID\n\t)[0] as any\n\tif (!oldInstance) return null\n\n\tconst result: TLSessionStateSnapshot = {\n\t\tversion: CURRENT_SESSION_STATE_SNAPSHOT_VERSION,\n\t\tcurrentPageId: oldInstance.currentPageId,\n\t\texportBackground: !!oldInstance.exportBackground,\n\t\tisFocusMode: !!oldInstance.isFocusMode,\n\t\tisDebugMode: !!oldInstance.isDebugMode,\n\t\tisToolLocked: !!oldInstance.isToolLocked,\n\t\tisGridMode: false,\n\t\tpageStates: instanceRecords\n\t\t\t.filter((r: any) => r.typeName === 'instance_page_state' && r.instanceId === oldInstance.id)\n\t\t\t.map((ps: any) => {\n\t\t\t\tconst camera = (store[ps.cameraId] as any) ?? { x: 0, y: 0, z: 1 }\n\t\t\t\treturn {\n\t\t\t\t\tpageId: ps.pageId,\n\t\t\t\t\tcamera: {\n\t\t\t\t\t\tx: camera.x,\n\t\t\t\t\t\ty: camera.y,\n\t\t\t\t\t\tz: camera.z,\n\t\t\t\t\t},\n\t\t\t\t\tselectedShapeIds: ps.selectedShapeIds,\n\t\t\t\t\tfocusedGroupId: ps.focusedGroupId,\n\t\t\t\t} satisfies NonNullable<TLSessionStateSnapshot['pageStates']>[0]\n\t\t\t}),\n\t}\n\n\ttry {\n\t\tsessionStateSnapshotValidator.validate(result)\n\t\treturn result\n\t} catch {\n\t\treturn null\n\t}\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2840, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/config/TLEditorSnapshot.ts"],"sourcesContent":["import { Signal } from '@tldraw/state'\nimport { TLINSTANCE_ID, TLStore, TLStoreSnapshot, pluckPreservingValues } from '@tldraw/tlschema'\nimport { WeakCache, filterEntries } from '@tldraw/utils'\nimport {\n\tTLSessionStateSnapshot,\n\tcreateSessionStateSnapshotSignal,\n\tloadSessionStateSnapshotIntoStore,\n} from './TLSessionStateSnapshot'\n\n/** @public */\nexport interface TLEditorSnapshot {\n\tdocument: TLStoreSnapshot\n\tsession: TLSessionStateSnapshot\n}\n\n/**\n * Options for {@link loadSnapshot}\n * @public\n */\nexport interface TLLoadSnapshotOptions {\n\t/**\n\t * By default, some session state flags like `isDebugMode` are not overwritten when loading a snapshot.\n\t * These are usually considered \"sticky\" by users while the document data is not.\n\t * If you want to overwrite these flags, set this to `true`.\n\t */\n\tforceOverwriteSessionState?: boolean\n}\n\n/**\n * Loads a snapshot into a store.\n * @public\n */\nexport function loadSnapshot(\n\tstore: TLStore,\n\t_snapshot: Partial<TLEditorSnapshot> | TLStoreSnapshot,\n\topts?: TLLoadSnapshotOptions\n) {\n\tlet snapshot: Partial<TLEditorSnapshot> = {}\n\tif ('store' in _snapshot) {\n\t\t// regular old TLStoreSnapshot\n\t\t// let's migrate it and then filter out the non-doc state to help folks out\n\t\tconst migrationResult = store.schema.migrateStoreSnapshot(_snapshot)\n\t\tif (migrationResult.type !== 'success') {\n\t\t\tthrow new Error('Failed to migrate store snapshot: ' + migrationResult.reason)\n\t\t}\n\n\t\tsnapshot.document = {\n\t\t\tschema: store.schema.serialize(),\n\t\t\tstore: filterEntries(migrationResult.value, (_, { typeName }) =>\n\t\t\t\tstore.scopedTypes.document.has(typeName)\n\t\t\t),\n\t\t}\n\t} else {\n\t\t// TLEditorSnapshot\n\t\tsnapshot = _snapshot\n\t}\n\n\t// We need to preserve a bunch of instance state properties that the Editor sets\n\t// to avoid breaking the editor or causing jarring changes when loading a snapshot.\n\tconst preservingInstanceState = pluckPreservingValues(store.get(TLINSTANCE_ID))\n\tconst preservingSessionState = sessionStateCache\n\t\t.get(store, createSessionStateSnapshotSignal)\n\t\t.get()\n\n\tstore.atomic(() => {\n\t\t// first load the document state (this will wipe the store if it happens)\n\t\tif (snapshot.document) {\n\t\t\tstore.loadStoreSnapshot(snapshot.document)\n\t\t}\n\n\t\t// then make sure we preserve those instance state properties that must be preserved\n\t\t// this is a noop if the document state wasn't loaded above\n\t\tif (preservingInstanceState) {\n\t\t\tstore.update(TLINSTANCE_ID, (r) => ({ ...r, ...preservingInstanceState }))\n\t\t}\n\t\tif (preservingSessionState) {\n\t\t\t// there's some duplication here with the instanceState but it's fine\n\t\t\tloadSessionStateSnapshotIntoStore(store, preservingSessionState)\n\t\t}\n\n\t\t// finally reinstate the UI state\n\t\tif (snapshot.session) {\n\t\t\tloadSessionStateSnapshotIntoStore(store, snapshot.session, {\n\t\t\t\tforceOverwrite: opts?.forceOverwriteSessionState,\n\t\t\t})\n\t\t}\n\t})\n}\n\nconst sessionStateCache = new WeakCache<\n\tTLStore,\n\tSignal<TLSessionStateSnapshot | undefined | null>\n>()\n\n/** @public */\nexport function getSnapshot(store: TLStore): TLEditorSnapshot {\n\tconst sessionState$ = sessionStateCache.get(store, createSessionStateSnapshotSignal)\n\tconst session = sessionState$.get()\n\tif (!session) {\n\t\tthrow new Error('Session state is not ready yet')\n\t}\n\n\treturn {\n\t\tdocument: store.getStoreSnapshot(),\n\t\tsession,\n\t}\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,eAAyC,6BAA6B;;AAC/E,SAAS,WAAW,qBAAqB;;;AACzC;;;;AA6BO,SAAS,aACf,KAAA,EACA,SAAA,EACA,IAAA,EACC;IACD,IAAI,WAAsC,CAAC;IAC3C,IAAI,WAAW,WAAW;QAGzB,MAAM,kBAAkB,MAAM,MAAA,CAAO,oBAAA,CAAqB,SAAS;QACnE,IAAI,gBAAgB,IAAA,KAAS,WAAW;YACvC,MAAM,IAAI,MAAM,uCAAuC,gBAAgB,MAAM;QAC9E;QAEA,SAAS,QAAA,GAAW;YACnB,QAAQ,MAAM,MAAA,CAAO,SAAA,CAAU;YAC/B,iLAAO,gBAAA,EAAc,gBAAgB,KAAA,EAAO,CAAC,GAAG,EAAE,QAAA,CAAS,CAAA,GAC1D,MAAM,WAAA,CAAY,QAAA,CAAS,GAAA,CAAI,QAAQ;QAEzC;IACD,OAAO;QAEN,WAAW;IACZ;IAIA,MAAM,+MAA0B,wBAAA,EAAsB,MAAM,GAAA,iLAAI,iBAAa,CAAC;IAC9E,MAAM,yBAAyB,kBAC7B,GAAA,CAAI,wMAAO,mCAAgC,EAC3C,GAAA,CAAI;IAEN,MAAM,MAAA,CAAO,MAAM;QAElB,IAAI,SAAS,QAAA,EAAU;YACtB,MAAM,iBAAA,CAAkB,SAAS,QAAQ;QAC1C;QAIA,IAAI,yBAAyB;YAC5B,MAAM,MAAA,kLAAO,gBAAA,EAAe,CAAC,IAAA,CAAO;oBAAE,GAAG,CAAA;oBAAG,GAAG,uBAAA;gBAAwB,CAAA,CAAE;QAC1E;QACA,IAAI,wBAAwB;YAE3B,CAAA,GAAA,gMAAA,CAAA,oCAAA,EAAkC,OAAO,sBAAsB;QAChE;QAGA,IAAI,SAAS,OAAA,EAAS;YACrB,CAAA,GAAA,gMAAA,CAAA,oCAAA,EAAkC,OAAO,SAAS,OAAA,EAAS;gBAC1D,gBAAgB,MAAM;YACvB,CAAC;QACF;IACD,CAAC;AACF;AAEA,MAAM,oBAAoB,yKAAI,YAAA,CAG5B;AAGK,SAAS,YAAY,KAAA,EAAkC;IAC7D,MAAM,gBAAgB,kBAAkB,GAAA,CAAI,wMAAO,mCAAgC;IACnF,MAAM,UAAU,cAAc,GAAA,CAAI;IAClC,IAAI,CAAC,SAAS;QACb,MAAM,IAAI,MAAM,gCAAgC;IACjD;IAEA,OAAO;QACN,UAAU,MAAM,gBAAA,CAAiB;QACjC;IACD;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2909, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/config/defaultBindings.ts"],"sourcesContent":["import { TLBindingUtilConstructor } from '../editor/bindings/BindingUtil'\n\n/** @public */\nexport type TLAnyBindingUtilConstructor = TLBindingUtilConstructor<any>\n\nexport function checkBindings(customBindings: readonly TLAnyBindingUtilConstructor[]) {\n\tconst bindings = [] as TLAnyBindingUtilConstructor[]\n\n\tconst addedCustomBindingTypes = new Set<string>()\n\tfor (const customBinding of customBindings) {\n\t\tif (addedCustomBindingTypes.has(customBinding.type)) {\n\t\t\tthrow new Error(`Binding type \"${customBinding.type}\" is defined more than once`)\n\t\t}\n\t\tbindings.push(customBinding)\n\t\taddedCustomBindingTypes.add(customBinding.type)\n\t}\n\n\treturn bindings\n}\n"],"names":[],"mappings":";;;AAKO,SAAS,cAAc,cAAA,EAAwD;IACrF,MAAM,WAAW,CAAC,CAAA;IAElB,MAAM,0BAA0B,aAAA,GAAA,IAAI,IAAY;IAChD,KAAA,MAAW,iBAAiB,eAAgB;QAC3C,IAAI,wBAAwB,GAAA,CAAI,cAAc,IAAI,GAAG;YACpD,MAAM,IAAI,MAAM,CAAA,cAAA,EAAiB,cAAc,IAAI,CAAA,2BAAA,CAA6B;QACjF;QACA,SAAS,IAAA,CAAK,aAAa;QAC3B,wBAAwB,GAAA,CAAI,cAAc,IAAI;IAC/C;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2932, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/config/defaultShapes.ts"],"sourcesContent":["import { TLShapeUtilConstructor } from '../editor/shapes/ShapeUtil'\nimport { GroupShapeUtil } from '../editor/shapes/group/GroupShapeUtil'\n\n/** @public */\nexport type TLAnyShapeUtilConstructor = TLShapeUtilConstructor<any>\n\n/** @public */\nexport const coreShapes = [\n\t// created by grouping interactions, probably the corest core shape that we have\n\tGroupShapeUtil,\n] as const\n\nconst coreShapeTypes = new Set<string>(coreShapes.map((s) => s.type))\n\nexport function checkShapesAndAddCore(customShapes: readonly TLAnyShapeUtilConstructor[]) {\n\tconst shapes = [...coreShapes] as TLAnyShapeUtilConstructor[]\n\n\tconst addedCustomShapeTypes = new Set<string>()\n\tfor (const customShape of customShapes) {\n\t\tif (coreShapeTypes.has(customShape.type)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Shape type \"${customShape.type}\" is a core shapes type and cannot be overridden`\n\t\t\t)\n\t\t}\n\t\tif (addedCustomShapeTypes.has(customShape.type)) {\n\t\t\tthrow new Error(`Shape type \"${customShape.type}\" is defined more than once`)\n\t\t}\n\t\tshapes.push(customShape)\n\t\taddedCustomShapeTypes.add(customShape.type)\n\t}\n\n\treturn shapes\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,sBAAsB;;AAMxB,MAAM,aAAa;IAAA,gFAAA;gNAEzB,iBAAA;CACD;AAEA,MAAM,iBAAiB,IAAI,IAAY,WAAW,GAAA,CAAI,CAAC,IAAM,EAAE,IAAI,CAAC;AAE7D,SAAS,sBAAsB,YAAA,EAAoD;IACzF,MAAM,SAAS,CAAC;WAAG,UAAU;KAAA;IAE7B,MAAM,wBAAwB,aAAA,GAAA,IAAI,IAAY;IAC9C,KAAA,MAAW,eAAe,aAAc;QACvC,IAAI,eAAe,GAAA,CAAI,YAAY,IAAI,GAAG;YACzC,MAAM,IAAI,MACT,CAAA,YAAA,EAAe,YAAY,IAAI,CAAA,gDAAA,CAAA;QAEjC;QACA,IAAI,sBAAsB,GAAA,CAAI,YAAY,IAAI,GAAG;YAChD,MAAM,IAAI,MAAM,CAAA,YAAA,EAAe,YAAY,IAAI,CAAA,2BAAA,CAA6B;QAC7E;QACA,OAAO,IAAA,CAAK,WAAW;QACvB,sBAAsB,GAAA,CAAI,YAAY,IAAI;IAC3C;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2968, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/config/createTLStore.ts"],"sourcesContent":["import { Signal } from '@tldraw/state'\nimport { HistoryEntry, MigrationSequence, SerializedStore, Store, StoreSchema } from '@tldraw/store'\nimport {\n\tSchemaPropsInfo,\n\tTLAssetStore,\n\tTLRecord,\n\tTLStore,\n\tTLStoreProps,\n\tTLStoreSnapshot,\n\tcreateTLSchema,\n} from '@tldraw/tlschema'\nimport { FileHelpers, assert } from '@tldraw/utils'\nimport { Editor } from '../editor/Editor'\nimport { TLEditorSnapshot, loadSnapshot } from './TLEditorSnapshot'\nimport { TLAnyBindingUtilConstructor, checkBindings } from './defaultBindings'\nimport { TLAnyShapeUtilConstructor, checkShapesAndAddCore } from './defaultShapes'\n\n/** @public */\nexport interface TLStoreBaseOptions {\n\t/** The initial data for the store. */\n\tinitialData?: SerializedStore<TLRecord>\n\n\t/** A snapshot of initial data to migrate and load into the store. */\n\tsnapshot?: Partial<TLEditorSnapshot> | TLStoreSnapshot\n\n\t/** The default name for the store. */\n\tdefaultName?: string\n\n\t/** How should this store upload & resolve assets? */\n\tassets?: TLAssetStore\n\n\t/** Called when the store is connected to an {@link Editor}. */\n\tonMount?(editor: Editor): void | (() => void)\n}\n\n/** @public */\nexport type TLStoreSchemaOptions =\n\t| {\n\t\t\tschema?: StoreSchema<TLRecord, TLStoreProps>\n\t  }\n\t| {\n\t\t\tshapeUtils?: readonly TLAnyShapeUtilConstructor[]\n\t\t\tmigrations?: readonly MigrationSequence[]\n\t\t\tbindingUtils?: readonly TLAnyBindingUtilConstructor[]\n\t  }\n\n/** @public */\nexport type TLStoreOptions = TLStoreBaseOptions & {\n\tid?: string\n\t/** Collaboration options for the store. */\n\tcollaboration?: {\n\t\tstatus: Signal<'online' | 'offline'> | null\n\t\tmode?: Signal<'readonly' | 'readwrite'> | null\n\t}\n} & TLStoreSchemaOptions\n\n/** @public */\nexport type TLStoreEventInfo = HistoryEntry<TLRecord>\n\nconst defaultAssetResolve: NonNullable<TLAssetStore['resolve']> = (asset) => asset.props.src\n\n/** @public */\nexport const inlineBase64AssetStore: TLAssetStore = {\n\tupload: async (_, file) => {\n\t\treturn { src: await FileHelpers.blobToDataUrl(file) }\n\t},\n}\n\n/**\n * A helper for creating a TLStore schema from either an object with shapeUtils, bindingUtils, and\n * migrations, or a schema.\n *\n * @param opts - Options for creating the schema.\n *\n * @public\n */\nexport function createTLSchemaFromUtils(\n\topts: TLStoreSchemaOptions\n): StoreSchema<TLRecord, TLStoreProps> {\n\tif ('schema' in opts && opts.schema) return opts.schema\n\n\treturn createTLSchema({\n\t\tshapes:\n\t\t\t'shapeUtils' in opts && opts.shapeUtils\n\t\t\t\t? utilsToMap(checkShapesAndAddCore(opts.shapeUtils))\n\t\t\t\t: undefined,\n\t\tbindings:\n\t\t\t'bindingUtils' in opts && opts.bindingUtils\n\t\t\t\t? utilsToMap(checkBindings(opts.bindingUtils))\n\t\t\t\t: undefined,\n\t\tmigrations: 'migrations' in opts ? opts.migrations : undefined,\n\t})\n}\n\n/**\n * A helper for creating a TLStore.\n *\n * @param opts - Options for creating the store.\n *\n * @public\n */\nexport function createTLStore({\n\tinitialData,\n\tdefaultName = '',\n\tid,\n\tassets = inlineBase64AssetStore,\n\tonMount,\n\tcollaboration,\n\t...rest\n}: TLStoreOptions = {}): TLStore {\n\tconst schema = createTLSchemaFromUtils(rest)\n\n\tconst store = new Store({\n\t\tid,\n\t\tschema,\n\t\tinitialData,\n\t\tprops: {\n\t\t\tdefaultName,\n\t\t\tassets: {\n\t\t\t\tupload: assets.upload,\n\t\t\t\tresolve: assets.resolve ?? defaultAssetResolve,\n\t\t\t\tremove: assets.remove ?? (() => Promise.resolve()),\n\t\t\t},\n\t\t\tonMount: (editor) => {\n\t\t\t\tassert(editor instanceof Editor)\n\t\t\t\tonMount?.(editor)\n\t\t\t},\n\t\t\tcollaboration,\n\t\t},\n\t})\n\n\tif (rest.snapshot) {\n\t\tif (initialData) throw new Error('Cannot provide both initialData and snapshot')\n\t\tloadSnapshot(store, rest.snapshot, { forceOverwriteSessionState: true })\n\t}\n\n\treturn store\n}\n\nfunction utilsToMap<T extends SchemaPropsInfo & { type: string }>(utils: T[]) {\n\treturn Object.fromEntries(\n\t\tutils.map((s): [string, SchemaPropsInfo] => [\n\t\t\ts.type,\n\t\t\t{\n\t\t\t\tprops: s.props,\n\t\t\t\tmigrations: s.migrations,\n\t\t\t},\n\t\t])\n\t)\n}\n"],"names":[],"mappings":";;;;;AACA,SAA2D,aAA0B;;AACrF;;;;AASA,SAAS,aAAa,cAAc;AACpC,SAAS,cAAc;AACvB,SAA2B,oBAAoB;AAC/C,SAAsC,qBAAqB;AAC3D,SAAoC,6BAA6B;;;;;;;;AA4CjE,MAAM,sBAA4D,CAAC,QAAU,MAAM,KAAA,CAAM,GAAA;AAGlF,MAAM,yBAAuC;IACnD,QAAQ,OAAO,GAAG,SAAS;QAC1B,OAAO;YAAE,KAAK,0KAAM,cAAA,CAAY,aAAA,CAAc,IAAI;QAAE;IACrD;AACD;AAUO,SAAS,wBACf,IAAA,EACsC;IACtC,IAAI,YAAY,QAAQ,KAAK,MAAA,CAAQ,CAAA,OAAO,KAAK,MAAA;IAEjD,qLAAO,iBAAA,EAAe;QACrB,QACC,gBAAgB,QAAQ,KAAK,UAAA,GAC1B,uMAAW,wBAAA,EAAsB,KAAK,UAAU,CAAC,IACjD,KAAA;QACJ,UACC,kBAAkB,QAAQ,KAAK,YAAA,GAC5B,yMAAW,gBAAA,EAAc,KAAK,YAAY,CAAC,IAC3C,KAAA;QACJ,YAAY,gBAAgB,OAAO,KAAK,UAAA,GAAa,KAAA;IACtD,CAAC;AACF;AASO,SAAS,cAAc,EAC7B,WAAA,EACA,cAAc,EAAA,EACd,EAAA,EACA,SAAS,sBAAA,EACT,OAAA,EACA,aAAA,EACA,GAAG,MACJ,GAAoB,CAAC,CAAA,EAAY;IAChC,MAAM,SAAS,wBAAwB,IAAI;IAE3C,MAAM,QAAQ,wKAAI,SAAA,CAAM;QACvB;QACA;QACA;QACA,OAAO;YACN;YACA,QAAQ;gBACP,QAAQ,OAAO,MAAA;gBACf,SAAS,OAAO,OAAA,IAAW;gBAC3B,QAAQ,OAAO,MAAA,IAAA,CAAW,IAAM,QAAQ,OAAA,CAAQ,CAAA;YACjD;YACA,SAAS,CAAC,WAAW;gBACpB,CAAA,GAAA,sKAAA,CAAA,SAAA,EAAO,mMAAkB,SAAM;gBAC/B,UAAU,MAAM;YACjB;YACA;QACD;IACD,CAAC;IAED,IAAI,KAAK,QAAA,EAAU;QAClB,IAAI,YAAa,CAAA,MAAM,IAAI,MAAM,8CAA8C;QAC/E,CAAA,GAAA,0LAAA,CAAA,eAAA,EAAa,OAAO,KAAK,QAAA,EAAU;YAAE,4BAA4B;QAAK,CAAC;IACxE;IAEA,OAAO;AACR;AAEA,SAAS,WAAyD,KAAA,EAAY;IAC7E,OAAO,OAAO,WAAA,CACb,MAAM,GAAA,CAAI,CAAC,IAAiC;YAC3C,EAAE,IAAA;YACF;gBACC,OAAO,EAAE,KAAA;gBACT,YAAY,EAAE,UAAA;YACf;SACA;AAEH","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3052, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/exports/fetchCache.ts"],"sourcesContent":["import { FileHelpers, assert, fetch } from '@tldraw/utils'\n\n// TODO(alex): currently, this cache will grow unbounded. we should come up with a better strategy\n// for clearing items from the cache over time.\nexport function fetchCache<T>(cb: (response: Response) => Promise<T>, init?: RequestInit) {\n\tconst cache = new Map<string, Promise<T | null>>()\n\n\treturn async function fetchCached(url: string): Promise<T | null> {\n\t\tconst existing = cache.get(url)\n\t\tif (existing) return existing\n\n\t\tconst promise = (async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, init)\n\t\t\t\tassert(response.ok)\n\t\t\t\treturn await cb(response)\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err)\n\t\t\t\treturn null\n\t\t\t}\n\t\t})()\n\t\tcache.set(url, promise)\n\t\treturn promise\n\t}\n}\n\nexport const resourceToDataUrl = fetchCache(async (response) => {\n\treturn await FileHelpers.blobToDataUrl(await response.blob())\n})\n"],"names":[],"mappings":";;;;AAAA,SAAS,aAAa,QAAQ,aAAa;;;;;AAIpC,SAAS,WAAc,EAAA,EAAwC,IAAA,EAAoB;IACzF,MAAM,QAAQ,aAAA,GAAA,IAAI,IAA+B;IAEjD,OAAO,eAAe,YAAY,GAAA,EAAgC;QACjE,MAAM,WAAW,MAAM,GAAA,CAAI,GAAG;QAC9B,IAAI,SAAU,CAAA,OAAO;QAErB,MAAM,UAAA,CAAW,YAAY;YAC5B,IAAI;gBACH,MAAM,WAAW,iLAAM,QAAA,EAAM,KAAK,IAAI;gBACtC,CAAA,GAAA,sKAAA,CAAA,SAAA,EAAO,SAAS,EAAE;gBAClB,OAAO,MAAM,GAAG,QAAQ;YACzB,EAAA,OAAS,KAAK;gBACb,QAAQ,KAAA,CAAM,GAAG;gBACjB,OAAO;YACR;QACD,CAAA,EAAG;QACH,MAAM,GAAA,CAAI,KAAK,OAAO;QACtB,OAAO;IACR;AACD;AAEO,MAAM,oBAAoB,WAAW,OAAO,aAAa;IAC/D,OAAO,0KAAM,cAAA,CAAY,aAAA,CAAc,MAAM,SAAS,IAAA,CAAK,CAAC;AAC7D,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3091, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/exports/parseCss.ts"],"sourcesContent":["import { safeParseUrl } from '@tldraw/utils'\n\nexport interface ParsedFontFace {\n\tfontFace: string\n\turls: { original: string; resolved: string | null; embedded?: Promise<string | null> }[]\n\tfontFamilies: Set<string>\n}\n\n// parsing CSS with regular expressions doesn't really work. There are almost certainly edge cases\n// in the regular expressions we're using here. They're based formal grammars of CSS, but aren't\n// perfect. These were written with https://regexper.com/ - give it a go if you're editing these.\n\n// The regexes themselves would be nicer to work with if we were using named capturing groups\n// (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions/Named_capturing_group).\n// We use a lot of disjunctions (the `|`) to cover different syntaxes though, and at the time of\n// writing, browser support for using named capturing groups across disjunctions is rough.\n\n// Parse @import declarations:\n// https://developer.mozilla.org/en-US/docs/Web/CSS/@import#formal_syntax\nconst importsRegex =\n\t/@import\\s+(?:\"([^\"]+)\"|'([^']+)'|url\\s*\\(\\s*(?:\"([^\"]+)\"|'([^']+)'|([^'\")]+))\\s*\\))([^;]+);/gi\n\n// Locate @font-face declarations:\nconst fontFaceRegex = /@font-face\\s*{([^}]+)}/gi\n\n// Parse url() calls within a CSS value:\n// https://developer.mozilla.org/en-US/docs/Web/CSS/url#syntax\nconst urlsRegex = /url\\s*\\(\\s*(?:\"([^\"]+)\"|'([^']+)'|([^'\")]+))\\s*\\)/gi\n\n// Locate and parse the value of `font-family` within a @font-face declaration:\n// https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-family#formal_syntax\nconst fontFamilyRegex =\n\t/(?:^|;)\\s*font-family\\s*:\\s*(?:([^'\"][^;\\n]+)|\"([^\"]+)\"|'([^']+)')\\s*(?:;|$)/gi\n\nexport function parseCssImports(css: string) {\n\treturn Array.from(css.matchAll(importsRegex), (m) => ({\n\t\turl: m[1] || m[2] || m[3] || m[4] || m[5],\n\t\textras: m[6],\n\t}))\n}\n\nexport function parseCssFontFaces(css: string, baseUrl: string) {\n\treturn Array.from(css.matchAll(fontFaceRegex), (m): ParsedFontFace => {\n\t\tconst fontFace = m[1]\n\t\tconst urls = Array.from(fontFace.matchAll(urlsRegex), (m) => {\n\t\t\tconst original = m[1] || m[2] || m[3]\n\t\t\treturn {\n\t\t\t\toriginal,\n\t\t\t\tresolved: safeParseUrl(original, baseUrl)?.href ?? null,\n\t\t\t}\n\t\t})\n\t\tconst fontFamilies = new Set(\n\t\t\tArray.from(fontFace.matchAll(fontFamilyRegex), (m) => (m[1] || m[2] || m[3]).toLowerCase())\n\t\t)\n\n\t\treturn { fontFace, urls, fontFamilies }\n\t})\n}\n\nexport function parseCssFontFamilyValue(value: string) {\n\t// https://developer.mozilla.org/en-US/docs/Web/CSS/font-family#formal_syntax\n\t// we use two regexes here to parse each value in a comma separated list of font families\n\tconst valueRegex = /\\s*(?:([^'\"][^;\\n\\s,]+)|\"([^\"]+)\"|'([^']+)')\\s*/gi\n\tconst separatorRegex = /\\s*,\\s*/gi\n\n\tconst fontFamilies = new Set<string>()\n\n\twhile (true) {\n\t\tconst valueMatch = valueRegex.exec(value)\n\t\tif (!valueMatch) {\n\t\t\tbreak\n\t\t}\n\n\t\tconst fontFamily = valueMatch[1] || valueMatch[2] || valueMatch[3]\n\t\tfontFamilies.add(fontFamily.toLowerCase())\n\n\t\tseparatorRegex.lastIndex = valueRegex.lastIndex\n\t\tconst separatorMatch = separatorRegex.exec(value)\n\t\tif (!separatorMatch) {\n\t\t\tbreak\n\t\t}\n\n\t\tvalueRegex.lastIndex = separatorRegex.lastIndex\n\t}\n\n\treturn fontFamilies\n}\n\nexport function shouldIncludeCssProperty(property: string) {\n\tif (property.startsWith('-')) return false\n\tif (property.startsWith('animation')) return false\n\tif (property.startsWith('transition')) return false\n\tif (property === 'cursor') return false\n\tif (property === 'pointer-events') return false\n\tif (property === 'user-select') return false\n\tif (property === 'touch-action') return false\n\treturn true\n}\n\nexport function parseCss(css: string, baseUrl: string) {\n\treturn {\n\t\timports: parseCssImports(css),\n\t\tfontFaces: parseCssFontFaces(css, baseUrl),\n\t}\n}\n\nexport function parseCssValueUrls(value: string) {\n\treturn Array.from(value.matchAll(urlsRegex), (m) => ({\n\t\toriginal: m[0],\n\t\turl: m[1] || m[2] || m[3],\n\t}))\n}\n"],"names":["m"],"mappings":";;;;;;;;AAAA,SAAS,oBAAoB;;;AAmB7B,MAAM,eACL;AAGD,MAAM,gBAAgB;AAItB,MAAM,YAAY;AAIlB,MAAM,kBACL;AAEM,SAAS,gBAAgB,GAAA,EAAa;IAC5C,OAAO,MAAM,IAAA,CAAK,IAAI,QAAA,CAAS,YAAY,GAAG,CAAC,IAAA,CAAO;YACrD,KAAK,CAAA,CAAE,CAAC,CAAA,IAAK,CAAA,CAAE,CAAC,CAAA,IAAK,CAAA,CAAE,CAAC,CAAA,IAAK,CAAA,CAAE,CAAC,CAAA,IAAK,CAAA,CAAE,CAAC,CAAA;YACxC,QAAQ,CAAA,CAAE,CAAC,CAAA;QACZ,CAAA,CAAE;AACH;AAEO,SAAS,kBAAkB,GAAA,EAAa,OAAA,EAAiB;IAC/D,OAAO,MAAM,IAAA,CAAK,IAAI,QAAA,CAAS,aAAa,GAAG,CAAC,MAAsB;QACrE,MAAM,WAAW,CAAA,CAAE,CAAC,CAAA;QACpB,MAAM,OAAO,MAAM,IAAA,CAAK,SAAS,QAAA,CAAS,SAAS,GAAG,CAACA,OAAM;YAC5D,MAAM,WAAWA,EAAAA,CAAE,CAAC,CAAA,IAAKA,EAAAA,CAAE,CAAC,CAAA,IAAKA,EAAAA,CAAE,CAAC,CAAA;YACpC,OAAO;gBACN;gBACA,iLAAU,eAAA,EAAa,UAAU,OAAO,GAAG,QAAQ;YACpD;QACD,CAAC;QACD,MAAM,eAAe,IAAI,IACxB,MAAM,IAAA,CAAK,SAAS,QAAA,CAAS,eAAe,GAAG,CAACA,KAAAA,CAAOA,EAAAA,CAAE,CAAC,CAAA,IAAKA,EAAAA,CAAE,CAAC,CAAA,IAAKA,EAAAA,CAAE,CAAC,CAAA,EAAG,WAAA,CAAY,CAAC;QAG3F,OAAO;YAAE;YAAU;YAAM;QAAa;IACvC,CAAC;AACF;AAEO,SAAS,wBAAwB,KAAA,EAAe;IAGtD,MAAM,aAAa;IACnB,MAAM,iBAAiB;IAEvB,MAAM,eAAe,aAAA,GAAA,IAAI,IAAY;IAErC,MAAO,KAAM;QACZ,MAAM,aAAa,WAAW,IAAA,CAAK,KAAK;QACxC,IAAI,CAAC,YAAY;YAChB;QACD;QAEA,MAAM,aAAa,UAAA,CAAW,CAAC,CAAA,IAAK,UAAA,CAAW,CAAC,CAAA,IAAK,UAAA,CAAW,CAAC,CAAA;QACjE,aAAa,GAAA,CAAI,WAAW,WAAA,CAAY,CAAC;QAEzC,eAAe,SAAA,GAAY,WAAW,SAAA;QACtC,MAAM,iBAAiB,eAAe,IAAA,CAAK,KAAK;QAChD,IAAI,CAAC,gBAAgB;YACpB;QACD;QAEA,WAAW,SAAA,GAAY,eAAe,SAAA;IACvC;IAEA,OAAO;AACR;AAEO,SAAS,yBAAyB,QAAA,EAAkB;IAC1D,IAAI,SAAS,UAAA,CAAW,GAAG,EAAG,CAAA,OAAO;IACrC,IAAI,SAAS,UAAA,CAAW,WAAW,EAAG,CAAA,OAAO;IAC7C,IAAI,SAAS,UAAA,CAAW,YAAY,EAAG,CAAA,OAAO;IAC9C,IAAI,aAAa,SAAU,CAAA,OAAO;IAClC,IAAI,aAAa,iBAAkB,CAAA,OAAO;IAC1C,IAAI,aAAa,cAAe,CAAA,OAAO;IACvC,IAAI,aAAa,eAAgB,CAAA,OAAO;IACxC,OAAO;AACR;AAEO,SAAS,SAAS,GAAA,EAAa,OAAA,EAAiB;IACtD,OAAO;QACN,SAAS,gBAAgB,GAAG;QAC5B,WAAW,kBAAkB,KAAK,OAAO;IAC1C;AACD;AAEO,SAAS,kBAAkB,KAAA,EAAe;IAChD,OAAO,MAAM,IAAA,CAAK,MAAM,QAAA,CAAS,SAAS,GAAG,CAAC,IAAA,CAAO;YACpD,UAAU,CAAA,CAAE,CAAC,CAAA;YACb,KAAK,CAAA,CAAE,CAAC,CAAA,IAAK,CAAA,CAAE,CAAC,CAAA,IAAK,CAAA,CAAE,CAAC,CAAA;QACzB,CAAA,CAAE;AACH","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3180, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/exports/FontEmbedder.ts"],"sourcesContent":["import { assert, bind, compact } from '@tldraw/utils'\nimport { fetchCache, resourceToDataUrl } from './fetchCache'\nimport { ParsedFontFace, parseCss, parseCssFontFaces, parseCssFontFamilyValue } from './parseCss'\n\nexport const SVG_EXPORT_CLASSNAME = 'tldraw-svg-export'\n\n/**\n * Because SVGs cannot refer to external CSS/font resources, any web fonts used in the SVG must be\n * embedded as data URLs in inlined @font-face declarations. This class is responsible for\n * collecting used font faces and creating a CSS string with embedded fonts that can be used in the\n * SVG.\n *\n * It works in three steps:\n * 1. `startFindingCurrentDocumentFontFaces` - this traverses the current document, finding all the\n *    stylesheets in use (including those imported via `@import` rules etc) and extracting the\n *    @font-face declarations from them.\n * 2. `onFontFamilyValue` - as `StyleEmbedder` traverses the SVG, it will call this method with the\n *    value of the `font-family` property for each element. We parse out the font names in use, and\n *    mark them as needing to be embedded.\n * 3. `createCss` - once all the font families have been collected, this method will return a CSS\n *    string with embedded fonts.\n */\nexport class FontEmbedder {\n\tprivate fontFacesPromise: Promise<ParsedFontFace[]> | null = null\n\tprivate readonly foundFontNames = new Set<string>()\n\tprivate readonly fontFacesToEmbed = new Set<ParsedFontFace>()\n\tprivate readonly pendingPromises: Promise<void>[] = []\n\n\tstartFindingCurrentDocumentFontFaces() {\n\t\tassert(!this.fontFacesPromise, 'FontEmbedder already started')\n\t\tthis.fontFacesPromise = getCurrentDocumentFontFaces()\n\t}\n\n\t@bind onFontFamilyValue(fontFamilyValue: string) {\n\t\tassert(this.fontFacesPromise, 'FontEmbedder not started')\n\n\t\tconst fonts = parseCssFontFamilyValue(fontFamilyValue)\n\t\tfor (const font of fonts) {\n\t\t\tif (this.foundFontNames.has(font)) return\n\t\t\tthis.foundFontNames.add(font)\n\n\t\t\tthis.pendingPromises.push(\n\t\t\t\tthis.fontFacesPromise.then((fontFaces) => {\n\t\t\t\t\tconst relevantFontFaces = fontFaces.filter((fontFace) => fontFace.fontFamilies.has(font))\n\t\t\t\t\tfor (const fontFace of relevantFontFaces) {\n\t\t\t\t\t\tif (this.fontFacesToEmbed.has(fontFace)) continue\n\n\t\t\t\t\t\tthis.fontFacesToEmbed.add(fontFace)\n\t\t\t\t\t\tfor (const url of fontFace.urls) {\n\t\t\t\t\t\t\tif (!url.resolved || url.embedded) continue\n\t\t\t\t\t\t\t// kick off fetching this font\n\t\t\t\t\t\t\turl.embedded = resourceToDataUrl(url.resolved)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\t}\n\n\tasync createCss() {\n\t\tawait Promise.all(this.pendingPromises)\n\n\t\tlet css = ''\n\n\t\tfor (const fontFace of this.fontFacesToEmbed) {\n\t\t\tlet fontFaceString = `@font-face {${fontFace.fontFace}}`\n\n\t\t\tfor (const url of fontFace.urls) {\n\t\t\t\tif (!url.embedded) continue\n\t\t\t\tconst dataUrl = await url.embedded\n\t\t\t\tif (!dataUrl) continue\n\n\t\t\t\tfontFaceString = fontFaceString.replace(url.original, dataUrl)\n\t\t\t}\n\n\t\t\tcss += fontFaceString\n\t\t}\n\n\t\treturn css\n\t}\n}\n\nasync function getCurrentDocumentFontFaces() {\n\tconst fontFaces: (ParsedFontFace[] | Promise<ParsedFontFace[] | null>)[] = []\n\n\t// In exportToSvg we add the exported node to the DOM temporarily.\n\t// Because of this, and because we do a setTimeout to delay removing that node from the\n\t// DOM, when looking at document.styleSheets the number of nodes and stylesheets\n\t// can grow unbounded (especially when using \"Debug svg\" and moving shapes around).\n\t// To avoid this, we filter out the stylesheets that are part of the SVG export.\n\tconst styleSheetsWithoutSvgExports = Array.from(document.styleSheets).filter(\n\t\t(styleSheet) =>\n\t\t\t!(styleSheet.ownerNode as HTMLElement | null)?.closest(`.${SVG_EXPORT_CLASSNAME}`)\n\t)\n\n\tfor (const styleSheet of styleSheetsWithoutSvgExports) {\n\t\tlet cssRules\n\t\ttry {\n\t\t\tcssRules = styleSheet.cssRules\n\t\t} catch {\n\t\t\t// some stylesheets don't allow access through the DOM. We'll try to fetch them instead.\n\t\t}\n\n\t\tif (cssRules) {\n\t\t\tfor (const rule of styleSheet.cssRules) {\n\t\t\t\tif (rule instanceof CSSFontFaceRule) {\n\t\t\t\t\tfontFaces.push(parseCssFontFaces(rule.cssText, styleSheet.href ?? document.baseURI))\n\t\t\t\t} else if (rule instanceof CSSImportRule) {\n\t\t\t\t\tconst absoluteUrl = new URL(rule.href, rule.parentStyleSheet?.href ?? document.baseURI)\n\t\t\t\t\tfontFaces.push(fetchCssFontFaces(absoluteUrl.href))\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (styleSheet.href) {\n\t\t\tfontFaces.push(fetchCssFontFaces(styleSheet.href))\n\t\t}\n\t}\n\n\treturn compact(await Promise.all(fontFaces)).flat()\n}\n\nconst fetchCssFontFaces = fetchCache(async (response: Response): Promise<ParsedFontFace[]> => {\n\tconst parsed = parseCss(await response.text(), response.url)\n\n\tconst importedFontFaces = await Promise.all(\n\t\tparsed.imports.map(({ url }) => fetchCssFontFaces(new URL(url, response.url).href))\n\t)\n\n\treturn [...parsed.fontFaces, ...compact(importedFontFaces).flat()]\n})\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3371, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/exports/cssRules.ts"],"sourcesContent":["export type Styles = { [K in string]?: string }\nexport type ReadonlyStyles = { readonly [K in string]?: string }\n\ntype CanSkipRule = (\n\tvalue: string,\n\tproperty: string,\n\toptions: {\n\t\tgetStyle(property: string): string\n\t\tparentStyles: ReadonlyStyles\n\t\tdefaultStyles: ReadonlyStyles\n\t\tcurrentColor: string\n\t}\n) => boolean\n\nconst isCoveredByCurrentColor: CanSkipRule = (value, property, { currentColor }) => {\n\treturn value === 'currentColor' || value === currentColor\n}\n\nconst isInherited: CanSkipRule = (value, property, { parentStyles }) => {\n\treturn parentStyles[property] === value\n}\n\n// see comment below about why we exclude border styles\nconst isExcludedBorder =\n\t(borderDirection: string): CanSkipRule =>\n\t(value, property, { getStyle }) => {\n\t\tconst borderWidth = getStyle(`border-${borderDirection}-width`)\n\t\tconst borderStyle = getStyle(`border-${borderDirection}-style`)\n\n\t\tif (borderWidth === '0px') return true\n\t\tif (borderStyle === 'none') return true\n\t\treturn false\n\t}\n\nexport const cssRules = {\n\t// currentColor properties:\n\t'border-block-end-color': isCoveredByCurrentColor,\n\t'border-block-start-color': isCoveredByCurrentColor,\n\t'border-bottom-color': isCoveredByCurrentColor,\n\t'border-inline-end-color': isCoveredByCurrentColor,\n\t'border-inline-start-color': isCoveredByCurrentColor,\n\t'border-left-color': isCoveredByCurrentColor,\n\t'border-right-color': isCoveredByCurrentColor,\n\t'border-top-color': isCoveredByCurrentColor,\n\t'caret-color': isCoveredByCurrentColor,\n\t'column-rule-color': isCoveredByCurrentColor,\n\t'outline-color': isCoveredByCurrentColor,\n\t'text-decoration': (value, property, { currentColor }) => {\n\t\treturn value === 'none solid currentColor' || value === 'none solid ' + currentColor\n\t},\n\t'text-decoration-color': isCoveredByCurrentColor,\n\t'text-emphasis-color': isCoveredByCurrentColor,\n\n\t// inherited properties:\n\t'border-collapse': isInherited,\n\t'border-spacing': isInherited,\n\t'caption-side': isInherited,\n\t// N.B. We shouldn't inherit 'color' because there's some UA styling, e.g. `mark` elements\n\t// 'color': isInherited,\n\tcursor: isInherited,\n\tdirection: isInherited,\n\t'empty-cells': isInherited,\n\t'font-family': isInherited,\n\t'font-size': isInherited,\n\t'font-style': isInherited,\n\t'font-variant': isInherited,\n\t'font-weight': isInherited,\n\t'font-size-adjust': isInherited,\n\t'font-stretch': isInherited,\n\tfont: isInherited,\n\t'letter-spacing': isInherited,\n\t'line-height': isInherited,\n\t'list-style-image': isInherited,\n\t'list-style-position': isInherited,\n\t'list-style-type': isInherited,\n\t'list-style': isInherited,\n\torphans: isInherited,\n\t'overflow-wrap': isInherited,\n\tquotes: isInherited,\n\t'stroke-linecap': isInherited,\n\t'stroke-linejoin': isInherited,\n\t'tab-size': isInherited,\n\t'text-align': isInherited,\n\t'text-align-last': isInherited,\n\t'text-indent': isInherited,\n\t'text-justify': isInherited,\n\t'text-shadow': isInherited,\n\t'text-transform': isInherited,\n\tvisibility: isInherited,\n\t'white-space': isInherited,\n\t'white-space-collapse': isInherited,\n\twidows: isInherited,\n\t'word-break': isInherited,\n\t'word-spacing': isInherited,\n\t'word-wrap': isInherited,\n\n\t// special border cases - we have a weird case (tailwind seems to trigger this) where all\n\t// border-styles sometimes get set to 'solid', but the border-width is 0 so they don't render.\n\t// but in SVGs, **sometimes**, the border-width defaults (i think from a UA style-sheet? but\n\t// honestly can't tell) to 1.5px so the border displays. we work around this by only including\n\t// border styles at all if both the border-width and border-style are set to something that\n\t// would show a border.\n\t'border-top': isExcludedBorder('top'),\n\t'border-right': isExcludedBorder('right'),\n\t'border-bottom': isExcludedBorder('bottom'),\n\t'border-left': isExcludedBorder('left'),\n\t'border-block-end': isExcludedBorder('block-end'),\n\t'border-block-start': isExcludedBorder('block-start'),\n\t'border-inline-end': isExcludedBorder('inline-end'),\n\t'border-inline-start': isExcludedBorder('inline-start'),\n\t'border-top-style': isExcludedBorder('top'),\n\t'border-right-style': isExcludedBorder('right'),\n\t'border-bottom-style': isExcludedBorder('bottom'),\n\t'border-left-style': isExcludedBorder('left'),\n\t'border-block-end-style': isExcludedBorder('block-end'),\n\t'border-block-start-style': isExcludedBorder('block-start'),\n\t'border-inline-end-style': isExcludedBorder('inline-end'),\n\t'border-inline-start-style': isExcludedBorder('inline-start'),\n\t'border-top-width': isExcludedBorder('top'),\n\t'border-right-width': isExcludedBorder('right'),\n\t'border-bottom-width': isExcludedBorder('bottom'),\n\t'border-left-width': isExcludedBorder('left'),\n\t'border-block-end-width': isExcludedBorder('block-end'),\n\t'border-block-start-width': isExcludedBorder('block-start'),\n\t'border-inline-end-width': isExcludedBorder('inline-end'),\n} satisfies Record<string, CanSkipRule>\n"],"names":[],"mappings":";;;AAcA,MAAM,0BAAuC,CAAC,OAAO,UAAU,EAAE,YAAA,CAAa,CAAA,KAAM;IACnF,OAAO,UAAU,kBAAkB,UAAU;AAC9C;AAEA,MAAM,cAA2B,CAAC,OAAO,UAAU,EAAE,YAAA,CAAa,CAAA,KAAM;IACvE,OAAO,YAAA,CAAa,QAAQ,CAAA,KAAM;AACnC;AAGA,MAAM,mBACL,CAAC,kBACD,CAAC,OAAO,UAAU,EAAE,QAAA,CAAS,CAAA,KAAM;QAClC,MAAM,cAAc,SAAS,CAAA,OAAA,EAAU,eAAe,CAAA,MAAA,CAAQ;QAC9D,MAAM,cAAc,SAAS,CAAA,OAAA,EAAU,eAAe,CAAA,MAAA,CAAQ;QAE9D,IAAI,gBAAgB,MAAO,CAAA,OAAO;QAClC,IAAI,gBAAgB,OAAQ,CAAA,OAAO;QACnC,OAAO;IACR;AAEM,MAAM,WAAW;IAAA,2BAAA;IAEvB,0BAA0B;IAC1B,4BAA4B;IAC5B,uBAAuB;IACvB,2BAA2B;IAC3B,6BAA6B;IAC7B,qBAAqB;IACrB,sBAAsB;IACtB,oBAAoB;IACpB,eAAe;IACf,qBAAqB;IACrB,iBAAiB;IACjB,mBAAmB,CAAC,OAAO,UAAU,EAAE,YAAA,CAAa,CAAA,KAAM;QACzD,OAAO,UAAU,6BAA6B,UAAU,gBAAgB;IACzE;IACA,yBAAyB;IACzB,uBAAuB;IAAA,wBAAA;IAGvB,mBAAmB;IACnB,kBAAkB;IAClB,gBAAgB;IAAA,0FAAA;IAAA,wBAAA;IAGhB,QAAQ;IACR,WAAW;IACX,eAAe;IACf,eAAe;IACf,aAAa;IACb,cAAc;IACd,gBAAgB;IAChB,eAAe;IACf,oBAAoB;IACpB,gBAAgB;IAChB,MAAM;IACN,kBAAkB;IAClB,eAAe;IACf,oBAAoB;IACpB,uBAAuB;IACvB,mBAAmB;IACnB,cAAc;IACd,SAAS;IACT,iBAAiB;IACjB,QAAQ;IACR,kBAAkB;IAClB,mBAAmB;IACnB,YAAY;IACZ,cAAc;IACd,mBAAmB;IACnB,eAAe;IACf,gBAAgB;IAChB,eAAe;IACf,kBAAkB;IAClB,YAAY;IACZ,eAAe;IACf,wBAAwB;IACxB,QAAQ;IACR,cAAc;IACd,gBAAgB;IAChB,aAAa;IAAA,yFAAA;IAAA,8FAAA;IAAA,4FAAA;IAAA,8FAAA;IAAA,2FAAA;IAAA,uBAAA;IAQb,cAAc,iBAAiB,KAAK;IACpC,gBAAgB,iBAAiB,OAAO;IACxC,iBAAiB,iBAAiB,QAAQ;IAC1C,eAAe,iBAAiB,MAAM;IACtC,oBAAoB,iBAAiB,WAAW;IAChD,sBAAsB,iBAAiB,aAAa;IACpD,qBAAqB,iBAAiB,YAAY;IAClD,uBAAuB,iBAAiB,cAAc;IACtD,oBAAoB,iBAAiB,KAAK;IAC1C,sBAAsB,iBAAiB,OAAO;IAC9C,uBAAuB,iBAAiB,QAAQ;IAChD,qBAAqB,iBAAiB,MAAM;IAC5C,0BAA0B,iBAAiB,WAAW;IACtD,4BAA4B,iBAAiB,aAAa;IAC1D,2BAA2B,iBAAiB,YAAY;IACxD,6BAA6B,iBAAiB,cAAc;IAC5D,oBAAoB,iBAAiB,KAAK;IAC1C,sBAAsB,iBAAiB,OAAO;IAC9C,uBAAuB,iBAAiB,QAAQ;IAChD,qBAAqB,iBAAiB,MAAM;IAC5C,0BAA0B,iBAAiB,WAAW;IACtD,4BAA4B,iBAAiB,aAAa;IAC1D,2BAA2B,iBAAiB,YAAY;AACzD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3485, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/exports/domUtils.ts"],"sourcesContent":["export function getRenderedChildNodes(node: Element): Iterable<Node> {\n\tif (node.shadowRoot) {\n\t\t// if this is a custom element with a shadow root, then it's the shadow root's children that\n\t\t// are visible in the DOM. This is only accessible if they created the shadow root with\n\t\t// `mode: 'open'` though.\n\t\treturn node.shadowRoot.childNodes\n\t}\n\tif (isShadowSlotElement(node)) {\n\t\t// if this is a `<slot>` within a shadow root, we should render the nodes that are being\n\t\t// templated into the slot instead of the slot children itself.\n\t\tconst assignedNodes = node.assignedNodes()\n\t\tif (assignedNodes?.length) {\n\t\t\treturn assignedNodes\n\t\t}\n\t}\n\treturn node.childNodes\n}\n\nexport function* getRenderedChildren(node: Element) {\n\tfor (const child of getRenderedChildNodes(node)) {\n\t\tif (isElement(child)) yield child\n\t}\n}\n\nfunction getWindow(node: Node) {\n\treturn node.ownerDocument?.defaultView ?? globalThis\n}\n\nexport function isElement(node: Node): node is Element {\n\treturn node instanceof getWindow(node).Element\n}\n\nfunction isShadowRoot(node: Node): node is ShadowRoot {\n\treturn node instanceof getWindow(node).ShadowRoot\n}\n\nfunction isInShadowRoot(node: Node) {\n\treturn 'getRootNode' in node && isShadowRoot(node.getRootNode())\n}\n\nfunction isShadowSlotElement(node: Node): node is HTMLSlotElement {\n\treturn isInShadowRoot(node) && node instanceof getWindow(node).HTMLSlotElement\n}\n\nexport function elementStyle(element: Element) {\n\treturn (element as HTMLElement | SVGElement).style\n}\n\nexport function getComputedStyle(element: Element, pseudoElement?: string) {\n\treturn getWindow(element).getComputedStyle(element, pseudoElement)\n}\n"],"names":[],"mappings":";;;;;;;AAAO,SAAS,sBAAsB,IAAA,EAA+B;IACpE,IAAI,KAAK,UAAA,EAAY;QAIpB,OAAO,KAAK,UAAA,CAAW,UAAA;IACxB;IACA,IAAI,oBAAoB,IAAI,GAAG;QAG9B,MAAM,gBAAgB,KAAK,aAAA,CAAc;QACzC,IAAI,eAAe,QAAQ;YAC1B,OAAO;QACR;IACD;IACA,OAAO,KAAK,UAAA;AACb;AAEO,UAAU,oBAAoB,IAAA,EAAe;IACnD,KAAA,MAAW,SAAS,sBAAsB,IAAI,EAAG;QAChD,IAAI,UAAU,KAAK,EAAG,CAAA,MAAM;IAC7B;AACD;AAEA,SAAS,UAAU,IAAA,EAAY;IAC9B,OAAO,KAAK,aAAA,EAAe,eAAe;AAC3C;AAEO,SAAS,UAAU,IAAA,EAA6B;IACtD,OAAO,gBAAgB,UAAU,IAAI,EAAE,OAAA;AACxC;AAEA,SAAS,aAAa,IAAA,EAAgC;IACrD,OAAO,gBAAgB,UAAU,IAAI,EAAE,UAAA;AACxC;AAEA,SAAS,eAAe,IAAA,EAAY;IACnC,OAAO,iBAAiB,QAAQ,aAAa,KAAK,WAAA,CAAY,CAAC;AAChE;AAEA,SAAS,oBAAoB,IAAA,EAAqC;IACjE,OAAO,eAAe,IAAI,KAAK,gBAAgB,UAAU,IAAI,EAAE,eAAA;AAChE;AAEO,SAAS,aAAa,OAAA,EAAkB;IAC9C,OAAQ,QAAqC,KAAA;AAC9C;AAEO,SAAS,iBAAiB,OAAA,EAAkB,aAAA,EAAwB;IAC1E,OAAO,UAAU,OAAO,EAAE,gBAAA,CAAiB,SAAS,aAAa;AAClE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3538, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/exports/StyleEmbedder.ts"],"sourcesContent":["import { assertExists, getOwnProperty, objectMapValues, uniqueId } from '@tldraw/utils'\nimport { FontEmbedder } from './FontEmbedder'\nimport { ReadonlyStyles, Styles, cssRules } from './cssRules'\nimport {\n\telementStyle,\n\tgetComputedStyle,\n\tgetRenderedChildNodes,\n\tgetRenderedChildren,\n} from './domUtils'\nimport { resourceToDataUrl } from './fetchCache'\nimport { parseCssValueUrls, shouldIncludeCssProperty } from './parseCss'\n\nconst NO_STYLES = {} as const\n\ninterface ElementStyleInfo {\n\tself: Styles\n\tbefore: Styles | undefined\n\tafter: Styles | undefined\n}\n\nexport class StyleEmbedder {\n\tconstructor(private readonly root: Element) {}\n\tprivate readonly styles = new Map<Element, ElementStyleInfo>()\n\treadonly fonts = new FontEmbedder()\n\n\treadRootElementStyles(rootElement: Element) {\n\t\t// when reading a root, we always apply _all_ the styles, even if they match the defaults\n\t\tthis.readElementStyles(rootElement, {\n\t\t\tshouldRespectDefaults: false,\n\t\t\tshouldSkipInheritedParentStyles: false,\n\t\t})\n\n\t\tconst children = Array.from(getRenderedChildren(rootElement))\n\t\twhile (children.length) {\n\t\t\tconst child = children.pop()!\n\t\t\tchildren.push(...getRenderedChildren(child))\n\n\t\t\t// when reading children, we don't apply styles that match the defaults for that\n\t\t\t// element, or that would be inherited from the parent\n\t\t\tthis.readElementStyles(child, {\n\t\t\t\tshouldRespectDefaults: true,\n\t\t\t\tshouldSkipInheritedParentStyles: true,\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate readElementStyles(\n\t\telement: Element,\n\t\t{ shouldRespectDefaults = true, shouldSkipInheritedParentStyles = true }\n\t) {\n\t\tconst defaultStyles = shouldRespectDefaults\n\t\t\t? getDefaultStylesForTagName(element.tagName.toLowerCase())\n\t\t\t: NO_STYLES\n\n\t\tconst parentStyles = Object.assign({}, NO_STYLES) as Styles\n\t\tif (shouldSkipInheritedParentStyles) {\n\t\t\tlet el = element.parentElement\n\t\t\t// Keep going up the tree to find all the relevant styles\n\t\t\twhile (el) {\n\t\t\t\tconst currentStyles = this.styles.get(el)?.self\n\t\t\t\tfor (const style in currentStyles) {\n\t\t\t\t\tif (!parentStyles[style]) {\n\t\t\t\t\t\tparentStyles[style] = currentStyles[style]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tel = el.parentElement\n\t\t\t}\n\t\t}\n\n\t\tconst info: ElementStyleInfo = {\n\t\t\tself: styleFromElement(element, { defaultStyles, parentStyles }),\n\t\t\tbefore: styleFromPseudoElement(element, '::before'),\n\t\t\tafter: styleFromPseudoElement(element, '::after'),\n\t\t}\n\t\tthis.styles.set(element, info)\n\t}\n\n\tfetchResources() {\n\t\tconst promises: Promise<void>[] = []\n\n\t\tfor (const info of this.styles.values()) {\n\t\t\tfor (const styles of objectMapValues(info)) {\n\t\t\t\tif (!styles) continue\n\t\t\t\tfor (const [property, value] of Object.entries(styles)) {\n\t\t\t\t\tif (!value) continue\n\t\t\t\t\tif (property === 'font-family') {\n\t\t\t\t\t\tthis.fonts.onFontFamilyValue(value)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst urlMatches = parseCssValueUrls(value)\n\t\t\t\t\tif (urlMatches.length === 0) continue\n\n\t\t\t\t\tpromises.push(\n\t\t\t\t\t\t...urlMatches.map(async ({ url, original }) => {\n\t\t\t\t\t\t\tconst dataUrl = (await resourceToDataUrl(url)) ?? 'data:'\n\t\t\t\t\t\t\tstyles[property] = value.replace(original, `url(\"${dataUrl}\")`)\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.all(promises)\n\t}\n\n\t// custom elements are tricky. if we serialize the dom as-is, the custom elements wont have\n\t// their shadow-dom contents serialized. after we've read all the styles, we need to unwrap the\n\t// contents of each custom elements shadow dom directly into the parent element itself.\n\tunwrapCustomElements() {\n\t\tconst visited = new Set<Node>()\n\n\t\tconst visit = (element: Element, clonedParent: Element | null) => {\n\t\t\tif (visited.has(element)) return\n\t\t\tvisited.add(element)\n\n\t\t\tconst shadowRoot = element.shadowRoot\n\n\t\t\tif (shadowRoot) {\n\t\t\t\tconst clonedCustomEl = document.createElement('div')\n\t\t\t\tthis.styles.set(clonedCustomEl, this.styles.get(element)!)\n\n\t\t\t\tclonedCustomEl.setAttribute('data-tl-custom-element', element.tagName)\n\t\t\t\t;(clonedParent ?? element.parentElement!).appendChild(clonedCustomEl)\n\n\t\t\t\tfor (const child of shadowRoot.childNodes) {\n\t\t\t\t\tif (child instanceof Element) {\n\t\t\t\t\t\tvisit(child, clonedCustomEl)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclonedCustomEl.appendChild(child.cloneNode(true))\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telement.remove()\n\t\t\t} else if (clonedParent) {\n\t\t\t\tif (element.tagName.toLowerCase() === 'style') {\n\t\t\t\t\t// we don't clone style tags at that would break the style scoping. instead we\n\t\t\t\t\t// rely on the computed styles we've already read\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst clonedEl = element.cloneNode(false) as Element\n\t\t\t\tthis.styles.set(clonedEl, this.styles.get(element)!)\n\n\t\t\t\tclonedParent.appendChild(clonedEl)\n\n\t\t\t\tfor (const child of getRenderedChildNodes(element)) {\n\t\t\t\t\tif (child instanceof Element) {\n\t\t\t\t\t\tvisit(child, clonedEl)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclonedEl.appendChild(child.cloneNode(true))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const element of this.styles.keys()) {\n\t\t\tvisit(element, null)\n\t\t}\n\t}\n\n\tembedStyles(): string {\n\t\tlet css = ''\n\n\t\tfor (const [element, info] of this.styles) {\n\t\t\tif (info.after || info.before) {\n\t\t\t\tconst className = `pseudo-${uniqueId()}`\n\t\t\t\telement.classList.add(className)\n\n\t\t\t\tif (info.before) {\n\t\t\t\t\tcss += `.${className}::before {${formatCss(info.before)}}\\n`\n\t\t\t\t}\n\t\t\t\tif (info.after) {\n\t\t\t\t\tcss += `.${className}::after {${formatCss(info.after)}}\\n`\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst style = elementStyle(element)\n\t\t\tfor (const [property, value] of Object.entries(info.self)) {\n\t\t\t\tif (!value) continue\n\t\t\t\tstyle.setProperty(property, value)\n\t\t\t}\n\n\t\t\t// in HTML, font-kerning: auto is equivalent to font-kerning: normal. But in SVG, it's\n\t\t\t// none. We set it to normal here to match the HTML behavior, as otherwise this can\n\t\t\t// cause rendering differences.\n\t\t\tif (style.fontKerning === 'auto') {\n\t\t\t\tstyle.fontKerning = 'normal'\n\t\t\t}\n\t\t}\n\n\t\treturn css\n\t}\n\n\tasync getFontFaceCss() {\n\t\treturn await this.fonts.createCss()\n\t}\n\n\tdispose() {\n\t\tdestroyDefaultStyleFrame()\n\t}\n}\n\ninterface ReadStyleOpts {\n\tdefaultStyles: ReadonlyStyles\n\tparentStyles: ReadonlyStyles\n}\n\nfunction styleFromElement(element: Element, { defaultStyles, parentStyles }: ReadStyleOpts) {\n\t// `computedStyleMap` produces a more accurate representation of the styles, but it's not\n\t// supported in firefox at the time of writing. So we fall back to `getComputedStyle` if it's\n\t// not available.\n\tif (element.computedStyleMap) {\n\t\treturn styleFromComputedStyleMap(element.computedStyleMap(), { defaultStyles, parentStyles })\n\t}\n\treturn styleFromComputedStyle(getComputedStyle(element), { defaultStyles, parentStyles })\n}\n\nfunction styleFromPseudoElement(element: Element, pseudo: string) {\n\t// the equivalent of `computedStyleMap` for pseudo-elements isn't even fully specced out yet, so\n\t// for those we have to use `getComputedStyle` in all browsers.\n\tconst style = getComputedStyle(element, pseudo)\n\n\tconst content = style.getPropertyValue('content')\n\tif (content === '' || content === 'none') {\n\t\treturn undefined\n\t}\n\n\treturn styleFromComputedStyle(style, { defaultStyles: NO_STYLES, parentStyles: NO_STYLES })\n}\n\nfunction styleFromComputedStyleMap(\n\tstyle: StylePropertyMapReadOnly,\n\t{ defaultStyles, parentStyles }: ReadStyleOpts\n) {\n\tconst styles: Record<string, string> = {}\n\tconst currentColor = style.get('color')?.toString() || ''\n\tconst ruleOptions = {\n\t\tcurrentColor,\n\t\tparentStyles,\n\t\tdefaultStyles,\n\t\tgetStyle: (property: string) => style.get(property)?.toString() ?? '',\n\t}\n\tfor (const property of style.keys()) {\n\t\tif (!shouldIncludeCssProperty(property)) continue\n\n\t\tconst value = style.get(property)!.toString()\n\n\t\tif (defaultStyles[property] === value) continue\n\n\t\tconst rule = getOwnProperty(cssRules, property)\n\t\tif (rule && rule(value, property, ruleOptions)) continue\n\n\t\tstyles[property] = value\n\t}\n\n\treturn styles\n}\n\nfunction styleFromComputedStyle(\n\tstyle: CSSStyleDeclaration,\n\t{ defaultStyles, parentStyles }: ReadStyleOpts\n) {\n\tconst styles: Record<string, string> = {}\n\tconst currentColor = style.color\n\tconst ruleOptions = {\n\t\tcurrentColor,\n\t\tparentStyles,\n\t\tdefaultStyles,\n\t\tgetStyle: (property: string) => style.getPropertyValue(property),\n\t}\n\n\tfor (const property in style) {\n\t\tif (!shouldIncludeCssProperty(property)) continue\n\n\t\tconst value = style.getPropertyValue(property)\n\n\t\tif (defaultStyles[property] === value) continue\n\n\t\tconst rule = getOwnProperty(cssRules, property)\n\t\tif (rule && rule(value, property, ruleOptions)) continue\n\n\t\tstyles[property] = value\n\t}\n\treturn styles\n}\n\nfunction formatCss(style: ReadonlyStyles) {\n\tlet cssText = ''\n\tfor (const [property, value] of Object.entries(style)) {\n\t\tcssText += `${property}: ${value};`\n\t}\n\treturn cssText\n}\n\n// when we're figuring out the default values for a tag, we need read them from a separate document\n// so they're not affected by the current document's styles\nlet defaultStyleFrame:\n\t| { iframe: HTMLIFrameElement; foreignObject: SVGForeignObjectElement; document: Document }\n\t| undefined\nconst defaultStylesByTagName: Record<string, ReadonlyStyles> = {}\nfunction getDefaultStyleFrame() {\n\tif (!defaultStyleFrame) {\n\t\tconst frame = document.createElement('iframe')\n\t\tframe.style.display = 'none'\n\t\tdocument.body.appendChild(frame)\n\t\tconst frameDocument = assertExists(frame.contentDocument, 'frame must have a document')\n\t\tconst svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n\t\tconst foreignObject = document.createElementNS('http://www.w3.org/2000/svg', 'foreignObject')\n\t\tsvg.appendChild(foreignObject)\n\t\tframeDocument.body.appendChild(svg)\n\t\tdefaultStyleFrame = { iframe: frame, foreignObject, document: frameDocument }\n\t}\n\treturn defaultStyleFrame\n}\n\nfunction destroyDefaultStyleFrame() {\n\tif (defaultStyleFrame) {\n\t\tdocument.body.removeChild(defaultStyleFrame.iframe)\n\t\tdefaultStyleFrame = undefined\n\t}\n}\n\nconst defaultStyleReadOptions: ReadStyleOpts = { defaultStyles: NO_STYLES, parentStyles: NO_STYLES }\nfunction getDefaultStylesForTagName(tagName: string) {\n\tlet existing = defaultStylesByTagName[tagName]\n\tif (!existing) {\n\t\tconst { foreignObject, document } = getDefaultStyleFrame()\n\t\tconst element = document.createElement(tagName)\n\t\tforeignObject.appendChild(element)\n\t\texisting = element.computedStyleMap\n\t\t\t? styleFromComputedStyleMap(element.computedStyleMap(), defaultStyleReadOptions)\n\t\t\t: styleFromComputedStyle(getComputedStyle(element), defaultStyleReadOptions)\n\t\tforeignObject.removeChild(element)\n\t\tdefaultStylesByTagName[tagName] = existing\n\t}\n\treturn existing\n}\n"],"names":["document"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3817, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/exports/embedMedia.ts"],"sourcesContent":["import { MediaHelpers } from '@tldraw/utils'\nimport { getRenderedChildren } from './domUtils'\nimport { resourceToDataUrl } from './fetchCache'\n\nfunction copyAttrs(source: Element, target: Element) {\n\tconst attrs = Array.from(source.attributes)\n\tattrs.forEach((attr) => {\n\t\ttarget.setAttribute(attr.name, attr.value)\n\t})\n}\n\nfunction replace(original: HTMLElement, replacement: HTMLElement) {\n\toriginal.replaceWith(replacement)\n\treturn replacement\n}\n\nasync function createImage(dataUrl: string | null, cloneAttributesFrom?: HTMLElement) {\n\tconst image = document.createElement('img')\n\n\tif (cloneAttributesFrom) {\n\t\tcopyAttrs(cloneAttributesFrom, image)\n\t}\n\n\timage.setAttribute('src', dataUrl ?? 'data:')\n\timage.setAttribute('decoding', 'sync')\n\timage.setAttribute('loading', 'eager')\n\n\ttry {\n\t\tawait image.decode()\n\t} catch {\n\t\t// this is fine\n\t}\n\treturn image\n}\n\nasync function getCanvasReplacement(canvas: HTMLCanvasElement) {\n\ttry {\n\t\tconst dataURL = canvas.toDataURL()\n\t\treturn await createImage(dataURL, canvas)\n\t} catch {\n\t\treturn await createImage(null, canvas)\n\t}\n}\n\nasync function getVideoReplacement(video: HTMLVideoElement) {\n\ttry {\n\t\tconst dataUrl = await MediaHelpers.getVideoFrameAsDataUrl(video)\n\t\treturn createImage(dataUrl, video)\n\t} catch (err) {\n\t\tconsole.error('Could not get video frame', err)\n\t}\n\n\tif (video.poster) {\n\t\tconst dataUrl = await resourceToDataUrl(video.poster)\n\t\treturn createImage(dataUrl, video)\n\t}\n\n\treturn createImage(null, video)\n}\n\nexport async function embedMedia(node: HTMLElement) {\n\tif (node instanceof HTMLCanvasElement) {\n\t\treturn replace(node, await getCanvasReplacement(node))\n\t} else if (node instanceof HTMLVideoElement) {\n\t\treturn replace(node, await getVideoReplacement(node))\n\t} else if (node instanceof HTMLImageElement) {\n\t\tconst src = node.currentSrc || node.src\n\t\tconst dataUrl = await resourceToDataUrl(src)\n\t\tnode.setAttribute('src', dataUrl ?? 'data:')\n\t\tnode.setAttribute('decoding', 'sync')\n\t\tnode.setAttribute('loading', 'eager')\n\t\ttry {\n\t\t\tawait node.decode()\n\t\t} catch {\n\t\t\t// this is fine\n\t\t}\n\t\treturn node\n\t} else if (node instanceof HTMLInputElement) {\n\t\t// if an input has a value, make sure it's serialized when we convert to svg\n\t\tnode.setAttribute('value', node.value)\n\t} else if (node instanceof HTMLTextAreaElement) {\n\t\tnode.textContent = node.value\n\t}\n\n\tawait Promise.all(\n\t\tArray.from(getRenderedChildren(node), (child) => embedMedia(child as HTMLElement))\n\t)\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,oBAAoB;;AAC7B,SAAS,2BAA2B;AACpC,SAAS,yBAAyB;;;;AAElC,SAAS,UAAU,MAAA,EAAiB,MAAA,EAAiB;IACpD,MAAM,QAAQ,MAAM,IAAA,CAAK,OAAO,UAAU;IAC1C,MAAM,OAAA,CAAQ,CAAC,SAAS;QACvB,OAAO,YAAA,CAAa,KAAK,IAAA,EAAM,KAAK,KAAK;IAC1C,CAAC;AACF;AAEA,SAAS,QAAQ,QAAA,EAAuB,WAAA,EAA0B;IACjE,SAAS,WAAA,CAAY,WAAW;IAChC,OAAO;AACR;AAEA,eAAe,YAAY,OAAA,EAAwB,mBAAA,EAAmC;IACrF,MAAM,QAAQ,SAAS,aAAA,CAAc,KAAK;IAE1C,IAAI,qBAAqB;QACxB,UAAU,qBAAqB,KAAK;IACrC;IAEA,MAAM,YAAA,CAAa,OAAO,WAAW,OAAO;IAC5C,MAAM,YAAA,CAAa,YAAY,MAAM;IACrC,MAAM,YAAA,CAAa,WAAW,OAAO;IAErC,IAAI;QACH,MAAM,MAAM,MAAA,CAAO;IACpB,EAAA,OAAQ,CAER;IACA,OAAO;AACR;AAEA,eAAe,qBAAqB,MAAA,EAA2B;IAC9D,IAAI;QACH,MAAM,UAAU,OAAO,SAAA,CAAU;QACjC,OAAO,MAAM,YAAY,SAAS,MAAM;IACzC,EAAA,OAAQ;QACP,OAAO,MAAM,YAAY,MAAM,MAAM;IACtC;AACD;AAEA,eAAe,oBAAoB,KAAA,EAAyB;IAC3D,IAAI;QACH,MAAM,UAAU,MAAM,6LAAA,CAAa,sBAAA,CAAuB,KAAK;QAC/D,OAAO,YAAY,SAAS,KAAK;IAClC,EAAA,OAAS,KAAK;QACb,QAAQ,KAAA,CAAM,6BAA6B,GAAG;IAC/C;IAEA,IAAI,MAAM,MAAA,EAAQ;QACjB,MAAM,UAAU,gMAAM,oBAAA,EAAkB,MAAM,MAAM;QACpD,OAAO,YAAY,SAAS,KAAK;IAClC;IAEA,OAAO,YAAY,MAAM,KAAK;AAC/B;AAEA,eAAsB,WAAW,IAAA,EAAmB;IACnD,IAAI,gBAAgB,mBAAmB;QACtC,OAAO,QAAQ,MAAM,MAAM,qBAAqB,IAAI,CAAC;IACtD,OAAA,IAAW,gBAAgB,kBAAkB;QAC5C,OAAO,QAAQ,MAAM,MAAM,oBAAoB,IAAI,CAAC;IACrD,OAAA,IAAW,gBAAgB,kBAAkB;QAC5C,MAAM,MAAM,KAAK,UAAA,IAAc,KAAK,GAAA;QACpC,MAAM,UAAU,gMAAM,oBAAA,EAAkB,GAAG;QAC3C,KAAK,YAAA,CAAa,OAAO,WAAW,OAAO;QAC3C,KAAK,YAAA,CAAa,YAAY,MAAM;QACpC,KAAK,YAAA,CAAa,WAAW,OAAO;QACpC,IAAI;YACH,MAAM,KAAK,MAAA,CAAO;QACnB,EAAA,OAAQ,CAER;QACA,OAAO;IACR,OAAA,IAAW,gBAAgB,kBAAkB;QAE5C,KAAK,YAAA,CAAa,SAAS,KAAK,KAAK;IACtC,OAAA,IAAW,gBAAgB,qBAAqB;QAC/C,KAAK,WAAA,GAAc,KAAK,KAAA;IACzB;IAEA,MAAM,QAAQ,GAAA,CACb,MAAM,IAAA,yLAAK,sBAAA,EAAoB,IAAI,GAAG,CAAC,QAAU,WAAW,KAAoB,CAAC;AAEnF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3901, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/exports/ExportDelay.tsx"],"sourcesContent":["import { bind, sleep } from '@tldraw/utils'\n\n/**\n * Export delay is a helper class that allows you to wait for a set of promises to resolve before\n * proceeding with an export. Over time, promises can be added by calling `waitUntil`.\n *\n * When `resolve` is called, we'll wait for all the promises already added (and any new ones added\n * in the mean time) to resolve before proceeding. The class is designed to be used once: after\n * `resolve` has been called and finished, new promises cannot be added.\n */\nexport class ExportDelay {\n\tprivate isResolved = false\n\tprivate readonly promisesToWaitFor: Promise<void>[] = []\n\n\tconstructor(private readonly maxDelayTimeMs: number) {}\n\n\t@bind waitUntil(promise: Promise<void>): void {\n\t\tif (this.isResolved) {\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot `waitUntil` - the export has already been resolved. Make sure to call `waitUntil` as soon as possible during an export - ie within the first react effect after rendering.'\n\t\t\t)\n\t\t}\n\t\tthis.promisesToWaitFor.push(\n\t\t\tpromise.catch((err) => console.error('Error while waiting for export:', err))\n\t\t)\n\t}\n\n\tprivate async resolvePromises() {\n\t\tlet lastLength = null\n\t\twhile (this.promisesToWaitFor.length !== lastLength) {\n\t\t\tlastLength = this.promisesToWaitFor.length\n\t\t\tawait Promise.allSettled(this.promisesToWaitFor)\n\n\t\t\t// wait for a cycle of the event loop to allow any of those promises to add more if needed.\n\t\t\tawait sleep(0)\n\t\t}\n\t}\n\n\tasync resolve() {\n\t\tconst timeoutPromise = sleep(this.maxDelayTimeMs).then(() => 'timeout' as const)\n\t\tconst resolvePromise = this.resolvePromises().then(() => 'resolved' as const)\n\n\t\tconst result = await Promise.race([timeoutPromise, resolvePromise])\n\t\tif (result === 'timeout') {\n\t\t\tconsole.warn('[tldraw] Export delay timed out after ${this.maxDelayTimeMs}ms')\n\t\t}\n\n\t\tthis.isResolved = true\n\t}\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,MAAM,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA5B,IAAA,gBAAA;;AAgBC,iBAAA;wKAAC,OAAA;CAAA;AANK,MAAM,YAAY;IAIxB,YAA6B,cAAA,CAAwB;QAAxB,IAAA,CAAA,cAAA,GAAA;QAJvB,kBAAA,OAAA,GAAA,IAAA;QACN,cAAA,IAAA,EAAQ,cAAa;QACrB,cAAA,IAAA,EAAiB,qBAAqC,CAAC,CAAA;IAED;IAEhD,UAAU,OAAA,EAA8B;QAC7C,IAAI,IAAA,CAAK,UAAA,EAAY;YACpB,MAAM,IAAI,MACT;QAEF;QACA,IAAA,CAAK,iBAAA,CAAkB,IAAA,CACtB,QAAQ,KAAA,CAAM,CAAC,MAAQ,QAAQ,KAAA,CAAM,mCAAmC,GAAG,CAAC;IAE9E;IAEA,MAAc,kBAAkB;QAC/B,IAAI,aAAa;QACjB,MAAO,IAAA,CAAK,iBAAA,CAAkB,MAAA,KAAW,WAAY;YACpD,aAAa,IAAA,CAAK,iBAAA,CAAkB,MAAA;YACpC,MAAM,QAAQ,UAAA,CAAW,IAAA,CAAK,iBAAiB;YAG/C,MAAM,mLAAA,EAAM,CAAC;QACd;IACD;IAEA,MAAM,UAAU;QACf,MAAM,4LAAiB,QAAA,EAAM,IAAA,CAAK,cAAc,EAAE,IAAA,CAAK,IAAM,SAAkB;QAC/E,MAAM,iBAAiB,IAAA,CAAK,eAAA,CAAgB,EAAE,IAAA,CAAK,IAAM,UAAmB;QAE5E,MAAM,SAAS,MAAM,QAAQ,IAAA,CAAK;YAAC;YAAgB,cAAc;SAAC;QAClE,IAAI,WAAW,WAAW;YACzB,QAAQ,IAAA,CAAK,gEAAgE;QAC9E;QAEA,IAAA,CAAK,UAAA,GAAa;IACnB;AACD;AAvCO,QAAA,iBAAA;AAMA,kBAAA,OAAA,GAAA,aAAN,gBANY;AAAN,oBAAA,OAAM","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4041, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/exports/getSvgJsx.tsx"],"sourcesContent":["import { useAtom, useValue } from '@tldraw/state-react'\nimport {\n\tTLFrameShape,\n\tTLGroupShape,\n\tTLShape,\n\tTLShapeId,\n\tgetDefaultColorTheme,\n} from '@tldraw/tlschema'\nimport { hasOwnProperty, promiseWithResolve, uniqueId } from '@tldraw/utils'\nimport {\n\tComponentType,\n\tFragment,\n\tReactElement,\n\tReactNode,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseMemo,\n\tuseRef,\n} from 'react'\nimport { flushSync } from 'react-dom'\nimport { ErrorBoundary } from '../components/ErrorBoundary'\nimport { InnerShape, InnerShapeBackground } from '../components/Shape'\nimport { Editor, TLRenderingShape } from '../editor/Editor'\nimport { TLFontFace } from '../editor/managers/FontManager/FontManager'\nimport { ShapeUtil } from '../editor/shapes/ShapeUtil'\nimport {\n\tSvgExportContext,\n\tSvgExportContextProvider,\n\tSvgExportDef,\n} from '../editor/types/SvgExportContext'\nimport { TLImageExportOptions } from '../editor/types/misc-types'\nimport { useEditor } from '../hooks/useEditor'\nimport { useEvent } from '../hooks/useEvent'\nimport { suffixSafeId, useUniqueSafeId } from '../hooks/useSafeId'\nimport { Box } from '../primitives/Box'\nimport { Mat } from '../primitives/Mat'\nimport { ExportDelay } from './ExportDelay'\n\nexport function getSvgJsx(editor: Editor, ids: TLShapeId[], opts: TLImageExportOptions = {}) {\n\tif (!window.document) throw Error('No document')\n\n\tconst {\n\t\tscale = 1,\n\t\t// should we include the background in the export? or is it transparent?\n\t\tbackground = editor.getInstanceState().exportBackground,\n\t\tpadding = editor.options.defaultSvgPadding,\n\t\tpreserveAspectRatio,\n\t} = opts\n\n\tconst isDarkMode = opts.darkMode ?? editor.user.getIsDarkMode()\n\n\t// ---Figure out which shapes we need to include\n\tconst shapeIdsToInclude = editor.getShapeAndDescendantIds(ids)\n\tconst renderingShapes = editor\n\t\t.getUnorderedRenderingShapes(false)\n\t\t.filter(({ id }) => shapeIdsToInclude.has(id))\n\n\t// --- Common bounding box of all shapes\n\tlet bbox: null | Box = null\n\tif (opts.bounds) {\n\t\tbbox = opts.bounds\n\t} else {\n\t\tfor (const { id } of renderingShapes) {\n\t\t\tconst maskedPageBounds = editor.getShapeMaskedPageBounds(id)\n\t\t\tif (!maskedPageBounds) continue\n\t\t\tif (bbox) {\n\t\t\t\tbbox.union(maskedPageBounds)\n\t\t\t} else {\n\t\t\t\tbbox = maskedPageBounds.clone()\n\t\t\t}\n\t\t}\n\t}\n\n\t// no unmasked shapes to export\n\tif (!bbox) return\n\n\tconst singleFrameShapeId =\n\t\tids.length === 1 && editor.isShapeOfType<TLFrameShape>(editor.getShape(ids[0])!, 'frame')\n\t\t\t? ids[0]\n\t\t\t: null\n\tif (!singleFrameShapeId) {\n\t\t// Expand by an extra 32 pixels\n\t\tbbox.expandBy(padding)\n\t}\n\n\t// We want the svg image to be BIGGER THAN USUAL to account for image quality\n\tconst w = bbox.width * scale\n\tconst h = bbox.height * scale\n\n\ttry {\n\t\tdocument.body.focus?.() // weird but necessary\n\t} catch {\n\t\t// not implemented\n\t}\n\n\tconst exportDelay = new ExportDelay(editor.options.maxExportDelayMs)\n\n\tconst initialEffectPromise = promiseWithResolve<void>()\n\texportDelay.waitUntil(initialEffectPromise)\n\n\tconst svg = (\n\t\t<SvgExport\n\t\t\teditor={editor}\n\t\t\tpreserveAspectRatio={preserveAspectRatio}\n\t\t\tscale={scale}\n\t\t\tpixelRatio={opts.pixelRatio ?? null}\n\t\t\tbbox={bbox}\n\t\t\tbackground={background}\n\t\t\tsingleFrameShapeId={singleFrameShapeId}\n\t\t\tisDarkMode={isDarkMode}\n\t\t\trenderingShapes={renderingShapes}\n\t\t\tonMount={initialEffectPromise.resolve}\n\t\t\twaitUntil={exportDelay.waitUntil}\n\t\t>\n\t\t\t{}\n\t\t</SvgExport>\n\t)\n\n\treturn { jsx: svg, width: w, height: h, exportDelay }\n}\n\nfunction SvgExport({\n\teditor,\n\tpreserveAspectRatio,\n\tscale,\n\tpixelRatio,\n\tbbox,\n\tbackground,\n\tsingleFrameShapeId,\n\tisDarkMode,\n\trenderingShapes,\n\tonMount,\n\twaitUntil,\n}: {\n\teditor: Editor\n\tpreserveAspectRatio?: string\n\tscale: number\n\tpixelRatio: number | null\n\tbbox: Box\n\tbackground: boolean\n\tsingleFrameShapeId: TLShapeId | null\n\tisDarkMode: boolean\n\trenderingShapes: TLRenderingShape[]\n\tonMount(): void\n\twaitUntil(promise: Promise<void>): void\n}) {\n\tconst masksId = useUniqueSafeId()\n\tconst theme = getDefaultColorTheme({ isDarkMode })\n\n\tconst stateAtom = useAtom<{\n\t\tdefsById: Record<\n\t\t\tstring,\n\t\t\t{ pending: false; element: ReactNode } | { pending: true; element: Promise<ReactNode> }\n\t\t>\n\t\tshapeElements: ReactElement[] | null\n\t}>('export state', { defsById: {}, shapeElements: null })\n\tconst { defsById, shapeElements } = useValue(stateAtom)\n\n\tconst addExportDef = useEvent((def: SvgExportDef) => {\n\t\tstateAtom.update((state) => {\n\t\t\tif (hasOwnProperty(state.defsById, def.key)) return state\n\n\t\t\tconst promise = Promise.resolve(def.getElement())\n\t\t\twaitUntil(\n\t\t\t\tpromise.then((result) => {\n\t\t\t\t\tstateAtom.update((state) => ({\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\tdefsById: { ...state.defsById, [def.key]: { pending: false, element: result } },\n\t\t\t\t\t}))\n\t\t\t\t})\n\t\t\t)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdefsById: { ...state.defsById, [def.key]: { pending: true, element: promise } },\n\t\t\t}\n\t\t})\n\t})\n\n\tconst exportContext = useMemo(\n\t\t(): SvgExportContext => ({\n\t\t\tisDarkMode,\n\t\t\twaitUntil,\n\t\t\taddExportDef,\n\t\t\tscale,\n\t\t\tpixelRatio,\n\t\t\tasync resolveAssetUrl(assetId, width) {\n\t\t\t\tconst asset = editor.getAsset(assetId)\n\t\t\t\tif (!asset || (asset.type !== 'image' && asset.type !== 'video')) return null\n\n\t\t\t\treturn await editor.resolveAssetUrl(assetId, {\n\t\t\t\t\tscreenScale: scale * (width / asset.props.w),\n\t\t\t\t\tshouldResolveToOriginal: pixelRatio === null,\n\t\t\t\t\tdpr: pixelRatio ?? undefined,\n\t\t\t\t})\n\t\t\t},\n\t\t}),\n\t\t[isDarkMode, waitUntil, addExportDef, scale, pixelRatio, editor]\n\t)\n\n\tconst didRenderRef = useRef(false)\n\tuseLayoutEffect(() => {\n\t\tif (didRenderRef.current) {\n\t\t\tthrow new Error('SvgExport should only render once - do not use with react strict mode')\n\t\t}\n\t\tdidRenderRef.current = true\n\t\t;(async () => {\n\t\t\tconst shapeDefs: Record<string, { pending: false; element: ReactElement }> = {}\n\n\t\t\t// Then render everything. The shapes with assets should all hit the cache\n\t\t\tconst unorderedShapeElementPromises = renderingShapes.map(\n\t\t\t\tasync ({ id, opacity, index, backgroundIndex }) => {\n\t\t\t\t\t// Don't render the frame if we're only exporting a single frame and it's children\n\t\t\t\t\tif (id === singleFrameShapeId) return []\n\n\t\t\t\t\tconst shape = editor.getShape(id)!\n\n\t\t\t\t\tif (editor.isShapeOfType<TLGroupShape>(shape, 'group')) return []\n\n\t\t\t\t\tconst elements = []\n\t\t\t\t\tconst util = editor.getShapeUtil(shape)\n\n\t\t\t\t\tif (util.toSvg || util.toBackgroundSvg) {\n\t\t\t\t\t\t// If the shape has any sort of custom svg export, let's use that.\n\t\t\t\t\t\tconst [toSvgResult, toBackgroundSvgResult] = await Promise.all([\n\t\t\t\t\t\t\tutil.toSvg?.(shape, exportContext),\n\t\t\t\t\t\t\tutil.toBackgroundSvg?.(shape, exportContext),\n\t\t\t\t\t\t])\n\n\t\t\t\t\t\tconst pageTransform = editor.getShapePageTransform(shape)\n\t\t\t\t\t\tlet pageTransformString = pageTransform!.toCssString()\n\t\t\t\t\t\tlet scale = 1\n\t\t\t\t\t\tif ('scale' in shape.props) {\n\t\t\t\t\t\t\tif (shape.props.scale !== 1) {\n\t\t\t\t\t\t\t\tscale = shape.props.scale\n\t\t\t\t\t\t\t\tpageTransformString = `${pageTransformString} scale(${shape.props.scale}, ${shape.props.scale})`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Create svg mask if shape has a frame as parent\n\t\t\t\t\t\tconst pageMask = editor.getShapeMask(shape.id)\n\t\t\t\t\t\tconst shapeMask = pageMask\n\t\t\t\t\t\t\t? Mat.From(Mat.Inverse(pageTransform)).applyToPoints(pageMask)\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\tconst shapeMaskId = suffixSafeId(masksId, shape.id)\n\t\t\t\t\t\tif (shapeMask) {\n\t\t\t\t\t\t\t// Create a clip path and add it to defs\n\t\t\t\t\t\t\tshapeDefs[shapeMaskId] = {\n\t\t\t\t\t\t\t\tpending: false,\n\t\t\t\t\t\t\t\telement: (\n\t\t\t\t\t\t\t\t\t<clipPath id={shapeMaskId}>\n\t\t\t\t\t\t\t\t\t\t{/* Create a polyline mask that does the clipping */}\n\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\td={`M${shapeMask.map(({ x, y }) => `${x / scale},${y / scale}`).join('L')}Z`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</clipPath>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (toSvgResult) {\n\t\t\t\t\t\t\telements.push({\n\t\t\t\t\t\t\t\tzIndex: index,\n\t\t\t\t\t\t\t\telement: (\n\t\t\t\t\t\t\t\t\t<g\n\t\t\t\t\t\t\t\t\t\tkey={`fg_${shape.id}`}\n\t\t\t\t\t\t\t\t\t\ttransform={pageTransformString}\n\t\t\t\t\t\t\t\t\t\topacity={opacity}\n\t\t\t\t\t\t\t\t\t\tclipPath={pageMask ? `url(#${shapeMaskId})` : undefined}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{toSvgResult}\n\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (toBackgroundSvgResult) {\n\t\t\t\t\t\t\telements.push({\n\t\t\t\t\t\t\t\tzIndex: backgroundIndex,\n\t\t\t\t\t\t\t\telement: (\n\t\t\t\t\t\t\t\t\t<g\n\t\t\t\t\t\t\t\t\t\tkey={`bg_${shape.id}`}\n\t\t\t\t\t\t\t\t\t\ttransform={pageTransformString}\n\t\t\t\t\t\t\t\t\t\topacity={opacity}\n\t\t\t\t\t\t\t\t\t\tclipPath={pageMask ? `url(#${shapeMaskId})` : undefined}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{toBackgroundSvgResult}\n\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If the shape doesn't have a custom svg export, we'll use its normal HTML\n\t\t\t\t\t\t// renderer in a foreignObject.\n\t\t\t\t\t\telements.push({\n\t\t\t\t\t\t\tzIndex: index,\n\t\t\t\t\t\t\telement: (\n\t\t\t\t\t\t\t\t<ForeignObjectShape\n\t\t\t\t\t\t\t\t\tkey={`fg_${shape.id}`}\n\t\t\t\t\t\t\t\t\tshape={shape}\n\t\t\t\t\t\t\t\t\tutil={util}\n\t\t\t\t\t\t\t\t\tcomponent={InnerShape}\n\t\t\t\t\t\t\t\t\tclassName=\"tl-shape\"\n\t\t\t\t\t\t\t\t\tbbox={bbox}\n\t\t\t\t\t\t\t\t\topacity={opacity}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (util.backgroundComponent) {\n\t\t\t\t\t\t\telements.push({\n\t\t\t\t\t\t\t\tzIndex: backgroundIndex,\n\t\t\t\t\t\t\t\telement: (\n\t\t\t\t\t\t\t\t\t<ForeignObjectShape\n\t\t\t\t\t\t\t\t\t\tkey={`bg_${shape.id}`}\n\t\t\t\t\t\t\t\t\t\tshape={shape}\n\t\t\t\t\t\t\t\t\t\tutil={util}\n\t\t\t\t\t\t\t\t\t\tcomponent={InnerShapeBackground}\n\t\t\t\t\t\t\t\t\t\tclassName=\"tl-shape tl-shape-background\"\n\t\t\t\t\t\t\t\t\t\tbbox={bbox}\n\t\t\t\t\t\t\t\t\t\topacity={opacity}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn elements\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tconst unorderedShapeElements = (await Promise.all(unorderedShapeElementPromises)).flat()\n\n\t\t\tflushSync(() => {\n\t\t\t\tstateAtom.update((state) => ({\n\t\t\t\t\t...state,\n\t\t\t\t\tshapeElements: unorderedShapeElements\n\t\t\t\t\t\t.sort((a, b) => a.zIndex - b.zIndex)\n\t\t\t\t\t\t.map(({ element }) => element),\n\t\t\t\t\tdefsById: { ...state.defsById, ...shapeDefs },\n\t\t\t\t}))\n\t\t\t})\n\t\t})()\n\t}, [bbox, editor, exportContext, masksId, renderingShapes, singleFrameShapeId, stateAtom])\n\n\tuseEffect(() => {\n\t\tconst fontsInUse = new Set<TLFontFace>()\n\t\tfor (const { id } of renderingShapes) {\n\t\t\tfor (const font of editor.fonts.getShapeFontFaces(id)) {\n\t\t\t\tfontsInUse.add(font)\n\t\t\t}\n\t\t}\n\n\t\tfor (const font of fontsInUse) {\n\t\t\taddExportDef({\n\t\t\t\tkey: uniqueId(),\n\t\t\t\tgetElement: async () => {\n\t\t\t\t\tconst declaration = await editor.fonts.toEmbeddedCssDeclaration(font)\n\t\t\t\t\treturn <style nonce={editor.options.nonce}>{declaration}</style>\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t}, [editor, renderingShapes, addExportDef])\n\n\tuseEffect(() => {\n\t\tif (shapeElements === null) return\n\t\tonMount()\n\t}, [onMount, shapeElements])\n\n\tlet backgroundColor = background ? theme.background : 'transparent'\n\n\tif (singleFrameShapeId && background) {\n\t\tconst frameShapeUtil = editor.getShapeUtil('frame') as any as\n\t\t\t| undefined\n\t\t\t| { options: { showColors: boolean } }\n\t\tif (frameShapeUtil?.options.showColors) {\n\t\t\tconst shape = editor.getShape(singleFrameShapeId)! as TLFrameShape\n\t\t\tconst color = theme[shape.props.color]\n\t\t\tbackgroundColor = color.frame.fill\n\t\t} else {\n\t\t\tbackgroundColor = theme.solid\n\t\t}\n\t}\n\n\treturn (\n\t\t<SvgExportContextProvider editor={editor} context={exportContext}>\n\t\t\t<svg\n\t\t\t\tpreserveAspectRatio={preserveAspectRatio}\n\t\t\t\tdirection=\"ltr\"\n\t\t\t\twidth={bbox.width * scale}\n\t\t\t\theight={bbox.height * scale}\n\t\t\t\tviewBox={`${bbox.minX} ${bbox.minY} ${bbox.width} ${bbox.height}`}\n\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\tstyle={{ backgroundColor }}\n\t\t\t\tdata-color-mode={isDarkMode ? 'dark' : 'light'}\n\t\t\t\tclassName={`tl-container tl-theme__force-sRGB ${isDarkMode ? 'tl-theme__dark' : 'tl-theme__light'}`}\n\t\t\t>\n\t\t\t\t<defs>\n\t\t\t\t\t{Object.entries(defsById).map(([key, def]) =>\n\t\t\t\t\t\tdef.pending ? null : <Fragment key={key}>{def.element}</Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</defs>\n\t\t\t\t{shapeElements}\n\t\t\t</svg>\n\t\t</SvgExportContextProvider>\n\t)\n}\n\nfunction ForeignObjectShape({\n\tshape,\n\tutil,\n\tclassName,\n\tcomponent: Component,\n\tbbox,\n\topacity,\n}: {\n\tshape: TLShape\n\tutil: ShapeUtil\n\tclassName?: string\n\tcomponent: ComponentType<{ shape: TLShape; util: ShapeUtil }>\n\tbbox: Box\n\topacity: number\n}) {\n\tconst editor = useEditor()\n\n\tconst transform = Mat.Translate(-bbox.minX, -bbox.minY).multiply(\n\t\teditor.getShapePageTransform(shape.id)!\n\t)\n\n\tconst bounds = editor.getShapeGeometry(shape.id).bounds\n\tconst width = Math.max(bounds.width, 1)\n\tconst height = Math.max(bounds.height, 1)\n\n\treturn (\n\t\t<ErrorBoundary fallback={() => null}>\n\t\t\t<foreignObject\n\t\t\t\tx={bbox.minX}\n\t\t\t\ty={bbox.minY}\n\t\t\t\twidth={bbox.w}\n\t\t\t\theight={bbox.h}\n\t\t\t\tclassName=\"tl-shape-foreign-object tl-export-embed-styles\"\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName={className}\n\t\t\t\t\tdata-shape-type={shape.type}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tclipPath: editor.getShapeClipPath(shape.id),\n\t\t\t\t\t\ttransform: transform.toCssString(),\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\theight,\n\t\t\t\t\t\topacity,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Component shape={shape} util={util} />\n\t\t\t\t</div>\n\t\t\t</foreignObject>\n\t\t</ErrorBoundary>\n\t)\n}\n"],"names":["state","scale"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4447, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/exports/exportToSvg.tsx"],"sourcesContent":["import { TLShapeId } from '@tldraw/tlschema'\nimport { assert } from '@tldraw/utils'\nimport { flushSync } from 'react-dom'\nimport { createRoot } from 'react-dom/client'\nimport { Editor } from '../editor/Editor'\nimport { TLSvgExportOptions } from '../editor/types/misc-types'\nimport { SVG_EXPORT_CLASSNAME } from './FontEmbedder'\nimport { StyleEmbedder } from './StyleEmbedder'\nimport { embedMedia } from './embedMedia'\nimport { getSvgJsx } from './getSvgJsx'\n\nlet idCounter = 1\n\nexport async function exportToSvg(\n\teditor: Editor,\n\tshapeIds: TLShapeId[],\n\topts: TLSvgExportOptions = {}\n) {\n\t// when rendering to SVG, we start by creating a JSX representation of the SVG that we can\n\t// render with react. Hopefully elements will have a `toSvg` method that renders them to SVG,\n\t// but if they don't we'll render their normal HTML content into an svg <foreignObject> element.\n\tconst result = getSvgJsx(editor, shapeIds, opts)\n\tif (!result) return undefined\n\n\t// we need to render that SVG into a real DOM element that's actually laid out in the document.\n\t// without this CSS and layout aren't computed correctly, which we need to make sure any\n\t// <foreignObject> elements have their styles and content inlined correctly.\n\tconst container = editor.getContainer()\n\tconst renderTarget = document.createElement('div')\n\trenderTarget.className = SVG_EXPORT_CLASSNAME\n\t// we hide the element visually, but we don't want it to be focusable or interactive in any way either\n\trenderTarget.inert = true\n\trenderTarget.tabIndex = -1\n\tObject.assign(renderTarget.style, {\n\t\tposition: 'absolute',\n\t\ttop: '0px',\n\t\tleft: '0px',\n\t\twidth: result.width + 'px',\n\t\theight: result.height + 'px',\n\t\tpointerEvents: 'none',\n\t\topacity: 0,\n\t})\n\t// we have to add the element to the document as otherwise styles won't be computed correctly.\n\tcontainer.appendChild(renderTarget)\n\n\t// create a react root...\n\tconst root = createRoot(renderTarget, { identifierPrefix: `export_${idCounter++}_` })\n\ttry {\n\t\t// ...wait for a tick so we know we're not in e.g. a react lifecycle method...\n\t\tawait Promise.resolve()\n\n\t\t// ...and render the SVG into it.\n\t\tflushSync(() => {\n\t\t\troot.render(result.jsx)\n\t\t})\n\n\t\t// Some operations take a while - for example, waiting for an asset to load in. We give\n\t\t// shape authors a way to delay snap-shotting the export until they're ready.\n\t\tawait result.exportDelay.resolve()\n\n\t\t// Extract the rendered SVG element from the react root\n\t\tconst svg = renderTarget.firstElementChild\n\t\tassert(svg instanceof SVGSVGElement, 'Expected an SVG element')\n\n\t\t// And apply any changes to <foreignObject> elements that we need to make. while we're in\n\t\t// the document, these elements work exactly as we'd expect from other dom elements - they\n\t\t// can load external resources, and any stylesheets in the document apply to them as we\n\t\t// would expect them to. But when we pull the SVG into its own file or draw it to a canvas\n\t\t// though, it has to be completely self-contained. We embed any external resources, and\n\t\t// apply any styles directly to the elements themselves.\n\t\tawait applyChangesToForeignObjects(svg)\n\n\t\treturn { svg, width: result.width, height: result.height }\n\t} finally {\n\t\t// eslint-disable-next-line no-restricted-globals\n\t\tsetTimeout(() => {\n\t\t\t// we wait for a cycle of the event loop to allow the svg to be cloned etc. before\n\t\t\t// unmounting\n\t\t\troot.unmount()\n\t\t\tcontainer.removeChild(renderTarget)\n\t\t}, 0)\n\t}\n}\n\nasync function applyChangesToForeignObjects(svg: SVGSVGElement) {\n\t// If any shapes have their own <foreignObject> elements, we don't want to mess with them. Our\n\t// ones that we need to embed will have a class of `tl-export-embed-styles`.\n\tconst foreignObjectChildren = [\n\t\t...svg.querySelectorAll('foreignObject.tl-export-embed-styles > *'),\n\t]\n\tif (!foreignObjectChildren.length) return\n\n\t// StyleEmbedder embeds any CSS - including resources like fonts and images.\n\tconst styleEmbedder = new StyleEmbedder(svg)\n\n\ttry {\n\t\t// begin traversing stylesheets to find @font-face declarations we might need to embed\n\t\tstyleEmbedder.fonts.startFindingCurrentDocumentFontFaces()\n\n\t\t// embed any media elements in the foreignObject children. images will get converted to data\n\t\t// urls, and things like videos will be converted to images.\n\t\tawait Promise.all(foreignObjectChildren.map((el) => embedMedia(el as HTMLElement)))\n\n\t\t// read the computed styles of every element (+ it's children & pseudo-elements) in the\n\t\t// document. we do this in a single pass before we start embedding any CSS stuff to avoid\n\t\t// constantly forcing the browser to recompute styles & layout.\n\t\tfor (const el of foreignObjectChildren) {\n\t\t\tstyleEmbedder.readRootElementStyles(el as HTMLElement)\n\t\t}\n\n\t\t// fetch any resources that we need to embed in the CSS, like background images.\n\t\tawait styleEmbedder.fetchResources()\n\t\tconst fontCss = await styleEmbedder.getFontFaceCss()\n\n\t\t// custom elements that make use of the shadow dom won't be serialized correctly by default:\n\t\t// the contents of the shadow dom will be ignored. once we've read the styles from the\n\t\t// document, we go through and replace any custom elements with plain `<div>`s. as we do so,\n\t\t// we traverse the shadow dom and clone it into the new plain div. any scoped stylesheets\n\t\t// are removed, as we've already read all the computed styles above.\n\t\tstyleEmbedder.unwrapCustomElements()\n\n\t\t// apply the computed styles (with their embedded resources) directly to the elements with\n\t\t// their `style` attribute. Anything that can't be done this way (pseudo-elements) will be\n\t\t// returned as a string of CSS.\n\t\tconst pseudoCss = styleEmbedder.embedStyles()\n\n\t\t// add the CSS to the SVG\n\t\tif (fontCss || pseudoCss) {\n\t\t\tconst style = document.createElementNS('http://www.w3.org/2000/svg', 'style')\n\t\t\tstyle.textContent = `${fontCss}\\n${pseudoCss}`\n\t\t\tsvg.prepend(style)\n\t\t}\n\t} finally {\n\t\tstyleEmbedder.dispose()\n\t}\n}\n"],"names":[],"mappings":";;;AACA,SAAS,cAAc;;AACvB,SAAS,iBAAiB;AAC1B,SAAS,kBAAkB;AAG3B,SAAS,4BAA4B;AACrC,SAAS,qBAAqB;AAC9B,SAAS,kBAAkB;AAC3B,SAAS,iBAAiB;;;;;;;;AAE1B,IAAI,YAAY;AAEhB,eAAsB,YACrB,MAAA,EACA,QAAA,EACA,OAA2B,CAAC,CAAA,EAC3B;IAID,MAAM,iMAAS,aAAA,EAAU,QAAQ,UAAU,IAAI;IAC/C,IAAI,CAAC,OAAQ,CAAA,OAAO,KAAA;IAKpB,MAAM,YAAY,OAAO,YAAA,CAAa;IACtC,MAAM,eAAe,SAAS,aAAA,CAAc,KAAK;IACjD,aAAa,SAAA,GAAY,+MAAA;IAEzB,aAAa,KAAA,GAAQ;IACrB,aAAa,QAAA,GAAW,CAAA;IACxB,OAAO,MAAA,CAAO,aAAa,KAAA,EAAO;QACjC,UAAU;QACV,KAAK;QACL,MAAM;QACN,OAAO,OAAO,KAAA,GAAQ;QACtB,QAAQ,OAAO,MAAA,GAAS;QACxB,eAAe;QACf,SAAS;IACV,CAAC;IAED,UAAU,WAAA,CAAY,YAAY;IAGlC,MAAM,iLAAO,aAAA,EAAW,cAAc;QAAE,kBAAkB,CAAA,OAAA,EAAU,WAAW,CAAA,CAAA,CAAA;IAAI,CAAC;IACpF,IAAI;QAEH,MAAM,QAAQ,OAAA,CAAQ;QAGtB,CAAA,GAAA,oKAAA,CAAA,YAAA,EAAU,MAAM;YACf,KAAK,MAAA,CAAO,OAAO,GAAG;QACvB,CAAC;QAID,MAAM,OAAO,WAAA,CAAY,OAAA,CAAQ;QAGjC,MAAM,MAAM,aAAa,iBAAA;QACzB,CAAA,GAAA,sKAAA,CAAA,SAAA,EAAO,eAAe,eAAe,yBAAyB;QAQ9D,MAAM,6BAA6B,GAAG;QAEtC,OAAO;YAAE;YAAK,OAAO,OAAO,KAAA;YAAO,QAAQ,OAAO,MAAA;QAAO;IAC1D,SAAE;QAED,WAAW,MAAM;YAGhB,KAAK,OAAA,CAAQ;YACb,UAAU,WAAA,CAAY,YAAY;QACnC,GAAG,CAAC;IACL;AACD;AAEA,eAAe,6BAA6B,GAAA,EAAoB;IAG/D,MAAM,wBAAwB;WAC1B,IAAI,gBAAA,CAAiB,0CAA0C;KACnE;IACA,IAAI,CAAC,sBAAsB,MAAA,CAAQ,CAAA;IAGnC,MAAM,gBAAgB,6LAAI,gBAAA,CAAc,GAAG;IAE3C,IAAI;QAEH,cAAc,KAAA,CAAM,oCAAA,CAAqC;QAIzD,MAAM,QAAQ,GAAA,CAAI,sBAAsB,GAAA,CAAI,CAAC,+LAAO,aAAA,EAAW,EAAiB,CAAC,CAAC;QAKlF,KAAA,MAAW,MAAM,sBAAuB;YACvC,cAAc,qBAAA,CAAsB,EAAiB;QACtD;QAGA,MAAM,cAAc,cAAA,CAAe;QACnC,MAAM,UAAU,MAAM,cAAc,cAAA,CAAe;QAOnD,cAAc,oBAAA,CAAqB;QAKnC,MAAM,YAAY,cAAc,WAAA,CAAY;QAG5C,IAAI,WAAW,WAAW;YACzB,MAAM,QAAQ,SAAS,eAAA,CAAgB,8BAA8B,OAAO;YAC5E,MAAM,WAAA,GAAc,GAAG,OAAO,CAAA;AAAA,EAAK,SAAS,EAAA;YAC5C,IAAI,OAAA,CAAQ,KAAK;QAClB;IACD,SAAE;QACD,cAAc,OAAA,CAAQ;IACvB;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4542, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/exports/getSvgAsImage.ts"],"sourcesContent":["import { FileHelpers, Image, PngHelpers, sleep } from '@tldraw/utils'\nimport { tlenv } from '../globals/environment'\nimport { clampToBrowserMaxCanvasSize } from '../utils/browserCanvasMaxSize'\nimport { debugFlags } from '../utils/debug-flags'\n\n/** @public */\nexport async function getSvgAsImage(\n\tsvgString: string,\n\toptions: {\n\t\ttype: 'png' | 'jpeg' | 'webp'\n\t\twidth: number\n\t\theight: number\n\t\tquality?: number\n\t\tpixelRatio?: number\n\t}\n) {\n\tconst { type, width, height, quality = 1, pixelRatio = 2 } = options\n\n\tlet [clampedWidth, clampedHeight] = clampToBrowserMaxCanvasSize(\n\t\twidth * pixelRatio,\n\t\theight * pixelRatio\n\t)\n\tclampedWidth = Math.floor(clampedWidth)\n\tclampedHeight = Math.floor(clampedHeight)\n\tconst effectiveScale = clampedWidth / width\n\n\t// usually we would use `URL.createObjectURL` here, but chrome has a bug where `blob:` URLs of\n\t// SVGs that use <foreignObject> mark the canvas as tainted, where data: ones do not.\n\t// https://issues.chromium.org/issues/41054640\n\tconst svgUrl = await FileHelpers.blobToDataUrl(new Blob([svgString], { type: 'image/svg+xml' }))\n\n\tconst canvas = await new Promise<HTMLCanvasElement | null>((resolve) => {\n\t\tconst image = Image()\n\t\timage.crossOrigin = 'anonymous'\n\n\t\timage.onload = async () => {\n\t\t\t// safari will fire `onLoad` before the fonts in the SVG are\n\t\t\t// actually loaded. just waiting around a while is brittle, but\n\t\t\t// there doesn't seem to be any better solution for now :( see\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=219770\n\t\t\tif (tlenv.isSafari) {\n\t\t\t\tawait sleep(250)\n\t\t\t}\n\n\t\t\tconst canvas = document.createElement('canvas') as HTMLCanvasElement\n\t\t\tconst ctx = canvas.getContext('2d')!\n\n\t\t\tcanvas.width = clampedWidth\n\t\t\tcanvas.height = clampedHeight\n\n\t\t\tctx.imageSmoothingEnabled = true\n\t\t\tctx.imageSmoothingQuality = 'high'\n\t\t\tctx.drawImage(image, 0, 0, clampedWidth, clampedHeight)\n\n\t\t\tURL.revokeObjectURL(svgUrl)\n\n\t\t\tresolve(canvas)\n\t\t}\n\n\t\timage.onerror = () => {\n\t\t\tresolve(null)\n\t\t}\n\n\t\timage.src = svgUrl\n\t})\n\n\tif (!canvas) return null\n\n\tconst blob = await new Promise<Blob | null>((resolve) =>\n\t\tcanvas.toBlob(\n\t\t\t(blob) => {\n\t\t\t\tif (!blob || debugFlags.throwToBlob.get()) {\n\t\t\t\t\tresolve(null)\n\t\t\t\t}\n\t\t\t\tresolve(blob)\n\t\t\t},\n\t\t\t'image/' + type,\n\t\t\tquality\n\t\t)\n\t)\n\n\tif (!blob) return null\n\n\tif (type === 'png') {\n\t\tconst view = new DataView(await blob.arrayBuffer())\n\t\treturn PngHelpers.setPhysChunk(view, effectiveScale, {\n\t\t\ttype: 'image/' + type,\n\t\t})\n\t} else {\n\t\treturn blob\n\t}\n}\n"],"names":["canvas","blob"],"mappings":";;;AAAA,SAAS,aAAa,OAAO,YAAY,aAAa;;;;;AACtD,SAAS,aAAa;AACtB,SAAS,mCAAmC;AAC5C,SAAS,kBAAkB;;;;;AAG3B,eAAsB,cACrB,SAAA,EACA,OAAA,EAOC;IACD,MAAM,EAAE,IAAA,EAAM,KAAA,EAAO,MAAA,EAAQ,UAAU,CAAA,EAAG,aAAa,CAAA,CAAE,CAAA,GAAI;IAE7D,IAAI,CAAC,cAAc,aAAa,CAAA,qMAAI,8BAAA,EACnC,QAAQ,YACR,SAAS;IAEV,eAAe,KAAK,KAAA,CAAM,YAAY;IACtC,gBAAgB,KAAK,KAAA,CAAM,aAAa;IACxC,MAAM,iBAAiB,eAAe;IAKtC,MAAM,SAAS,MAAM,kLAAA,CAAY,aAAA,CAAc,IAAI,KAAK;QAAC,SAAS;KAAA,EAAG;QAAE,MAAM;IAAgB,CAAC,CAAC;IAE/F,MAAM,SAAS,MAAM,IAAI,QAAkC,CAAC,YAAY;QACvE,MAAM,mLAAQ,QAAA,CAAM;QACpB,MAAM,WAAA,GAAc;QAEpB,MAAM,MAAA,GAAS,YAAY;YAK1B,2LAAI,QAAA,CAAM,QAAA,EAAU;gBACnB,iLAAM,QAAA,EAAM,GAAG;YAChB;YAEA,MAAMA,UAAS,SAAS,aAAA,CAAc,QAAQ;YAC9C,MAAM,MAAMA,QAAO,UAAA,CAAW,IAAI;YAElCA,QAAO,KAAA,GAAQ;YACfA,QAAO,MAAA,GAAS;YAEhB,IAAI,qBAAA,GAAwB;YAC5B,IAAI,qBAAA,GAAwB;YAC5B,IAAI,SAAA,CAAU,OAAO,GAAG,GAAG,cAAc,aAAa;YAEtD,IAAI,eAAA,CAAgB,MAAM;YAE1B,QAAQA,OAAM;QACf;QAEA,MAAM,OAAA,GAAU,MAAM;YACrB,QAAQ,IAAI;QACb;QAEA,MAAM,GAAA,GAAM;IACb,CAAC;IAED,IAAI,CAAC,OAAQ,CAAA,OAAO;IAEpB,MAAM,OAAO,MAAM,IAAI,QAAqB,CAAC,UAC5C,OAAO,MAAA,CACN,CAACC,UAAS;YACT,IAAI,CAACA,gMAAQ,cAAA,CAAW,WAAA,CAAY,GAAA,CAAI,GAAG;gBAC1C,QAAQ,IAAI;YACb;YACA,QAAQA,KAAI;QACb,GACA,WAAW,MACX;IAIF,IAAI,CAAC,KAAM,CAAA,OAAO;IAElB,IAAI,SAAS,OAAO;QACnB,MAAM,OAAO,IAAI,SAAS,MAAM,KAAK,WAAA,CAAY,CAAC;QAClD,mLAAO,aAAA,CAAW,YAAA,CAAa,MAAM,gBAAgB;YACpD,MAAM,WAAW;QAClB,CAAC;IACF,OAAO;QACN,OAAO;IACR;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4615, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/options.ts"],"sourcesContent":["import { ComponentType, Fragment } from 'react'\n\n/**\n * Options for configuring tldraw. For defaults, see {@link defaultTldrawOptions}.\n *\n * @example\n * ```tsx\n * const options: Partial<TldrawOptions> = {\n *     maxPages: 3,\n *     maxShapesPerPage: 1000,\n * }\n *\n * function MyTldrawComponent() {\n *     return <Tldraw options={options} />\n * }\n * ```\n *\n * @public\n */\nexport interface TldrawOptions {\n\treadonly maxShapesPerPage: number\n\treadonly maxFilesAtOnce: number\n\treadonly maxPages: number\n\treadonly animationMediumMs: number\n\treadonly followChaseViewportSnap: number\n\treadonly doubleClickDurationMs: number\n\treadonly multiClickDurationMs: number\n\treadonly coarseDragDistanceSquared: number\n\treadonly dragDistanceSquared: number\n\treadonly defaultSvgPadding: number\n\treadonly cameraSlideFriction: number\n\treadonly gridSteps: readonly {\n\t\treadonly min: number\n\t\treadonly mid: number\n\t\treadonly step: number\n\t}[]\n\treadonly collaboratorInactiveTimeoutMs: number\n\treadonly collaboratorIdleTimeoutMs: number\n\treadonly collaboratorCheckIntervalMs: number\n\treadonly cameraMovingTimeoutMs: number\n\treadonly hitTestMargin: number\n\treadonly edgeScrollDelay: number\n\treadonly edgeScrollEaseDuration: number\n\treadonly edgeScrollSpeed: number\n\treadonly edgeScrollDistance: number\n\treadonly coarsePointerWidth: number\n\treadonly coarseHandleRadius: number\n\treadonly handleRadius: number\n\treadonly longPressDurationMs: number\n\treadonly textShadowLod: number\n\treadonly adjacentShapeMargin: number\n\treadonly flattenImageBoundsExpand: number\n\treadonly flattenImageBoundsPadding: number\n\treadonly laserDelayMs: number\n\treadonly maxExportDelayMs: number\n\t/**\n\t * How long should previews created by {@link Editor.createTemporaryAssetPreview} last before\n\t * they expire? Defaults to 3 minutes.\n\t */\n\treadonly temporaryAssetPreviewLifetimeMs: number\n\treadonly actionShortcutsLocation: 'menu' | 'toolbar' | 'swap'\n\treadonly createTextOnCanvasDoubleClick: boolean\n\t/**\n\t * The react provider to use when exporting an image. This is useful if your shapes depend on\n\t * external context providers. By default, this is `React.Fragment`.\n\t */\n\treadonly exportProvider: ComponentType<{ children: React.ReactNode }>\n\t/**\n\t * By default, the toolbar items are accessible via number shortcuts according to their order. To disable this, set this option to false.\n\t */\n\treadonly enableToolbarKeyboardShortcuts: boolean\n\t/**\n\t * The maximum number of fonts that will be loaded while blocking the main rendering of the\n\t * canvas. If there are more than this number of fonts needed, we'll just show the canvas right\n\t * away and let the fonts load in in the background.\n\t */\n\treadonly maxFontsToLoadBeforeRender: number\n\t/**\n\t * If you have a CSP policy that blocks inline styles, you can use this prop to provide a\n\t * nonce to use in the editor's styles.\n\t */\n\treadonly nonce: string | undefined\n\t/**\n\t * Branding name of the app, currently only used for adding aria-label for the application.\n\t */\n\treadonly branding?: string\n}\n\n/** @public */\nexport const defaultTldrawOptions = {\n\tmaxShapesPerPage: 4000,\n\tmaxFilesAtOnce: 100,\n\tmaxPages: 40,\n\tanimationMediumMs: 320,\n\tfollowChaseViewportSnap: 2,\n\tdoubleClickDurationMs: 450,\n\tmultiClickDurationMs: 200,\n\tcoarseDragDistanceSquared: 36, // 6 squared\n\tdragDistanceSquared: 16, // 4 squared\n\tdefaultSvgPadding: 32,\n\tcameraSlideFriction: 0.09,\n\tgridSteps: [\n\t\t{ min: -1, mid: 0.15, step: 64 },\n\t\t{ min: 0.05, mid: 0.375, step: 16 },\n\t\t{ min: 0.15, mid: 1, step: 4 },\n\t\t{ min: 0.7, mid: 2.5, step: 1 },\n\t],\n\tcollaboratorInactiveTimeoutMs: 60000,\n\tcollaboratorIdleTimeoutMs: 3000,\n\tcollaboratorCheckIntervalMs: 1200,\n\tcameraMovingTimeoutMs: 64,\n\thitTestMargin: 8,\n\tedgeScrollDelay: 200,\n\tedgeScrollEaseDuration: 200,\n\tedgeScrollSpeed: 25,\n\tedgeScrollDistance: 8,\n\tcoarsePointerWidth: 12,\n\tcoarseHandleRadius: 20,\n\thandleRadius: 12,\n\tlongPressDurationMs: 500,\n\ttextShadowLod: 0.35,\n\tadjacentShapeMargin: 10,\n\tflattenImageBoundsExpand: 64,\n\tflattenImageBoundsPadding: 16,\n\tlaserDelayMs: 1200,\n\tmaxExportDelayMs: 5000,\n\ttemporaryAssetPreviewLifetimeMs: 180000,\n\tactionShortcutsLocation: 'swap',\n\tcreateTextOnCanvasDoubleClick: true,\n\texportProvider: Fragment,\n\tenableToolbarKeyboardShortcuts: true,\n\tmaxFontsToLoadBeforeRender: Infinity,\n\tnonce: undefined,\n} as const satisfies TldrawOptions\n"],"names":[],"mappings":";;;AAAA,SAAwB,gBAAgB;;AAyFjC,MAAM,uBAAuB;IACnC,kBAAkB;IAClB,gBAAgB;IAChB,UAAU;IACV,mBAAmB;IACnB,yBAAyB;IACzB,uBAAuB;IACvB,sBAAsB;IACtB,2BAA2B;IAAA,YAAA;IAC3B,qBAAqB;IAAA,YAAA;IACrB,mBAAmB;IACnB,qBAAqB;IACrB,WAAW;QACV;YAAE,KAAK,CAAA;YAAI,KAAK;YAAM,MAAM;QAAG;QAC/B;YAAE,KAAK;YAAM,KAAK;YAAO,MAAM;QAAG;QAClC;YAAE,KAAK;YAAM,KAAK;YAAG,MAAM;QAAE;QAC7B;YAAE,KAAK;YAAK,KAAK;YAAK,MAAM;QAAE;KAC/B;IACA,+BAA+B;IAC/B,2BAA2B;IAC3B,6BAA6B;IAC7B,uBAAuB;IACvB,eAAe;IACf,iBAAiB;IACjB,wBAAwB;IACxB,iBAAiB;IACjB,oBAAoB;IACpB,oBAAoB;IACpB,oBAAoB;IACpB,cAAc;IACd,qBAAqB;IACrB,eAAe;IACf,qBAAqB;IACrB,0BAA0B;IAC1B,2BAA2B;IAC3B,cAAc;IACd,kBAAkB;IAClB,iCAAiC;IACjC,yBAAyB;IACzB,+BAA+B;IAC/B,8KAAgB,WAAA;IAChB,gCAAgC;IAChC,4BAA4B;IAC5B,OAAO,KAAA;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4691, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/license/LicenseManager.ts"],"sourcesContent":["import { atom } from '@tldraw/state'\nimport { fetch } from '@tldraw/utils'\nimport { publishDates } from '../../version'\nimport { getDefaultCdnBaseUrl } from '../utils/assets'\nimport { importPublicKey, str2ab } from '../utils/licensing'\n\nconst GRACE_PERIOD_DAYS = 5\n\nexport const FLAGS = {\n\tANNUAL_LICENSE: 0x1,\n\tPERPETUAL_LICENSE: 0x2,\n\tINTERNAL_LICENSE: 0x4,\n\tWITH_WATERMARK: 0x8,\n}\nconst HIGHEST_FLAG = Math.max(...Object.values(FLAGS))\n\nexport const PROPERTIES = {\n\tID: 0,\n\tHOSTS: 1,\n\tFLAGS: 2,\n\tEXPIRY_DATE: 3,\n}\nconst NUMBER_OF_KNOWN_PROPERTIES = Object.keys(PROPERTIES).length\n\nconst LICENSE_EMAIL = 'sales@tldraw.com'\n\nconst WATERMARK_TRACK_SRC = `${getDefaultCdnBaseUrl()}/watermarks/watermark-track.svg`\n\n/** @internal */\nexport interface LicenseInfo {\n\tid: string\n\thosts: string[]\n\tflags: number\n\texpiryDate: string\n}\n/** @internal */\nexport type InvalidLicenseReason =\n\t| 'invalid-license-key'\n\t| 'no-key-provided'\n\t| 'has-key-development-mode'\n\n/** @internal */\nexport type LicenseFromKeyResult = InvalidLicenseKeyResult | ValidLicenseKeyResult\n\n/** @internal */\nexport interface InvalidLicenseKeyResult {\n\tisLicenseParseable: false\n\treason: InvalidLicenseReason\n}\n\n/** @internal */\nexport interface ValidLicenseKeyResult {\n\tisLicenseParseable: true\n\tlicense: LicenseInfo\n\tisDevelopment: boolean\n\tisDomainValid: boolean\n\texpiryDate: Date\n\tisAnnualLicense: boolean\n\tisAnnualLicenseExpired: boolean\n\tisPerpetualLicense: boolean\n\tisPerpetualLicenseExpired: boolean\n\tisInternalLicense: boolean\n\tisLicensedWithWatermark: boolean\n}\n\n/** @internal */\nexport type TestEnvironment = 'development' | 'production'\n\n/** @internal */\nexport class LicenseManager {\n\tprivate publicKey =\n\t\t'MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEHJh0uUfxHtCGyerXmmatE368Hd9rI6LH9oPDQihnaCryRFWEVeOvf9U/SPbyxX74LFyJs5tYeAHq5Nc0Ax25LQ'\n\tpublic isDevelopment: boolean\n\tpublic isTest: boolean\n\tpublic isCryptoAvailable: boolean\n\tstate = atom<'pending' | 'licensed' | 'licensed-with-watermark' | 'unlicensed'>(\n\t\t'license state',\n\t\t'pending'\n\t)\n\tpublic verbose = true\n\n\tconstructor(\n\t\tlicenseKey: string | undefined,\n\t\ttestPublicKey?: string,\n\t\ttestEnvironment?: TestEnvironment\n\t) {\n\t\tthis.isTest = process.env.NODE_ENV === 'test'\n\t\tthis.isDevelopment = this.getIsDevelopment(testEnvironment)\n\t\tthis.publicKey = testPublicKey || this.publicKey\n\t\tthis.isCryptoAvailable = !!crypto.subtle\n\n\t\tthis.getLicenseFromKey(licenseKey).then((result) => {\n\t\t\tconst isUnlicensed = isEditorUnlicensed(result)\n\n\t\t\tif (!this.isDevelopment && isUnlicensed) {\n\t\t\t\tfetch(WATERMARK_TRACK_SRC)\n\t\t\t}\n\n\t\t\tif (isUnlicensed) {\n\t\t\t\tthis.state.set('unlicensed')\n\t\t\t} else if ((result as ValidLicenseKeyResult).isLicensedWithWatermark) {\n\t\t\t\tthis.state.set('licensed-with-watermark')\n\t\t\t} else {\n\t\t\t\tthis.state.set('licensed')\n\t\t\t}\n\t\t})\n\t}\n\n\tprivate getIsDevelopment(testEnvironment?: TestEnvironment) {\n\t\tif (testEnvironment === 'development') return true\n\t\tif (testEnvironment === 'production') return false\n\n\t\t// If we are using https on a non-localhost domain we assume it's a production env and a development one otherwise\n\t\treturn (\n\t\t\t!['https:', 'vscode-webview:'].includes(window.location.protocol) ||\n\t\t\twindow.location.hostname === 'localhost'\n\t\t)\n\t}\n\n\tprivate async extractLicenseKey(licenseKey: string): Promise<LicenseInfo> {\n\t\tconst [data, signature] = licenseKey.split('.')\n\t\tconst [prefix, encodedData] = data.split('/')\n\n\t\tif (!prefix.startsWith('tldraw-')) {\n\t\t\tthrow new Error(`Unsupported prefix '${prefix}'`)\n\t\t}\n\n\t\tconst publicCryptoKey = await importPublicKey(this.publicKey)\n\n\t\tlet isVerified\n\t\ttry {\n\t\t\tisVerified = await crypto.subtle.verify(\n\t\t\t\t{\n\t\t\t\t\tname: 'ECDSA',\n\t\t\t\t\thash: { name: 'SHA-256' },\n\t\t\t\t},\n\t\t\t\tpublicCryptoKey,\n\t\t\t\tnew Uint8Array(str2ab(atob(signature))),\n\t\t\t\tnew Uint8Array(str2ab(atob(encodedData)))\n\t\t\t)\n\t\t} catch (e) {\n\t\t\tconsole.error(e)\n\t\t\tthrow new Error('Could not perform signature validation')\n\t\t}\n\n\t\tif (!isVerified) {\n\t\t\tthrow new Error('Invalid signature')\n\t\t}\n\n\t\tlet decodedData: any\n\t\ttry {\n\t\t\tdecodedData = JSON.parse(atob(encodedData))\n\t\t} catch {\n\t\t\tthrow new Error('Could not parse object')\n\t\t}\n\t\tif (decodedData.length > NUMBER_OF_KNOWN_PROPERTIES) {\n\t\t\tthis.outputMessages([\n\t\t\t\t'License key contains some unknown properties.',\n\t\t\t\t'You may want to update tldraw packages to a newer version to get access to new functionality.',\n\t\t\t])\n\t\t}\n\n\t\treturn {\n\t\t\tid: decodedData[PROPERTIES.ID],\n\t\t\thosts: decodedData[PROPERTIES.HOSTS],\n\t\t\tflags: decodedData[PROPERTIES.FLAGS],\n\t\t\texpiryDate: decodedData[PROPERTIES.EXPIRY_DATE],\n\t\t}\n\t}\n\n\tasync getLicenseFromKey(licenseKey?: string): Promise<LicenseFromKeyResult> {\n\t\tif (!licenseKey) {\n\t\t\tif (!this.isDevelopment) {\n\t\t\t\tthis.outputNoLicenseKeyProvided()\n\t\t\t}\n\n\t\t\treturn { isLicenseParseable: false, reason: 'no-key-provided' }\n\t\t}\n\n\t\tif (this.isDevelopment && !this.isCryptoAvailable) {\n\t\t\tif (this.verbose) {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log(\n\t\t\t\t\t'tldraw: you seem to be in a development environment that does not support crypto. License not verified.'\n\t\t\t\t)\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('You should check that this works in production separately.')\n\t\t\t}\n\t\t\t// We can't parse the license if we are in development mode since crypto\n\t\t\t// is not available on http\n\t\t\treturn { isLicenseParseable: false, reason: 'has-key-development-mode' }\n\t\t}\n\n\t\t// Borrowed idea from AG Grid:\n\t\t// Copying from various sources (like PDFs) can include zero-width characters.\n\t\t// This helps makes sure the key validation doesn't fail.\n\t\tlet cleanedLicenseKey = licenseKey.replace(/[\\u200B-\\u200D\\uFEFF]/g, '')\n\t\tcleanedLicenseKey = cleanedLicenseKey.replace(/\\r?\\n|\\r/g, '')\n\n\t\ttry {\n\t\t\tconst licenseInfo = await this.extractLicenseKey(cleanedLicenseKey)\n\t\t\tconst expiryDate = new Date(licenseInfo.expiryDate)\n\t\t\tconst isAnnualLicense = this.isFlagEnabled(licenseInfo.flags, FLAGS.ANNUAL_LICENSE)\n\t\t\tconst isPerpetualLicense = this.isFlagEnabled(licenseInfo.flags, FLAGS.PERPETUAL_LICENSE)\n\n\t\t\tconst result: ValidLicenseKeyResult = {\n\t\t\t\tlicense: licenseInfo,\n\t\t\t\tisLicenseParseable: true,\n\t\t\t\tisDevelopment: this.isDevelopment,\n\t\t\t\tisDomainValid: this.isDomainValid(licenseInfo),\n\t\t\t\texpiryDate,\n\t\t\t\tisAnnualLicense,\n\t\t\t\tisAnnualLicenseExpired: isAnnualLicense && this.isAnnualLicenseExpired(expiryDate),\n\t\t\t\tisPerpetualLicense,\n\t\t\t\tisPerpetualLicenseExpired: isPerpetualLicense && this.isPerpetualLicenseExpired(expiryDate),\n\t\t\t\tisInternalLicense: this.isFlagEnabled(licenseInfo.flags, FLAGS.INTERNAL_LICENSE),\n\t\t\t\tisLicensedWithWatermark: this.isFlagEnabled(licenseInfo.flags, FLAGS.WITH_WATERMARK),\n\t\t\t}\n\t\t\tthis.outputLicenseInfoIfNeeded(result)\n\n\t\t\treturn result\n\t\t} catch (e: any) {\n\t\t\tthis.outputInvalidLicenseKey(e.message)\n\t\t\t// If the license can't be parsed, it's invalid\n\t\t\treturn { isLicenseParseable: false, reason: 'invalid-license-key' }\n\t\t}\n\t}\n\n\tprivate isDomainValid(licenseInfo: LicenseInfo) {\n\t\tconst currentHostname = window.location.hostname.toLowerCase()\n\n\t\treturn licenseInfo.hosts.some((host) => {\n\t\t\tconst normalizedHost = host.toLowerCase().trim()\n\n\t\t\t// Allow the domain if listed and www variations, 'example.com' allows 'example.com' and 'www.example.com'\n\t\t\tif (\n\t\t\t\tnormalizedHost === currentHostname ||\n\t\t\t\t`www.${normalizedHost}` === currentHostname ||\n\t\t\t\tnormalizedHost === `www.${currentHostname}`\n\t\t\t) {\n\t\t\t\treturn true\n\t\t\t}\n\n\t\t\t// If host is '*', we allow all domains.\n\t\t\tif (host === '*') {\n\t\t\t\t// All domains allowed.\n\t\t\t\treturn true\n\t\t\t}\n\n\t\t\t// Glob testing, we only support '*.somedomain.com' right now.\n\t\t\tif (host.includes('*')) {\n\t\t\t\tconst globToRegex = new RegExp(host.replace(/\\*/g, '.*?'))\n\t\t\t\treturn globToRegex.test(currentHostname) || globToRegex.test(`www.${currentHostname}`)\n\t\t\t}\n\n\t\t\t// VSCode support\n\t\t\tif (window.location.protocol === 'vscode-webview:') {\n\t\t\t\tconst currentUrl = new URL(window.location.href)\n\t\t\t\tconst extensionId = currentUrl.searchParams.get('extensionId')\n\t\t\t\tif (normalizedHost === extensionId) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false\n\t\t})\n\t}\n\n\tprivate getExpirationDateWithoutGracePeriod(expiryDate: Date) {\n\t\treturn new Date(expiryDate.getFullYear(), expiryDate.getMonth(), expiryDate.getDate())\n\t}\n\n\tprivate getExpirationDateWithGracePeriod(expiryDate: Date) {\n\t\treturn new Date(\n\t\t\texpiryDate.getFullYear(),\n\t\t\texpiryDate.getMonth(),\n\t\t\texpiryDate.getDate() + GRACE_PERIOD_DAYS + 1 // Add 1 day to include the expiration day\n\t\t)\n\t}\n\n\tprivate isAnnualLicenseExpired(expiryDate: Date) {\n\t\tconst expiration = this.getExpirationDateWithGracePeriod(expiryDate)\n\t\tconst isExpired = new Date() >= expiration\n\t\t// If it is not expired yet (including the grace period), but after the expiry date we warn the users\n\t\tif (!isExpired && new Date() >= this.getExpirationDateWithoutGracePeriod(expiryDate)) {\n\t\t\tthis.outputMessages([\n\t\t\t\t'tldraw license is about to expire, you are in a grace period.',\n\t\t\t\t`Please reach out to ${LICENSE_EMAIL} if you would like to renew your license.`,\n\t\t\t])\n\t\t}\n\t\treturn isExpired\n\t}\n\n\tprivate isPerpetualLicenseExpired(expiryDate: Date) {\n\t\tconst expiration = this.getExpirationDateWithGracePeriod(expiryDate)\n\t\tconst dates = {\n\t\t\tmajor: new Date(publishDates.major),\n\t\t\tminor: new Date(publishDates.minor),\n\t\t}\n\t\t// We allow patch releases, but the major and minor releases should be within the expiration date\n\t\treturn dates.major >= expiration || dates.minor >= expiration\n\t}\n\n\tprivate isFlagEnabled(flags: number, flag: number) {\n\t\treturn (flags & flag) === flag\n\t}\n\n\tprivate outputNoLicenseKeyProvided() {\n\t\t// Noop, we don't need to show this message.\n\t\t// this.outputMessages([\n\t\t// \t'No tldraw license key provided!',\n\t\t// \t`Please reach out to ${LICENSE_EMAIL} if you would like to license tldraw or if you'd like a trial.`,\n\t\t// ])\n\t}\n\n\tprivate outputInvalidLicenseKey(msg: string) {\n\t\tthis.outputMessages(['Invalid tldraw license key', `Reason: ${msg}`])\n\t}\n\n\tprivate outputLicenseInfoIfNeeded(result: ValidLicenseKeyResult) {\n\t\tif (result.isAnnualLicenseExpired) {\n\t\t\tthis.outputMessages([\n\t\t\t\t'Your tldraw license has expired!',\n\t\t\t\t`Please reach out to ${LICENSE_EMAIL} to renew.`,\n\t\t\t])\n\t\t}\n\n\t\tif (!result.isDomainValid && !result.isDevelopment) {\n\t\t\tthis.outputMessages([\n\t\t\t\t'This tldraw license key is not valid for this domain!',\n\t\t\t\t`Please reach out to ${LICENSE_EMAIL} if you would like to use tldraw on other domains.`,\n\t\t\t])\n\t\t}\n\t\t// If we added a new flag it will be twice the value of the currently highest flag.\n\t\t// And if all the current flags are on we would get the `HIGHEST_FLAG * 2 - 1`, so anything higher than that means there are new flags.\n\t\tif (result.license.flags >= HIGHEST_FLAG * 2) {\n\t\t\tthis.outputMessages([\n\t\t\t\t'This tldraw license contains some unknown flags.',\n\t\t\t\t'You may want to update tldraw packages to a newer version to get access to new functionality.',\n\t\t\t])\n\t\t}\n\t}\n\n\tprivate outputMessages(messages: string[]) {\n\t\tif (this.isTest) return\n\t\tif (this.verbose) {\n\t\t\tthis.outputDelimiter()\n\t\t\tfor (const message of messages) {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log(\n\t\t\t\t\t`%c${message}`,\n\t\t\t\t\t`color: white; background: crimson; padding: 2px; border-radius: 3px;`\n\t\t\t\t)\n\t\t\t}\n\t\t\tthis.outputDelimiter()\n\t\t}\n\t}\n\n\tprivate outputDelimiter() {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(\n\t\t\t'%c-------------------------------------------------------------------',\n\t\t\t`color: white; background: crimson; padding: 2px; border-radius: 3px;`\n\t\t)\n\t}\n\n\tstatic className = 'tl-watermark_SEE-LICENSE'\n}\n\nexport function isEditorUnlicensed(result: LicenseFromKeyResult) {\n\tif (!result.isLicenseParseable) return true\n\tif (!result.isDomainValid && !result.isDevelopment) return true\n\tif (result.isPerpetualLicenseExpired || result.isAnnualLicenseExpired) {\n\t\tif (result.isInternalLicense) {\n\t\t\tthrow new Error('License: Internal license expired.')\n\t\t}\n\t\treturn true\n\t}\n\n\treturn false\n}\n"],"names":[],"mappings":";;;;;;AAsFgB,QAAQ,IAAI;AAtF5B,SAAS,YAAY;;AACrB,SAAS,aAAa;;AACtB,SAAS,oBAAoB;AAC7B,SAAS,4BAA4B;AACrC,SAAS,iBAAiB,cAAc;;;;;;AAExC,MAAM,oBAAoB;AAEnB,MAAM,QAAQ;IACpB,gBAAgB;IAChB,mBAAmB;IACnB,kBAAkB;IAClB,gBAAgB;AACjB;AACA,MAAM,eAAe,KAAK,GAAA,CAAI,GAAG,OAAO,MAAA,CAAO,KAAK,CAAC;AAE9C,MAAM,aAAa;IACzB,IAAI;IACJ,OAAO;IACP,OAAO;IACP,aAAa;AACd;AACA,MAAM,6BAA6B,OAAO,IAAA,CAAK,UAAU,EAAE,MAAA;AAE3D,MAAM,gBAAgB;AAEtB,MAAM,sBAAsB,sLAAG,wBAAA,CAAqB,CAAC,EAAA,+BAAA,CAAA;AA2C9C,MAAM,eAAe;IACnB,YACP,6HAAA;IACM,cAAA;IACA,OAAA;IACA,kBAAA;IACP,gLAAQ,OAAA,EACP,iBACA,WACD;IACO,UAAU,KAAA;IAEjB,YACC,UAAA,EACA,aAAA,EACA,eAAA,CACC;QACD,IAAA,CAAK,MAAA,uDAAkC;QACvC,IAAA,CAAK,aAAA,GAAgB,IAAA,CAAK,gBAAA,CAAiB,eAAe;QAC1D,IAAA,CAAK,SAAA,GAAY,iBAAiB,IAAA,CAAK,SAAA;QACvC,IAAA,CAAK,iBAAA,GAAoB,CAAC,CAAC,OAAO,MAAA;QAElC,IAAA,CAAK,iBAAA,CAAkB,UAAU,EAAE,IAAA,CAAK,CAAC,WAAW;YACnD,MAAM,eAAe,mBAAmB,MAAM;YAE9C,IAAI,CAAC,IAAA,CAAK,aAAA,IAAiB,cAAc;gBACxC,CAAA,GAAA,sKAAA,CAAA,QAAA,EAAM,mBAAmB;YAC1B;YAEA,IAAI,cAAc;gBACjB,IAAA,CAAK,KAAA,CAAM,GAAA,CAAI,YAAY;YAC5B,OAAA,IAAY,OAAiC,uBAAA,EAAyB;gBACrE,IAAA,CAAK,KAAA,CAAM,GAAA,CAAI,yBAAyB;YACzC,OAAO;gBACN,IAAA,CAAK,KAAA,CAAM,GAAA,CAAI,UAAU;YAC1B;QACD,CAAC;IACF;IAEQ,iBAAiB,eAAA,EAAmC;QAC3D,IAAI,oBAAoB,cAAe,CAAA,OAAO;QAC9C,IAAI,oBAAoB,aAAc,CAAA,OAAO;QAG7C,OACC,CAAC;YAAC;YAAU,iBAAiB;SAAA,CAAE,QAAA,CAAS,OAAO,QAAA,CAAS,QAAQ,KAChE,OAAO,QAAA,CAAS,QAAA,KAAa;IAE/B;IAEA,MAAc,kBAAkB,UAAA,EAA0C;QACzE,MAAM,CAAC,MAAM,SAAS,CAAA,GAAI,WAAW,KAAA,CAAM,GAAG;QAC9C,MAAM,CAAC,QAAQ,WAAW,CAAA,GAAI,KAAK,KAAA,CAAM,GAAG;QAE5C,IAAI,CAAC,OAAO,UAAA,CAAW,SAAS,GAAG;YAClC,MAAM,IAAI,MAAM,CAAA,oBAAA,EAAuB,MAAM,CAAA,CAAA,CAAG;QACjD;QAEA,MAAM,kBAAkB,UAAM,qMAAA,EAAgB,IAAA,CAAK,SAAS;QAE5D,IAAI;QACJ,IAAI;YACH,aAAa,MAAM,OAAO,MAAA,CAAO,MAAA,CAChC;gBACC,MAAM;gBACN,MAAM;oBAAE,MAAM;gBAAU;YACzB,GACA,iBACA,IAAI,kMAAW,SAAA,EAAO,KAAK,SAAS,CAAC,CAAC,GACtC,IAAI,kMAAW,SAAA,EAAO,KAAK,WAAW,CAAC,CAAC;QAE1C,EAAA,OAAS,GAAG;YACX,QAAQ,KAAA,CAAM,CAAC;YACf,MAAM,IAAI,MAAM,wCAAwC;QACzD;QAEA,IAAI,CAAC,YAAY;YAChB,MAAM,IAAI,MAAM,mBAAmB;QACpC;QAEA,IAAI;QACJ,IAAI;YACH,cAAc,KAAK,KAAA,CAAM,KAAK,WAAW,CAAC;QAC3C,EAAA,OAAQ;YACP,MAAM,IAAI,MAAM,wBAAwB;QACzC;QACA,IAAI,YAAY,MAAA,GAAS,4BAA4B;YACpD,IAAA,CAAK,cAAA,CAAe;gBACnB;gBACA;aACA;QACF;QAEA,OAAO;YACN,IAAI,WAAA,CAAY,WAAW,EAAE,CAAA;YAC7B,OAAO,WAAA,CAAY,WAAW,KAAK,CAAA;YACnC,OAAO,WAAA,CAAY,WAAW,KAAK,CAAA;YACnC,YAAY,WAAA,CAAY,WAAW,WAAW,CAAA;QAC/C;IACD;IAEA,MAAM,kBAAkB,UAAA,EAAoD;QAC3E,IAAI,CAAC,YAAY;YAChB,IAAI,CAAC,IAAA,CAAK,aAAA,EAAe;gBACxB,IAAA,CAAK,0BAAA,CAA2B;YACjC;YAEA,OAAO;gBAAE,oBAAoB;gBAAO,QAAQ;YAAkB;QAC/D;QAEA,IAAI,IAAA,CAAK,aAAA,IAAiB,CAAC,IAAA,CAAK,iBAAA,EAAmB;YAClD,IAAI,IAAA,CAAK,OAAA,EAAS;gBAEjB,QAAQ,GAAA,CACP;gBAGD,QAAQ,GAAA,CAAI,4DAA4D;YACzE;YAGA,OAAO;gBAAE,oBAAoB;gBAAO,QAAQ;YAA2B;QACxE;QAKA,IAAI,oBAAoB,WAAW,OAAA,CAAQ,0BAA0B,EAAE;QACvE,oBAAoB,kBAAkB,OAAA,CAAQ,aAAa,EAAE;QAE7D,IAAI;YACH,MAAM,cAAc,MAAM,IAAA,CAAK,iBAAA,CAAkB,iBAAiB;YAClE,MAAM,aAAa,IAAI,KAAK,YAAY,UAAU;YAClD,MAAM,kBAAkB,IAAA,CAAK,aAAA,CAAc,YAAY,KAAA,EAAO,MAAM,cAAc;YAClF,MAAM,qBAAqB,IAAA,CAAK,aAAA,CAAc,YAAY,KAAA,EAAO,MAAM,iBAAiB;YAExF,MAAM,SAAgC;gBACrC,SAAS;gBACT,oBAAoB;gBACpB,eAAe,IAAA,CAAK,aAAA;gBACpB,eAAe,IAAA,CAAK,aAAA,CAAc,WAAW;gBAC7C;gBACA;gBACA,wBAAwB,mBAAmB,IAAA,CAAK,sBAAA,CAAuB,UAAU;gBACjF;gBACA,2BAA2B,sBAAsB,IAAA,CAAK,yBAAA,CAA0B,UAAU;gBAC1F,mBAAmB,IAAA,CAAK,aAAA,CAAc,YAAY,KAAA,EAAO,MAAM,gBAAgB;gBAC/E,yBAAyB,IAAA,CAAK,aAAA,CAAc,YAAY,KAAA,EAAO,MAAM,cAAc;YACpF;YACA,IAAA,CAAK,yBAAA,CAA0B,MAAM;YAErC,OAAO;QACR,EAAA,OAAS,GAAQ;YAChB,IAAA,CAAK,uBAAA,CAAwB,EAAE,OAAO;YAEtC,OAAO;gBAAE,oBAAoB;gBAAO,QAAQ;YAAsB;QACnE;IACD;IAEQ,cAAc,WAAA,EAA0B;QAC/C,MAAM,kBAAkB,OAAO,QAAA,CAAS,QAAA,CAAS,WAAA,CAAY;QAE7D,OAAO,YAAY,KAAA,CAAM,IAAA,CAAK,CAAC,SAAS;YACvC,MAAM,iBAAiB,KAAK,WAAA,CAAY,EAAE,IAAA,CAAK;YAG/C,IACC,mBAAmB,mBACnB,CAAA,IAAA,EAAO,cAAc,EAAA,KAAO,mBAC5B,mBAAmB,CAAA,IAAA,EAAO,eAAe,EAAA,EACxC;gBACD,OAAO;YACR;YAGA,IAAI,SAAS,KAAK;gBAEjB,OAAO;YACR;YAGA,IAAI,KAAK,QAAA,CAAS,GAAG,GAAG;gBACvB,MAAM,cAAc,IAAI,OAAO,KAAK,OAAA,CAAQ,OAAO,KAAK,CAAC;gBACzD,OAAO,YAAY,IAAA,CAAK,eAAe,KAAK,YAAY,IAAA,CAAK,CAAA,IAAA,EAAO,eAAe,EAAE;YACtF;YAGA,IAAI,OAAO,QAAA,CAAS,QAAA,KAAa,mBAAmB;gBACnD,MAAM,aAAa,IAAI,IAAI,OAAO,QAAA,CAAS,IAAI;gBAC/C,MAAM,cAAc,WAAW,YAAA,CAAa,GAAA,CAAI,aAAa;gBAC7D,IAAI,mBAAmB,aAAa;oBACnC,OAAO;gBACR;YACD;YAEA,OAAO;QACR,CAAC;IACF;IAEQ,oCAAoC,UAAA,EAAkB;QAC7D,OAAO,IAAI,KAAK,WAAW,WAAA,CAAY,GAAG,WAAW,QAAA,CAAS,GAAG,WAAW,OAAA,CAAQ,CAAC;IACtF;IAEQ,iCAAiC,UAAA,EAAkB;QAC1D,OAAO,IAAI,KACV,WAAW,WAAA,CAAY,GACvB,WAAW,QAAA,CAAS,GACpB,WAAW,OAAA,CAAQ,IAAI,oBAAoB;IAE7C;IAEQ,uBAAuB,UAAA,EAAkB;QAChD,MAAM,aAAa,IAAA,CAAK,gCAAA,CAAiC,UAAU;QACnE,MAAM,YAAY,aAAA,GAAA,IAAI,KAAK,KAAK;QAEhC,IAAI,CAAC,aAAa,aAAA,GAAA,IAAI,KAAK,KAAK,IAAA,CAAK,mCAAA,CAAoC,UAAU,GAAG;YACrF,IAAA,CAAK,cAAA,CAAe;gBACnB;gBACA,CAAA,oBAAA,EAAuB,aAAa,CAAA,yCAAA,CAAA;aACpC;QACF;QACA,OAAO;IACR;IAEQ,0BAA0B,UAAA,EAAkB;QACnD,MAAM,aAAa,IAAA,CAAK,gCAAA,CAAiC,UAAU;QACnE,MAAM,QAAQ;YACb,OAAO,IAAI,qKAAK,gBAAA,CAAa,KAAK;YAClC,OAAO,IAAI,sKAAK,eAAA,CAAa,KAAK;QACnC;QAEA,OAAO,MAAM,KAAA,IAAS,cAAc,MAAM,KAAA,IAAS;IACpD;IAEQ,cAAc,KAAA,EAAe,IAAA,EAAc;QAClD,OAAA,CAAQ,QAAQ,IAAA,MAAU;IAC3B;IAEQ,6BAA6B,CAMrC;IAEQ,wBAAwB,GAAA,EAAa;QAC5C,IAAA,CAAK,cAAA,CAAe;YAAC;YAA8B,CAAA,QAAA,EAAW,GAAG,EAAE;SAAC;IACrE;IAEQ,0BAA0B,MAAA,EAA+B;QAChE,IAAI,OAAO,sBAAA,EAAwB;YAClC,IAAA,CAAK,cAAA,CAAe;gBACnB;gBACA,CAAA,oBAAA,EAAuB,aAAa,CAAA,UAAA,CAAA;aACpC;QACF;QAEA,IAAI,CAAC,OAAO,aAAA,IAAiB,CAAC,OAAO,aAAA,EAAe;YACnD,IAAA,CAAK,cAAA,CAAe;gBACnB;gBACA,CAAA,oBAAA,EAAuB,aAAa,CAAA,kDAAA,CAAA;aACpC;QACF;QAGA,IAAI,OAAO,OAAA,CAAQ,KAAA,IAAS,eAAe,GAAG;YAC7C,IAAA,CAAK,cAAA,CAAe;gBACnB;gBACA;aACA;QACF;IACD;IAEQ,eAAe,QAAA,EAAoB;QAC1C,IAAI,IAAA,CAAK,MAAA,CAAQ,CAAA;QACjB,IAAI,IAAA,CAAK,OAAA,EAAS;YACjB,IAAA,CAAK,eAAA,CAAgB;YACrB,KAAA,MAAW,WAAW,SAAU;gBAE/B,QAAQ,GAAA,CACP,CAAA,EAAA,EAAK,OAAO,EAAA,EACZ,CAAA,oEAAA,CAAA;YAEF;YACA,IAAA,CAAK,eAAA,CAAgB;QACtB;IACD;IAEQ,kBAAkB;QAEzB,QAAQ,GAAA,CACP,yEACA,CAAA,oEAAA,CAAA;IAEF;IAEA,OAAO,YAAY,2BAAA;AACpB;AAEO,SAAS,mBAAmB,MAAA,EAA8B;IAChE,IAAI,CAAC,OAAO,kBAAA,CAAoB,CAAA,OAAO;IACvC,IAAI,CAAC,OAAO,aAAA,IAAiB,CAAC,OAAO,aAAA,CAAe,CAAA,OAAO;IAC3D,IAAI,OAAO,yBAAA,IAA6B,OAAO,sBAAA,EAAwB;QACtE,IAAI,OAAO,iBAAA,EAAmB;YAC7B,MAAM,IAAI,MAAM,oCAAoC;QACrD;QACA,OAAO;IACR;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4965, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/license/LicenseProvider.tsx"],"sourcesContent":["import { createContext, ReactNode, useContext, useState } from 'react'\nimport { LicenseManager } from './LicenseManager'\n\n/** @internal */\nexport const LicenseContext = createContext({} as LicenseManager)\n\n/** @internal */\nexport const useLicenseContext = () => useContext(LicenseContext)\n\n/** @internal */\nexport function LicenseProvider({\n\tlicenseKey,\n\tchildren,\n}: {\n\tlicenseKey?: string\n\tchildren: ReactNode\n}) {\n\tconst [licenseManager] = useState(() => new LicenseManager(licenseKey))\n\treturn <LicenseContext.Provider value={licenseManager}>{children}</LicenseContext.Provider>\n}\n"],"names":[],"mappings":";;;;;AAkBQ;AAlBR,SAAS,eAA0B,YAAY,gBAAgB;AAC/D,SAAS,sBAAsB;;;;AAGxB,MAAM,mLAAiB,gBAAA,EAAc,CAAC,CAAmB;AAGzD,MAAM,oBAAoB,KAAM,8KAAA,EAAW,cAAc;AAGzD,SAAS,gBAAgB,EAC/B,UAAA,EACA,QAAA,EACD,EAGG;IACF,MAAM,CAAC,cAAc,CAAA,IAAI,4KAAA;oCAAS,IAAM,8LAAI,iBAAA,CAAe,UAAU,CAAC;;IACtE,OAAO,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAC,eAAe,QAAA,EAAf;QAAwB,OAAO;QAAiB;IAAA,CAAS;AAClE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4995, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/license/useLicenseManagerState.ts"],"sourcesContent":["import { useValue } from '@tldraw/state-react'\nimport { LicenseManager } from './LicenseManager'\n\n/** @internal */\nexport function useLicenseManagerState(licenseManager: LicenseManager) {\n\treturn useValue('watermarkState', () => licenseManager.state.get(), [licenseManager])\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,gBAAgB;;AAIlB,SAAS,uBAAuB,cAAA,EAAgC;IACtE,4LAAO,WAAA,EAAS;2CAAkB,IAAM,eAAe,KAAA,CAAM,GAAA,CAAI;0CAAG;QAAC,cAAc;KAAC;AACrF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5016, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/license/Watermark.tsx"],"sourcesContent":["import { useValue } from '@tldraw/state-react'\nimport { memo, useRef } from 'react'\nimport { useCanvasEvents } from '../hooks/useCanvasEvents'\nimport { useEditor } from '../hooks/useEditor'\nimport { usePassThroughWheelEvents } from '../hooks/usePassThroughWheelEvents'\nimport { preventDefault, stopEventPropagation } from '../utils/dom'\nimport { runtime } from '../utils/runtime'\nimport { watermarkDesktopSvg, watermarkMobileSvg } from '../watermarks'\nimport { LicenseManager } from './LicenseManager'\nimport { useLicenseContext } from './LicenseProvider'\nimport { useLicenseManagerState } from './useLicenseManagerState'\n\nconst WATERMARK_DESKTOP_LOCAL_SRC = `data:image/svg+xml;utf8,${encodeURIComponent(watermarkDesktopSvg)}`\nconst WATERMARK_MOBILE_LOCAL_SRC = `data:image/svg+xml;utf8,${encodeURIComponent(watermarkMobileSvg)}`\n\n/** @internal */\nexport const Watermark = memo(function Watermark() {\n\tconst licenseManager = useLicenseContext()\n\tconst editor = useEditor()\n\tconst isMobile = useValue('is mobile', () => editor.getViewportScreenBounds().width < 700, [\n\t\teditor,\n\t])\n\n\tconst licenseManagerState = useLicenseManagerState(licenseManager)\n\n\tif (!['licensed-with-watermark', 'unlicensed'].includes(licenseManagerState)) return null\n\n\treturn (\n\t\t<>\n\t\t\t<LicenseStyles />\n\t\t\t<WatermarkInner src={isMobile ? WATERMARK_MOBILE_LOCAL_SRC : WATERMARK_DESKTOP_LOCAL_SRC} />\n\t\t</>\n\t)\n})\n\nconst WatermarkInner = memo(function WatermarkInner({ src }: { src: string }) {\n\tconst editor = useEditor()\n\tconst isDebugMode = useValue('debug mode', () => editor.getInstanceState().isDebugMode, [editor])\n\tconst isMobile = useValue('is mobile', () => editor.getViewportScreenBounds().width < 700, [\n\t\teditor,\n\t])\n\tconst events = useCanvasEvents()\n\n\tconst ref = useRef<HTMLDivElement>(null)\n\tusePassThroughWheelEvents(ref)\n\n\tconst maskCss = `url('${src}') center 100% / 100% no-repeat`\n\tconst url = 'https://tldraw.dev/?utm_source=dotcom&utm_medium=organic&utm_campaign=watermark'\n\n\treturn (\n\t\t<div\n\t\t\tref={ref}\n\t\t\tclassName={LicenseManager.className}\n\t\t\tdata-debug={isDebugMode}\n\t\t\tdata-mobile={isMobile}\n\t\t\tdraggable={false}\n\t\t\t{...events}\n\t\t>\n\t\t\t<button\n\t\t\t\tdraggable={false}\n\t\t\t\trole=\"button\"\n\t\t\t\tonPointerDown={(e) => {\n\t\t\t\t\tstopEventPropagation(e)\n\t\t\t\t\tpreventDefault(e)\n\t\t\t\t}}\n\t\t\t\ttitle=\"made with tldraw\"\n\t\t\t\tonClick={() => runtime.openWindow(url, '_blank')}\n\t\t\t\tstyle={{ mask: maskCss, WebkitMask: maskCss }}\n\t\t\t/>\n\t\t</div>\n\t)\n})\n\nconst LicenseStyles = memo(function LicenseStyles() {\n\tconst editor = useEditor()\n\tconst className = LicenseManager.className\n\n\tconst CSS = `/* ------------------- SEE LICENSE -------------------\nThe tldraw watermark is part of tldraw's license. It is shown for unlicensed\nor \"licensed-with-watermark\" users. By using this library, you agree to\npreserve the watermark's behavior, keeping it visible, unobscured, and\navailable to user-interaction.\n\nTo remove the watermark, please purchase a license at tldraw.dev.\n*/\n\n\t.${className} {\n\t\tposition: absolute;\n\t\tbottom: var(--space-2);\n\t\tright: var(--space-2);\n\t\twidth: 96px;\n\t\theight: 32px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tz-index: var(--layer-watermark) !important;\n\t\tbackground-color: color-mix(in srgb, var(--color-background) 62%, transparent);\n\t\topacity: 1;\n\t\tborder-radius: 5px;\n\t\tpointer-events: all;\n\t\tpadding: 2px;\n\t\tbox-sizing: content-box;\n\t}\n\n\t.${className} > button {\n\t\tposition: absolute;\n\t\twidth: 96px;\n\t\theight: 32px;\n\t\tpointer-events: all;\n\t\tcursor: inherit;\n\t\tcolor: var(--color-text);\n\t\topacity: .38;\n\t\tborder: 0;\n\t\tpadding: 0;\n\t\tbackground-color: currentColor;\n\t}\n\n\t.${className}[data-debug='true'] {\n\t\tbottom: 46px;\n\t}\n\n\t.${className}[data-mobile='true'] {\n\t\tborder-radius: 4px 0px 0px 4px;\n\t\tright: -2px;\n\t\twidth: 8px;\n\t\theight: 48px;\n\t}\n\n\t.${className}[data-mobile='true'] > button {\n\t\twidth: 8px;\n\t\theight: 32px;\n\t}\n\n\t@media (hover: hover) {\n\t\t.${className} > button {\n\t\t\tpointer-events: none;\n\t\t}\n\n\t\t.${className}:hover {\n\t\t\tbackground-color: var(--color-background);\n\t\t\ttransition: background-color 0.2s ease-in-out;\n\t\t\ttransition-delay: 0.32s;\n\t\t}\n\n\t\t.${className}:hover > button {\n\t\t\tanimation: ${className}_delayed_link 0.2s forwards ease-in-out;\n\t\t\tanimation-delay: 0.32s;\n\t\t}\n\n\t\t.${className} > button:focus-visible {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\n\n\t@keyframes ${className}_delayed_link {\n\t\t0% {\n\t\t\tcursor: inherit;\n\t\t\topacity: .38;\n\t\t\tpointer-events: none;\n\t\t}\n\t\t100% {\n\t\t\tcursor: pointer;\n\t\t\topacity: 1;\n\t\t\tpointer-events: all;\n\t\t}\n\t}`\n\n\treturn <style nonce={editor.options.nonce}>{CSS}</style>\n})\n"],"names":["Watermark","WatermarkInner","LicenseStyles"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5214, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/watermarks.ts"],"sourcesContent":["// This file is automatically generated by internal/scripts/refresh-assets.ts.\n// Do not edit manually. Or do, I'm a comment, not a cop.\n\nexport const watermarkDesktopSvg =\n\t'<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"3001\" height=\"1000\" fill=\"none\"><path fill=\"#000\" d=\"M590.656 300.449c0 49.706-40.294 90-90 90-49.705 0-90-40.294-90-90 0-49.705 40.295-90 90-90 49.706 0 90 40.295 90 90M569.431 719.011c-15.247 32.821-56.006 91.589-98.338 91.438-32.004-.115-38.642-30.904-17.414-50.856 17.381-16.337 28.246-48.075 31.995-72.719.415-2.728-1.556-5.197-4.272-5.679-39.666-7.04-70.746-40.877-70.746-83.417 0-48.23 38.983-87.329 87.07-87.329 39.936 0 70.172 22.237 83.369 52.397 18.839 43.055 7.117 115.733-11.664 156.165M2613.29 385.681V239.319c0-11.363 9.22-20.569 20.59-20.569h8.26c11.37 0 20.59 9.206 20.59 20.569v36.911c0 8.629 7 15.625 15.63 15.625h35.25c8.63 0 15.63-6.996 15.63-15.625v-36.911c0-11.363 9.22-20.569 20.59-20.569h8.17c11.37 0 20.59 9.206 20.59 20.569v146.362c0 11.363-9.22 20.569-20.59 20.569h-8.17c-11.37 0-20.59-9.206-20.59-20.569v-36.999c0-8.63-7-15.625-15.63-15.625h-35.25c-8.63 0-15.63 6.995-15.63 15.625v36.999c0 11.363-9.22 20.569-20.59 20.569h-8.26c-11.37 0-20.59-9.206-20.59-20.569M2391.97 239.319v146.362c0 11.348-9.16 20.569-20.49 20.569h-8.2c-11.33 0-20.49-9.221-20.49-20.569V239.319c0-11.348 9.16-20.569 20.49-20.569h8.2c11.33 0 20.49 9.221 20.49 20.569M2098.23 391.43l-42.69-146.361c-3.85-13.171 6.06-26.319 19.79-26.319h10.6c9.59 0 17.93 6.611 20.08 15.952l17.01 73.045c1.48 6.348 10.47 6.478 12.14.176l19.47-73.838c2.38-9.04 10.57-15.335 19.93-15.335h12.1c9.37 0 17.56 6.3 19.94 15.346l19.49 74.067c1.66 6.305 10.65 6.178 12.13-.171l17.09-73.294c2.15-9.339 10.49-15.948 20.08-15.948h10.53c13.72 0 23.63 13.141 19.79 26.31l-42.63 146.361c-2.56 8.789-10.63 14.829-19.79 14.829h-15.68c-9.12 0-17.16-5.98-19.76-14.709l-21.17-71.059c-1.77-5.948-10.19-5.957-11.97-.012l-21.33 71.071c-2.6 8.729-10.64 14.709-19.76 14.709h-15.59c-9.17 0-17.23-6.035-19.8-14.82M2443.23 218.75h118.59c11.38 0 20.62 9.195 20.62 20.557s-9.24 20.556-20.62 20.556h-24.79c-5.53 0-10 4.477-10 10v115.818c0 11.368-9.25 20.569-20.63 20.569h-7.65c-11.39 0-20.63-9.201-20.63-20.569V269.863c0-5.523-4.48-10-10-10h-24.89c-11.37 0-20.61-9.195-20.61-20.556s9.24-20.557 20.61-20.557M1174.15 218.75h24.64c8.35 0 15.88 5.042 19.04 12.764l34.61 83.942c2.13 5.161 9.44 5.155 11.56-.01l34.43-83.932a20.58 20.58 0 0 1 19.04-12.764h24.64c11.37 0 20.58 9.208 20.58 20.569v146.362c0 11.361-9.21 20.569-20.58 20.569h-7.09c-11.36 0-20.58-9.208-20.58-20.569l-.12-50.645c-.01-6.888-9.53-8.688-12.06-2.283l-23.46 59.332a20.57 20.57 0 0 1-19.14 13.009h-3.03a20.57 20.57 0 0 1-19.15-13.046l-23.47-59.68c-2.52-6.416-12.05-4.623-12.06 2.271l-.13 51.042c0 11.361-9.21 20.569-20.57 20.569h-7.1c-11.36 0-20.57-9.208-20.57-20.569V239.319c0-11.361 9.21-20.569 20.57-20.569\"/><path fill=\"#000\" fill-rule=\"evenodd\" d=\"m1449.94 391.836 6.12-19.392a6.255 6.255 0 0 1 5.96-4.369l50.22-.061a6.24 6.24 0 0 1 5.96 4.348l6.23 19.486c2.71 8.581 10.71 14.402 19.74 14.402h9.34c14.13 0 24.15-13.791 19.61-27.151l-49.74-146.361c-2.85-8.37-10.74-13.988-19.61-13.988h-33.16c-8.87 0-16.77 5.618-19.61 13.988l-49.74 146.361c-4.54 13.36 5.48 27.151 19.61 27.151h9.32c9.04 0 17.04-5.827 19.75-14.414m31.1-98.858c1.85-5.807 10.08-5.796 11.91.016l8.83 27.916c1.28 4.028-1.73 8.134-5.96 8.134h-17.74c-4.23 0-7.24-4.119-5.95-8.151zM1681.81 406.25c18.91 0 35.39-3.686 49.36-11.168 13.97-7.544 24.73-18.394 32.24-32.489 7.56-14.105 11.29-30.866 11.29-50.182 0-19.256-3.73-35.957-11.29-50.004-7.57-14.094-18.35-24.912-32.32-32.397-13.91-7.545-30.4-11.26-49.37-11.26h-49.5c-11.38 0-20.63 9.201-20.63 20.569v146.362c0 11.368 9.25 20.569 20.63 20.569zm23.13-47.701c-6.62 3.215-14.85 4.886-24.79 4.886-10.49 0-19-8.507-19-19v-64.34c0-10.149 8.23-18.376 18.38-18.376 10.18 0 18.56 1.703 25.23 4.974 6.59 3.149 11.63 8.315 15.08 15.633 3.45 7.269 5.28 17.268 5.28 30.162 0 12.891-1.82 22.951-5.28 30.347-3.39 7.319-8.36 12.509-14.9 15.714\" clip-rule=\"evenodd\"/><path fill=\"#000\" d=\"M1804.21 385.681V239.319c0-11.361 9.21-20.569 20.58-20.569h91.28c11.36 0 20.57 9.202 20.57 20.557s-9.21 20.556-20.57 20.556h-54.64a7.807 7.807 0 0 0-7.81 7.813v16.366a7.806 7.806 0 0 0 7.81 7.812h48.13c11.37 0 20.58 9.246 20.58 20.602s-9.21 20.601-20.58 20.601h-48.13a7.806 7.806 0 0 0-7.81 7.812v16.455a7.807 7.807 0 0 0 7.81 7.813h54.64c11.36 0 20.57 9.202 20.57 20.556s-9.21 20.557-20.57 20.557h-91.28c-11.37 0-20.58-9.208-20.58-20.569\"/><path fill=\"#000\" fill-rule=\"evenodd\" d=\"M2875.5 68.75h-2750c-31.066 0-56.25 25.184-56.25 56.25v750c0 31.066 25.184 56.25 56.25 56.25h2750c31.07 0 56.25-25.184 56.25-56.25V125c0-31.066-25.18-56.25-56.25-56.25M125.5 0C56.464 0 .5 55.964.5 125v750c0 69.036 55.965 125 125 125h2750c69.04 0 125-55.964 125-125V125c0-69.036-55.96-125-125-125z\" clip-rule=\"evenodd\"/><path fill=\"#000\" d=\"M2476.06 804.813c-10.54 0-19.82-6.947-22.81-17.068L2390.79 575.7c-4.49-15.248 6.92-30.534 22.8-30.534h27.75c11.1 0 20.72 7.686 23.18 18.52L2489 671.402c2.07 9.093 14.93 9.321 17.32.308l28.83-108.844c2.76-10.435 12.19-17.7 22.98-17.7h25.17c10.8 0 20.25 7.293 22.99 17.755l28.27 107.739c2.36 9.001 15.18 8.829 17.3-.232l25.01-106.888c2.51-10.763 12.1-18.374 23.14-18.374h27.87c15.88 0 27.29 15.286 22.8 30.534l-62.46 212.045a23.78 23.78 0 0 1-22.81 17.068h-32.12c-10.39 0-19.58-6.763-22.69-16.696l-32.08-102.694c-2.62-8.397-14.51-8.331-17.04.095l-30.74 102.346c-3.02 10.061-12.27 16.949-22.76 16.949zM1742.44 804.813h-75.81c-13.09 0-23.71-10.656-23.71-23.801V568.967c0-13.145 10.62-23.801 23.71-23.801h74.8c26.6 0 49.59 5.198 68.95 15.594 19.45 10.312 34.44 25.187 44.96 44.627 10.61 19.355 15.91 42.556 15.91 69.602q0 40.57-15.78 69.73c-10.53 19.355-25.43 34.231-44.71 44.627-19.28 10.311-42.05 15.467-68.32 15.467m-29.3-83.642c0 13.145 10.61 23.801 23.71 23.801h3.06c12.8 0 23.7-2.07 32.71-6.212 9.09-4.141 16-11.283 20.71-21.426q7.2-15.213 7.2-42.345 0-27.13-7.32-42.344c-4.8-10.143-11.87-17.285-21.22-21.426-9.26-4.142-20.63-6.212-34.1-6.212h-1.04c-13.1 0-23.71 10.656-23.71 23.801zM1460.86 804.813c-13.12 0-23.76-10.656-23.76-23.801V568.967c0-13.145 10.64-23.801 23.76-23.801h22.84c13.13 0 23.76 10.656 23.76 23.801v155.247c0 13.145 10.64 23.801 23.76 23.801h57.27c13.12 0 23.76 10.656 23.76 23.801v9.196c0 13.145-10.64 23.801-23.76 23.801zM1204.45 601.964c-13.13 0-23.77-10.656-23.77-23.801v-9.196c0-13.145 10.64-23.801 23.77-23.801h177.89c13.13 0 23.78 10.656 23.78 23.801v9.196c0 13.145-10.65 23.801-23.78 23.801h-39.38c-8.21 0-14.86 6.66-14.86 14.875v164.173c0 13.145-10.64 23.801-23.78 23.801h-21.85c-13.13 0-23.78-10.656-23.78-23.801V616.839c0-8.215-6.65-14.875-14.86-14.875z\"/><path fill=\"#000\" fill-rule=\"evenodd\" d=\"M2223.05 787.891c-3.02 10.047-12.27 16.922-22.74 16.922h-25.43c-16.19 0-27.64-15.862-22.57-31.261l69.88-212.045c3.21-9.753 12.31-16.341 22.56-16.341h61.84c10.25 0 19.35 6.588 22.56 16.341l69.87 212.045c5.08 15.399-6.37 31.261-22.56 31.261h-25.43c-10.48 0-19.72-6.875-22.74-16.922l-6.7-22.2a14.84 14.84 0 0 0-14.21-10.576h-63.42c-6.55 0-12.32 4.296-14.22 10.576zm76.13-96.945-14.13-48.436c-2.46-8.451-14.36-8.602-17.04-.217l-15.46 48.436c-1.84 5.759 2.45 11.645 8.48 11.645h29.6c5.94 0 10.22-5.715 8.55-11.428\" clip-rule=\"evenodd\"/><path fill=\"#000\" d=\"M1939.6 804.813c-13.13 0-23.77-10.656-23.77-23.801V568.967c0-13.145 10.64-23.801 23.77-23.801h88.13c19.24 0 36.08 3.508 50.51 10.523s25.65 17.115 33.67 30.3q12.03 19.779 12.03 47.416c0 18.595-4.14 34.273-12.41 47.036-7.64 11.913-18.18 21.101-31.63 27.564-16.98 8.159-36 11.104-54.7 11.104h-43.07c-76.56 0 4.08-135.84 4.08-84.706v7.996c0 12.117 9.81 21.941 21.91 21.941 8.12 0 16.3-.345 24.04-3.043 5.91-2.113 10.43-5.451 13.55-10.015 3.2-4.565 4.81-10.523 4.81-17.877 0-7.437-1.61-13.481-4.81-18.129-3.12-4.733-7.64-8.199-13.55-10.396-7.05-2.766-14.67-3.423-22.18-3.423-13.13 0-23.77 10.656-23.77 23.801v47.71c0 11.825 11.14 16.003 19.91 20.752 12.31 6.671 7.58 25.389-6.42 25.389-7.45 0-13.49 6.048-13.49 13.508v48.395c0 13.145-10.63 23.801-23.76 23.801zm134.89-106.758 5.41 9.95 33.51 61.622c8.62 15.86-2.84 35.186-20.87 35.186h-22.27c-8.74 0-16.77-4.798-20.92-12.496l-35.05-65.04a15.52 15.52 0 0 0-13.66-8.168c-42.24 0 40.62-82.154 73.85-21.054M931.652 0h68.748v1000h-68.748z\"/></svg>'\nexport const watermarkMobileSvg =\n\t'<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"1601\" fill=\"none\"><path fill=\"#000\" d=\"M72 1319.8c0-10.73 7.071-20.18 17.372-23.22l215.823-63.62c15.519-4.57 31.078 7.05 31.078 23.22v28.26c0 11.31-7.824 21.1-18.85 23.61l-109.636 24.94c-9.254 2.1-9.487 15.2-.313 17.63l110.784 29.37a24.21 24.21 0 0 1 18.015 23.4v25.64c0 11-7.423 20.62-18.071 23.41l-109.659 28.79c-9.162 2.41-8.986 15.47.236 17.63l108.792 25.46c10.955 2.56 18.702 12.33 18.702 23.57v28.39c0 16.17-15.559 27.79-31.078 23.22l-215.823-63.62c-10.3-3.04-17.372-12.49-17.372-23.22v-32.72c0-10.59 6.883-19.95 16.994-23.11l104.523-32.67c8.547-2.67 8.479-14.79-.096-17.36l-104.17-31.3C79.01 1372.42 72 1363 72 1352.31zM72 572.638V495.43c0-13.336 10.846-24.147 24.225-24.147h215.823c13.379 0 24.225 10.811 24.225 24.147v76.179q0 40.645-15.872 70.228-15.743 29.712-45.422 45.79-29.55 16.206-70.843 16.206-41.292 0-70.971-16.078-29.55-16.077-45.422-45.532Q72 612.767 72 572.638m85.132-29.84c-13.379 0-24.225 10.81-24.225 24.146v3.122q0 19.55 6.323 33.313 6.323 13.89 21.807 21.094 15.485 7.332 43.099 7.331t43.1-7.46q15.484-7.33 21.807-21.608 6.323-14.15 6.323-34.728v-1.064c0-13.336-10.846-24.146-24.225-24.146zM72 285.858c0-13.363 10.846-24.197 24.225-24.197h215.823c13.379 0 24.225 10.834 24.225 24.197v23.27c0 13.364-10.846 24.197-24.225 24.197H154.035c-13.379 0-24.225 10.834-24.225 24.197v58.328c0 13.364-10.846 24.197-24.225 24.197h-9.36C82.845 440.047 72 429.214 72 415.85zM278.463 24.72c0-13.374 10.846-24.216 24.225-24.216h9.36c13.379 0 24.225 10.842 24.225 24.216v181.174c0 13.374-10.846 24.216-24.225 24.216h-9.36c-13.379 0-24.225-10.842-24.225-24.216v-40.108c0-8.359-6.779-15.135-15.141-15.135H96.225c-13.38 0-24.225-10.842-24.225-24.216v-22.256c0-13.374 10.846-24.216 24.225-24.216h167.097c8.362 0 15.141-6.776 15.141-15.135z\"/><path fill=\"#000\" fill-rule=\"evenodd\" d=\"M89.224 1062.13C78.997 1059.04 72 1049.63 72 1038.96v-25.9c0-16.486 16.145-28.147 31.818-22.979l215.823 71.169a24.19 24.19 0 0 1 16.632 22.98v62.97c0 10.45-6.706 19.71-16.632 22.98l-215.823 71.17C88.145 1246.51 72 1234.86 72 1218.37v-25.9c0-10.67 6.997-20.08 17.224-23.17l22.595-6.81a15.13 15.13 0 0 0 10.765-14.48v-64.59a15.13 15.13 0 0 0-10.765-14.48zm98.672 77.53 49.299-14.39c8.601-2.51 8.755-14.62.22-17.35l-49.299-15.75c-5.861-1.88-11.852 2.49-11.852 8.64v30.14c0 6.05 5.817 10.41 11.632 8.71\" clip-rule=\"evenodd\"/><path fill=\"#000\" d=\"M72 773.439c0-13.367 10.846-24.203 24.225-24.203h215.823c13.379 0 24.225 10.836 24.225 24.203v89.762q0 29.395-10.711 51.439-10.71 22.046-30.84 34.293t-48.261 12.248q-28.388 0-47.873-12.635-18.187-11.672-28.056-32.218c-8.303-17.289-11.301-36.661-11.301-55.705v-43.867c0-77.976 138.26 4.16 86.215 4.16h-8.138c-12.334 0-22.332 9.989-22.332 22.311 0 8.269.351 16.6 3.097 24.487q3.225 9.024 10.194 13.794 6.968 4.899 18.194 4.899 11.356 0 18.453-4.899 7.226-4.77 10.581-13.794c2.815-7.188 3.484-14.944 3.484-22.596 0-13.366-10.846-24.202-24.225-24.202h-48.56c-12.036 0-16.288 11.345-21.122 20.272-6.79 12.539-25.841 7.72-25.841-6.536 0-7.586-6.156-13.736-13.749-13.736H96.225C82.845 820.916 72 810.08 72 796.714zm108.66 137.378-10.128 5.511-62.72 34.131C91.67 959.243 72 947.569 72 929.205V906.52a24.2 24.2 0 0 1 12.719-21.299l66.199-35.696a15.82 15.82 0 0 0 8.313-13.921c0-43.012 83.618 41.371 21.429 75.213\"/></svg>'\nexport const watermarkTrackSvg = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"/>'\n"],"names":[],"mappings":";;;;;AAGO,MAAM,sBACZ;AACM,MAAM,qBACZ;AACM,MAAM,oBAAoB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5230, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/TldrawEditor.tsx"],"sourcesContent":["import { MigrationSequence, Store } from '@tldraw/store'\nimport { TLShape, TLStore, TLStoreSnapshot } from '@tldraw/tlschema'\nimport { Required, annotateError } from '@tldraw/utils'\nimport React, {\n\tReactNode,\n\tmemo,\n\tuseCallback,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseMemo,\n\tuseRef,\n\tuseState,\n\tuseSyncExternalStore,\n} from 'react'\n\nimport classNames from 'classnames'\nimport { version } from '../version'\nimport { OptionalErrorBoundary } from './components/ErrorBoundary'\nimport { DefaultErrorFallback } from './components/default-components/DefaultErrorFallback'\nimport { TLEditorSnapshot } from './config/TLEditorSnapshot'\nimport { TLStoreBaseOptions } from './config/createTLStore'\nimport { TLUser, createTLUser } from './config/createTLUser'\nimport { TLAnyBindingUtilConstructor } from './config/defaultBindings'\nimport { TLAnyShapeUtilConstructor } from './config/defaultShapes'\nimport { Editor } from './editor/Editor'\nimport { TLStateNodeConstructor } from './editor/tools/StateNode'\nimport { TLCameraOptions } from './editor/types/misc-types'\nimport { ContainerProvider, useContainer } from './hooks/useContainer'\nimport { useCursor } from './hooks/useCursor'\nimport { useDarkMode } from './hooks/useDarkMode'\nimport { EditorProvider, useEditor } from './hooks/useEditor'\nimport {\n\tEditorComponentsProvider,\n\tTLEditorComponents,\n\tuseEditorComponents,\n} from './hooks/useEditorComponents'\nimport { useEvent } from './hooks/useEvent'\nimport { useForceUpdate } from './hooks/useForceUpdate'\nimport { useShallowObjectIdentity } from './hooks/useIdentity'\nimport { useLocalStore } from './hooks/useLocalStore'\nimport { useRefState } from './hooks/useRefState'\nimport { useZoomCss } from './hooks/useZoomCss'\nimport { LicenseProvider } from './license/LicenseProvider'\nimport { Watermark } from './license/Watermark'\nimport { TldrawOptions } from './options'\nimport { TLDeepLinkOptions } from './utils/deepLinks'\nimport { stopEventPropagation } from './utils/dom'\nimport { TLTextOptions } from './utils/richText'\nimport { TLStoreWithStatus } from './utils/sync/StoreWithStatus'\n\n/**\n * Props for the {@link tldraw#Tldraw} and {@link TldrawEditor} components, when passing in a\n * `TLStore` directly. If you would like tldraw to create a store for you, use\n * {@link TldrawEditorWithoutStoreProps}.\n *\n * @public\n */\nexport interface TldrawEditorWithStoreProps {\n\t/**\n\t * The store to use in the editor.\n\t */\n\tstore: TLStore | TLStoreWithStatus\n}\n\n/**\n * Props for the {@link tldraw#Tldraw} and {@link TldrawEditor} components, when not passing in a\n * `TLStore` directly. If you would like to pass in a store directly, use\n * {@link TldrawEditorWithStoreProps}.\n *\n * @public\n */\nexport interface TldrawEditorWithoutStoreProps extends TLStoreBaseOptions {\n\tstore?: undefined\n\n\t/**\n\t * Additional migrations to use in the store\n\t */\n\tmigrations?: readonly MigrationSequence[]\n\n\t/**\n\t * A starting snapshot of data to pre-populate the store. Do not supply both this and\n\t * `initialData`.\n\t */\n\tsnapshot?: TLEditorSnapshot | TLStoreSnapshot\n\n\t/**\n\t * If you would like to persist the store to the browser's local IndexedDB storage and sync it\n\t * across tabs, provide a key here. Each key represents a single tldraw document.\n\t */\n\tpersistenceKey?: string\n\n\tsessionId?: string\n}\n\n/** @public */\nexport type TldrawEditorStoreProps = TldrawEditorWithStoreProps | TldrawEditorWithoutStoreProps\n\n/**\n * Props for the {@link tldraw#Tldraw} and {@link TldrawEditor} components.\n *\n * @public\n **/\nexport type TldrawEditorProps = TldrawEditorBaseProps & TldrawEditorStoreProps\n\n/**\n * Base props for the {@link tldraw#Tldraw} and {@link TldrawEditor} components.\n *\n * @public\n */\nexport interface TldrawEditorBaseProps {\n\t/**\n\t * The component's children.\n\t */\n\tchildren?: ReactNode\n\n\t/**\n\t * An array of shape utils to use in the editor.\n\t */\n\tshapeUtils?: readonly TLAnyShapeUtilConstructor[]\n\n\t/**\n\t * An array of binding utils to use in the editor.\n\t */\n\tbindingUtils?: readonly TLAnyBindingUtilConstructor[]\n\n\t/**\n\t * An array of tools to add to the editor's state chart.\n\t */\n\ttools?: readonly TLStateNodeConstructor[]\n\n\t/**\n\t * Whether to automatically focus the editor when it mounts.\n\t */\n\tautoFocus?: boolean\n\n\t/**\n\t * Overrides for the editor's components, such as handles, collaborator cursors, etc.\n\t */\n\tcomponents?: TLEditorComponents\n\n\t/**\n\t * Called when the editor has mounted.\n\t */\n\tonMount?: TLOnMountHandler\n\n\t/**\n\t * The editor's initial state (usually the id of the first active tool).\n\t */\n\tinitialState?: string\n\n\t/**\n\t * A classname to pass to the editor's container.\n\t */\n\tclassName?: string\n\n\t/**\n\t * The user interacting with the editor.\n\t */\n\tuser?: TLUser\n\n\t/**\n\t * Whether to infer dark mode from the user's OS. Defaults to false.\n\t */\n\tinferDarkMode?: boolean\n\n\t/**\n\t * Camera options for the editor.\n\t */\n\tcameraOptions?: Partial<TLCameraOptions>\n\n\t/**\n\t * Text options for the editor.\n\t */\n\ttextOptions?: TLTextOptions\n\n\t/**\n\t * Options for the editor.\n\t */\n\toptions?: Partial<TldrawOptions>\n\n\t/**\n\t * The license key.\n\t */\n\tlicenseKey?: string\n\n\t/**\n\t * Options for syncing the editor's camera state with the URL.\n\t */\n\tdeepLinks?: true | TLDeepLinkOptions\n\n\t/**\n\t * Predicate for whether or not a shape should be hidden.\n\t *\n\t * @deprecated Use {@link TldrawEditorBaseProps#getShapeVisibility} instead.\n\t */\n\tisShapeHidden?(shape: TLShape, editor: Editor): boolean\n\n\t/**\n\t * Provides a way to hide shapes.\n\t *\n\t * Hidden shapes will not render in the editor, and they will not be eligible for hit test via\n\t * {@link Editor#getShapeAtPoint} and {@link Editor#getShapesAtPoint}. But otherwise they will\n\t * remain in the store and participate in all other operations.\n\t *\n\t * @example\n\t * ```ts\n\t * getShapeVisibility={(shape, editor) => shape.meta.hidden ? 'hidden' : 'inherit'}\n\t * ```\n\t *\n\t * - `'inherit' | undefined` - (default) The shape will be visible unless its parent is hidden.\n\t * - `'hidden'` - The shape will be hidden.\n\t * - `'visible'` - The shape will be visible.\n\t *\n\t * @param shape - The shape to check.\n\t * @param editor - The editor instance.\n\t */\n\tgetShapeVisibility?(\n\t\tshape: TLShape,\n\t\teditor: Editor\n\t): 'visible' | 'hidden' | 'inherit' | null | undefined\n\n\t/**\n\t * The URLs for the fonts to use in the editor.\n\t */\n\tassetUrls?: { fonts?: { [key: string]: string | undefined } }\n}\n\n/**\n * Called when the editor has mounted.\n * @example\n * ```ts\n * <Tldraw onMount={(editor) => editor.selectAll()} />\n * ```\n * @param editor - The editor instance.\n *\n * @public\n */\nexport type TLOnMountHandler = (editor: Editor) => (() => void | undefined) | undefined | void\n\ndeclare global {\n\tinterface Window {\n\t\ttldrawReady: boolean\n\t}\n}\n\nconst EMPTY_SHAPE_UTILS_ARRAY = [] as const\nconst EMPTY_BINDING_UTILS_ARRAY = [] as const\nconst EMPTY_TOOLS_ARRAY = [] as const\n/** @internal */\nexport const TL_CONTAINER_CLASS = 'tl-container'\n\n/** @public @react */\nexport const TldrawEditor = memo(function TldrawEditor({\n\tstore,\n\tcomponents,\n\tclassName,\n\tuser: _user,\n\toptions: _options,\n\t...rest\n}: TldrawEditorProps) {\n\tconst [container, setContainer] = useState<HTMLElement | null>(null)\n\tconst user = useMemo(() => _user ?? createTLUser(), [_user])\n\n\tconst ErrorFallback =\n\t\tcomponents?.ErrorFallback === undefined ? DefaultErrorFallback : components?.ErrorFallback\n\n\t// apply defaults. if you're using the bare @tldraw/editor package, we\n\t// default these to the \"tldraw zero\" configuration. We have different\n\t// defaults applied in tldraw.\n\tconst withDefaults = {\n\t\t...rest,\n\t\tshapeUtils: rest.shapeUtils ?? EMPTY_SHAPE_UTILS_ARRAY,\n\t\tbindingUtils: rest.bindingUtils ?? EMPTY_BINDING_UTILS_ARRAY,\n\t\ttools: rest.tools ?? EMPTY_TOOLS_ARRAY,\n\t\tcomponents,\n\t\toptions: useShallowObjectIdentity(_options),\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tref={setContainer}\n\t\t\tdata-tldraw={version}\n\t\t\tdraggable={false}\n\t\t\tclassName={classNames(`${TL_CONTAINER_CLASS} tl-theme__light`, className)}\n\t\t\tonPointerDown={stopEventPropagation}\n\t\t\ttabIndex={-1}\n\t\t\trole=\"application\"\n\t\t\taria-label={_options?.branding ?? 'tldraw'}\n\t\t>\n\t\t\t<OptionalErrorBoundary\n\t\t\t\tfallback={ErrorFallback}\n\t\t\t\tonError={(error) => annotateError(error, { tags: { origin: 'react.tldraw-before-app' } })}\n\t\t\t>\n\t\t\t\t{container && (\n\t\t\t\t\t<LicenseProvider licenseKey={rest.licenseKey}>\n\t\t\t\t\t\t<ContainerProvider container={container}>\n\t\t\t\t\t\t\t<EditorComponentsProvider overrides={components}>\n\t\t\t\t\t\t\t\t{store ? (\n\t\t\t\t\t\t\t\t\tstore instanceof Store ? (\n\t\t\t\t\t\t\t\t\t\t// Store is ready to go, whether externally synced or not\n\t\t\t\t\t\t\t\t\t\t<TldrawEditorWithReadyStore {...withDefaults} store={store} user={user} />\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t// Store is a synced store, so handle syncing stages internally\n\t\t\t\t\t\t\t\t\t\t<TldrawEditorWithLoadingStore {...withDefaults} store={store} user={user} />\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t// We have no store (it's undefined) so create one and possibly sync it\n\t\t\t\t\t\t\t\t\t<TldrawEditorWithOwnStore {...withDefaults} store={store} user={user} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</EditorComponentsProvider>\n\t\t\t\t\t\t</ContainerProvider>\n\t\t\t\t\t</LicenseProvider>\n\t\t\t\t)}\n\t\t\t</OptionalErrorBoundary>\n\t\t</div>\n\t)\n})\n\nfunction TldrawEditorWithOwnStore(\n\tprops: Required<\n\t\tTldrawEditorProps & { store: undefined; user: TLUser },\n\t\t'shapeUtils' | 'bindingUtils' | 'tools'\n\t>\n) {\n\tconst {\n\t\tdefaultName,\n\t\tsnapshot,\n\t\tinitialData,\n\t\tshapeUtils,\n\t\tbindingUtils,\n\t\tpersistenceKey,\n\t\tsessionId,\n\t\tuser,\n\t\tassets,\n\t\tmigrations,\n\t} = props\n\n\tconst syncedStore = useLocalStore({\n\t\tshapeUtils,\n\t\tbindingUtils,\n\t\tinitialData,\n\t\tpersistenceKey,\n\t\tsessionId,\n\t\tdefaultName,\n\t\tsnapshot,\n\t\tassets,\n\t\tmigrations,\n\t})\n\n\treturn <TldrawEditorWithLoadingStore {...props} store={syncedStore} user={user} />\n}\n\nconst TldrawEditorWithLoadingStore = memo(function TldrawEditorBeforeLoading({\n\tstore,\n\tuser,\n\t...rest\n}: Required<\n\tTldrawEditorProps & { store: TLStoreWithStatus; user: TLUser },\n\t'shapeUtils' | 'bindingUtils' | 'tools'\n>) {\n\tconst container = useContainer()\n\n\tuseLayoutEffect(() => {\n\t\tif (user.userPreferences.get().colorScheme === 'dark') {\n\t\t\tcontainer.classList.remove('tl-theme__light')\n\t\t\tcontainer.classList.add('tl-theme__dark')\n\t\t}\n\t}, [container, user])\n\n\tconst { LoadingScreen } = useEditorComponents()\n\n\tswitch (store.status) {\n\t\tcase 'error': {\n\t\t\t// for error handling, we fall back to the default error boundary.\n\t\t\t// if users want to handle this error differently, they can render\n\t\t\t// their own error screen before the TldrawEditor component\n\t\t\tthrow store.error\n\t\t}\n\t\tcase 'loading': {\n\t\t\treturn LoadingScreen ? <LoadingScreen /> : null\n\t\t}\n\t\tcase 'not-synced': {\n\t\t\tbreak\n\t\t}\n\t\tcase 'synced-local': {\n\t\t\tbreak\n\t\t}\n\t\tcase 'synced-remote': {\n\t\t\tbreak\n\t\t}\n\t}\n\n\treturn <TldrawEditorWithReadyStore {...rest} store={store.store} user={user} />\n})\n\nconst noAutoFocus = () => document.location.search.includes('tldraw_preserve_focus') // || !document.hasFocus() // breaks in nextjs\n\nfunction TldrawEditorWithReadyStore({\n\tonMount,\n\tchildren,\n\tstore,\n\ttools,\n\tshapeUtils,\n\tbindingUtils,\n\tuser,\n\tinitialState,\n\tautoFocus = true,\n\tinferDarkMode,\n\tcameraOptions,\n\ttextOptions,\n\toptions,\n\tlicenseKey,\n\tdeepLinks: _deepLinks,\n\t// eslint-disable-next-line @typescript-eslint/no-deprecated\n\tisShapeHidden,\n\tgetShapeVisibility,\n\tassetUrls,\n}: Required<\n\tTldrawEditorProps & {\n\t\tstore: TLStore\n\t\tuser: TLUser\n\t},\n\t'shapeUtils' | 'bindingUtils' | 'tools'\n>) {\n\tconst { ErrorFallback } = useEditorComponents()\n\tconst container = useContainer()\n\n\tconst [editor, setEditor] = useRefState<Editor | null>(null)\n\n\tconst canvasRef = useRef<HTMLDivElement | null>(null)\n\n\tconst deepLinks = useShallowObjectIdentity(_deepLinks === true ? {} : _deepLinks)\n\n\t// props in this ref can be changed without causing the editor to be recreated.\n\tconst editorOptionsRef = useRef({\n\t\t// for these, it's because they're only used when the editor first mounts:\n\t\tautoFocus: autoFocus && !noAutoFocus(),\n\t\tinferDarkMode,\n\t\tinitialState,\n\n\t\t// for these, it's because we keep them up to date in a separate effect:\n\t\tcameraOptions,\n\t\tdeepLinks,\n\t})\n\n\tuseLayoutEffect(() => {\n\t\teditorOptionsRef.current = {\n\t\t\tautoFocus: autoFocus && !noAutoFocus(),\n\t\t\tinferDarkMode,\n\t\t\tinitialState,\n\t\t\tcameraOptions,\n\t\t\tdeepLinks,\n\t\t}\n\t}, [autoFocus, inferDarkMode, initialState, cameraOptions, deepLinks])\n\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tconst { autoFocus, inferDarkMode, initialState, cameraOptions, deepLinks } =\n\t\t\t\teditorOptionsRef.current\n\t\t\tconst editor = new Editor({\n\t\t\t\tstore,\n\t\t\t\tshapeUtils,\n\t\t\t\tbindingUtils,\n\t\t\t\ttools,\n\t\t\t\tgetContainer: () => container,\n\t\t\t\tuser,\n\t\t\t\tinitialState,\n\t\t\t\t// we should check for some kind of query parameter that turns off autofocus\n\t\t\t\tautoFocus,\n\t\t\t\tinferDarkMode,\n\t\t\t\tcameraOptions,\n\t\t\t\ttextOptions,\n\t\t\t\toptions,\n\t\t\t\tlicenseKey,\n\t\t\t\tisShapeHidden,\n\t\t\t\tgetShapeVisibility,\n\t\t\t\tfontAssetUrls: assetUrls?.fonts,\n\t\t\t})\n\n\t\t\teditor.updateViewportScreenBounds(canvasRef.current ?? container)\n\n\t\t\t// Use the ref here because we only want to do this once when the editor is created.\n\t\t\t// We don't want changes to the urlStateSync prop to trigger creating new editors.\n\t\t\tif (deepLinks) {\n\t\t\t\tif (!deepLinks?.getUrl) {\n\t\t\t\t\t// load the state from window.location\n\t\t\t\t\teditor.navigateToDeepLink(deepLinks)\n\t\t\t\t} else {\n\t\t\t\t\t// load the state from the provided URL\n\t\t\t\t\teditor.navigateToDeepLink({ ...deepLinks, url: deepLinks.getUrl(editor) })\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetEditor(editor)\n\n\t\t\treturn () => {\n\t\t\t\teditor.dispose()\n\t\t\t}\n\t\t},\n\t\t// if any of these change, we need to recreate the editor.\n\t\t[\n\t\t\tbindingUtils,\n\t\t\tcontainer,\n\t\t\toptions,\n\t\t\tshapeUtils,\n\t\t\tstore,\n\t\t\ttools,\n\t\t\tuser,\n\t\t\tsetEditor,\n\t\t\tlicenseKey,\n\t\t\tisShapeHidden,\n\t\t\tgetShapeVisibility,\n\t\t\ttextOptions,\n\t\t\tassetUrls,\n\t\t]\n\t)\n\n\tuseLayoutEffect(() => {\n\t\tif (!editor) return\n\t\tif (deepLinks) {\n\t\t\treturn editor.registerDeepLinkListener(deepLinks)\n\t\t}\n\t}, [editor, deepLinks])\n\n\t// keep the editor up to date with the latest camera options\n\tuseLayoutEffect(() => {\n\t\tif (editor && cameraOptions) {\n\t\t\teditor.setCameraOptions(cameraOptions)\n\t\t}\n\t}, [editor, cameraOptions])\n\n\tconst crashingError = useSyncExternalStore(\n\t\tuseCallback(\n\t\t\t(onStoreChange) => {\n\t\t\t\tif (editor) {\n\t\t\t\t\teditor.on('crash', onStoreChange)\n\t\t\t\t\treturn () => editor.off('crash', onStoreChange)\n\t\t\t\t}\n\t\t\t\treturn () => {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t},\n\t\t\t[editor]\n\t\t),\n\t\t() => editor?.getCrashingError() ?? null\n\t)\n\n\t// For our examples site, we want autoFocus to be true on the examples site, but not\n\t// when embedded in our docs site. If present, the `tldraw_preserve_focus` search param\n\t// overrides the `autoFocus` prop and prevents the editor from focusing immediately,\n\t// however here we also add some logic to focus the editor when the user clicks\n\t// on it and unfocus it when the user clicks away from it.\n\tuseEffect(\n\t\tfunction handleFocusOnPointerDownForPreserveFocusMode() {\n\t\t\tif (!editor) return\n\n\t\t\tfunction handleFocusOnPointerDown() {\n\t\t\t\tif (!editor) return\n\t\t\t\teditor.focus()\n\t\t\t}\n\n\t\t\tfunction handleBlurOnPointerDown() {\n\t\t\t\tif (!editor) return\n\t\t\t\teditor.blur()\n\t\t\t}\n\n\t\t\tif (autoFocus && noAutoFocus()) {\n\t\t\t\teditor.getContainer().addEventListener('pointerdown', handleFocusOnPointerDown)\n\t\t\t\tdocument.body.addEventListener('pointerdown', handleBlurOnPointerDown)\n\n\t\t\t\treturn () => {\n\t\t\t\t\teditor.getContainer()?.removeEventListener('pointerdown', handleFocusOnPointerDown)\n\t\t\t\t\tdocument.body.removeEventListener('pointerdown', handleBlurOnPointerDown)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[editor, autoFocus]\n\t)\n\n\tconst [_fontLoadingState, setFontLoadingState] = useState<{\n\t\teditor: Editor\n\t\tisLoaded: boolean\n\t} | null>(null)\n\tlet fontLoadingState = _fontLoadingState\n\tif (editor !== fontLoadingState?.editor) {\n\t\tfontLoadingState = null\n\t}\n\tuseEffect(() => {\n\t\tif (!editor) return\n\t\tlet isCancelled = false\n\n\t\tsetFontLoadingState({ editor, isLoaded: false })\n\n\t\teditor.fonts\n\t\t\t.loadRequiredFontsForCurrentPage(editor.options.maxFontsToLoadBeforeRender)\n\t\t\t.finally(() => {\n\t\t\t\tif (isCancelled) return\n\t\t\t\tsetFontLoadingState({ editor, isLoaded: true })\n\t\t\t})\n\n\t\treturn () => {\n\t\t\tisCancelled = true\n\t\t}\n\t}, [editor])\n\n\tconst { Canvas, LoadingScreen } = useEditorComponents()\n\n\tif (!editor || !fontLoadingState?.isLoaded) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{LoadingScreen && <LoadingScreen />}\n\t\t\t\t<div className=\"tl-canvas\" ref={canvasRef} />\n\t\t\t</>\n\t\t)\n\t}\n\n\treturn (\n\t\t// the top-level tldraw component also renders an error boundary almost\n\t\t// identical to this one. the reason we have two is because this one has\n\t\t// access to `App`, which means that here we can enrich errors with data\n\t\t// from app for reporting, and also still attempt to render the user's\n\t\t// document in the event of an error to reassure them that their work is\n\t\t// not lost.\n\t\t<OptionalErrorBoundary\n\t\t\tfallback={ErrorFallback as any}\n\t\t\tonError={(error) =>\n\t\t\t\teditor.annotateError(error, { origin: 'react.tldraw', willCrashApp: true })\n\t\t\t}\n\t\t>\n\t\t\t{crashingError ? (\n\t\t\t\t<Crash crashingError={crashingError} />\n\t\t\t) : (\n\t\t\t\t<EditorProvider editor={editor}>\n\t\t\t\t\t<Layout onMount={onMount}>\n\t\t\t\t\t\t{children ?? (Canvas ? <Canvas key={editor.contextId} /> : null)}\n\t\t\t\t\t\t<Watermark />\n\t\t\t\t\t</Layout>\n\t\t\t\t</EditorProvider>\n\t\t\t)}\n\t\t</OptionalErrorBoundary>\n\t)\n}\n\nfunction Layout({ children, onMount }: { children: ReactNode; onMount?: TLOnMountHandler }) {\n\tuseZoomCss()\n\tuseCursor()\n\tuseDarkMode()\n\tuseForceUpdate()\n\tuseOnMount((editor) => {\n\t\tconst teardownStore = editor.store.props.onMount(editor)\n\t\tconst teardownCallback = onMount?.(editor)\n\n\t\treturn () => {\n\t\t\tteardownStore?.()\n\t\t\tteardownCallback?.()\n\t\t}\n\t})\n\n\treturn children\n}\n\nfunction Crash({ crashingError }: { crashingError: unknown }): null {\n\tthrow crashingError\n}\n\n/** @public */\nexport interface LoadingScreenProps {\n\tchildren: ReactNode\n}\n\n/** @public @react */\nexport function LoadingScreen({ children }: LoadingScreenProps) {\n\treturn (\n\t\t<div className=\"tl-loading\" aria-busy=\"true\" tabIndex={0}>\n\t\t\t{children}\n\t\t</div>\n\t)\n}\n\n/** @public @react */\nexport function ErrorScreen({ children }: LoadingScreenProps) {\n\treturn <div className=\"tl-loading\">{children}</div>\n}\n\n/** @internal */\nexport function useOnMount(onMount?: TLOnMountHandler) {\n\tconst editor = useEditor()\n\n\tconst onMountEvent = useEvent((editor: Editor) => {\n\t\tlet teardown: (() => void) | void = undefined\n\t\t// If the user wants to do something when the editor mounts, we make sure it doesn't effect the history.\n\t\t// todo: is this reeeeally what we want to do, or should we leave it up to the caller?\n\t\teditor.run(\n\t\t\t() => {\n\t\t\t\tteardown = onMount?.(editor)\n\t\t\t\teditor.emit('mount')\n\t\t\t},\n\t\t\t{ history: 'ignore' }\n\t\t)\n\t\twindow.tldrawReady = true\n\t\treturn teardown\n\t})\n\n\tReact.useLayoutEffect(() => {\n\t\tif (editor) return onMountEvent?.(editor)\n\t}, [editor, onMountEvent])\n}\n"],"names":["TldrawEditor","LoadingScreen","autoFocus","inferDarkMode","initialState","cameraOptions","deepLinks","editor"],"mappings":"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","ignoreList":[0],"debugId":null}}]
}