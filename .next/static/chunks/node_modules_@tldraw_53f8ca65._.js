(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([typeof document === "object" ? document.currentScript : undefined, {

"[project]/node_modules/@tldraw/utils/dist-esm/lib/version.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "clearRegisteredVersionsForTests": (()=>clearRegisteredVersionsForTests),
    "registerTldrawLibraryVersion": (()=>registerTldrawLibraryVersion)
});
const TLDRAW_LIBRARY_VERSION_KEY = "__TLDRAW_LIBRARY_VERSIONS__";
function getLibraryVersions() {
    if (globalThis[TLDRAW_LIBRARY_VERSION_KEY]) {
        return globalThis[TLDRAW_LIBRARY_VERSION_KEY];
    }
    const info = {
        versions: [],
        didWarn: false,
        scheduledNotice: null
    };
    Object.defineProperty(globalThis, TLDRAW_LIBRARY_VERSION_KEY, {
        value: info,
        writable: false,
        configurable: false,
        enumerable: false
    });
    return info;
}
function clearRegisteredVersionsForTests() {
    const info = getLibraryVersions();
    info.versions = [];
    info.didWarn = false;
    if (info.scheduledNotice) {
        clearTimeout(info.scheduledNotice);
        info.scheduledNotice = null;
    }
}
function registerTldrawLibraryVersion(name, version, modules) {
    if (!name || !version || !modules) {
        if ("TURBOPACK compile-time truthy", 1) {
            throw new Error("Missing name/version/module system in built version of tldraw library");
        }
        return;
    }
    const info = getLibraryVersions();
    info.versions.push({
        name,
        version,
        modules
    });
    if (!info.scheduledNotice) {
        try {
            info.scheduledNotice = setTimeout(()=>{
                info.scheduledNotice = null;
                checkLibraryVersions(info);
            }, 100);
        } catch  {
            checkLibraryVersions(info);
        }
    }
}
function checkLibraryVersions(info) {
    if (!info.versions.length) return;
    if (info.didWarn) return;
    const sorted = info.versions.sort((a, b)=>compareVersions(a.version, b.version));
    const latestVersion = sorted[sorted.length - 1].version;
    const matchingVersions = /* @__PURE__ */ new Set();
    const nonMatchingVersions = /* @__PURE__ */ new Map();
    for (const lib of sorted){
        if (nonMatchingVersions.has(lib.name)) {
            matchingVersions.delete(lib.name);
            entry(nonMatchingVersions, lib.name, /* @__PURE__ */ new Set()).add(lib.version);
            continue;
        }
        if (lib.version === latestVersion) {
            matchingVersions.add(lib.name);
        } else {
            matchingVersions.delete(lib.name);
            entry(nonMatchingVersions, lib.name, /* @__PURE__ */ new Set()).add(lib.version);
        }
    }
    if (nonMatchingVersions.size > 0) {
        const message = [
            `${format("[tldraw]", [
                "bold",
                "bgRed",
                "textWhite"
            ])} ${format("You have multiple versions of tldraw libraries installed. This can lead to bugs and unexpected behavior.", [
                "textRed",
                "bold"
            ])}`,
            "",
            `The latest version you have installed is ${format(`v${latestVersion}`, [
                "bold",
                "textBlue"
            ])}. The following libraries are on the latest version:`,
            ...Array.from(matchingVersions, (name)=>`  \u2022 \u2705 ${format(name, [
                    "bold"
                ])}`),
            "",
            `The following libraries are not on the latest version, or have multiple versions installed:`,
            ...Array.from(nonMatchingVersions, ([name, versions])=>{
                const sortedVersions = Array.from(versions).sort(compareVersions).map((v)=>format(`v${v}`, v === latestVersion ? [
                        "textGreen"
                    ] : [
                        "textRed"
                    ]));
                return `  \u2022 \u274C ${format(name, [
                    "bold"
                ])} (${sortedVersions.join(", ")})`;
            })
        ];
        console.log(message.join("\n"));
        info.didWarn = true;
        return;
    }
    const potentialDuplicates = /* @__PURE__ */ new Map();
    for (const lib of sorted){
        entry(potentialDuplicates, lib.name, {
            version: lib.version,
            modules: []
        }).modules.push(lib.modules);
    }
    const duplicates = /* @__PURE__ */ new Map();
    for (const [name, lib] of potentialDuplicates){
        if (lib.modules.length > 1) duplicates.set(name, lib);
    }
    if (duplicates.size > 0) {
        const message = [
            `${format("[tldraw]", [
                "bold",
                "bgRed",
                "textWhite"
            ])} ${format("You have multiple instances of some tldraw libraries active. This can lead to bugs and unexpected behavior. ", [
                "textRed",
                "bold"
            ])}`,
            "",
            "This usually means that your bundler is misconfigured, and is importing the same library multiple times - usually once as an ES Module, and once as a CommonJS module.",
            "",
            "The following libraries have been imported multiple times:",
            ...Array.from(duplicates, ([name, lib])=>{
                const modules = lib.modules.map((m, i)=>m === "esm" ? `      ${i + 1}. ES Modules` : `      ${i + 1}. CommonJS`).join("\n");
                return `  \u2022 \u274C ${format(name, [
                    "bold"
                ])} v${lib.version}: 
${modules}`;
            }),
            "",
            "You should configure your bundler to only import one version of each library."
        ];
        console.log(message.join("\n"));
        info.didWarn = true;
        return;
    }
}
function compareVersions(a, b) {
    const aMatch = a.match(/^(\d+)\.(\d+)\.(\d+)(?:-(\w+))?$/);
    const bMatch = b.match(/^(\d+)\.(\d+)\.(\d+)(?:-(\w+))?$/);
    if (!aMatch || !bMatch) return a.localeCompare(b);
    if (aMatch[1] !== bMatch[1]) return Number(aMatch[1]) - Number(bMatch[1]);
    if (aMatch[2] !== bMatch[2]) return Number(aMatch[2]) - Number(bMatch[2]);
    if (aMatch[3] !== bMatch[3]) return Number(aMatch[3]) - Number(bMatch[3]);
    if (aMatch[4] && bMatch[4]) return aMatch[4].localeCompare(bMatch[4]);
    if (aMatch[4]) return 1;
    if (bMatch[4]) return -1;
    return 0;
}
const formats = {
    bold: "1",
    textBlue: "94",
    textRed: "31",
    textGreen: "32",
    bgRed: "41",
    textWhite: "97"
};
function format(value, formatters = []) {
    return `\x1B[${formatters.map((f)=>formats[f]).join(";")}m${value}\x1B[m`;
}
function entry(map, key, defaultValue) {
    if (map.has(key)) {
        return map.get(key);
    }
    map.set(key, defaultValue);
    return defaultValue;
}
;
 //# sourceMappingURL=version.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/array.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "areArraysShallowEqual": (()=>areArraysShallowEqual),
    "compact": (()=>compact),
    "dedupe": (()=>dedupe),
    "last": (()=>last),
    "maxBy": (()=>maxBy),
    "mergeArraysAndReplaceDefaults": (()=>mergeArraysAndReplaceDefaults),
    "minBy": (()=>minBy),
    "partition": (()=>partition),
    "rotateArray": (()=>rotateArray)
});
function rotateArray(arr, offset) {
    return arr.map((_, i)=>arr[(i + offset) % arr.length]);
}
function dedupe(input, equals) {
    const result = [];
    mainLoop: for (const item of input){
        for (const existing of result){
            if (equals ? equals(item, existing) : item === existing) {
                continue mainLoop;
            }
        }
        result.push(item);
    }
    return result;
}
function compact(arr) {
    return arr.filter((i)=>i !== void 0 && i !== null);
}
function last(arr) {
    return arr[arr.length - 1];
}
function minBy(arr, fn) {
    let min;
    let minVal = Infinity;
    for (const item of arr){
        const val = fn(item);
        if (val < minVal) {
            min = item;
            minVal = val;
        }
    }
    return min;
}
function maxBy(arr, fn) {
    let max;
    let maxVal = -Infinity;
    for (const item of arr){
        const val = fn(item);
        if (val > maxVal) {
            max = item;
            maxVal = val;
        }
    }
    return max;
}
function partition(arr, predicate) {
    const satisfies = [];
    const doesNotSatisfy = [];
    for (const item of arr){
        if (predicate(item)) {
            satisfies.push(item);
        } else {
            doesNotSatisfy.push(item);
        }
    }
    return [
        satisfies,
        doesNotSatisfy
    ];
}
function areArraysShallowEqual(arr1, arr2) {
    if (arr1 === arr2) return true;
    if (arr1.length !== arr2.length) return false;
    for(let i = 0; i < arr1.length; i++){
        if (!Object.is(arr1[i], arr2[i])) {
            return false;
        }
    }
    return true;
}
function mergeArraysAndReplaceDefaults(key, customEntries, defaults) {
    const overrideTypes = new Set(customEntries.map((entry)=>entry[key]));
    const result = [];
    for (const defaultEntry of defaults){
        if (overrideTypes.has(defaultEntry[key])) continue;
        result.push(defaultEntry);
    }
    for (const customEntry of customEntries){
        result.push(customEntry);
    }
    return result;
}
;
 //# sourceMappingURL=array.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/function.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "noop": (()=>noop),
    "omitFromStackTrace": (()=>omitFromStackTrace)
});
function omitFromStackTrace(fn) {
    const wrappedFn = (...args)=>{
        try {
            return fn(...args);
        } catch (error) {
            if (error instanceof Error && Error.captureStackTrace) {
                Error.captureStackTrace(error, wrappedFn);
            }
            throw error;
        }
    };
    return wrappedFn;
}
const noop = ()=>{};
;
 //# sourceMappingURL=function.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Result": (()=>Result),
    "assert": (()=>assert),
    "assertExists": (()=>assertExists),
    "exhaustiveSwitchError": (()=>exhaustiveSwitchError),
    "promiseWithResolve": (()=>promiseWithResolve),
    "sleep": (()=>sleep)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$function$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/function.mjs [app-client] (ecmascript)");
;
const Result = {
    ok (value) {
        return {
            ok: true,
            value
        };
    },
    err (error) {
        return {
            ok: false,
            error
        };
    }
};
function exhaustiveSwitchError(value, property) {
    const debugValue = property && value && typeof value === "object" && property in value ? value[property] : value;
    throw new Error(`Unknown switch case ${debugValue}`);
}
const assert = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$function$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["omitFromStackTrace"])((value, message)=>{
    if (!value) {
        throw new Error(message || "Assertion Error");
    }
});
const assertExists = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$function$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["omitFromStackTrace"])((value, message)=>{
    if (value == null) {
        throw new Error(message ?? "value must be defined");
    }
    return value;
});
function promiseWithResolve() {
    let resolve;
    let reject;
    const promise = new Promise((res, rej)=>{
        resolve = res;
        reject = rej;
    });
    return Object.assign(promise, {
        resolve,
        reject
    });
}
function sleep(ms) {
    return new Promise((resolve)=>setTimeout(resolve, ms));
}
;
 //# sourceMappingURL=control.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/bind.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/*!
 * MIT License: https://github.com/NoHomey/bind-decorator/blob/master/License
 * Copyright (c) 2016 Ivo Stratev
 */ __turbopack_context__.s({
    "bind": (()=>bind)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-client] (ecmascript)");
;
function bind(...args) {
    if (args.length === 2) {
        const [originalMethod, context] = args;
        context.addInitializer(function initializeMethod() {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assert"])(Reflect.isExtensible(this), "Cannot bind to a non-extensible class.");
            const value = originalMethod.bind(this);
            const ok = Reflect.defineProperty(this, context.name, {
                value,
                writable: true,
                configurable: true
            });
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assert"])(ok, "Cannot bind a non-configurable class method.");
        });
    } else {
        const [_target, propertyKey, descriptor] = args;
        if (!descriptor || typeof descriptor.value !== "function") {
            throw new TypeError(`Only methods can be decorated with @bind. <${propertyKey}> is not a method!`);
        }
        return {
            configurable: true,
            get () {
                const bound = descriptor.value.bind(this);
                Object.defineProperty(this, propertyKey, {
                    value: bound,
                    configurable: true,
                    writable: true
                });
                return bound;
            }
        };
    }
}
;
 //# sourceMappingURL=bind.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/cache.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "WeakCache": (()=>WeakCache)
});
class WeakCache {
    /** The map of items to their cached values. */ items = /* @__PURE__ */ new WeakMap();
    /**
   * Get the cached value for a given record. If the record is not present in the map, the callback
   * will be used to create the value (with the result being stored in the cache for next time).
   *
   * @param item - The item to get.
   * @param cb - The callback to use to create the value when a cached value is not found.
   */ get(item, cb) {
        if (!this.items.has(item)) {
            this.items.set(item, cb(item));
        }
        return this.items.get(item);
    }
}
;
 //# sourceMappingURL=cache.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/debounce.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "debounce": (()=>debounce)
});
function debounce(callback, wait) {
    let state = void 0;
    const fn = (...args)=>{
        if (!state) {
            state = {};
            state.promise = new Promise((resolve, reject)=>{
                state.resolve = resolve;
                state.reject = reject;
            });
        }
        clearTimeout(state.timeout);
        state.latestArgs = args;
        state.timeout = setTimeout(()=>{
            const s = state;
            state = void 0;
            try {
                s.resolve(callback(...s.latestArgs));
            } catch (e) {
                s.reject(e);
            }
        }, wait);
        return state.promise;
    };
    fn.cancel = ()=>{
        if (!state) return;
        clearTimeout(state.timeout);
    };
    return fn;
}
;
 //# sourceMappingURL=debounce.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/error.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "annotateError": (()=>annotateError),
    "getErrorAnnotations": (()=>getErrorAnnotations)
});
const annotationsByError = /* @__PURE__ */ new WeakMap();
function annotateError(error, annotations) {
    if (typeof error !== "object" || error === null) return;
    let currentAnnotations = annotationsByError.get(error);
    if (!currentAnnotations) {
        currentAnnotations = {
            tags: {},
            extras: {}
        };
        annotationsByError.set(error, currentAnnotations);
    }
    if (annotations.tags) {
        currentAnnotations.tags = {
            ...currentAnnotations.tags,
            ...annotations.tags
        };
    }
    if (annotations.extras) {
        currentAnnotations.extras = {
            ...currentAnnotations.extras,
            ...annotations.extras
        };
    }
}
function getErrorAnnotations(error) {
    return annotationsByError.get(error) ?? {
        tags: {},
        extras: {}
    };
}
;
 //# sourceMappingURL=error.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/ExecutionQueue.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ExecutionQueue": (()=>ExecutionQueue)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-client] (ecmascript)");
;
class ExecutionQueue {
    constructor(timeout){
        this.timeout = timeout;
    }
    queue = [];
    running = false;
    isEmpty() {
        return this.queue.length === 0 && !this.running;
    }
    async run() {
        if (this.running) return;
        try {
            this.running = true;
            while(this.queue.length){
                const task = this.queue.shift();
                await task();
                if (this.timeout) {
                    await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sleep"])(this.timeout);
                }
            }
        } finally{
            this.running = false;
        }
    }
    async push(task) {
        return new Promise((resolve, reject)=>{
            this.queue.push(()=>Promise.resolve(task()).then(resolve).catch(reject));
            this.run();
        });
    }
    close() {
        this.queue = [];
    }
}
;
 //# sourceMappingURL=ExecutionQueue.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/network.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Image": (()=>Image),
    "fetch": (()=>fetch)
});
async function fetch(input, init) {
    return window.fetch(input, {
        // We want to make sure that the referrer is not sent to other domains.
        referrerPolicy: "strict-origin-when-cross-origin",
        ...init
    });
}
const Image = (width, height)=>{
    const img = new window.Image(width, height);
    img.referrerPolicy = "strict-origin-when-cross-origin";
    return img;
};
;
 //# sourceMappingURL=network.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/file.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FileHelpers": (()=>FileHelpers)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$network$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/network.mjs [app-client] (ecmascript)");
;
class FileHelpers {
    /**
   * @deprecated Use `urlToArrayBuffer` instead.
   */ static async dataUrlToArrayBuffer(dataURL) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$network$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetch"])(dataURL).then(function(result) {
            return result.arrayBuffer();
        });
    }
    /**
   * @param url - The url of the file.
   */ static async urlToArrayBuffer(url) {
        const response = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$network$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetch"])(url);
        return await response.arrayBuffer();
    }
    static async urlToBlob(url) {
        const response = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$network$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetch"])(url);
        return await response.blob();
    }
    static async urlToDataUrl(url) {
        if (url.startsWith("data:")) return url;
        const blob = await FileHelpers.urlToBlob(url);
        return await FileHelpers.blobToDataUrl(blob);
    }
    /**
   * Convert a file to a base64 encoded data url.
   *
   * @example
   *
   * ```ts
   * const A = FileHelpers.toDataUrl(myImageFile)
   * ```
   *
   * @param file - The file as a blob.
   */ static async blobToDataUrl(file) {
        return await new Promise((resolve, reject)=>{
            if (file) {
                const reader = new FileReader();
                reader.onload = ()=>resolve(reader.result);
                reader.onerror = (error)=>reject(error);
                reader.onabort = (error)=>reject(error);
                reader.readAsDataURL(file);
            }
        });
    }
    /**
   * Convert a file to a unicode text string.
   *
   * @example
   *
   * ```ts
   * const A = FileHelpers.fileToDataUrl(myTextFile)
   * ```
   *
   * @param file - The file as a blob.
   */ static async blobToText(file) {
        return await new Promise((resolve, reject)=>{
            if (file) {
                const reader = new FileReader();
                reader.onload = ()=>resolve(reader.result);
                reader.onerror = (error)=>reject(error);
                reader.onabort = (error)=>reject(error);
                reader.readAsText(file);
            }
        });
    }
    static rewriteMimeType(blob, newMimeType) {
        if (blob.type === newMimeType) return blob;
        if (blob instanceof File) {
            return new File([
                blob
            ], blob.name, {
                type: newMimeType
            });
        }
        return new Blob([
            blob
        ], {
            type: newMimeType
        });
    }
}
;
 //# sourceMappingURL=file.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/hash.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getHashForBuffer": (()=>getHashForBuffer),
    "getHashForObject": (()=>getHashForObject),
    "getHashForString": (()=>getHashForString),
    "lns": (()=>lns)
});
function getHashForString(string) {
    let hash = 0;
    for(let i = 0; i < string.length; i++){
        hash = (hash << 5) - hash + string.charCodeAt(i);
        hash |= 0;
    }
    return hash + "";
}
function getHashForObject(obj) {
    return getHashForString(JSON.stringify(obj));
}
function getHashForBuffer(buffer) {
    const view = new DataView(buffer);
    let hash = 0;
    for(let i = 0; i < view.byteLength; i++){
        hash = (hash << 5) - hash + view.getUint8(i);
        hash |= 0;
    }
    return hash + "";
}
function lns(str) {
    const result = str.split("");
    result.push(...result.splice(0, Math.round(result.length / 5)));
    result.push(...result.splice(0, Math.round(result.length / 4)));
    result.push(...result.splice(0, Math.round(result.length / 3)));
    result.push(...result.splice(0, Math.round(result.length / 2)));
    return result.reverse().map((n)=>+n ? +n < 5 ? 5 + +n : +n > 5 ? +n - 5 : n : n).join("");
}
;
 //# sourceMappingURL=hash.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/id.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/*!
 * MIT License: https://github.com/ai/nanoid/blob/main/LICENSE
 * Modified code originally from <https://github.com/ai/nanoid>
 * Copyright 2017 Andrey Sitnik <andrey@sitnik.ru>
 *
 * `nanoid` is currently only distributed as an ES module. Some tools (jest, playwright) don't
 * properly support ESM-only code yet, and tldraw itself is distributed as both an ES module and a
 * CommonJS module. By including nanoid here, we can make sure it works well in every environment
 * where tldraw is used. We can also remove some unused features like custom alphabets.
 */ __turbopack_context__.s({
    "mockUniqueId": (()=>mockUniqueId),
    "restoreUniqueId": (()=>restoreUniqueId),
    "uniqueId": (()=>uniqueId)
});
const crypto = globalThis.crypto;
const urlAlphabet = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";
const POOL_SIZE_MULTIPLIER = 128;
let pool, poolOffset;
function fillPool(bytes) {
    if (!pool || pool.length < bytes) {
        pool = new Uint8Array(bytes * POOL_SIZE_MULTIPLIER);
        crypto.getRandomValues(pool);
        poolOffset = 0;
    } else if (poolOffset + bytes > pool.length) {
        crypto.getRandomValues(pool);
        poolOffset = 0;
    }
    poolOffset += bytes;
}
function nanoid(size = 21) {
    fillPool(size -= 0);
    let id = "";
    for(let i = poolOffset - size; i < poolOffset; i++){
        id += urlAlphabet[pool[i] & 63];
    }
    return id;
}
let impl = nanoid;
function mockUniqueId(fn) {
    impl = fn;
}
function restoreUniqueId() {
    impl = nanoid;
}
function uniqueId(size) {
    return impl(size);
}
;
 //# sourceMappingURL=id.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/iterable.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getFirstFromIterable": (()=>getFirstFromIterable)
});
function getFirstFromIterable(set) {
    return set.values().next().value;
}
;
 //# sourceMappingURL=iterable.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/media/apng.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/*!
 * MIT License: https://github.com/vHeemstra/is-apng/blob/main/license
 * Copyright (c) Philip van Heemstra
 */ __turbopack_context__.s({
    "isApngAnimated": (()=>isApngAnimated)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
function isApngAnimated(buffer) {
    const view = new Uint8Array(buffer);
    if (!view || !(typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"] !== "undefined" && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].isBuffer(view) || view instanceof Uint8Array) || view.length < 16) {
        return false;
    }
    const isPNG = view[0] === 137 && view[1] === 80 && view[2] === 78 && view[3] === 71 && view[4] === 13 && view[5] === 10 && view[6] === 26 && view[7] === 10;
    if (!isPNG) {
        return false;
    }
    function indexOfSubstring(haystack, needle, fromIndex, upToIndex, chunksize = 1024) {
        if (!needle) {
            return -1;
        }
        needle = new RegExp(needle, "g");
        const needle_length = needle.source.length;
        const decoder = new TextDecoder();
        const full_haystack_length = haystack.length;
        if (typeof upToIndex === "undefined") {
            upToIndex = full_haystack_length;
        }
        if (fromIndex >= full_haystack_length || upToIndex <= 0 || fromIndex >= upToIndex) {
            return -1;
        }
        haystack = haystack.subarray(fromIndex, upToIndex);
        let position = -1;
        let current_index = 0;
        let full_length = 0;
        let needle_buffer = "";
        outer: while(current_index < haystack.length){
            const next_index = current_index + chunksize;
            const chunk = haystack.subarray(current_index, next_index);
            const decoded = decoder.decode(chunk, {
                stream: true
            });
            const text = needle_buffer + decoded;
            let match;
            let last_index = -1;
            while((match = needle.exec(text)) !== null){
                last_index = match.index - needle_buffer.length;
                position = full_length + last_index;
                break outer;
            }
            current_index = next_index;
            full_length += decoded.length;
            const needle_index = last_index > -1 ? last_index + needle_length : decoded.length - needle_length;
            needle_buffer = decoded.slice(needle_index);
        }
        if (position >= 0) {
            position += fromIndex >= 0 ? fromIndex : full_haystack_length + fromIndex;
        }
        return position;
    }
    const idatIdx = indexOfSubstring(view, "IDAT", 12);
    if (idatIdx >= 12) {
        const actlIdx = indexOfSubstring(view, "acTL", 8, idatIdx);
        return actlIdx >= 8;
    }
    return false;
}
;
 //# sourceMappingURL=apng.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/media/avif.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "isAvifAnimated": (()=>isAvifAnimated)
});
const isAvifAnimated = (buffer)=>{
    const view = new Uint8Array(buffer);
    return view[3] === 44;
};
;
 //# sourceMappingURL=avif.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/media/gif.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/*!
 * MIT License
 * Modified code originally from <https://github.com/qzb/is-animated>
 * Copyright (c) 2016 Józef Sokołowski <j.k.sokolowski@gmail.com>
 */ __turbopack_context__.s({
    "isGIF": (()=>isGIF),
    "isGifAnimated": (()=>isGifAnimated)
});
function getDataBlocksLength(buffer, offset) {
    let length = 0;
    while(buffer[offset + length]){
        length += buffer[offset + length] + 1;
    }
    return length + 1;
}
function isGIF(buffer) {
    const enc = new TextDecoder("ascii");
    const header = enc.decode(buffer.slice(0, 3));
    return header === "GIF";
}
function isGifAnimated(buffer) {
    const view = new Uint8Array(buffer);
    let hasColorTable, colorTableSize;
    let offset = 0;
    let imagesCount = 0;
    if (!isGIF(buffer)) {
        return false;
    }
    hasColorTable = view[10] & 128;
    colorTableSize = view[10] & 7;
    offset += 6;
    offset += 7;
    offset += hasColorTable ? 3 * Math.pow(2, colorTableSize + 1) : 0;
    while(imagesCount < 2 && offset < view.length){
        switch(view[offset]){
            // Image descriptor block. According to specification there could be any
            // number of these blocks (even zero). When there is more than one image
            // descriptor browsers will display animation (they shouldn't when there
            // is no delays defined, but they do it anyway).
            case 44:
                imagesCount += 1;
                hasColorTable = view[offset + 9] & 128;
                colorTableSize = view[offset + 9] & 7;
                offset += 10;
                offset += hasColorTable ? 3 * Math.pow(2, colorTableSize + 1) : 0;
                offset += getDataBlocksLength(view, offset + 1) + 1;
                break;
            // Skip all extension blocks. In theory this "plain text extension" blocks
            // could be frames of animation, but no browser renders them.
            case 33:
                offset += 2;
                offset += getDataBlocksLength(view, offset);
                break;
            // Stop processing on trailer block,
            // all data after this point will is ignored by decoders
            case 59:
                offset = view.length;
                break;
            // Oops! This GIF seems to be invalid
            default:
                offset = view.length;
                break;
        }
    }
    return imagesCount > 1;
}
;
 //# sourceMappingURL=gif.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/media/png.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/*!
 * MIT License: https://github.com/alexgorbatchev/crc/blob/master/LICENSE
 * Copyright: 2014 Alex Gorbatchev
 * Code: crc32, https://github.com/alexgorbatchev/crc/blob/master/src/calculators/crc32.ts
 */ __turbopack_context__.s({
    "PngHelpers": (()=>PngHelpers)
});
let TABLE = [
    0,
    1996959894,
    3993919788,
    2567524794,
    124634137,
    1886057615,
    3915621685,
    2657392035,
    249268274,
    2044508324,
    3772115230,
    2547177864,
    162941995,
    2125561021,
    3887607047,
    2428444049,
    498536548,
    1789927666,
    4089016648,
    2227061214,
    450548861,
    1843258603,
    4107580753,
    2211677639,
    325883990,
    1684777152,
    4251122042,
    2321926636,
    335633487,
    1661365465,
    4195302755,
    2366115317,
    997073096,
    1281953886,
    3579855332,
    2724688242,
    1006888145,
    1258607687,
    3524101629,
    2768942443,
    901097722,
    1119000684,
    3686517206,
    2898065728,
    853044451,
    1172266101,
    3705015759,
    2882616665,
    651767980,
    1373503546,
    3369554304,
    3218104598,
    565507253,
    1454621731,
    3485111705,
    3099436303,
    671266974,
    1594198024,
    3322730930,
    2970347812,
    795835527,
    1483230225,
    3244367275,
    3060149565,
    1994146192,
    31158534,
    2563907772,
    4023717930,
    1907459465,
    112637215,
    2680153253,
    3904427059,
    2013776290,
    251722036,
    2517215374,
    3775830040,
    2137656763,
    141376813,
    2439277719,
    3865271297,
    1802195444,
    476864866,
    2238001368,
    4066508878,
    1812370925,
    453092731,
    2181625025,
    4111451223,
    1706088902,
    314042704,
    2344532202,
    4240017532,
    1658658271,
    366619977,
    2362670323,
    4224994405,
    1303535960,
    984961486,
    2747007092,
    3569037538,
    1256170817,
    1037604311,
    2765210733,
    3554079995,
    1131014506,
    879679996,
    2909243462,
    3663771856,
    1141124467,
    855842277,
    2852801631,
    3708648649,
    1342533948,
    654459306,
    3188396048,
    3373015174,
    1466479909,
    544179635,
    3110523913,
    3462522015,
    1591671054,
    702138776,
    2966460450,
    3352799412,
    1504918807,
    783551873,
    3082640443,
    3233442989,
    3988292384,
    2596254646,
    62317068,
    1957810842,
    3939845945,
    2647816111,
    81470997,
    1943803523,
    3814918930,
    2489596804,
    225274430,
    2053790376,
    3826175755,
    2466906013,
    167816743,
    2097651377,
    4027552580,
    2265490386,
    503444072,
    1762050814,
    4150417245,
    2154129355,
    426522225,
    1852507879,
    4275313526,
    2312317920,
    282753626,
    1742555852,
    4189708143,
    2394877945,
    397917763,
    1622183637,
    3604390888,
    2714866558,
    953729732,
    1340076626,
    3518719985,
    2797360999,
    1068828381,
    1219638859,
    3624741850,
    2936675148,
    906185462,
    1090812512,
    3747672003,
    2825379669,
    829329135,
    1181335161,
    3412177804,
    3160834842,
    628085408,
    1382605366,
    3423369109,
    3138078467,
    570562233,
    1426400815,
    3317316542,
    2998733608,
    733239954,
    1555261956,
    3268935591,
    3050360625,
    752459403,
    1541320221,
    2607071920,
    3965973030,
    1969922972,
    40735498,
    2617837225,
    3943577151,
    1913087877,
    83908371,
    2512341634,
    3803740692,
    2075208622,
    213261112,
    2463272603,
    3855990285,
    2094854071,
    198958881,
    2262029012,
    4057260610,
    1759359992,
    534414190,
    2176718541,
    4139329115,
    1873836001,
    414664567,
    2282248934,
    4279200368,
    1711684554,
    285281116,
    2405801727,
    4167216745,
    1634467795,
    376229701,
    2685067896,
    3608007406,
    1308918612,
    956543938,
    2808555105,
    3495958263,
    1231636301,
    1047427035,
    2932959818,
    3654703836,
    1088359270,
    936918e3,
    2847714899,
    3736837829,
    1202900863,
    817233897,
    3183342108,
    3401237130,
    1404277552,
    615818150,
    3134207493,
    3453421203,
    1423857449,
    601450431,
    3009837614,
    3294710456,
    1567103746,
    711928724,
    3020668471,
    3272380065,
    1510334235,
    755167117
];
if (typeof Int32Array !== "undefined") {
    TABLE = new Int32Array(TABLE);
}
const crc = (current, previous)=>{
    let crc2 = previous === 0 ? 0 : ~~previous ^ -1;
    for(let index = 0; index < current.length; index++){
        crc2 = TABLE[(crc2 ^ current[index]) & 255] ^ crc2 >>> 8;
    }
    return crc2 ^ -1;
};
const LEN_SIZE = 4;
const CRC_SIZE = 4;
class PngHelpers {
    static isPng(view, offset) {
        if (view.getUint8(offset + 0) === 137 && view.getUint8(offset + 1) === 80 && view.getUint8(offset + 2) === 78 && view.getUint8(offset + 3) === 71 && view.getUint8(offset + 4) === 13 && view.getUint8(offset + 5) === 10 && view.getUint8(offset + 6) === 26 && view.getUint8(offset + 7) === 10) {
            return true;
        }
        return false;
    }
    static getChunkType(view, offset) {
        return [
            String.fromCharCode(view.getUint8(offset)),
            String.fromCharCode(view.getUint8(offset + 1)),
            String.fromCharCode(view.getUint8(offset + 2)),
            String.fromCharCode(view.getUint8(offset + 3))
        ].join("");
    }
    static readChunks(view, offset = 0) {
        const chunks = {};
        if (!PngHelpers.isPng(view, offset)) {
            throw new Error("Not a PNG");
        }
        offset += 8;
        while(offset <= view.buffer.byteLength){
            const start = offset;
            const len = view.getInt32(offset);
            offset += 4;
            const chunkType = PngHelpers.getChunkType(view, offset);
            if (chunkType === "IDAT" && chunks[chunkType]) {
                offset += len + LEN_SIZE + CRC_SIZE;
                continue;
            }
            if (chunkType === "IEND") {
                break;
            }
            chunks[chunkType] = {
                start,
                dataOffset: offset + 4,
                size: len
            };
            offset += len + LEN_SIZE + CRC_SIZE;
        }
        return chunks;
    }
    static parsePhys(view, offset) {
        return {
            ppux: view.getUint32(offset),
            ppuy: view.getUint32(offset + 4),
            unit: view.getUint8(offset + 4)
        };
    }
    static findChunk(view, type) {
        const chunks = PngHelpers.readChunks(view);
        return chunks[type];
    }
    static setPhysChunk(view, dpr = 1, options) {
        let offset = 46;
        let size = 0;
        const res1 = PngHelpers.findChunk(view, "pHYs");
        if (res1) {
            offset = res1.start;
            size = res1.size;
        }
        const res2 = PngHelpers.findChunk(view, "IDAT");
        if (res2) {
            offset = res2.start;
            size = 0;
        }
        const pHYsData = new ArrayBuffer(21);
        const pHYsDataView = new DataView(pHYsData);
        pHYsDataView.setUint32(0, 9);
        pHYsDataView.setUint8(4, "p".charCodeAt(0));
        pHYsDataView.setUint8(5, "H".charCodeAt(0));
        pHYsDataView.setUint8(6, "Y".charCodeAt(0));
        pHYsDataView.setUint8(7, "s".charCodeAt(0));
        const DPI_96 = 2835.5;
        pHYsDataView.setInt32(8, DPI_96 * dpr);
        pHYsDataView.setInt32(12, DPI_96 * dpr);
        pHYsDataView.setInt8(16, 1);
        const crcBit = new Uint8Array(pHYsData.slice(4, 17));
        pHYsDataView.setInt32(17, crc(crcBit));
        const startBuf = view.buffer.slice(0, offset);
        const endBuf = view.buffer.slice(offset + size);
        return new Blob([
            startBuf,
            pHYsData,
            endBuf
        ], options);
    }
}
;
 //# sourceMappingURL=png.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/media/webp.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/*!
 * MIT License: https://github.com/sindresorhus/is-webp/blob/main/license
 * Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)
 */ __turbopack_context__.s({
    "isWebpAnimated": (()=>isWebpAnimated)
});
function isWebp(view) {
    if (!view || view.length < 12) {
        return false;
    }
    return view[8] === 87 && view[9] === 69 && view[10] === 66 && view[11] === 80;
}
function isWebpAnimated(buffer) {
    const view = new Uint8Array(buffer);
    if (!isWebp(view)) {
        return false;
    }
    if (!view || view.length < 21) {
        return false;
    }
    return (view[20] >> 1 & 1) === 1;
}
;
 //# sourceMappingURL=webp.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/media/media.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "DEFAULT_SUPPORTED_ANIMATED_IMAGE_TYPES": (()=>DEFAULT_SUPPORTED_ANIMATED_IMAGE_TYPES),
    "DEFAULT_SUPPORTED_IMAGE_TYPES": (()=>DEFAULT_SUPPORTED_IMAGE_TYPES),
    "DEFAULT_SUPPORTED_MEDIA_TYPES": (()=>DEFAULT_SUPPORTED_MEDIA_TYPES),
    "DEFAULT_SUPPORTED_MEDIA_TYPE_LIST": (()=>DEFAULT_SUPPORTED_MEDIA_TYPE_LIST),
    "DEFAULT_SUPPORTED_STATIC_IMAGE_TYPES": (()=>DEFAULT_SUPPORTED_STATIC_IMAGE_TYPES),
    "DEFAULT_SUPPORTED_VECTOR_IMAGE_TYPES": (()=>DEFAULT_SUPPORTED_VECTOR_IMAGE_TYPES),
    "DEFAULT_SUPPORT_VIDEO_TYPES": (()=>DEFAULT_SUPPORT_VIDEO_TYPES),
    "MediaHelpers": (()=>MediaHelpers)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$network$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/network.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$apng$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/media/apng.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$avif$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/media/avif.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$gif$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/media/gif.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$png$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/media/png.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$webp$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/media/webp.mjs [app-client] (ecmascript)");
;
;
;
;
;
;
;
const DEFAULT_SUPPORTED_VECTOR_IMAGE_TYPES = Object.freeze([
    "image/svg+xml"
]);
const DEFAULT_SUPPORTED_STATIC_IMAGE_TYPES = Object.freeze([
    "image/jpeg",
    "image/png",
    "image/webp"
]);
const DEFAULT_SUPPORTED_ANIMATED_IMAGE_TYPES = Object.freeze([
    "image/gif",
    "image/apng",
    "image/avif"
]);
const DEFAULT_SUPPORTED_IMAGE_TYPES = Object.freeze([
    ...DEFAULT_SUPPORTED_STATIC_IMAGE_TYPES,
    ...DEFAULT_SUPPORTED_VECTOR_IMAGE_TYPES,
    ...DEFAULT_SUPPORTED_ANIMATED_IMAGE_TYPES
]);
const DEFAULT_SUPPORT_VIDEO_TYPES = Object.freeze([
    "video/mp4",
    "video/webm",
    "video/quicktime"
]);
const DEFAULT_SUPPORTED_MEDIA_TYPES = Object.freeze([
    ...DEFAULT_SUPPORTED_IMAGE_TYPES,
    ...DEFAULT_SUPPORT_VIDEO_TYPES
]);
const DEFAULT_SUPPORTED_MEDIA_TYPE_LIST = DEFAULT_SUPPORTED_MEDIA_TYPES.join(",");
class MediaHelpers {
    /**
   * Load a video from a url.
   * @public
   */ static loadVideo(src) {
        return new Promise((resolve, reject)=>{
            const video = document.createElement("video");
            video.onloadeddata = ()=>resolve(video);
            video.onerror = (e)=>{
                console.error(e);
                reject(new Error("Could not load video"));
            };
            video.crossOrigin = "anonymous";
            video.src = src;
        });
    }
    static async getVideoFrameAsDataUrl(video, time = 0) {
        const promise = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["promiseWithResolve"])();
        let didSetTime = false;
        const onReadyStateChanged = ()=>{
            if (!didSetTime) {
                if (video.readyState >= video.HAVE_METADATA) {
                    didSetTime = true;
                    video.currentTime = time;
                } else {
                    return;
                }
            }
            if (video.readyState >= video.HAVE_CURRENT_DATA) {
                const canvas = document.createElement("canvas");
                canvas.width = video.videoWidth;
                canvas.height = video.videoHeight;
                const ctx = canvas.getContext("2d");
                if (!ctx) {
                    throw new Error("Could not get 2d context");
                }
                ctx.drawImage(video, 0, 0);
                promise.resolve(canvas.toDataURL());
            }
        };
        const onError = (e)=>{
            console.error(e);
            promise.reject(new Error("Could not get video frame"));
        };
        video.addEventListener("loadedmetadata", onReadyStateChanged);
        video.addEventListener("loadeddata", onReadyStateChanged);
        video.addEventListener("canplay", onReadyStateChanged);
        video.addEventListener("seeked", onReadyStateChanged);
        video.addEventListener("error", onError);
        video.addEventListener("stalled", onError);
        onReadyStateChanged();
        try {
            return await promise;
        } finally{
            video.removeEventListener("loadedmetadata", onReadyStateChanged);
            video.removeEventListener("loadeddata", onReadyStateChanged);
            video.removeEventListener("canplay", onReadyStateChanged);
            video.removeEventListener("seeked", onReadyStateChanged);
            video.removeEventListener("error", onError);
            video.removeEventListener("stalled", onError);
        }
    }
    /**
   * Load an image from a url.
   * @public
   */ static getImageAndDimensions(src) {
        return new Promise((resolve, reject)=>{
            const img = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$network$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Image"])();
            img.onload = ()=>{
                let dimensions;
                if (img.naturalWidth) {
                    dimensions = {
                        w: img.naturalWidth,
                        h: img.naturalHeight
                    };
                } else {
                    document.body.appendChild(img);
                    dimensions = {
                        w: img.clientWidth,
                        h: img.clientHeight
                    };
                    document.body.removeChild(img);
                }
                resolve({
                    ...dimensions,
                    image: img
                });
            };
            img.onerror = (e)=>{
                console.error(e);
                reject(new Error("Could not load image"));
            };
            img.crossOrigin = "anonymous";
            img.referrerPolicy = "strict-origin-when-cross-origin";
            img.style.visibility = "hidden";
            img.style.position = "absolute";
            img.style.opacity = "0";
            img.style.zIndex = "-9999";
            img.src = src;
        });
    }
    /**
   * Get the size of a video blob
   *
   * @param blob - A SharedBlob containing the video
   * @public
   */ static async getVideoSize(blob) {
        return MediaHelpers.usingObjectURL(blob, async (url)=>{
            const video = await MediaHelpers.loadVideo(url);
            return {
                w: video.videoWidth,
                h: video.videoHeight
            };
        });
    }
    /**
   * Get the size of an image blob
   *
   * @param blob - A Blob containing the image.
   * @public
   */ static async getImageSize(blob) {
        const { w, h } = await MediaHelpers.usingObjectURL(blob, MediaHelpers.getImageAndDimensions);
        try {
            if (blob.type === "image/png") {
                const view = new DataView(await blob.arrayBuffer());
                if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$png$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PngHelpers"].isPng(view, 0)) {
                    const physChunk = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$png$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PngHelpers"].findChunk(view, "pHYs");
                    if (physChunk) {
                        const physData = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$png$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PngHelpers"].parsePhys(view, physChunk.dataOffset);
                        if (physData.unit === 0 && physData.ppux === physData.ppuy) {
                            const pixelsPerMeter = 72 / 0.0254;
                            const pixelRatio = Math.max(physData.ppux / pixelsPerMeter, 1);
                            return {
                                w: Math.round(w / pixelRatio),
                                h: Math.round(h / pixelRatio)
                            };
                        }
                    }
                }
            }
        } catch (err) {
            console.error(err);
            return {
                w,
                h
            };
        }
        return {
            w,
            h
        };
    }
    static async isAnimated(file) {
        if (file.type === "image/gif") {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$gif$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isGifAnimated"])(await file.arrayBuffer());
        }
        if (file.type === "image/avif") {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$avif$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isAvifAnimated"])(await file.arrayBuffer());
        }
        if (file.type === "image/webp") {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$webp$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isWebpAnimated"])(await file.arrayBuffer());
        }
        if (file.type === "image/apng") {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$apng$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isApngAnimated"])(await file.arrayBuffer());
        }
        return false;
    }
    static isAnimatedImageType(mimeType) {
        return DEFAULT_SUPPORTED_ANIMATED_IMAGE_TYPES.includes(mimeType || "");
    }
    static isStaticImageType(mimeType) {
        return DEFAULT_SUPPORTED_STATIC_IMAGE_TYPES.includes(mimeType || "");
    }
    static isVectorImageType(mimeType) {
        return DEFAULT_SUPPORTED_VECTOR_IMAGE_TYPES.includes(mimeType || "");
    }
    static isImageType(mimeType) {
        return DEFAULT_SUPPORTED_IMAGE_TYPES.includes(mimeType || "");
    }
    static async usingObjectURL(blob, fn) {
        const url = URL.createObjectURL(blob);
        try {
            return await fn(url);
        } finally{
            URL.revokeObjectURL(url);
        }
    }
}
;
 //# sourceMappingURL=media.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "invLerp": (()=>invLerp),
    "lerp": (()=>lerp),
    "modulate": (()=>modulate),
    "rng": (()=>rng)
});
function lerp(a, b, t) {
    return a + (b - a) * t;
}
function invLerp(a, b, t) {
    return (t - a) / (b - a);
}
function rng(seed = "") {
    let x = 0;
    let y = 0;
    let z = 0;
    let w = 0;
    function next() {
        const t = x ^ x << 11;
        x = y;
        y = z;
        z = w;
        w ^= (w >>> 19 ^ t ^ t >>> 8) >>> 0;
        return w / 4294967296 * 2;
    }
    for(let k = 0; k < seed.length + 64; k++){
        x ^= seed.charCodeAt(k) | 0;
        next();
    }
    return next;
}
function modulate(value, rangeA, rangeB, clamp = false) {
    const [fromLow, fromHigh] = rangeA;
    const [v0, v1] = rangeB;
    const result = v0 + (value - fromLow) / (fromHigh - fromLow) * (v1 - v0);
    return clamp ? v0 < v1 ? Math.max(Math.min(result, v1), v0) : Math.max(Math.min(result, v0), v1) : result;
}
;
 //# sourceMappingURL=number.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/object.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "areObjectsShallowEqual": (()=>areObjectsShallowEqual),
    "filterEntries": (()=>filterEntries),
    "getChangedKeys": (()=>getChangedKeys),
    "getOwnProperty": (()=>getOwnProperty),
    "groupBy": (()=>groupBy),
    "hasOwnProperty": (()=>hasOwnProperty),
    "isEqualAllowingForFloatingPointErrors": (()=>isEqualAllowingForFloatingPointErrors),
    "mapObjectMapValues": (()=>mapObjectMapValues),
    "objectMapEntries": (()=>objectMapEntries),
    "objectMapFromEntries": (()=>objectMapFromEntries),
    "objectMapKeys": (()=>objectMapKeys),
    "objectMapValues": (()=>objectMapValues),
    "omit": (()=>omit)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$isequalwith$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lodash.isequalwith/index.js [app-client] (ecmascript)");
;
function hasOwnProperty(obj, key) {
    return Object.prototype.hasOwnProperty.call(obj, key);
}
function getOwnProperty(obj, key) {
    if (!hasOwnProperty(obj, key)) {
        return void 0;
    }
    return obj[key];
}
function objectMapKeys(object) {
    return Object.keys(object);
}
function objectMapValues(object) {
    return Object.values(object);
}
function objectMapEntries(object) {
    return Object.entries(object);
}
function objectMapFromEntries(entries) {
    return Object.fromEntries(entries);
}
function filterEntries(object, predicate) {
    const result = {};
    let didChange = false;
    for (const [key, value] of objectMapEntries(object)){
        if (predicate(key, value)) {
            result[key] = value;
        } else {
            didChange = true;
        }
    }
    return didChange ? result : object;
}
function mapObjectMapValues(object, mapper) {
    const result = {};
    for (const [key, value] of objectMapEntries(object)){
        const newValue = mapper(key, value);
        result[key] = newValue;
    }
    return result;
}
function areObjectsShallowEqual(obj1, obj2) {
    if (obj1 === obj2) return true;
    const keys1 = new Set(Object.keys(obj1));
    const keys2 = new Set(Object.keys(obj2));
    if (keys1.size !== keys2.size) return false;
    for (const key of keys1){
        if (!keys2.has(key)) return false;
        if (!Object.is(obj1[key], obj2[key])) return false;
    }
    return true;
}
function groupBy(array, keySelector) {
    const result = {};
    for (const value of array){
        const key = keySelector(value);
        if (!result[key]) result[key] = [];
        result[key].push(value);
    }
    return result;
}
function omit(obj, keys) {
    const result = {
        ...obj
    };
    for (const key of keys){
        delete result[key];
    }
    return result;
}
function getChangedKeys(obj1, obj2) {
    const result = [];
    for(const key in obj1){
        if (!Object.is(obj1[key], obj2[key])) {
            result.push(key);
        }
    }
    return result;
}
function isEqualAllowingForFloatingPointErrors(obj1, obj2, threshold = 1e-6) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$isequalwith$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(obj1, obj2, (value1, value2)=>{
        if (typeof value1 === "number" && typeof value2 === "number") {
            return Math.abs(value1 - value2) < threshold;
        }
        return void 0;
    });
}
;
 //# sourceMappingURL=object.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/perf.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "PERFORMANCE_COLORS": (()=>PERFORMANCE_COLORS),
    "PERFORMANCE_PREFIX_COLOR": (()=>PERFORMANCE_PREFIX_COLOR),
    "measureAverageDuration": (()=>measureAverageDuration),
    "measureCbDuration": (()=>measureCbDuration),
    "measureDuration": (()=>measureDuration)
});
const PERFORMANCE_COLORS = {
    Good: "#40C057",
    Mid: "#FFC078",
    Poor: "#E03131"
};
const PERFORMANCE_PREFIX_COLOR = PERFORMANCE_COLORS.Good;
function measureCbDuration(name, cb) {
    const start = performance.now();
    const result = cb();
    console.debug(`%cPerf%c ${name} took ${performance.now() - start}ms`, `color: white; background: ${PERFORMANCE_PREFIX_COLOR};padding: 2px;border-radius: 3px;`, "font-weight: normal");
    return result;
}
function measureDuration(_target, propertyKey, descriptor) {
    const originalMethod = descriptor.value;
    descriptor.value = function(...args) {
        const start = performance.now();
        const result = originalMethod.apply(this, args);
        console.debug(`%cPerf%c ${propertyKey} took: ${performance.now() - start}ms`, `color: white; background: ${PERFORMANCE_PREFIX_COLOR};padding: 2px;border-radius: 3px;`, "font-weight: normal");
        return result;
    };
    return descriptor;
}
const averages = /* @__PURE__ */ new Map();
function measureAverageDuration(_target, propertyKey, descriptor) {
    const originalMethod = descriptor.value;
    descriptor.value = function(...args) {
        const start = performance.now();
        const result = originalMethod.apply(this, args);
        const end = performance.now();
        const length = end - start;
        if (length !== 0) {
            const value = averages.get(descriptor.value);
            const total = value.total + length;
            const count = value.count + 1;
            averages.set(descriptor.value, {
                total,
                count
            });
            console.debug(`%cPerf%c ${propertyKey} took ${(end - start).toFixed(2)}ms | average ${(total / count).toFixed(2)}ms`, `color: white; background: ${PERFORMANCE_PREFIX_COLOR};padding: 2px;border-radius: 3px;`, "font-weight: normal");
        }
        return result;
    };
    averages.set(descriptor.value, {
        total: 0,
        count: 0
    });
    return descriptor;
}
;
 //# sourceMappingURL=perf.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/PerformanceTracker.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "PerformanceTracker": (()=>PerformanceTracker)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$perf$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/perf.mjs [app-client] (ecmascript)");
;
class PerformanceTracker {
    startTime = 0;
    name = "";
    frames = 0;
    started = false;
    frame = null;
    // eslint-disable-next-line local/prefer-class-methods
    recordFrame = ()=>{
        this.frames++;
        if (!this.started) return;
        this.frame = requestAnimationFrame(this.recordFrame);
    };
    start(name) {
        this.name = name;
        this.frames = 0;
        this.started = true;
        if (this.frame !== null) cancelAnimationFrame(this.frame);
        this.frame = requestAnimationFrame(this.recordFrame);
        this.startTime = performance.now();
    }
    stop() {
        this.started = false;
        if (this.frame !== null) cancelAnimationFrame(this.frame);
        const duration = (performance.now() - this.startTime) / 1e3;
        const fps = duration === 0 ? 0 : Math.floor(this.frames / duration);
        const background = fps > 55 ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$perf$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PERFORMANCE_COLORS"].Good : fps > 30 ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$perf$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PERFORMANCE_COLORS"].Mid : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$perf$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PERFORMANCE_COLORS"].Poor;
        const color = background === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$perf$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PERFORMANCE_COLORS"].Mid ? "black" : "white";
        const capitalized = this.name[0].toUpperCase() + this.name.slice(1);
        console.debug(`%cPerf%c ${capitalized} %c${fps}%c fps`, `color: white; background: ${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$perf$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PERFORMANCE_PREFIX_COLOR"]};padding: 2px;border-radius: 3px;`, "font-weight: normal", `font-weight: bold; padding: 2px; background: ${background};color: ${color};`, "font-weight: normal");
    }
    isStarted() {
        return this.started;
    }
}
;
 //# sourceMappingURL=PerformanceTracker.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/reordering.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ZERO_INDEX_KEY": (()=>ZERO_INDEX_KEY),
    "getIndexAbove": (()=>getIndexAbove),
    "getIndexBelow": (()=>getIndexBelow),
    "getIndexBetween": (()=>getIndexBetween),
    "getIndices": (()=>getIndices),
    "getIndicesAbove": (()=>getIndicesAbove),
    "getIndicesBelow": (()=>getIndicesBelow),
    "getIndicesBetween": (()=>getIndicesBetween),
    "sortByIndex": (()=>sortByIndex),
    "validateIndexKey": (()=>validateIndexKey)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fractional$2d$indexing$2d$jittered$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/fractional-indexing-jittered/lib/index.js [app-client] (ecmascript)");
;
const generateKeysFn = ("TURBOPACK compile-time falsy", 0) ? ("TURBOPACK unreachable", undefined) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fractional$2d$indexing$2d$jittered$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateNJitteredKeysBetween"];
const ZERO_INDEX_KEY = "a0";
function validateIndexKey(index) {
    try {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$fractional$2d$indexing$2d$jittered$2f$lib$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["generateJitteredKeyBetween"])(index, null);
    } catch  {
        throw new Error("invalid index: " + index);
    }
}
function getIndicesBetween(below, above, n) {
    return generateKeysFn(below ?? null, above ?? null, n);
}
function getIndicesAbove(below, n) {
    return generateKeysFn(below ?? null, null, n);
}
function getIndicesBelow(above, n) {
    return generateKeysFn(null, above ?? null, n);
}
function getIndexBetween(below, above) {
    return generateKeysFn(below ?? null, above ?? null, 1)[0];
}
function getIndexAbove(below = null) {
    return generateKeysFn(below, null, 1)[0];
}
function getIndexBelow(above = null) {
    return generateKeysFn(null, above, 1)[0];
}
function getIndices(n, start = "a1") {
    return [
        start,
        ...generateKeysFn(start, null, n)
    ];
}
function sortByIndex(a, b) {
    if (a.index < b.index) {
        return -1;
    } else if (a.index > b.index) {
        return 1;
    }
    return 0;
}
;
 //# sourceMappingURL=reordering.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/retry.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "retry": (()=>retry)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-client] (ecmascript)");
;
async function retry(fn, { attempts = 3, waitDuration = 1e3, abortSignal, matchError } = {}) {
    let error = null;
    for(let i = 0; i < attempts; i++){
        if (abortSignal?.aborted) throw new Error("aborted");
        try {
            return await fn();
        } catch (e) {
            if (matchError && !matchError(e)) throw e;
            error = e;
            await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["sleep"])(waitDuration);
        }
    }
    throw error;
}
;
 //# sourceMappingURL=retry.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/sort.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "sortById": (()=>sortById)
});
function sortById(a, b) {
    return a.id > b.id ? 1 : -1;
}
;
 //# sourceMappingURL=sort.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/storage.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "clearLocalStorage": (()=>clearLocalStorage),
    "clearSessionStorage": (()=>clearSessionStorage),
    "deleteFromLocalStorage": (()=>deleteFromLocalStorage),
    "deleteFromSessionStorage": (()=>deleteFromSessionStorage),
    "getFromLocalStorage": (()=>getFromLocalStorage),
    "getFromSessionStorage": (()=>getFromSessionStorage),
    "setInLocalStorage": (()=>setInLocalStorage),
    "setInSessionStorage": (()=>setInSessionStorage)
});
function getFromLocalStorage(key) {
    try {
        return localStorage.getItem(key);
    } catch  {
        return null;
    }
}
function setInLocalStorage(key, value) {
    try {
        localStorage.setItem(key, value);
    } catch  {}
}
function deleteFromLocalStorage(key) {
    try {
        localStorage.removeItem(key);
    } catch  {}
}
function clearLocalStorage() {
    try {
        localStorage.clear();
    } catch  {}
}
function getFromSessionStorage(key) {
    try {
        return sessionStorage.getItem(key);
    } catch  {
        return null;
    }
}
function setInSessionStorage(key, value) {
    try {
        sessionStorage.setItem(key, value);
    } catch  {}
}
function deleteFromSessionStorage(key) {
    try {
        sessionStorage.removeItem(key);
    } catch  {}
}
function clearSessionStorage() {
    try {
        sessionStorage.clear();
    } catch  {}
}
;
 //# sourceMappingURL=storage.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/stringEnum.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "stringEnum": (()=>stringEnum)
});
function stringEnum(...values) {
    const obj = {};
    for (const value of values){
        obj[value] = value;
    }
    return obj;
}
;
 //# sourceMappingURL=stringEnum.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/throttle.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "fpsThrottle": (()=>fpsThrottle),
    "throttleToNextFrame": (()=>throttleToNextFrame)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
const isTest = ()=>typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] !== "undefined" && ("TURBOPACK compile-time value", "development") === "test" && // @ts-expect-error
    !globalThis.__FORCE_RAF_IN_TESTS__;
const fpsQueue = [];
const targetFps = 60;
const targetTimePerFrame = Math.floor(1e3 / targetFps) * 0.9;
let frameRaf;
let flushRaf;
let lastFlushTime = -targetTimePerFrame;
const flush = ()=>{
    const queue = fpsQueue.splice(0, fpsQueue.length);
    for (const fn of queue){
        fn();
    }
};
function tick(isOnNextFrame = false) {
    if (frameRaf) return;
    const now = Date.now();
    const elapsed = now - lastFlushTime;
    if (elapsed < targetTimePerFrame) {
        frameRaf = requestAnimationFrame(()=>{
            frameRaf = void 0;
            tick(true);
        });
        return;
    }
    if (isOnNextFrame) {
        if (flushRaf) return;
        lastFlushTime = now;
        flush();
    } else {
        if (flushRaf) return;
        flushRaf = requestAnimationFrame(()=>{
            flushRaf = void 0;
            lastFlushTime = now;
            flush();
        });
    }
}
function fpsThrottle(fn) {
    if (isTest()) {
        "TURBOPACK unreachable";
    }
    const throttledFn = ()=>{
        if (fpsQueue.includes(fn)) {
            return;
        }
        fpsQueue.push(fn);
        tick();
    };
    throttledFn.cancel = ()=>{
        const index = fpsQueue.indexOf(fn);
        if (index > -1) {
            fpsQueue.splice(index, 1);
        }
    };
    return throttledFn;
}
function throttleToNextFrame(fn) {
    if (isTest()) {
        "TURBOPACK unreachable";
    }
    if (!fpsQueue.includes(fn)) {
        fpsQueue.push(fn);
        tick();
    }
    return ()=>{
        const index = fpsQueue.indexOf(fn);
        if (index > -1) {
            fpsQueue.splice(index, 1);
        }
    };
}
;
 //# sourceMappingURL=throttle.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/timers.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Timers": (()=>Timers)
});
class Timers {
    timeouts = /* @__PURE__ */ new Map();
    intervals = /* @__PURE__ */ new Map();
    rafs = /* @__PURE__ */ new Map();
    constructor(){
        this.setTimeout = this.setTimeout.bind(this);
        this.setInterval = this.setInterval.bind(this);
        this.requestAnimationFrame = this.requestAnimationFrame.bind(this);
        this.dispose = this.dispose.bind(this);
    }
    /** @public */ setTimeout(contextId, handler, timeout, ...args) {
        const id = window.setTimeout(handler, timeout, args);
        const current = this.timeouts.get(contextId) ?? [];
        this.timeouts.set(contextId, [
            ...current,
            id
        ]);
        return id;
    }
    /** @public */ setInterval(contextId, handler, timeout, ...args) {
        const id = window.setInterval(handler, timeout, args);
        const current = this.intervals.get(contextId) ?? [];
        this.intervals.set(contextId, [
            ...current,
            id
        ]);
        return id;
    }
    /** @public */ requestAnimationFrame(contextId, callback) {
        const id = window.requestAnimationFrame(callback);
        const current = this.rafs.get(contextId) ?? [];
        this.rafs.set(contextId, [
            ...current,
            id
        ]);
        return id;
    }
    /** @public */ dispose(contextId) {
        this.timeouts.get(contextId)?.forEach((id)=>clearTimeout(id));
        this.intervals.get(contextId)?.forEach((id)=>clearInterval(id));
        this.rafs.get(contextId)?.forEach((id)=>cancelAnimationFrame(id));
        this.timeouts.delete(contextId);
        this.intervals.delete(contextId);
        this.rafs.delete(contextId);
    }
    disposeAll() {
        for (const contextId of this.timeouts.keys()){
            this.dispose(contextId);
        }
    }
    forContext(contextId) {
        return {
            setTimeout: (handler, timeout, ...args)=>this.setTimeout(contextId, handler, timeout, args),
            setInterval: (handler, timeout, ...args)=>this.setInterval(contextId, handler, timeout, args),
            requestAnimationFrame: (callback)=>this.requestAnimationFrame(contextId, callback),
            dispose: ()=>this.dispose(contextId)
        };
    }
}
;
 //# sourceMappingURL=timers.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/url.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "safeParseUrl": (()=>safeParseUrl)
});
const safeParseUrl = (url, baseUrl)=>{
    try {
        return new URL(url, baseUrl);
    } catch  {
        return;
    }
};
;
 //# sourceMappingURL=url.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/value.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "STRUCTURED_CLONE_OBJECT_PROTOTYPE": (()=>STRUCTURED_CLONE_OBJECT_PROTOTYPE),
    "isDefined": (()=>isDefined),
    "isNativeStructuredClone": (()=>isNativeStructuredClone),
    "isNonNull": (()=>isNonNull),
    "isNonNullish": (()=>isNonNullish),
    "structuredClone": (()=>structuredClone)
});
function isDefined(value) {
    return value !== void 0;
}
function isNonNull(value) {
    return value !== null;
}
function isNonNullish(value) {
    return value !== null && value !== void 0;
}
function getStructuredClone() {
    if (typeof globalThis !== "undefined" && globalThis.structuredClone) {
        return [
            globalThis.structuredClone,
            true
        ];
    }
    if (typeof global !== "undefined" && global.structuredClone) {
        return [
            global.structuredClone,
            true
        ];
    }
    if (typeof window !== "undefined" && window.structuredClone) {
        return [
            window.structuredClone,
            true
        ];
    }
    return [
        (i)=>i ? JSON.parse(JSON.stringify(i)) : i,
        false
    ];
}
const _structuredClone = getStructuredClone();
const structuredClone = _structuredClone[0];
const isNativeStructuredClone = _structuredClone[1];
const STRUCTURED_CLONE_OBJECT_PROTOTYPE = Object.getPrototypeOf(structuredClone({}));
;
 //# sourceMappingURL=value.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/lib/warn.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "warnDeprecatedGetter": (()=>warnDeprecatedGetter),
    "warnOnce": (()=>warnOnce)
});
const usedWarnings = /* @__PURE__ */ new Set();
function warnDeprecatedGetter(name) {
    warnOnce(`Using '${name}' is deprecated and will be removed in the near future. Please refactor to use 'get${name[0].toLocaleUpperCase()}${name.slice(1)}' instead.`);
}
function warnOnce(message) {
    if (usedWarnings.has(message)) return;
    usedWarnings.add(message);
    console.warn(`[tldraw] ${message}`);
}
;
 //# sourceMappingURL=warn.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/index.mjs [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$version$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/version.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$isequal$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lodash.isequal/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$isequalwith$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lodash.isequalwith/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$throttle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lodash.throttle/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$uniq$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lodash.uniq/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/array.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$bind$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/bind.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/cache.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$debounce$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/debounce.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$error$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/error.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$ExecutionQueue$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/ExecutionQueue.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$file$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/file.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$function$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/function.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$hash$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/hash.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$id$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/id.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$iterable$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/iterable.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$media$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/media/media.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$png$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/media/png.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$network$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/network.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/object.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$perf$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/perf.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$PerformanceTracker$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/PerformanceTracker.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$reordering$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/reordering.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$retry$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/retry.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$sort$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/sort.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/storage.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$stringEnum$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/stringEnum.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$throttle$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/throttle.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$timers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/timers.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$url$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/url.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$value$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/value.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$warn$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/warn.mjs [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$version$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registerTldrawLibraryVersion"])("@tldraw/utils", "3.15.3", "esm");
;
 //# sourceMappingURL=index.mjs.map
}}),
"[project]/node_modules/@tldraw/utils/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$version$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/version.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$isequal$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lodash.isequal/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$isequalwith$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lodash.isequalwith/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$throttle$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lodash.throttle/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$uniq$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/lodash.uniq/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/array.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$bind$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/bind.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/cache.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$debounce$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/debounce.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$error$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/error.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$ExecutionQueue$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/ExecutionQueue.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$file$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/file.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$function$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/function.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$hash$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/hash.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$id$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/id.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$iterable$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/iterable.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$media$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/media/media.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$png$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/media/png.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$network$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/network.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/object.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$perf$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/perf.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$PerformanceTracker$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/PerformanceTracker.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$reordering$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/reordering.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$retry$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/retry.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$sort$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/sort.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$storage$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/storage.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$stringEnum$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/stringEnum.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$throttle$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/throttle.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$timers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/timers.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$url$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/url.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$value$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/value.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$warn$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/warn.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/index.mjs [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/@tldraw/state/dist-esm/lib/helpers.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "EMPTY_ARRAY": (()=>EMPTY_ARRAY),
    "attach": (()=>attach),
    "detach": (()=>detach),
    "equals": (()=>equals),
    "hasReactors": (()=>hasReactors),
    "haveParentsChanged": (()=>haveParentsChanged),
    "singleton": (()=>singleton)
});
function isChild(x) {
    return x && typeof x === "object" && "parents" in x;
}
function haveParentsChanged(child) {
    for(let i = 0, n = child.parents.length; i < n; i++){
        child.parents[i].__unsafe__getWithoutCapture(true);
        if (child.parents[i].lastChangedEpoch !== child.parentEpochs[i]) {
            return true;
        }
    }
    return false;
}
function detach(parent, child) {
    if (!parent.children.remove(child)) {
        return;
    }
    if (parent.children.isEmpty && isChild(parent)) {
        for(let i = 0, n = parent.parents.length; i < n; i++){
            detach(parent.parents[i], parent);
        }
    }
}
function attach(parent, child) {
    if (!parent.children.add(child)) {
        return;
    }
    if (isChild(parent)) {
        for(let i = 0, n = parent.parents.length; i < n; i++){
            attach(parent.parents[i], parent);
        }
    }
}
function equals(a, b) {
    const shallowEquals = a === b || Object.is(a, b) || Boolean(a && b && typeof a.equals === "function" && a.equals(b));
    return shallowEquals;
}
function singleton(key, init) {
    const symbol = Symbol.for(`com.tldraw.state/${key}`);
    const global = globalThis;
    global[symbol] ??= init();
    return global[symbol];
}
const EMPTY_ARRAY = singleton("empty_array", ()=>Object.freeze([]));
function hasReactors(signal) {
    for (const child of signal.children){
        if (child.isActivelyListening) {
            return true;
        }
    }
    return false;
}
;
 //# sourceMappingURL=helpers.mjs.map
}}),
"[project]/node_modules/@tldraw/state/dist-esm/lib/ArraySet.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ARRAY_SIZE_THRESHOLD": (()=>ARRAY_SIZE_THRESHOLD),
    "ArraySet": (()=>ArraySet)
});
const ARRAY_SIZE_THRESHOLD = 8;
class ArraySet {
    arraySize = 0;
    array = Array(ARRAY_SIZE_THRESHOLD);
    set = null;
    /**
   * Get whether this ArraySet has any elements.
   *
   * @returns True if this ArraySet has any elements, false otherwise.
   */ // eslint-disable-next-line no-restricted-syntax
    get isEmpty() {
        if (this.array) {
            return this.arraySize === 0;
        }
        if (this.set) {
            return this.set.size === 0;
        }
        throw new Error("no set or array");
    }
    /**
   * Add an item to the ArraySet if it is not already present.
   *
   * @param elem - The element to add.
   */ add(elem) {
        if (this.array) {
            const idx = this.array.indexOf(elem);
            if (idx !== -1) {
                return false;
            }
            if (this.arraySize < ARRAY_SIZE_THRESHOLD) {
                this.array[this.arraySize] = elem;
                this.arraySize++;
                return true;
            } else {
                this.set = new Set(this.array);
                this.array = null;
                this.set.add(elem);
                return true;
            }
        }
        if (this.set) {
            if (this.set.has(elem)) {
                return false;
            }
            this.set.add(elem);
            return true;
        }
        throw new Error("no set or array");
    }
    /**
   * Remove an item from the ArraySet if it is present.
   *
   * @param elem - The element to remove
   */ remove(elem) {
        if (this.array) {
            const idx = this.array.indexOf(elem);
            if (idx === -1) {
                return false;
            }
            this.array[idx] = void 0;
            this.arraySize--;
            if (idx !== this.arraySize) {
                this.array[idx] = this.array[this.arraySize];
                this.array[this.arraySize] = void 0;
            }
            return true;
        }
        if (this.set) {
            if (!this.set.has(elem)) {
                return false;
            }
            this.set.delete(elem);
            return true;
        }
        throw new Error("no set or array");
    }
    /**
   * Run a callback for each element in the ArraySet.
   *
   * @param visitor - The callback to run for each element.
   */ visit(visitor) {
        if (this.array) {
            for(let i = 0; i < this.arraySize; i++){
                const elem = this.array[i];
                if (typeof elem !== "undefined") {
                    visitor(elem);
                }
            }
            return;
        }
        if (this.set) {
            this.set.forEach(visitor);
            return;
        }
        throw new Error("no set or array");
    }
    *[Symbol.iterator]() {
        if (this.array) {
            for(let i = 0; i < this.arraySize; i++){
                const elem = this.array[i];
                if (typeof elem !== "undefined") {
                    yield elem;
                }
            }
        } else if (this.set) {
            yield* this.set;
        } else {
            throw new Error("no set or array");
        }
    }
    has(elem) {
        if (this.array) {
            return this.array.indexOf(elem) !== -1;
        } else {
            return this.set.has(elem);
        }
    }
    clear() {
        if (this.set) {
            this.set.clear();
        } else {
            this.arraySize = 0;
            this.array = [];
        }
    }
    size() {
        if (this.set) {
            return this.set.size;
        } else {
            return this.arraySize;
        }
    }
}
;
 //# sourceMappingURL=ArraySet.mjs.map
}}),
"[project]/node_modules/@tldraw/state/dist-esm/lib/types.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "RESET_VALUE": (()=>RESET_VALUE)
});
const RESET_VALUE = Symbol.for("com.tldraw.state/RESET_VALUE");
;
 //# sourceMappingURL=types.mjs.map
}}),
"[project]/node_modules/@tldraw/state/dist-esm/lib/HistoryBuffer.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "HistoryBuffer": (()=>HistoryBuffer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$types$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/types.mjs [app-client] (ecmascript)");
;
class HistoryBuffer {
    constructor(capacity){
        this.capacity = capacity;
        this.buffer = new Array(capacity);
    }
    index = 0;
    // use a wrap around buffer to store the last N values
    buffer;
    /**
   * Add a diff to the history buffer.
   *
   * @param lastComputedEpoch - The epoch when the diff was computed.
   * @param currentEpoch - The current epoch.
   * @param diff - The diff to add, or else a reset value.
   */ pushEntry(lastComputedEpoch, currentEpoch, diff) {
        if (diff === void 0) {
            return;
        }
        if (diff === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$types$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RESET_VALUE"]) {
            this.clear();
            return;
        }
        this.buffer[this.index] = [
            lastComputedEpoch,
            currentEpoch,
            diff
        ];
        this.index = (this.index + 1) % this.capacity;
    }
    /**
   * Clear the history buffer.
   */ clear() {
        this.index = 0;
        this.buffer.fill(void 0);
    }
    /**
   * Get the diffs since the given epoch.
   *
   * @param sinceEpoch - The epoch to get diffs since.
   * @returns An array of diffs or a flag to reset the history buffer.
   */ getChangesSince(sinceEpoch) {
        const { index, capacity, buffer } = this;
        for(let i = 0; i < capacity; i++){
            const offset = (index - 1 + capacity - i) % capacity;
            const elem = buffer[offset];
            if (!elem) {
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$types$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RESET_VALUE"];
            }
            const [fromEpoch, toEpoch] = elem;
            if (i === 0 && sinceEpoch >= toEpoch) {
                return [];
            }
            if (fromEpoch <= sinceEpoch && sinceEpoch < toEpoch) {
                const len = i + 1;
                const result = new Array(len);
                for(let j = 0; j < len; j++){
                    result[j] = buffer[(offset + j) % capacity][2];
                }
                return result;
            }
        }
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$types$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RESET_VALUE"];
    }
}
;
 //# sourceMappingURL=HistoryBuffer.mjs.map
}}),
"[project]/node_modules/@tldraw/state/dist-esm/lib/constants.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "GLOBAL_START_EPOCH": (()=>GLOBAL_START_EPOCH)
});
const GLOBAL_START_EPOCH = -1;
;
 //# sourceMappingURL=constants.mjs.map
}}),
"[project]/node_modules/@tldraw/state/dist-esm/lib/EffectScheduler.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "EffectScheduler": (()=>EffectScheduler),
    "react": (()=>react),
    "reactor": (()=>reactor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$ArraySet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/ArraySet.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$capture$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/capture.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/constants.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/helpers.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/transactions.mjs [app-client] (ecmascript)");
;
;
;
;
;
class __EffectScheduler__ {
    constructor(name, runEffect, options){
        this.name = name;
        this.runEffect = runEffect;
        this._scheduleEffect = options?.scheduleEffect;
    }
    _isActivelyListening = false;
    /**
   * Whether this scheduler is attached and actively listening to its parents.
   * @public
   */ // eslint-disable-next-line no-restricted-syntax
    get isActivelyListening() {
        return this._isActivelyListening;
    }
    /** @internal */ lastTraversedEpoch = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GLOBAL_START_EPOCH"];
    lastReactedEpoch = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GLOBAL_START_EPOCH"];
    _scheduleCount = 0;
    __debug_ancestor_epochs__ = null;
    /**
   * The number of times this effect has been scheduled.
   * @public
   */ // eslint-disable-next-line no-restricted-syntax
    get scheduleCount() {
        return this._scheduleCount;
    }
    /** @internal */ parentSet = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$ArraySet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ArraySet"]();
    /** @internal */ parentEpochs = [];
    /** @internal */ parents = [];
    _scheduleEffect;
    /** @internal */ maybeScheduleEffect() {
        if (!this._isActivelyListening) return;
        if (this.lastReactedEpoch === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalEpoch"])()) return;
        if (this.parents.length && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["haveParentsChanged"])(this)) {
            this.lastReactedEpoch = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalEpoch"])();
            return;
        }
        this.scheduleEffect();
    }
    /** @internal */ scheduleEffect() {
        this._scheduleCount++;
        if (this._scheduleEffect) {
            this._scheduleEffect(this.maybeExecute);
        } else {
            this.execute();
        }
    }
    /** @internal */ // eslint-disable-next-line local/prefer-class-methods
    maybeExecute = ()=>{
        if (!this._isActivelyListening) return;
        this.execute();
    };
    /**
   * Makes this scheduler become 'actively listening' to its parents.
   * If it has been executed before it will immediately become eligible to receive 'maybeScheduleEffect' calls.
   * If it has not executed before it will need to be manually executed once to become eligible for scheduling, i.e. by calling `EffectScheduler.execute`.
   * @public
   */ attach() {
        this._isActivelyListening = true;
        for(let i = 0, n = this.parents.length; i < n; i++){
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["attach"])(this.parents[i], this);
        }
    }
    /**
   * Makes this scheduler stop 'actively listening' to its parents.
   * It will no longer be eligible to receive 'maybeScheduleEffect' calls until `EffectScheduler.attach` is called again.
   */ detach() {
        this._isActivelyListening = false;
        for(let i = 0, n = this.parents.length; i < n; i++){
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detach"])(this.parents[i], this);
        }
    }
    /**
   * Executes the effect immediately and returns the result.
   * @returns The result of the effect.
   */ execute() {
        try {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$capture$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["startCapturingParents"])(this);
            const currentEpoch = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalEpoch"])();
            const result = this.runEffect(this.lastReactedEpoch);
            this.lastReactedEpoch = currentEpoch;
            return result;
        } finally{
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$capture$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["stopCapturingParents"])();
        }
    }
}
const EffectScheduler = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["singleton"])("EffectScheduler", ()=>__EffectScheduler__);
function react(name, fn, options) {
    const scheduler = new EffectScheduler(name, fn, options);
    scheduler.attach();
    scheduler.scheduleEffect();
    return ()=>{
        scheduler.detach();
    };
}
function reactor(name, fn, options) {
    const scheduler = new EffectScheduler(name, fn, options);
    return {
        scheduler,
        start: (options2)=>{
            const force = options2?.force ?? false;
            scheduler.attach();
            if (force) {
                scheduler.scheduleEffect();
            } else {
                scheduler.maybeScheduleEffect();
            }
        },
        stop: ()=>{
            scheduler.detach();
        }
    };
}
;
 //# sourceMappingURL=EffectScheduler.mjs.map
}}),
"[project]/node_modules/@tldraw/state/dist-esm/lib/transactions.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "advanceGlobalEpoch": (()=>advanceGlobalEpoch),
    "atomDidChange": (()=>atomDidChange),
    "deferAsyncEffects": (()=>deferAsyncEffects),
    "getGlobalEpoch": (()=>getGlobalEpoch),
    "getIsReacting": (()=>getIsReacting),
    "getReactionEpoch": (()=>getReactionEpoch),
    "transact": (()=>transact),
    "transaction": (()=>transaction)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$EffectScheduler$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/EffectScheduler.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/constants.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/helpers.mjs [app-client] (ecmascript)");
;
;
;
class Transaction {
    constructor(parent, isSync){
        this.parent = parent;
        this.isSync = isSync;
    }
    asyncProcessCount = 0;
    initialAtomValues = /* @__PURE__ */ new Map();
    /**
   * Get whether this transaction is a root (no parents).
   *
   * @public
   */ // eslint-disable-next-line no-restricted-syntax
    get isRoot() {
        return this.parent === null;
    }
    /**
   * Commit the transaction's changes.
   *
   * @public
   */ commit() {
        if (inst.globalIsReacting) {
            for (const atom of this.initialAtomValues.keys()){
                traverseAtomForCleanup(atom);
            }
        } else if (this.isRoot) {
            flushChanges(this.initialAtomValues.keys());
        } else {
            this.initialAtomValues.forEach((value, atom)=>{
                if (!this.parent.initialAtomValues.has(atom)) {
                    this.parent.initialAtomValues.set(atom, value);
                }
            });
        }
    }
    /**
   * Abort the transaction.
   *
   * @public
   */ abort() {
        inst.globalEpoch++;
        this.initialAtomValues.forEach((value, atom)=>{
            atom.set(value);
            atom.historyBuffer?.clear();
        });
        this.commit();
    }
}
const inst = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["singleton"])("transactions", ()=>({
        // The current epoch (global to all atoms).
        globalEpoch: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GLOBAL_START_EPOCH"] + 1,
        // Whether any transaction is reacting.
        globalIsReacting: false,
        currentTransaction: null,
        cleanupReactors: null,
        reactionEpoch: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GLOBAL_START_EPOCH"] + 1
    }));
function getReactionEpoch() {
    return inst.reactionEpoch;
}
function getGlobalEpoch() {
    return inst.globalEpoch;
}
function getIsReacting() {
    return inst.globalIsReacting;
}
function traverse(reactors, child) {
    if (child.lastTraversedEpoch === inst.globalEpoch) {
        return;
    }
    child.lastTraversedEpoch = inst.globalEpoch;
    if (child instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$EffectScheduler$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EffectScheduler"]) {
        reactors.add(child);
    } else {
        ;
        child.children.visit((c)=>traverse(reactors, c));
    }
}
function flushChanges(atoms) {
    if (inst.globalIsReacting) {
        throw new Error("flushChanges cannot be called during a reaction");
    }
    const outerTxn = inst.currentTransaction;
    try {
        inst.currentTransaction = null;
        inst.globalIsReacting = true;
        inst.reactionEpoch = inst.globalEpoch;
        const reactors = /* @__PURE__ */ new Set();
        for (const atom of atoms){
            atom.children.visit((child)=>traverse(reactors, child));
        }
        for (const r of reactors){
            r.maybeScheduleEffect();
        }
        let updateDepth = 0;
        while(inst.cleanupReactors?.size){
            if (updateDepth++ > 1e3) {
                throw new Error("Reaction update depth limit exceeded");
            }
            const reactors2 = inst.cleanupReactors;
            inst.cleanupReactors = null;
            for (const r of reactors2){
                r.maybeScheduleEffect();
            }
        }
    } finally{
        inst.cleanupReactors = null;
        inst.globalIsReacting = false;
        inst.currentTransaction = outerTxn;
    }
}
function atomDidChange(atom, previousValue) {
    if (inst.currentTransaction) {
        if (!inst.currentTransaction.initialAtomValues.has(atom)) {
            inst.currentTransaction.initialAtomValues.set(atom, previousValue);
        }
    } else if (inst.globalIsReacting) {
        traverseAtomForCleanup(atom);
    } else {
        flushChanges([
            atom
        ]);
    }
}
function traverseAtomForCleanup(atom) {
    const rs = inst.cleanupReactors ??= /* @__PURE__ */ new Set();
    atom.children.visit((child)=>traverse(rs, child));
}
function advanceGlobalEpoch() {
    inst.globalEpoch++;
}
function transaction(fn) {
    const txn = new Transaction(inst.currentTransaction, true);
    inst.currentTransaction = txn;
    try {
        let result = void 0;
        let rollback = false;
        try {
            result = fn(()=>rollback = true);
        } catch (e) {
            txn.abort();
            throw e;
        }
        if (inst.currentTransaction !== txn) {
            throw new Error("Transaction boundaries overlap");
        }
        if (rollback) {
            txn.abort();
        } else {
            txn.commit();
        }
        return result;
    } finally{
        inst.currentTransaction = txn.parent;
    }
}
function transact(fn) {
    if (inst.currentTransaction) {
        return fn();
    }
    return transaction(fn);
}
async function deferAsyncEffects(fn) {
    if (inst.currentTransaction?.isSync) {
        throw new Error("deferAsyncEffects cannot be called during a sync transaction");
    }
    while(inst.globalIsReacting){
        await new Promise((r)=>queueMicrotask(()=>r(null)));
    }
    const txn = inst.currentTransaction ?? new Transaction(null, false);
    if (txn.isSync) throw new Error("deferAsyncEffects cannot be called during a sync transaction");
    inst.currentTransaction = txn;
    txn.asyncProcessCount++;
    let result = void 0;
    let error = void 0;
    try {
        result = await fn();
    } catch (e) {
        error = e ?? null;
    }
    if (--txn.asyncProcessCount > 0) {
        if (typeof error !== "undefined") {
            throw error;
        } else {
            return result;
        }
    }
    inst.currentTransaction = null;
    if (typeof error !== "undefined") {
        txn.abort();
        throw error;
    } else {
        txn.commit();
        return result;
    }
}
;
 //# sourceMappingURL=transactions.mjs.map
}}),
"[project]/node_modules/@tldraw/state/dist-esm/lib/warnings.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "logComputedGetterWarning": (()=>logComputedGetterWarning)
});
let didWarnComputedGetter = false;
function logComputedGetterWarning() {
    if (didWarnComputedGetter) return;
    didWarnComputedGetter = true;
    console.warn(`Using \`@computed\` as a decorator for getters is deprecated and will be removed in the near future. Please refactor to use \`@computed\` as a decorator for methods.

// Before
@computed
get foo() {
	return 'foo'
}

// After
@computed
getFoo() {
	return 'foo'
}
`);
}
;
 //# sourceMappingURL=warnings.mjs.map
}}),
"[project]/node_modules/@tldraw/state/dist-esm/lib/Computed.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "UNINITIALIZED": (()=>UNINITIALIZED),
    "WithDiff": (()=>WithDiff),
    "_Computed": (()=>_Computed),
    "computed": (()=>computed),
    "getComputedInstance": (()=>getComputedInstance),
    "isComputed": (()=>isComputed),
    "isUninitialized": (()=>isUninitialized),
    "withDiff": (()=>withDiff)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$ArraySet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/ArraySet.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$HistoryBuffer$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/HistoryBuffer.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$capture$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/capture.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/constants.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/helpers.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/transactions.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$types$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/types.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$warnings$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/warnings.mjs [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
const UNINITIALIZED = Symbol.for("com.tldraw.state/UNINITIALIZED");
function isUninitialized(value) {
    return value === UNINITIALIZED;
}
const WithDiff = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["singleton"])("WithDiff", ()=>class WithDiff {
        constructor(value, diff){
            this.value = value;
            this.diff = diff;
        }
    });
function withDiff(value, diff) {
    return new WithDiff(value, diff);
}
class __UNSAFE__Computed {
    constructor(name, derive, options){
        this.name = name;
        this.derive = derive;
        if (options?.historyLength) {
            this.historyBuffer = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$HistoryBuffer$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["HistoryBuffer"](options.historyLength);
        }
        this.computeDiff = options?.computeDiff;
        this.isEqual = options?.isEqual ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["equals"];
    }
    lastChangedEpoch = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GLOBAL_START_EPOCH"];
    lastTraversedEpoch = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GLOBAL_START_EPOCH"];
    __debug_ancestor_epochs__ = null;
    /**
   * The epoch when the reactor was last checked.
   */ lastCheckedEpoch = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GLOBAL_START_EPOCH"];
    parentSet = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$ArraySet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ArraySet"]();
    parents = [];
    parentEpochs = [];
    children = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$ArraySet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ArraySet"]();
    // eslint-disable-next-line no-restricted-syntax
    get isActivelyListening() {
        return !this.children.isEmpty;
    }
    historyBuffer;
    // The last-computed value of this signal.
    state = UNINITIALIZED;
    // If the signal throws an error we stash it so we can rethrow it on the next get()
    error = null;
    computeDiff;
    isEqual;
    __unsafe__getWithoutCapture(ignoreErrors) {
        const isNew = this.lastChangedEpoch === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$constants$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["GLOBAL_START_EPOCH"];
        const globalEpoch = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalEpoch"])();
        if (!isNew && (this.lastCheckedEpoch === globalEpoch || this.isActivelyListening && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getIsReacting"])() && this.lastTraversedEpoch < (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getReactionEpoch"])() || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["haveParentsChanged"])(this))) {
            this.lastCheckedEpoch = globalEpoch;
            if (this.error) {
                if (!ignoreErrors) {
                    throw this.error.thrownValue;
                } else {
                    return this.state;
                }
            } else {
                return this.state;
            }
        }
        try {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$capture$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["startCapturingParents"])(this);
            const result = this.derive(this.state, this.lastCheckedEpoch);
            const newState = result instanceof WithDiff ? result.value : result;
            const isUninitialized2 = this.state === UNINITIALIZED;
            if (isUninitialized2 || !this.isEqual(newState, this.state)) {
                if (this.historyBuffer && !isUninitialized2) {
                    const diff = result instanceof WithDiff ? result.diff : void 0;
                    this.historyBuffer.pushEntry(this.lastChangedEpoch, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalEpoch"])(), diff ?? this.computeDiff?.(this.state, newState, this.lastCheckedEpoch, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalEpoch"])()) ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$types$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RESET_VALUE"]);
                }
                this.lastChangedEpoch = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalEpoch"])();
                this.state = newState;
            }
            this.error = null;
            this.lastCheckedEpoch = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalEpoch"])();
            return this.state;
        } catch (e) {
            if (this.state !== UNINITIALIZED) {
                this.state = UNINITIALIZED;
                this.lastChangedEpoch = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalEpoch"])();
            }
            this.lastCheckedEpoch = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalEpoch"])();
            if (this.historyBuffer) {
                this.historyBuffer.clear();
            }
            this.error = {
                thrownValue: e
            };
            if (!ignoreErrors) throw e;
            return this.state;
        } finally{
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$capture$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["stopCapturingParents"])();
        }
    }
    get() {
        try {
            return this.__unsafe__getWithoutCapture();
        } finally{
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$capture$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeCaptureParent"])(this);
        }
    }
    getDiffSince(epoch) {
        this.__unsafe__getWithoutCapture(true);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$capture$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeCaptureParent"])(this);
        if (epoch >= this.lastChangedEpoch) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EMPTY_ARRAY"];
        }
        return this.historyBuffer?.getChangesSince(epoch) ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$types$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RESET_VALUE"];
    }
}
const _Computed = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["singleton"])("Computed", ()=>__UNSAFE__Computed);
function computedMethodLegacyDecorator(options = {}, _target, key, descriptor) {
    const originalMethod = descriptor.value;
    const derivationKey = Symbol.for("__@tldraw/state__computed__" + key);
    descriptor.value = function() {
        let d = this[derivationKey];
        if (!d) {
            d = new _Computed(key, originalMethod.bind(this), options);
            Object.defineProperty(this, derivationKey, {
                enumerable: false,
                configurable: false,
                writable: false,
                value: d
            });
        }
        return d.get();
    };
    descriptor.value[isComputedMethodKey] = true;
    return descriptor;
}
function computedGetterLegacyDecorator(options = {}, _target, key, descriptor) {
    const originalMethod = descriptor.get;
    const derivationKey = Symbol.for("__@tldraw/state__computed__" + key);
    descriptor.get = function() {
        let d = this[derivationKey];
        if (!d) {
            d = new _Computed(key, originalMethod.bind(this), options);
            Object.defineProperty(this, derivationKey, {
                enumerable: false,
                configurable: false,
                writable: false,
                value: d
            });
        }
        return d.get();
    };
    return descriptor;
}
function computedMethodTc39Decorator(options, compute, context) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["assert"])(context.kind === "method", "@computed can only be used on methods");
    const derivationKey = Symbol.for("__@tldraw/state__computed__" + String(context.name));
    const fn = function() {
        let d = this[derivationKey];
        if (!d) {
            d = new _Computed(String(context.name), compute.bind(this), options);
            Object.defineProperty(this, derivationKey, {
                enumerable: false,
                configurable: false,
                writable: false,
                value: d
            });
        }
        return d.get();
    };
    fn[isComputedMethodKey] = true;
    return fn;
}
function computedDecorator(options = {}, args) {
    if (args.length === 2) {
        const [originalMethod, context] = args;
        return computedMethodTc39Decorator(options, originalMethod, context);
    } else {
        const [_target, key, descriptor] = args;
        if (descriptor.get) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$warnings$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["logComputedGetterWarning"])();
            return computedGetterLegacyDecorator(options, _target, key, descriptor);
        } else {
            return computedMethodLegacyDecorator(options, _target, key, descriptor);
        }
    }
}
const isComputedMethodKey = "@@__isComputedMethod__@@";
function getComputedInstance(obj, propertyName) {
    const key = Symbol.for("__@tldraw/state__computed__" + propertyName.toString());
    let inst = obj[key];
    if (!inst) {
        const val = obj[propertyName];
        if (typeof val === "function" && val[isComputedMethodKey]) {
            val.call(obj);
        }
        inst = obj[key];
    }
    return inst;
}
function computed() {
    if (arguments.length === 1) {
        const options = arguments[0];
        return (...args)=>computedDecorator(options, args);
    } else if (typeof arguments[0] === "string") {
        return new _Computed(arguments[0], arguments[1], arguments[2]);
    } else {
        return computedDecorator(void 0, arguments);
    }
}
function isComputed(value) {
    return value && value instanceof _Computed;
}
;
 //# sourceMappingURL=Computed.mjs.map
}}),
"[project]/node_modules/@tldraw/state/dist-esm/lib/capture.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "maybeCaptureParent": (()=>maybeCaptureParent),
    "startCapturingParents": (()=>startCapturingParents),
    "stopCapturingParents": (()=>stopCapturingParents),
    "unsafe__withoutCapture": (()=>unsafe__withoutCapture),
    "whyAmIRunning": (()=>whyAmIRunning)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Computed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/Computed.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/helpers.mjs [app-client] (ecmascript)");
;
;
class CaptureStackFrame {
    constructor(below, child){
        this.below = below;
        this.child = child;
    }
    offset = 0;
    maybeRemoved;
}
const inst = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["singleton"])("capture", ()=>({
        stack: null
    }));
function unsafe__withoutCapture(fn) {
    const oldStack = inst.stack;
    inst.stack = null;
    try {
        return fn();
    } finally{
        inst.stack = oldStack;
    }
}
function startCapturingParents(child) {
    inst.stack = new CaptureStackFrame(inst.stack, child);
    if (child.__debug_ancestor_epochs__) {
        const previousAncestorEpochs = child.__debug_ancestor_epochs__;
        child.__debug_ancestor_epochs__ = null;
        for (const p of child.parents){
            p.__unsafe__getWithoutCapture(true);
        }
        logChangedAncestors(child, previousAncestorEpochs);
    }
    child.parentSet.clear();
}
function stopCapturingParents() {
    const frame = inst.stack;
    inst.stack = frame.below;
    if (frame.offset < frame.child.parents.length) {
        for(let i = frame.offset; i < frame.child.parents.length; i++){
            const maybeRemovedParent = frame.child.parents[i];
            if (!frame.child.parentSet.has(maybeRemovedParent)) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detach"])(maybeRemovedParent, frame.child);
            }
        }
        frame.child.parents.length = frame.offset;
        frame.child.parentEpochs.length = frame.offset;
    }
    if (frame.maybeRemoved) {
        for(let i = 0; i < frame.maybeRemoved.length; i++){
            const maybeRemovedParent = frame.maybeRemoved[i];
            if (!frame.child.parentSet.has(maybeRemovedParent)) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["detach"])(maybeRemovedParent, frame.child);
            }
        }
    }
    if (frame.child.__debug_ancestor_epochs__) {
        captureAncestorEpochs(frame.child, frame.child.__debug_ancestor_epochs__);
    }
}
function maybeCaptureParent(p) {
    if (inst.stack) {
        const wasCapturedAlready = inst.stack.child.parentSet.has(p);
        if (wasCapturedAlready) {
            return;
        }
        inst.stack.child.parentSet.add(p);
        if (inst.stack.child.isActivelyListening) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["attach"])(p, inst.stack.child);
        }
        if (inst.stack.offset < inst.stack.child.parents.length) {
            const maybeRemovedParent = inst.stack.child.parents[inst.stack.offset];
            if (maybeRemovedParent !== p) {
                if (!inst.stack.maybeRemoved) {
                    inst.stack.maybeRemoved = [
                        maybeRemovedParent
                    ];
                } else {
                    inst.stack.maybeRemoved.push(maybeRemovedParent);
                }
            }
        }
        inst.stack.child.parents[inst.stack.offset] = p;
        inst.stack.child.parentEpochs[inst.stack.offset] = p.lastChangedEpoch;
        inst.stack.offset++;
    }
}
function whyAmIRunning() {
    const child = inst.stack?.child;
    if (!child) {
        throw new Error("whyAmIRunning() called outside of a reactive context");
    }
    child.__debug_ancestor_epochs__ = /* @__PURE__ */ new Map();
}
function captureAncestorEpochs(child, ancestorEpochs) {
    for(let i = 0; i < child.parents.length; i++){
        const parent = child.parents[i];
        const epoch = child.parentEpochs[i];
        ancestorEpochs.set(parent, epoch);
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Computed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isComputed"])(parent)) {
            captureAncestorEpochs(parent, ancestorEpochs);
        }
    }
    return ancestorEpochs;
}
function collectChangedAncestors(child, ancestorEpochs) {
    const changeTree = {};
    for(let i = 0; i < child.parents.length; i++){
        const parent = child.parents[i];
        if (!ancestorEpochs.has(parent)) {
            continue;
        }
        const prevEpoch = ancestorEpochs.get(parent);
        const currentEpoch = parent.lastChangedEpoch;
        if (currentEpoch !== prevEpoch) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Computed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isComputed"])(parent)) {
                changeTree[parent.name] = collectChangedAncestors(parent, ancestorEpochs);
            } else {
                changeTree[parent.name] = null;
            }
        }
    }
    return changeTree;
}
function logChangedAncestors(child, ancestorEpochs) {
    const changeTree = collectChangedAncestors(child, ancestorEpochs);
    if (Object.keys(changeTree).length === 0) {
        console.log(`Effect(${child.name}) was executed manually.`);
        return;
    }
    let str = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Computed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isComputed"])(child) ? `Computed(${child.name}) is recomputing because:` : `Effect(${child.name}) is executing because:`;
    function logParent(tree, indent) {
        const indentStr = "\n" + " ".repeat(indent) + "\u21B3 ";
        for (const [name, val] of Object.entries(tree)){
            if (val) {
                str += `${indentStr}Computed(${name}) changed`;
                logParent(val, indent + 2);
            } else {
                str += `${indentStr}Atom(${name}) changed`;
            }
        }
    }
    logParent(changeTree, 1);
    console.log(str);
}
;
 //# sourceMappingURL=capture.mjs.map
}}),
"[project]/node_modules/@tldraw/state/dist-esm/lib/Atom.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "_Atom": (()=>_Atom),
    "atom": (()=>atom),
    "isAtom": (()=>isAtom)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$ArraySet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/ArraySet.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$HistoryBuffer$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/HistoryBuffer.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$capture$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/capture.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/helpers.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/transactions.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$types$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/types.mjs [app-client] (ecmascript)");
;
;
;
;
;
;
class __Atom__ {
    constructor(name, current, options){
        this.name = name;
        this.current = current;
        this.isEqual = options?.isEqual ?? null;
        if (!options) return;
        if (options.historyLength) {
            this.historyBuffer = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$HistoryBuffer$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["HistoryBuffer"](options.historyLength);
        }
        this.computeDiff = options.computeDiff;
    }
    isEqual;
    computeDiff;
    lastChangedEpoch = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalEpoch"])();
    children = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$ArraySet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ArraySet"]();
    historyBuffer;
    __unsafe__getWithoutCapture(_ignoreErrors) {
        return this.current;
    }
    get() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$capture$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeCaptureParent"])(this);
        return this.current;
    }
    set(value, diff) {
        if (this.isEqual?.(this.current, value) ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["equals"])(this.current, value)) {
            return this.current;
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["advanceGlobalEpoch"])();
        if (this.historyBuffer) {
            this.historyBuffer.pushEntry(this.lastChangedEpoch, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalEpoch"])(), diff ?? this.computeDiff?.(this.current, value, this.lastChangedEpoch, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalEpoch"])()) ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$types$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RESET_VALUE"]);
        }
        this.lastChangedEpoch = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getGlobalEpoch"])();
        const oldValue = this.current;
        this.current = value;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["atomDidChange"])(this, oldValue);
        return value;
    }
    update(updater) {
        return this.set(updater(this.current));
    }
    getDiffSince(epoch) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$capture$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["maybeCaptureParent"])(this);
        if (epoch >= this.lastChangedEpoch) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EMPTY_ARRAY"];
        }
        return this.historyBuffer?.getChangesSince(epoch) ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$types$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["RESET_VALUE"];
    }
}
const _Atom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["singleton"])("Atom", ()=>__Atom__);
function atom(name, initialValue, options) {
    return new _Atom(name, initialValue, options);
}
function isAtom(value) {
    return value instanceof _Atom;
}
;
 //# sourceMappingURL=Atom.mjs.map
}}),
"[project]/node_modules/@tldraw/state/dist-esm/lib/isSignal.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "isSignal": (()=>isSignal)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Atom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/Atom.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Computed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/Computed.mjs [app-client] (ecmascript)");
;
;
function isSignal(value) {
    return value instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Atom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_Atom"] || value instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Computed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["_Computed"];
}
;
 //# sourceMappingURL=isSignal.mjs.map
}}),
"[project]/node_modules/@tldraw/state/dist-esm/index.mjs [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$version$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/version.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/helpers.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$ArraySet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/ArraySet.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Atom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/Atom.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$capture$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/capture.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Computed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/Computed.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$EffectScheduler$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/EffectScheduler.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$isSignal$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/isSignal.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/transactions.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$types$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/types.mjs [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
const currentApiVersion = 1;
const actualApiVersion = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["singleton"])("apiVersion", ()=>currentApiVersion);
if (actualApiVersion !== currentApiVersion) {
    throw new Error(`You have multiple incompatible versions of @tldraw/state in your app. Please deduplicate the package.`);
}
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$version$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registerTldrawLibraryVersion"])("@tldraw/state", "3.15.3", "esm");
;
 //# sourceMappingURL=index.mjs.map
}}),
"[project]/node_modules/@tldraw/state/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/helpers.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$ArraySet$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/ArraySet.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Atom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/Atom.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$capture$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/capture.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Computed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/Computed.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$EffectScheduler$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/EffectScheduler.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$isSignal$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/isSignal.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$transactions$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/transactions.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$types$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/types.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/index.mjs [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/@tldraw/state-react/dist-esm/lib/useStateTracking.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useStateTracking": (()=>useStateTracking)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$EffectScheduler$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/EffectScheduler.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
;
;
function useStateTracking(name, render, deps = []) {
    const renderRef = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].useRef(render);
    renderRef.current = render;
    const [scheduler, subscribe, getSnapshot] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].useMemo({
        "useStateTracking.useMemo": ()=>{
            let scheduleUpdate = null;
            const subscribe2 = {
                "useStateTracking.useMemo.subscribe2": (cb)=>{
                    scheduleUpdate = cb;
                    return ({
                        "useStateTracking.useMemo.subscribe2": ()=>{
                            scheduleUpdate = null;
                        }
                    })["useStateTracking.useMemo.subscribe2"];
                }
            }["useStateTracking.useMemo.subscribe2"];
            const scheduler2 = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$EffectScheduler$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EffectScheduler"](`useStateTracking(${name})`, {
                "useStateTracking.useMemo": // this is what `scheduler.execute()` will call
                ()=>renderRef.current?.()
            }["useStateTracking.useMemo"], // this is what will be invoked when @tldraw/state detects a change in an upstream reactive value
            {
                scheduleEffect () {
                    scheduleUpdate?.();
                }
            });
            const getSnapshot2 = {
                "useStateTracking.useMemo.getSnapshot2": ()=>scheduler2.scheduleCount
            }["useStateTracking.useMemo.getSnapshot2"];
            return [
                scheduler2,
                subscribe2,
                getSnapshot2
            ];
        }
    }["useStateTracking.useMemo"], [
        name,
        ...deps
    ]);
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].useSyncExternalStore(subscribe, getSnapshot, getSnapshot);
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].useEffect({
        "useStateTracking.useEffect": ()=>{
            scheduler.attach();
            scheduler.maybeScheduleEffect();
            return ({
                "useStateTracking.useEffect": ()=>{
                    scheduler.detach();
                }
            })["useStateTracking.useEffect"];
        }
    }["useStateTracking.useEffect"], [
        scheduler
    ]);
    return scheduler.execute();
}
;
 //# sourceMappingURL=useStateTracking.mjs.map
}}),
"[project]/node_modules/@tldraw/state-react/dist-esm/lib/track.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ProxyHandlers": (()=>ProxyHandlers),
    "ReactForwardRefSymbol": (()=>ReactForwardRefSymbol),
    "ReactMemoSymbol": (()=>ReactMemoSymbol),
    "track": (()=>track)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useStateTracking$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useStateTracking.mjs [app-client] (ecmascript)");
;
;
const ProxyHandlers = {
    /**
   * This is a function call trap for functional components. When this is called, we know it means
   * React did run 'Component()', that means we can use any hooks here to setup our effect and
   * store.
   *
   * With the native Proxy, all other calls such as access/setting to/of properties will be
   * forwarded to the target Component, so we don't need to copy the Component's own or inherited
   * properties.
   *
   * @see https://github.com/facebook/react/blob/2d80a0cd690bb5650b6c8a6c079a87b5dc42bd15/packages/react-reconciler/src/ReactFiberHooks.old.js#L460
   */ apply (Component, thisArg, argumentsList) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useStateTracking$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useStateTracking"])(Component.displayName ?? Component.name ?? "tracked(???)", ()=>Component.apply(thisArg, argumentsList));
    }
};
const ReactMemoSymbol = Symbol.for("react.memo");
const ReactForwardRefSymbol = Symbol.for("react.forward_ref");
function track(baseComponent) {
    let compare = null;
    const $$typeof = baseComponent["$$typeof"];
    if ($$typeof === ReactMemoSymbol) {
        baseComponent = baseComponent.type;
        compare = baseComponent.compare;
    }
    if ($$typeof === ReactForwardRefSymbol) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["forwardRef"])(new Proxy(baseComponent.render, ProxyHandlers)));
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["memo"])(new Proxy(baseComponent, ProxyHandlers), compare);
}
;
 //# sourceMappingURL=track.mjs.map
}}),
"[project]/node_modules/@tldraw/state-react/dist-esm/lib/useAtom.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useAtom": (()=>useAtom)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Atom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/Atom.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
;
;
function useAtom(name, valueOrInitialiser, options) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])({
        "useAtom.useState": ()=>{
            const initialValue = typeof valueOrInitialiser === "function" ? valueOrInitialiser() : valueOrInitialiser;
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Atom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["atom"])(`useAtom(${name})`, initialValue, options);
        }
    }["useAtom.useState"])[0];
}
;
 //# sourceMappingURL=useAtom.mjs.map
}}),
"[project]/node_modules/@tldraw/state-react/dist-esm/lib/useComputed.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useComputed": (()=>useComputed)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Computed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/Computed.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
;
;
function useComputed() {
    const name = arguments[0];
    const compute = arguments[1];
    const opts = arguments.length === 3 ? void 0 : arguments[2];
    const deps = arguments.length === 3 ? arguments[2] : arguments[3];
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "useComputed.useMemo": ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Computed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["computed"])(`useComputed(${name})`, compute, opts)
    }["useComputed.useMemo"], deps);
}
;
 //# sourceMappingURL=useComputed.mjs.map
}}),
"[project]/node_modules/@tldraw/state-react/dist-esm/lib/useQuickReactor.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useQuickReactor": (()=>useQuickReactor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/helpers.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$EffectScheduler$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/EffectScheduler.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
;
;
function useQuickReactor(name, reactFn, deps = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EMPTY_ARRAY"]) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "useQuickReactor.useEffect": ()=>{
            const scheduler = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$EffectScheduler$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EffectScheduler"](name, reactFn);
            scheduler.attach();
            scheduler.execute();
            return ({
                "useQuickReactor.useEffect": ()=>{
                    scheduler.detach();
                }
            })["useQuickReactor.useEffect"];
        }
    }["useQuickReactor.useEffect"], deps);
}
;
 //# sourceMappingURL=useQuickReactor.mjs.map
}}),
"[project]/node_modules/@tldraw/state-react/dist-esm/lib/useReactor.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useReactor": (()=>useReactor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$EffectScheduler$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/EffectScheduler.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$throttle$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/throttle.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
;
;
;
function useReactor(name, reactFn, deps = []) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "useReactor.useEffect": ()=>{
            let cancelFn;
            const scheduler = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$EffectScheduler$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EffectScheduler"](name, reactFn, {
                scheduleEffect: {
                    "useReactor.useEffect": (cb)=>{
                        cancelFn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$throttle$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["throttleToNextFrame"])(cb);
                    }
                }["useReactor.useEffect"]
            });
            scheduler.attach();
            scheduler.execute();
            return ({
                "useReactor.useEffect": ()=>{
                    scheduler.detach();
                    cancelFn?.();
                }
            })["useReactor.useEffect"];
        }
    }["useReactor.useEffect"], deps);
}
;
 //# sourceMappingURL=useReactor.mjs.map
}}),
"[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useValue": (()=>useValue)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Computed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/Computed.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$EffectScheduler$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/EffectScheduler.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
;
;
function useValue() {
    const args = arguments;
    const deps = args.length === 3 ? args[2] : [
        args[0]
    ];
    const name = args.length === 3 ? args[0] : `useValue(${args[0].name})`;
    const { $val, subscribe, getSnapshot } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "useValue.useMemo": ()=>{
            const $val2 = args.length === 1 ? args[0] : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Computed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["computed"])(name, args[1]);
            return {
                $val: $val2,
                subscribe: ({
                    "useValue.useMemo": (notify)=>{
                        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$EffectScheduler$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["react"])(`useValue(${name})`, {
                            "useValue.useMemo": ()=>{
                                try {
                                    $val2.get();
                                } catch  {}
                                notify();
                            }
                        }["useValue.useMemo"]);
                    }
                })["useValue.useMemo"],
                getSnapshot: ({
                    "useValue.useMemo": ()=>$val2.lastChangedEpoch
                })["useValue.useMemo"]
            };
        }
    }["useValue.useMemo"], deps);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSyncExternalStore"])(subscribe, getSnapshot, getSnapshot);
    return $val.__unsafe__getWithoutCapture();
}
;
 //# sourceMappingURL=useValue.mjs.map
}}),
"[project]/node_modules/@tldraw/state-react/dist-esm/index.mjs [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$version$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/version.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$track$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/track.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useAtom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useAtom.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useComputed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useComputed.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useQuickReactor$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useQuickReactor.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useReactor$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useReactor.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useStateTracking$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useStateTracking.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-client] (ecmascript)");
;
;
;
;
;
;
;
;
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$version$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registerTldrawLibraryVersion"])("@tldraw/state-react", "3.15.3", "esm");
;
 //# sourceMappingURL=index.mjs.map
}}),
"[project]/node_modules/@tldraw/state-react/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$track$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/track.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useAtom$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useAtom.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useComputed$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useComputed.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useQuickReactor$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useQuickReactor.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useReactor$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useReactor.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useStateTracking$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useStateTracking.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/index.mjs [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/@tldraw/validate/dist-esm/lib/validation.mjs [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ArrayOfValidator": (()=>ArrayOfValidator),
    "DictValidator": (()=>DictValidator),
    "ObjectValidator": (()=>ObjectValidator),
    "UnionValidator": (()=>UnionValidator),
    "ValidationError": (()=>ValidationError),
    "Validator": (()=>Validator),
    "any": (()=>any),
    "array": (()=>array),
    "arrayOf": (()=>arrayOf),
    "bigint": (()=>bigint),
    "boolean": (()=>boolean),
    "dict": (()=>dict),
    "httpUrl": (()=>httpUrl),
    "indexKey": (()=>indexKey),
    "integer": (()=>integer),
    "jsonDict": (()=>jsonDict),
    "jsonValue": (()=>jsonValue),
    "linkUrl": (()=>linkUrl),
    "literal": (()=>literal),
    "literalEnum": (()=>literalEnum),
    "model": (()=>model),
    "nonZeroInteger": (()=>nonZeroInteger),
    "nonZeroNumber": (()=>nonZeroNumber),
    "nullable": (()=>nullable),
    "number": (()=>number),
    "numberUnion": (()=>numberUnion),
    "object": (()=>object),
    "optional": (()=>optional),
    "or": (()=>or),
    "positiveInteger": (()=>positiveInteger),
    "positiveNumber": (()=>positiveNumber),
    "setEnum": (()=>setEnum),
    "srcUrl": (()=>srcUrl),
    "string": (()=>string),
    "union": (()=>union),
    "unknown": (()=>unknown),
    "unknownObject": (()=>unknownObject)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$value$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/value.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/object.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$reordering$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/reordering.mjs [app-client] (ecmascript)");
;
function formatPath(path) {
    if (!path.length) {
        return null;
    }
    let formattedPath = "";
    for (const item of path){
        if (typeof item === "number") {
            formattedPath += `.${item}`;
        } else if (item.startsWith("(")) {
            if (formattedPath.endsWith(")")) {
                formattedPath = `${formattedPath.slice(0, -1)}, ${item.slice(1)}`;
            } else {
                formattedPath += item;
            }
        } else {
            formattedPath += `.${item}`;
        }
    }
    formattedPath = formattedPath.replace(/id = [^,]+, /, "").replace(/id = [^)]+/, "");
    if (formattedPath.startsWith(".")) {
        return formattedPath.slice(1);
    }
    return formattedPath;
}
class ValidationError extends Error {
    constructor(rawMessage, path = []){
        const formattedPath = formatPath(path);
        const indentedMessage = rawMessage.split("\n").map((line, i)=>i === 0 ? line : `  ${line}`).join("\n");
        super(path ? `At ${formattedPath}: ${indentedMessage}` : indentedMessage);
        this.rawMessage = rawMessage;
        this.path = path;
    }
    name = "ValidationError";
}
function prefixError(path, fn) {
    try {
        return fn();
    } catch (err) {
        if (err instanceof ValidationError) {
            throw new ValidationError(err.rawMessage, [
                path,
                ...err.path
            ]);
        }
        throw new ValidationError(err.toString(), [
            path
        ]);
    }
}
function typeToString(value) {
    if (value === null) return "null";
    if (Array.isArray(value)) return "an array";
    const type = typeof value;
    switch(type){
        case "bigint":
        case "boolean":
        case "function":
        case "number":
        case "string":
        case "symbol":
            return `a ${type}`;
        case "object":
            return `an ${type}`;
        case "undefined":
            return "undefined";
        default:
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(type);
    }
}
class Validator {
    constructor(validationFn, validateUsingKnownGoodVersionFn){
        this.validationFn = validationFn;
        this.validateUsingKnownGoodVersionFn = validateUsingKnownGoodVersionFn;
    }
    /**
   * Asserts that the passed value is of the correct type and returns it. The returned value is
   * guaranteed to be referentially equal to the passed value.
   */ validate(value) {
        const validated = this.validationFn(value);
        if (("TURBOPACK compile-time value", "development") !== "production" && !Object.is(value, validated)) {
            throw new ValidationError("Validator functions must return the same value they were passed");
        }
        return validated;
    }
    validateUsingKnownGoodVersion(knownGoodValue, newValue) {
        if (Object.is(knownGoodValue, newValue)) {
            return knownGoodValue;
        }
        if (this.validateUsingKnownGoodVersionFn) {
            return this.validateUsingKnownGoodVersionFn(knownGoodValue, newValue);
        }
        return this.validate(newValue);
    }
    /** Checks that the passed value is of the correct type. */ isValid(value) {
        try {
            this.validate(value);
            return true;
        } catch  {
            return false;
        }
    }
    /**
   * Returns a new validator that also accepts null or undefined. The resulting value will always be
   * null.
   */ nullable() {
        return nullable(this);
    }
    /**
   * Returns a new validator that also accepts null or undefined. The resulting value will always be
   * null.
   */ optional() {
        return optional(this);
    }
    /**
   * Refine this validation to a new type. The passed-in validation function should throw an error
   * if the value can't be converted to the new type, or return the new type otherwise.
   */ refine(otherValidationFn) {
        return new Validator((value)=>{
            return otherValidationFn(this.validate(value));
        }, (knownGoodValue, newValue)=>{
            const validated = this.validateUsingKnownGoodVersion(knownGoodValue, newValue);
            if (Object.is(knownGoodValue, validated)) {
                return knownGoodValue;
            }
            return otherValidationFn(validated);
        });
    }
    check(nameOrCheckFn, checkFn) {
        if (typeof nameOrCheckFn === "string") {
            return this.refine((value)=>{
                prefixError(`(check ${nameOrCheckFn})`, ()=>checkFn(value));
                return value;
            });
        } else {
            return this.refine((value)=>{
                nameOrCheckFn(value);
                return value;
            });
        }
    }
}
class ArrayOfValidator extends Validator {
    constructor(itemValidator){
        super((value)=>{
            const arr = array.validate(value);
            for(let i = 0; i < arr.length; i++){
                prefixError(i, ()=>itemValidator.validate(arr[i]));
            }
            return arr;
        }, (knownGoodValue, newValue)=>{
            if (!itemValidator.validateUsingKnownGoodVersion) return this.validate(newValue);
            const arr = array.validate(newValue);
            let isDifferent = knownGoodValue.length !== arr.length;
            for(let i = 0; i < arr.length; i++){
                const item = arr[i];
                if (i >= knownGoodValue.length) {
                    isDifferent = true;
                    prefixError(i, ()=>itemValidator.validate(item));
                    continue;
                }
                if (Object.is(knownGoodValue[i], item)) {
                    continue;
                }
                const checkedItem = prefixError(i, ()=>itemValidator.validateUsingKnownGoodVersion(knownGoodValue[i], item));
                if (!Object.is(checkedItem, knownGoodValue[i])) {
                    isDifferent = true;
                }
            }
            return isDifferent ? newValue : knownGoodValue;
        });
        this.itemValidator = itemValidator;
    }
    nonEmpty() {
        return this.check((value)=>{
            if (value.length === 0) {
                throw new ValidationError("Expected a non-empty array");
            }
        });
    }
    lengthGreaterThan1() {
        return this.check((value)=>{
            if (value.length <= 1) {
                throw new ValidationError("Expected an array with length greater than 1");
            }
        });
    }
}
class ObjectValidator extends Validator {
    constructor(config, shouldAllowUnknownProperties = false){
        super((object2)=>{
            if (typeof object2 !== "object" || object2 === null) {
                throw new ValidationError(`Expected object, got ${typeToString(object2)}`);
            }
            for (const [key, validator] of Object.entries(config)){
                prefixError(key, ()=>{
                    ;
                    validator.validate((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOwnProperty"])(object2, key));
                });
            }
            if (!shouldAllowUnknownProperties) {
                for (const key of Object.keys(object2)){
                    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasOwnProperty"])(config, key)) {
                        throw new ValidationError(`Unexpected property`, [
                            key
                        ]);
                    }
                }
            }
            return object2;
        }, (knownGoodValue, newValue)=>{
            if (typeof newValue !== "object" || newValue === null) {
                throw new ValidationError(`Expected object, got ${typeToString(newValue)}`);
            }
            let isDifferent = false;
            for (const [key, validator] of Object.entries(config)){
                const prev = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOwnProperty"])(knownGoodValue, key);
                const next = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOwnProperty"])(newValue, key);
                if (Object.is(prev, next)) {
                    continue;
                }
                const checked = prefixError(key, ()=>{
                    const validatable = validator;
                    if (validatable.validateUsingKnownGoodVersion) {
                        return validatable.validateUsingKnownGoodVersion(prev, next);
                    } else {
                        return validatable.validate(next);
                    }
                });
                if (!Object.is(checked, prev)) {
                    isDifferent = true;
                }
            }
            if (!shouldAllowUnknownProperties) {
                for (const key of Object.keys(newValue)){
                    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasOwnProperty"])(config, key)) {
                        throw new ValidationError(`Unexpected property`, [
                            key
                        ]);
                    }
                }
            }
            for (const key of Object.keys(knownGoodValue)){
                if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasOwnProperty"])(newValue, key)) {
                    isDifferent = true;
                    break;
                }
            }
            return isDifferent ? newValue : knownGoodValue;
        });
        this.config = config;
        this.shouldAllowUnknownProperties = shouldAllowUnknownProperties;
    }
    allowUnknownProperties() {
        return new ObjectValidator(this.config, true);
    }
    /**
   * Extend an object validator by adding additional properties.
   *
   * @example
   *
   * ```ts
   * const animalValidator = T.object({
   * 	name: T.string,
   * })
   * const catValidator = animalValidator.extend({
   * 	meowVolume: T.number,
   * })
   * ```
   */ extend(extension) {
        return new ObjectValidator({
            ...this.config,
            ...extension
        });
    }
}
class UnionValidator extends Validator {
    constructor(key, config, unknownValueValidation, useNumberKeys){
        super((input)=>{
            this.expectObject(input);
            const { matchingSchema, variant } = this.getMatchingSchemaAndVariant(input);
            if (matchingSchema === void 0) {
                return this.unknownValueValidation(input, variant);
            }
            return prefixError(`(${key} = ${variant})`, ()=>matchingSchema.validate(input));
        }, (prevValue, newValue)=>{
            this.expectObject(newValue);
            this.expectObject(prevValue);
            const { matchingSchema, variant } = this.getMatchingSchemaAndVariant(newValue);
            if (matchingSchema === void 0) {
                return this.unknownValueValidation(newValue, variant);
            }
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOwnProperty"])(prevValue, key) !== (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOwnProperty"])(newValue, key)) {
                return prefixError(`(${key} = ${variant})`, ()=>matchingSchema.validate(newValue));
            }
            return prefixError(`(${key} = ${variant})`, ()=>{
                if (matchingSchema.validateUsingKnownGoodVersion) {
                    return matchingSchema.validateUsingKnownGoodVersion(prevValue, newValue);
                } else {
                    return matchingSchema.validate(newValue);
                }
            });
        });
        this.key = key;
        this.config = config;
        this.unknownValueValidation = unknownValueValidation;
        this.useNumberKeys = useNumberKeys;
    }
    expectObject(value) {
        if (typeof value !== "object" || value === null) {
            throw new ValidationError(`Expected an object, got ${typeToString(value)}`, []);
        }
    }
    getMatchingSchemaAndVariant(object2) {
        const variant = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOwnProperty"])(object2, this.key);
        if (!this.useNumberKeys && typeof variant !== "string") {
            throw new ValidationError(`Expected a string for key "${this.key}", got ${typeToString(variant)}`);
        } else if (this.useNumberKeys && !Number.isFinite(Number(variant))) {
            throw new ValidationError(`Expected a number for key "${this.key}", got "${variant}"`);
        }
        const matchingSchema = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasOwnProperty"])(this.config, variant) ? this.config[variant] : void 0;
        return {
            matchingSchema,
            variant
        };
    }
    validateUnknownVariants(unknownValueValidation) {
        return new UnionValidator(this.key, this.config, unknownValueValidation, this.useNumberKeys);
    }
}
class DictValidator extends Validator {
    constructor(keyValidator, valueValidator){
        super((object2)=>{
            if (typeof object2 !== "object" || object2 === null) {
                throw new ValidationError(`Expected object, got ${typeToString(object2)}`);
            }
            for (const [key, value] of Object.entries(object2)){
                prefixError(key, ()=>{
                    keyValidator.validate(key);
                    valueValidator.validate(value);
                });
            }
            return object2;
        }, (knownGoodValue, newValue)=>{
            if (typeof newValue !== "object" || newValue === null) {
                throw new ValidationError(`Expected object, got ${typeToString(newValue)}`);
            }
            let isDifferent = false;
            for (const [key, value] of Object.entries(newValue)){
                if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasOwnProperty"])(knownGoodValue, key)) {
                    isDifferent = true;
                    prefixError(key, ()=>{
                        keyValidator.validate(key);
                        valueValidator.validate(value);
                    });
                    continue;
                }
                const prev = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getOwnProperty"])(knownGoodValue, key);
                const next = value;
                if (Object.is(prev, next)) {
                    continue;
                }
                const checked = prefixError(key, ()=>{
                    if (valueValidator.validateUsingKnownGoodVersion) {
                        return valueValidator.validateUsingKnownGoodVersion(prev, next);
                    } else {
                        return valueValidator.validate(next);
                    }
                });
                if (!Object.is(checked, prev)) {
                    isDifferent = true;
                }
            }
            for (const key of Object.keys(knownGoodValue)){
                if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasOwnProperty"])(newValue, key)) {
                    isDifferent = true;
                    break;
                }
            }
            return isDifferent ? newValue : knownGoodValue;
        });
        this.keyValidator = keyValidator;
        this.valueValidator = valueValidator;
    }
}
function typeofValidator(type) {
    return new Validator((value)=>{
        if (typeof value !== type) {
            throw new ValidationError(`Expected ${type}, got ${typeToString(value)}`);
        }
        return value;
    });
}
const unknown = new Validator((value)=>value);
const any = new Validator((value)=>value);
const string = typeofValidator("string");
const number = typeofValidator("number").check((number2)=>{
    if (Number.isNaN(number2)) {
        throw new ValidationError("Expected a number, got NaN");
    }
    if (!Number.isFinite(number2)) {
        throw new ValidationError(`Expected a finite number, got ${number2}`);
    }
});
const positiveNumber = number.check((value)=>{
    if (value < 0) throw new ValidationError(`Expected a positive number, got ${value}`);
});
const nonZeroNumber = number.check((value)=>{
    if (value <= 0) throw new ValidationError(`Expected a non-zero positive number, got ${value}`);
});
const integer = number.check((value)=>{
    if (!Number.isInteger(value)) throw new ValidationError(`Expected an integer, got ${value}`);
});
const positiveInteger = integer.check((value)=>{
    if (value < 0) throw new ValidationError(`Expected a positive integer, got ${value}`);
});
const nonZeroInteger = integer.check((value)=>{
    if (value <= 0) throw new ValidationError(`Expected a non-zero positive integer, got ${value}`);
});
const boolean = typeofValidator("boolean");
const bigint = typeofValidator("bigint");
function literal(expectedValue) {
    return new Validator((actualValue)=>{
        if (actualValue !== expectedValue) {
            throw new ValidationError(`Expected ${expectedValue}, got ${JSON.stringify(actualValue)}`);
        }
        return expectedValue;
    });
}
const array = new Validator((value)=>{
    if (!Array.isArray(value)) {
        throw new ValidationError(`Expected an array, got ${typeToString(value)}`);
    }
    return value;
});
function arrayOf(itemValidator) {
    return new ArrayOfValidator(itemValidator);
}
const unknownObject = new Validator((value)=>{
    if (typeof value !== "object" || value === null) {
        throw new ValidationError(`Expected object, got ${typeToString(value)}`);
    }
    return value;
});
function object(config) {
    return new ObjectValidator(config);
}
function isPlainObject(value) {
    return typeof value === "object" && value !== null && (Object.getPrototypeOf(value) === Object.prototype || Object.getPrototypeOf(value) === null || Object.getPrototypeOf(value) === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$value$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["STRUCTURED_CLONE_OBJECT_PROTOTYPE"]);
}
function isValidJson(value) {
    if (value === null || typeof value === "number" || typeof value === "string" || typeof value === "boolean") {
        return true;
    }
    if (Array.isArray(value)) {
        return value.every(isValidJson);
    }
    if (isPlainObject(value)) {
        return Object.values(value).every(isValidJson);
    }
    return false;
}
const jsonValue = new Validator((value)=>{
    if (isValidJson(value)) {
        return value;
    }
    throw new ValidationError(`Expected json serializable value, got ${typeof value}`);
}, (knownGoodValue, newValue)=>{
    if (Array.isArray(knownGoodValue) && Array.isArray(newValue)) {
        let isDifferent = knownGoodValue.length !== newValue.length;
        for(let i = 0; i < newValue.length; i++){
            if (i >= knownGoodValue.length) {
                isDifferent = true;
                jsonValue.validate(newValue[i]);
                continue;
            }
            const prev = knownGoodValue[i];
            const next = newValue[i];
            if (Object.is(prev, next)) {
                continue;
            }
            const checked = jsonValue.validateUsingKnownGoodVersion(prev, next);
            if (!Object.is(checked, prev)) {
                isDifferent = true;
            }
        }
        return isDifferent ? newValue : knownGoodValue;
    } else if (isPlainObject(knownGoodValue) && isPlainObject(newValue)) {
        let isDifferent = false;
        for (const key of Object.keys(newValue)){
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasOwnProperty"])(knownGoodValue, key)) {
                isDifferent = true;
                jsonValue.validate(newValue[key]);
                continue;
            }
            const prev = knownGoodValue[key];
            const next = newValue[key];
            if (Object.is(prev, next)) {
                continue;
            }
            const checked = jsonValue.validateUsingKnownGoodVersion(prev, next);
            if (!Object.is(checked, prev)) {
                isDifferent = true;
            }
        }
        for (const key of Object.keys(knownGoodValue)){
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasOwnProperty"])(newValue, key)) {
                isDifferent = true;
                break;
            }
        }
        return isDifferent ? newValue : knownGoodValue;
    } else {
        return jsonValue.validate(newValue);
    }
});
function jsonDict() {
    return dict(string, jsonValue);
}
function dict(keyValidator, valueValidator) {
    return new DictValidator(keyValidator, valueValidator);
}
function union(key, config) {
    return new UnionValidator(key, config, (_unknownValue, unknownVariant)=>{
        throw new ValidationError(`Expected one of ${Object.keys(config).map((key2)=>JSON.stringify(key2)).join(" or ")}, got ${JSON.stringify(unknownVariant)}`, [
            key
        ]);
    }, false);
}
function numberUnion(key, config) {
    return new UnionValidator(key, config, (unknownValue, unknownVariant)=>{
        throw new ValidationError(`Expected one of ${Object.keys(config).map((key2)=>JSON.stringify(key2)).join(" or ")}, got ${JSON.stringify(unknownVariant)}`, [
            key
        ]);
    }, true);
}
function model(name, validator) {
    return new Validator((value)=>{
        return prefixError(name, ()=>validator.validate(value));
    }, (prevValue, newValue)=>{
        return prefixError(name, ()=>{
            if (validator.validateUsingKnownGoodVersion) {
                return validator.validateUsingKnownGoodVersion(prevValue, newValue);
            } else {
                return validator.validate(newValue);
            }
        });
    });
}
function setEnum(values) {
    return new Validator((value)=>{
        if (!values.has(value)) {
            const valuesString = Array.from(values, (value2)=>JSON.stringify(value2)).join(" or ");
            throw new ValidationError(`Expected ${valuesString}, got ${value}`);
        }
        return value;
    });
}
function optional(validator) {
    return new Validator((value)=>{
        if (value === void 0) return void 0;
        return validator.validate(value);
    }, (knownGoodValue, newValue)=>{
        if (knownGoodValue === void 0 && newValue === void 0) return void 0;
        if (newValue === void 0) return void 0;
        if (validator.validateUsingKnownGoodVersion && knownGoodValue !== void 0) {
            return validator.validateUsingKnownGoodVersion(knownGoodValue, newValue);
        }
        return validator.validate(newValue);
    });
}
function nullable(validator) {
    return new Validator((value)=>{
        if (value === null) return null;
        return validator.validate(value);
    }, (knownGoodValue, newValue)=>{
        if (newValue === null) return null;
        if (validator.validateUsingKnownGoodVersion && knownGoodValue !== null) {
            return validator.validateUsingKnownGoodVersion(knownGoodValue, newValue);
        }
        return validator.validate(newValue);
    });
}
function literalEnum(...values) {
    return setEnum(new Set(values));
}
function parseUrl(str) {
    try {
        return new URL(str);
    } catch  {
        if (str.startsWith("/") || str.startsWith("./")) {
            try {
                return new URL(str, "http://example.com");
            } catch  {
                throw new ValidationError(`Expected a valid url, got ${JSON.stringify(str)}`);
            }
        }
        throw new ValidationError(`Expected a valid url, got ${JSON.stringify(str)}`);
    }
}
const validLinkProtocols = /* @__PURE__ */ new Set([
    "http:",
    "https:",
    "mailto:"
]);
const linkUrl = string.check((value)=>{
    if (value === "") return;
    const url = parseUrl(value);
    if (!validLinkProtocols.has(url.protocol.toLowerCase())) {
        throw new ValidationError(`Expected a valid url, got ${JSON.stringify(value)} (invalid protocol)`);
    }
});
const validSrcProtocols = /* @__PURE__ */ new Set([
    "http:",
    "https:",
    "data:",
    "asset:"
]);
const srcUrl = string.check((value)=>{
    if (value === "") return;
    const url = parseUrl(value);
    if (!validSrcProtocols.has(url.protocol.toLowerCase())) {
        throw new ValidationError(`Expected a valid url, got ${JSON.stringify(value)} (invalid protocol)`);
    }
});
const httpUrl = string.check((value)=>{
    if (value === "") return;
    const url = parseUrl(value);
    if (!url.protocol.toLowerCase().match(/^https?:$/)) {
        throw new ValidationError(`Expected a valid url, got ${JSON.stringify(value)} (invalid protocol)`);
    }
});
const indexKey = string.refine((key)=>{
    try {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$reordering$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["validateIndexKey"])(key);
        return key;
    } catch  {
        throw new ValidationError(`Expected an index key, got ${JSON.stringify(key)}`);
    }
});
function or(v1, v2) {
    return new Validator((value)=>{
        try {
            return v1.validate(value);
        } catch  {
            return v2.validate(value);
        }
    });
}
;
 //# sourceMappingURL=validation.mjs.map
}}),
"[project]/node_modules/@tldraw/validate/dist-esm/index.mjs [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$version$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/version.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$validate$2f$dist$2d$esm$2f$lib$2f$validation$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/validate/dist-esm/lib/validation.mjs [app-client] (ecmascript)");
;
;
;
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$version$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registerTldrawLibraryVersion"])("@tldraw/validate", "3.15.3", "esm");
;
 //# sourceMappingURL=index.mjs.map
}}),
"[project]/node_modules/@tldraw/validate/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$validate$2f$dist$2d$esm$2f$lib$2f$validation$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/validate/dist-esm/lib/validation.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$validate$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/validate/dist-esm/index.mjs [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/@tldraw/validate/dist-esm/lib/validation.mjs [app-client] (ecmascript) <export * as T>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "T": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$validate$2f$dist$2d$esm$2f$lib$2f$validation$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$validate$2f$dist$2d$esm$2f$lib$2f$validation$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/validate/dist-esm/lib/validation.mjs [app-client] (ecmascript)");
}}),
"[project]/node_modules/@tldraw/validate/dist-esm/lib/validation.mjs [app-client] (ecmascript) <export * as T>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "T": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$validate$2f$dist$2d$esm$2f$lib$2f$validation$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$validate$2f$dist$2d$esm$2f$lib$2f$validation$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/validate/dist-esm/lib/validation.mjs [app-client] (ecmascript)");
}}),
"[project]/node_modules/@tldraw/tldraw/dist-esm/index.mjs [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$version$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/version.mjs [app-client] (ecmascript)");
;
;
(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$version$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["registerTldrawLibraryVersion"])("@tldraw/tldraw", "3.15.3", "esm"); //# sourceMappingURL=index.mjs.map
}}),
"[project]/node_modules/@tldraw/tldraw/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/index.mjs [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tldraw$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tldraw/dist-esm/index.mjs [app-client] (ecmascript) <locals>");
}}),
}]);

//# sourceMappingURL=node_modules_%40tldraw_53f8ca65._.js.map