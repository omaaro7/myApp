{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useTranslation/defaultTranslation.ts"],"sourcesContent":["// This file is automatically generated by internal/scripts/refresh-assets.ts.\n// Do not edit manually. Or do, I'm a comment, not a cop.\n\n/** @internal */\nexport const DEFAULT_TRANSLATION = {\n\t'action.convert-to-bookmark': 'Convert to Bookmark',\n\t'action.convert-to-embed': 'Convert to Embed',\n\t'action.open-embed-link': 'Open link',\n\t'action.align-bottom': 'Align bottom',\n\t'action.align-center-horizontal': 'Align horizontally',\n\t'action.align-center-vertical': 'Align vertically',\n\t'action.align-center-horizontal.short': 'Align H',\n\t'action.align-center-vertical.short': 'Align V',\n\t'action.align-left': 'Align left',\n\t'action.align-right': 'Align right',\n\t'action.align-top': 'Align top',\n\t'action.back-to-content': 'Back to content',\n\t'action.bring-forward': 'Bring forward',\n\t'action.bring-to-front': 'Bring to front',\n\t'action.copy-as-png.short': 'PNG',\n\t'action.copy-as-png': 'Copy as PNG',\n\t'action.copy-as-svg.short': 'SVG',\n\t'action.copy-as-svg': 'Copy as SVG',\n\t'action.copy': 'Copy',\n\t'action.cut': 'Cut',\n\t'action.delete': 'Delete',\n\t'action.unlock-all': 'Unlock all',\n\t'action.distribute-horizontal': 'Distribute horizontally',\n\t'action.distribute-vertical': 'Distribute vertically',\n\t'action.distribute-horizontal.short': 'Distribute H',\n\t'action.distribute-vertical.short': 'Distribute V',\n\t'action.download-original': 'Download original',\n\t'action.duplicate': 'Duplicate',\n\t'action.edit-link': 'Edit link',\n\t'action.exit-pen-mode': 'Exit pen mode',\n\t'action.export-as-png.short': 'PNG',\n\t'action.export-as-png': 'Export as PNG',\n\t'action.export-as-svg.short': 'SVG',\n\t'action.export-as-svg': 'Export as SVG',\n\t'action.export-all-as-png.short': 'PNG',\n\t'action.export-all-as-png': 'Export as PNG',\n\t'action.export-all-as-svg.short': 'SVG',\n\t'action.export-all-as-svg': 'Export as SVG',\n\t'action.fit-frame-to-content': 'Fit to content',\n\t'action.flip-horizontal': 'Flip horizontally',\n\t'action.flip-vertical': 'Flip vertically',\n\t'action.flip-horizontal.short': 'Flip H',\n\t'action.flip-vertical.short': 'Flip V',\n\t'action.fork-project': 'Fork this project',\n\t'action.fork-project-on-tldraw': 'Fork project on tldraw',\n\t'action.group': 'Group',\n\t'action.insert-embed': 'Insert embed',\n\t'action.insert-media': 'Upload media',\n\t'action.leave-shared-project': 'Leave shared project',\n\t'action.new-project': 'New project',\n\t'action.new-shared-project': 'New shared project',\n\t'action.open-cursor-chat': 'Cursor chat',\n\t'action.open-kbd-shortcuts': 'Open keyboard shortcuts',\n\t'action.open-file': 'Open file',\n\t'action.pack': 'Pack',\n\t'action.paste': 'Paste',\n\t'action.paste-error-title': 'Pasting failed',\n\t'action.paste-error-description':\n\t\t'Could not paste due to missing clipboard permissions. Please enable the permissions and try again.',\n\t'action.print': 'Print',\n\t'action.redo': 'Redo',\n\t'action.remove-frame': 'Remove frame',\n\t'action.rename': 'Rename',\n\t'action.rotate-ccw': 'Rotate counterclockwise',\n\t'action.rotate-cw': 'Rotate clockwise',\n\t'action.save-copy': 'Save a copy',\n\t'action.select-all': 'Select all',\n\t'action.select-none': 'Select none',\n\t'action.send-backward': 'Send backward',\n\t'action.send-to-back': 'Send to back',\n\t'action.share-project': 'Share this project',\n\t'action.stack-horizontal': 'Stack horizontally',\n\t'action.stack-vertical': 'Stack vertically',\n\t'action.stack-horizontal.short': 'Stack H',\n\t'action.stack-vertical.short': 'Stack V',\n\t'action.stop-following': 'Stop following',\n\t'action.stretch-horizontal': 'Stretch horizontally',\n\t'action.stretch-vertical': 'Stretch vertically',\n\t'action.stretch-horizontal.short': 'Stretch H',\n\t'action.stretch-vertical.short': 'Stretch V',\n\t'action.toggle-auto-size': 'Toggle auto size',\n\t'action.toggle-dark-mode.menu': 'Dark mode',\n\t'action.toggle-dark-mode': 'Toggle dark mode',\n\t'action.toggle-paste-at-cursor.menu': 'Paste at cursor',\n\t'action.toggle-paste-at-cursor': 'Toggle paste at cursor',\n\t'action.toggle-wrap-mode.menu': 'Select on wrap',\n\t'action.toggle-wrap-mode': 'Toggle Select on wrap',\n\t'action.toggle-reduce-motion.menu': 'Reduce motion',\n\t'action.toggle-reduce-motion': 'Toggle reduce motion',\n\t'action.toggle-keyboard-shortcuts.menu': 'Keyboard shortcuts',\n\t'action.toggle-keyboard-shortcuts': 'Toggle keyboard shortcuts',\n\t'action.toggle-edge-scrolling.menu': 'Edge scrolling',\n\t'action.toggle-edge-scrolling': 'Toggle edge scrolling',\n\t'action.toggle-debug-mode.menu': 'Debug mode',\n\t'action.toggle-debug-mode': 'Toggle debug mode',\n\t'action.toggle-focus-mode.menu': 'Focus mode',\n\t'action.toggle-focus-mode': 'Toggle focus mode',\n\t'action.toggle-dynamic-size-mode.menu': 'Dynamic size',\n\t'action.toggle-dynamic-size-mode': 'Toggle dynamic size',\n\t'action.toggle-grid.menu': 'Show grid',\n\t'action.toggle-grid': 'Toggle grid',\n\t'action.toggle-lock': 'Toggle locked',\n\t'action.flatten-to-image': 'Flatten',\n\t'action.toggle-snap-mode.menu': 'Always snap',\n\t'action.toggle-snap-mode': 'Toggle always snap',\n\t'action.toggle-tool-lock.menu': 'Tool lock',\n\t'action.toggle-tool-lock': 'Toggle tool lock',\n\t'action.toggle-transparent.context-menu': 'Transparent',\n\t'action.toggle-transparent.menu': 'Transparent',\n\t'action.toggle-transparent': 'Toggle transparent background',\n\t'action.undo': 'Undo',\n\t'action.ungroup': 'Ungroup',\n\t'action.zoom-in': 'Zoom in',\n\t'action.zoom-out': 'Zoom out',\n\t'action.zoom-to-100': 'Zoom to 100%',\n\t'action.zoom-to-fit': 'Zoom to fit',\n\t'action.zoom-to-selection': 'Zoom to selection',\n\t'assets.files.size-too-big': 'File size is too big',\n\t'assets.files.type-not-allowed': 'File type is not allowed',\n\t'assets.files.upload-failed': 'Upload failed',\n\t'assets.files.amount-too-many': 'Too many files',\n\t'assets.url.failed': 'Couldnâ€™t load URL preview',\n\t'theme.dark': 'Dark',\n\t'theme.light': 'Light',\n\t'theme.system': 'System',\n\t'color-style.white': 'White',\n\t'color-style.black': 'Black',\n\t'color-style.blue': 'Blue',\n\t'color-style.green': 'Green',\n\t'color-style.grey': 'Grey',\n\t'color-style.light-blue': 'Light blue',\n\t'color-style.light-green': 'Light green',\n\t'color-style.light-red': 'Light red',\n\t'color-style.light-violet': 'Light violet',\n\t'color-style.orange': 'Orange',\n\t'color-style.red': 'Red',\n\t'color-style.violet': 'Violet',\n\t'color-style.yellow': 'Yellow',\n\t'fill-style.none': 'None',\n\t'document.default-name': 'Untitled',\n\t'fill-style.semi': 'Semi',\n\t'fill-style.solid': 'Solid',\n\t'fill-style.pattern': 'Pattern',\n\t'fill-style.fill': 'Fill',\n\t'dash-style.dashed': 'Dashed',\n\t'dash-style.dotted': 'Dotted',\n\t'dash-style.draw': 'Draw',\n\t'dash-style.solid': 'Solid',\n\t'size-style.s': 'Small',\n\t'size-style.m': 'Medium',\n\t'size-style.l': 'Large',\n\t'size-style.xl': 'Extra large',\n\t'opacity-style.0.1': '10%',\n\t'opacity-style.0.25': '25%',\n\t'opacity-style.0.5': '50%',\n\t'opacity-style.0.75': '75%',\n\t'opacity-style.1': '100%',\n\t'font-style.draw': 'Draw',\n\t'font-style.sans': 'Sans',\n\t'font-style.serif': 'Serif',\n\t'font-style.mono': 'Mono',\n\t'align-style.start': 'Start',\n\t'align-style.middle': 'Middle',\n\t'align-style.end': 'End',\n\t'align-style.justify': 'Justify',\n\t'verticalAlign-style.start': 'Top',\n\t'verticalAlign-style.middle': 'Middle',\n\t'verticalAlign-style.end': 'Bottom',\n\t'geo-style.arrow-down': 'Arrow down',\n\t'geo-style.arrow-left': 'Arrow left',\n\t'geo-style.arrow-right': 'Arrow right',\n\t'geo-style.arrow-up': 'Arrow up',\n\t'geo-style.cloud': 'Cloud',\n\t'geo-style.diamond': 'Diamond',\n\t'geo-style.ellipse': 'Ellipse',\n\t'geo-style.heart': 'Heart',\n\t'geo-style.hexagon': 'Hexagon',\n\t'geo-style.octagon': 'Octagon',\n\t'geo-style.oval': 'Oval',\n\t'geo-style.pentagon': 'Pentagon',\n\t'geo-style.rectangle': 'Rectangle',\n\t'geo-style.rhombus': 'Rhombus',\n\t'geo-style.star': 'Star',\n\t'geo-style.trapezoid': 'Trapezoid',\n\t'geo-style.triangle': 'Triangle',\n\t'geo-style.x-box': 'X box',\n\t'geo-style.check-box': 'Check box',\n\t'arrowheadStart-style.none': 'None',\n\t'arrowheadStart-style.arrow': 'Arrow',\n\t'arrowheadStart-style.bar': 'Bar',\n\t'arrowheadStart-style.diamond': 'Diamond',\n\t'arrowheadStart-style.dot': 'Dot',\n\t'arrowheadStart-style.inverted': 'Inverted',\n\t'arrowheadStart-style.pipe': 'Pipe',\n\t'arrowheadStart-style.square': 'Square',\n\t'arrowheadStart-style.triangle': 'Triangle',\n\t'arrowheadEnd-style.none': 'None',\n\t'arrowheadEnd-style.arrow': 'Arrow',\n\t'arrowheadEnd-style.bar': 'Bar',\n\t'arrowheadEnd-style.diamond': 'Diamond',\n\t'arrowheadEnd-style.dot': 'Dot',\n\t'arrowheadEnd-style.inverted': 'Inverted',\n\t'arrowheadEnd-style.pipe': 'Pipe',\n\t'arrowheadEnd-style.square': 'Square',\n\t'arrowheadEnd-style.triangle': 'Triangle',\n\t'spline-style.line': 'Line',\n\t'spline-style.cubic': 'Cubic',\n\t'arrow-kind-style.arc': 'Arc',\n\t'arrow-kind-style.elbow': 'Elbow',\n\t'tool.select': 'Select',\n\t'tool.hand': 'Hand',\n\t'tool.draw': 'Draw',\n\t'tool.eraser': 'Eraser',\n\t'tool.arrow-down': 'Arrow down',\n\t'tool.arrow-left': 'Arrow left',\n\t'tool.arrow-right': 'Arrow right',\n\t'tool.arrow-up': 'Arrow up',\n\t'tool.arrow': 'Arrow',\n\t'tool.cloud': 'Cloud',\n\t'tool.diamond': 'Diamond',\n\t'tool.ellipse': 'Ellipse',\n\t'tool.heart': 'Heart',\n\t'tool.hexagon': 'Hexagon',\n\t'tool.highlight': 'Highlight',\n\t'tool.line': 'Line',\n\t'tool.octagon': 'Octagon',\n\t'tool.oval': 'Oval',\n\t'tool.pentagon': 'Pentagon',\n\t'tool.rectangle': 'Rectangle',\n\t'tool.rhombus': 'Rhombus',\n\t'tool.star': 'Star',\n\t'tool.trapezoid': 'Trapezoid',\n\t'tool.triangle': 'Triangle',\n\t'tool.x-box': 'X box',\n\t'tool.check-box': 'Check box',\n\t'tool.media': 'Media',\n\t'tool.frame': 'Frame',\n\t'tool.note': 'Note',\n\t'tool.laser': 'Laser',\n\t'tool.embed': 'Embed',\n\t'tool.text': 'Text',\n\t'tool.pointer-down': 'Pointer down',\n\t'tool.image-zoom': 'Zoom',\n\t'tool.replace-media': 'Replace media',\n\t'tool.flip-horz': 'Flip horizontally',\n\t'tool.flip-vert': 'Flip vertically',\n\t'tool.rotate-cw': 'Rotate',\n\t'tool.aspect-ratio': 'Aspect ratio',\n\t'tool.aspect-ratio.original': 'Original',\n\t'tool.aspect-ratio.square': 'Square (1:1)',\n\t'tool.aspect-ratio.circle': 'Circle (1:1)',\n\t'tool.aspect-ratio.landscape': 'Landscape (4:3)',\n\t'tool.aspect-ratio.portrait': 'Portrait (3:4)',\n\t'tool.aspect-ratio.wide': 'Wide (16:9)',\n\t'tool.image-toolbar-title': 'Image tools',\n\t'tool.image-crop': 'Crop image',\n\t'tool.media-alt-text': 'Alternative text',\n\t'tool.media-alt-text-desc': 'Give a descriptionâ€¦',\n\t'tool.media-alt-text-confirm': 'Confirm',\n\t'tool.rich-text-bold': 'Bold',\n\t'tool.rich-text-italic': 'Italic',\n\t'tool.rich-text-code': 'Code',\n\t'tool.rich-text-highlight': 'Highlight',\n\t'tool.rich-text-strikethrough': 'Strikethrough',\n\t'tool.rich-text-link': 'Link',\n\t'tool.rich-text-link-visit': 'Visit link',\n\t'tool.rich-text-link-remove': 'Remove link',\n\t'tool.rich-text-header': 'Header',\n\t'tool.rich-text-bulletList': 'Bulleted list',\n\t'tool.rich-text-toolbar-title': 'Text formatting',\n\t'tool.rich-text-orderedList': 'Ordered list',\n\t'tool.bookmark': 'Bookmark',\n\t'a11y.status': 'Status',\n\t'a11y.skip-to-main-content': 'Move focus to canvas',\n\t'a11y.shape-index': '{num} of {total}',\n\t'a11y.shape-image': 'Image',\n\t'a11y.shape-video': 'Video',\n\t'a11y.multiple-shapes': '{num} shapes selected',\n\t'a11y.select-shape': 'Select next shape',\n\t'a11y.select-shape-direction': 'Select shape in direction',\n\t'a11y.enter-leave-container': 'Enter/leave container',\n\t'a11y.repeat-shape': 'Repeat shape',\n\t'a11y.move-shape': 'Move shape',\n\t'a11y.move-shape-faster': 'Move shape faster',\n\t'a11y.enlarge-shape': 'Enlarge shape',\n\t'a11y.shrink-shape': 'Shrink shape',\n\t'a11y.pan-camera': 'Pan camera',\n\t'a11y.adjust-shape-styles': 'Adjust shape styles',\n\t'a11y.open-context-menu': 'Open context menu',\n\t'a11y.open-keyboard-shortcuts': 'Open keyboard shortcuts',\n\t'menu.title': 'Menu',\n\t'menu.theme': 'Theme',\n\t'menu.copy-as': 'Copy as',\n\t'menu.edit': 'Edit',\n\t'menu.export-as': 'Export as',\n\t'menu.file': 'File',\n\t'menu.language': 'Language',\n\t'menu.preferences': 'Preferences',\n\t'menu.view': 'View',\n\t'context-menu.title': 'Context menu',\n\t'context-menu.edit': 'Edit',\n\t'context-menu.arrange': 'Arrange',\n\t'context-menu.copy-as': 'Copy as',\n\t'context-menu.export-as': 'Export as',\n\t'context-menu.export-all-as': 'Export',\n\t'context-menu.move-to-page': 'Move to page',\n\t'context-menu.reorder': 'Reorder',\n\t'page-menu.title': 'Pages',\n\t'page-menu.create-new-page': 'Create new page',\n\t'page-menu.max-page-count-reached': 'Max pages reached',\n\t'page-menu.new-page-initial-name': 'Page 1',\n\t'page-menu.edit-start': 'Edit',\n\t'page-menu.edit-done': 'Done',\n\t'page-menu.go-to-page': 'Go to page',\n\t'page-menu.submenu.rename': 'Rename',\n\t'page-menu.submenu.duplicate-page': 'Duplicate',\n\t'page-menu.submenu.title': 'Menu',\n\t'page-menu.submenu.move-down': 'Move down',\n\t'page-menu.submenu.move-up': 'Move up',\n\t'page-menu.submenu.delete': 'Delete',\n\t'share-menu.title': 'Share',\n\t'share-menu.save-note': 'Download this project to your computer as a .tldr file.',\n\t'share-menu.fork-note': 'Create a new shared project based on this snapshot.',\n\t'share-menu.share-project': 'Share this project',\n\t'share-menu.copy-link': 'Copy editor link',\n\t'share-menu.create-snapshot-link': 'Copy snapshot link',\n\t'share-menu.snapshot-link-note': 'Capture and share this project as a read-only snapshot link.',\n\t'share-menu.copy-readonly-link': 'Copy viewer link',\n\t'share-menu.offline-note': 'Create a new shared project based on your current project.',\n\t'share-menu.copy-link-note': 'Anyone with the link will be able to view and edit this project.',\n\t'share-menu.copy-readonly-link-note': 'Anyone with the link will be able to access this project.',\n\t'share-menu.project-too-large':\n\t\t'Sorry, this project canâ€™t be shared because itâ€™s too large. Weâ€™re working on it!',\n\t'share-menu.upload-failed':\n\t\t'Sorry, we couldnâ€™t upload your project at the moment. Please try again or let us know if the problem persists.',\n\t'share-menu.creating-project': 'Creating the new projectâ€¦',\n\t'share-menu.copied': 'Copied link',\n\t'document-name-menu.copy-link': 'Copy link',\n\t'status.offline': 'Offline',\n\t'people-menu.title': 'People',\n\t'people-menu.change-name': 'Change name',\n\t'people-menu.avatar-color': 'Avatar color',\n\t'people-menu.change-color': 'Change color',\n\t'people-menu.follow': 'Following',\n\t'people-menu.following': 'Following',\n\t'people-menu.leading': 'Following You',\n\t'people-menu.user': '(You)',\n\t'people-menu.invite': 'Invite others',\n\t'people-menu.anonymous-user': 'New user',\n\t'help-menu.import-tldr-file': 'Import fileâ€¦',\n\t'help-menu.title': 'Help and resources',\n\t'help-menu.about': 'About tldraw',\n\t'help-menu.discord': 'Discord',\n\t'help-menu.github': 'GitHub',\n\t'help-menu.keyboard-shortcuts': 'Keyboard shortcuts',\n\t'help-menu.twitter': 'Twitter',\n\t'help-menu.terms': 'Terms of service',\n\t'help-menu.privacy': 'Privacy policy',\n\t'actions-menu.title': 'Actions',\n\t'edit-link-dialog.title': 'Edit link',\n\t'edit-link-dialog.invalid-url': 'A link must be a valid URL.',\n\t'edit-link-dialog.detail': 'Links will open in a new tab.',\n\t'edit-link-dialog.url': 'URL',\n\t'edit-link-dialog.clear': 'Clear',\n\t'edit-link-dialog.save': 'Continue',\n\t'edit-link-dialog.cancel': 'Cancel',\n\t'edit-link-dialog.external-link': 'External link',\n\t'embed-dialog.title': 'Insert embed',\n\t'embed-dialog.back': 'Back',\n\t'embed-dialog.create': 'Create',\n\t'embed-dialog.cancel': 'Cancel',\n\t'embed-dialog.url': 'URL',\n\t'embed-dialog.instruction': 'Paste in the siteâ€™s URL to create the embed.',\n\t'embed-dialog.invalid-url': 'We could not create an embed from that URL.',\n\t'shortcuts-dialog.title': 'Keyboard shortcuts',\n\t'shortcuts-dialog.edit': 'Edit',\n\t'shortcuts-dialog.file': 'File',\n\t'shortcuts-dialog.preferences': 'Preferences',\n\t'shortcuts-dialog.tools': 'Tools',\n\t'shortcuts-dialog.transform': 'Transform',\n\t'shortcuts-dialog.view': 'View',\n\t'shortcuts-dialog.collaboration': 'Collaboration',\n\t'shortcuts-dialog.a11y': 'Accessibility',\n\t'shortcuts-dialog.text-formatting': 'Text formatting',\n\t'style-panel.title': 'Styles',\n\t'style-panel.align': 'Align',\n\t'style-panel.label-align': 'Label align',\n\t'style-panel.vertical-align': 'Vertical align',\n\t'style-panel.position': 'Position',\n\t'style-panel.arrowheads': 'Arrows',\n\t'style-panel.arrowhead-start': 'Start',\n\t'style-panel.arrowhead-end': 'End',\n\t'style-panel.arrow-kind': 'Line',\n\t'style-panel.color': 'Color',\n\t'style-panel.dash': 'Dash',\n\t'style-panel.fill': 'Fill',\n\t'style-panel.font': 'Font',\n\t'style-panel.geo': 'Shape',\n\t'style-panel.mixed': 'Mixed',\n\t'style-panel.opacity': 'Opacity',\n\t'style-panel.size': 'Size',\n\t'style-panel.spline': 'Spline',\n\t'tool-panel.title': 'Tools',\n\t'tool-panel.more': 'More',\n\t'navigation-zone.title': 'Navigation',\n\t'navigation-zone.minimap': 'Minimap',\n\t'navigation-zone.toggle-minimap': 'Toggle minimap',\n\t'navigation-zone.zoom': 'Zoom',\n\t'focus-mode.toggle-focus-mode': 'Toggle focus mode',\n\t'toast.close': 'Close',\n\t'toast.success': 'Success',\n\t'toast.error': 'Error',\n\t'toast.info': 'Info',\n\t'toast.warning': 'Warning',\n\t'file-system.file-open-error.title': 'Could not open file',\n\t'file-system.file-open-error.not-a-tldraw-file':\n\t\t'The file you tried to open doesnâ€™t look like a tldraw file.',\n\t'file-system.file-open-error.file-format-version-too-new':\n\t\t'The file you tried to open is from a newer version of tldraw. Please reload the page and try again.',\n\t'file-system.file-open-error.generic-corrupted-file': 'The file you tried to open is corrupted.',\n\t'file-system.confirm-open.title': 'Overwrite current project?',\n\t'file-system.confirm-open.description':\n\t\t'Opening a file will replace your current project and any unsaved changes will be lost. Are you sure you want to continue?',\n\t'file-system.confirm-open.cancel': 'Cancel',\n\t'file-system.confirm-open.open': 'Open file',\n\t'file-system.confirm-open.dont-show-again': 'Donâ€™t ask again',\n\t'file-system.confirm-clear.title': 'Clear current project?',\n\t'file-system.confirm-clear.description':\n\t\t'Creating a new project will clear your current project and any unsaved changes will be lost. Are you sure you want to continue?',\n\t'file-system.confirm-clear.cancel': 'Cancel',\n\t'file-system.confirm-clear.continue': 'Continue',\n\t'file-system.confirm-clear.dont-show-again': 'Donâ€™t ask again',\n\t'file-system.shared-document-file-open-error.title': 'Could not open file',\n\t'file-system.shared-document-file-open-error.description':\n\t\t'Opening files from shared projects is not supported.',\n\t'sharing.confirm-leave.title': 'Leave current project?',\n\t'sharing.confirm-leave.description':\n\t\t'Are you sure you want to leave this shared project? You can return to it by navigating to its URL.',\n\t'sharing.confirm-leave.cancel': 'Cancel',\n\t'sharing.confirm-leave.leave': 'Leave',\n\t'sharing.confirm-leave.dont-show-again': 'Donâ€™t ask again',\n\t'toast.error.export-fail.title': 'Failed export',\n\t'toast.error.export-fail.desc': 'Failed to export image',\n\t'toast.error.copy-fail.title': 'Failed copy',\n\t'toast.error.copy-fail.desc': 'Failed to copy image',\n\t'context.pages.new-page': 'New page',\n\t'vscode.file-open.desc':\n\t\t'Weâ€™ve updated this document to work with the current version of tldraw. If youâ€™d like to keep the original version (which will work on old.tldraw.com), click below to create a backup.',\n\t'vscode.file-open.open': 'Continue',\n\t'vscode.file-open.backup': 'Backup',\n\t'vscode.file-open.backup-saved': 'Backup saved',\n\t'vscode.file-open.backup-failed': 'Backup failed: this is not a .tldr file.',\n\t'vscode.file-open.dont-show-again': 'Donâ€™t ask again',\n\t'cursor-chat.type-to-chat': 'Type to chatâ€¦',\n\t'app.loading': 'Loading tldrawâ€¦',\n\t'handle.resize-top': 'Resize top',\n\t'handle.resize-bottom': 'Resize bottom',\n\t'handle.resize-left': 'Resize left',\n\t'handle.resize-right': 'Resize right',\n\t'handle.resize-top-left': 'Resize top left',\n\t'handle.resize-top-right': 'Resize top right',\n\t'handle.resize-bottom-left': 'Resize bottom left',\n\t'handle.resize-bottom-right': 'Resize bottom right',\n\t'handle.rotate.top_left_rotate': 'Rotate top left',\n\t'handle.rotate.top_right_rotate': 'Rotate top right',\n\t'handle.rotate.bottom_left_rotate': 'Rotate bottom left',\n\t'handle.rotate.bottom_right_rotate': 'Rotate bottom right',\n\t'handle.rotate.mobile_rotate': 'Rotate',\n\t'handle.crop.top': 'Crop top',\n\t'handle.crop.bottom': 'Crop bottom',\n\t'handle.crop.left': 'Crop left',\n\t'handle.crop.right': 'Crop right',\n\t'handle.crop.top-left': 'Crop top left',\n\t'handle.crop.top-right': 'Crop top right',\n\t'handle.crop.bottom-left': 'Crop bottom left',\n\t'handle.crop.bottom-right': 'Crop bottom right',\n\t'ui.close': 'Close',\n\t'ui.checked': 'Checked',\n\t'ui.unchecked': 'Unchecked',\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 489, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useTranslation/translations.ts"],"sourcesContent":["import { LANGUAGES, fetch } from '@tldraw/editor'\nimport { TLUiAssetUrls } from '../../assetUrls'\nimport { TLUiTranslationKey } from './TLUiTranslationKey'\nimport { DEFAULT_TRANSLATION } from './defaultTranslation'\n\n// The default language (english) must have a value for every message.\n// Other languages may have missing messages. If the application finds\n// a missing message for the current language, it will use the english\n// translation instead.\n\n/* ----------------- (do not change) ---------------- */\n\nexport const RTL_LANGUAGES = new Set(['ar', 'fa', 'he', 'ur', 'ku'])\n\n/** @public */\nexport interface TLUiTranslation {\n\treadonly locale: string\n\treadonly label: string\n\treadonly messages: Record<TLUiTranslationKey, string>\n\treadonly dir: 'rtl' | 'ltr'\n}\n\nconst EN_TRANSLATION: TLUiTranslation = {\n\tlocale: 'en',\n\tlabel: 'English',\n\tmessages: DEFAULT_TRANSLATION as TLUiTranslation['messages'],\n\tdir: 'ltr',\n}\n\n/** @internal */\nexport async function fetchTranslation(\n\tlocale: TLUiTranslation['locale'],\n\tassetUrls: TLUiAssetUrls\n): Promise<TLUiTranslation> {\n\tconst mainRes = await fetch(assetUrls.translations.en)\n\n\tif (!mainRes.ok) {\n\t\tconsole.warn(`No main translations found.`)\n\t\treturn EN_TRANSLATION\n\t}\n\n\tif (locale === 'en') {\n\t\treturn EN_TRANSLATION\n\t}\n\n\tconst language = LANGUAGES.find((t) => t.locale === locale)\n\n\tif (!language) {\n\t\tconsole.warn(`No translation found for locale ${locale}`)\n\t\treturn EN_TRANSLATION\n\t}\n\n\tconst res = await fetch(assetUrls.translations[language.locale])\n\tconst messages: TLUiTranslation['messages'] = await res.json()\n\n\tif (!messages) {\n\t\tconsole.warn(`No messages found for locale ${locale}`)\n\t\treturn EN_TRANSLATION\n\t}\n\n\tconst missing: string[] = []\n\n\tfor (const key in EN_TRANSLATION.messages) {\n\t\tif (!messages[key as TLUiTranslationKey]) {\n\t\t\tmissing.push(key)\n\t\t}\n\t}\n\n\tif (missing.length > 0 && process.env.NODE_ENV === 'development') {\n\t\tconsole.warn(`Language ${locale}: missing messages for keys:\\n${missing.join('\\n')}`)\n\t}\n\n\treturn {\n\t\tlocale,\n\t\tlabel: language.label,\n\t\tdir: RTL_LANGUAGES.has(language.locale) ? 'rtl' : 'ltr',\n\t\tmessages: { ...EN_TRANSLATION.messages, ...messages },\n\t}\n}\n"],"names":[],"mappings":";;;;AAoE2B,QAAQ,IAAI;AApEvC,SAAS,WAAW,aAAa;;;AAGjC,SAAS,2BAA2B;;;AAS7B,MAAM,gBAAgB,aAAA,GAAA,IAAI,IAAI;IAAC;IAAM;IAAM;IAAM;IAAM,IAAI;CAAC;AAUnE,MAAM,iBAAkC;IACvC,QAAQ;IACR,OAAO;IACP,kNAAU,sBAAA;IACV,KAAK;AACN;AAGA,eAAsB,iBACrB,MAAA,EACA,SAAA,EAC2B;IAC3B,MAAM,UAAU,iLAAM,QAAA,EAAM,UAAU,YAAA,CAAa,EAAE;IAErD,IAAI,CAAC,QAAQ,EAAA,EAAI;QAChB,QAAQ,IAAA,CAAK,CAAA,2BAAA,CAA6B;QAC1C,OAAO;IACR;IAEA,IAAI,WAAW,MAAM;QACpB,OAAO;IACR;IAEA,MAAM,gMAAW,YAAA,CAAU,IAAA,CAAK,CAAC,IAAM,EAAE,MAAA,KAAW,MAAM;IAE1D,IAAI,CAAC,UAAU;QACd,QAAQ,IAAA,CAAK,CAAA,gCAAA,EAAmC,MAAM,EAAE;QACxD,OAAO;IACR;IAEA,MAAM,MAAM,iLAAM,QAAA,EAAM,UAAU,YAAA,CAAa,SAAS,MAAM,CAAC;IAC/D,MAAM,WAAwC,MAAM,IAAI,IAAA,CAAK;IAE7D,IAAI,CAAC,UAAU;QACd,QAAQ,IAAA,CAAK,CAAA,6BAAA,EAAgC,MAAM,EAAE;QACrD,OAAO;IACR;IAEA,MAAM,UAAoB,CAAC,CAAA;IAE3B,IAAA,MAAW,OAAO,eAAe,QAAA,CAAU;QAC1C,IAAI,CAAC,QAAA,CAAS,GAAyB,CAAA,EAAG;YACzC,QAAQ,IAAA,CAAK,GAAG;QACjB;IACD;IAEA,IAAI,QAAQ,MAAA,GAAS,yDAA8B,eAAe;QACjE,QAAQ,IAAA,CAAK,CAAA,SAAA,EAAY,MAAM,CAAA;AAAA,EAAiC,QAAQ,IAAA,CAAK,IAAI,CAAC,EAAE;IACrF;IAEA,OAAO;QACN;QACA,OAAO,SAAS,KAAA;QAChB,KAAK,cAAc,GAAA,CAAI,SAAS,MAAM,IAAI,QAAQ;QAClD,UAAU;YAAE,GAAG,eAAe,QAAA;YAAU,GAAG,QAAA;QAAS;IACrD;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useTranslation/useTranslation.tsx"],"sourcesContent":["import * as React from 'react'\nimport { useAssetUrls } from '../../context/asset-urls'\nimport { TLUiTranslationKey } from './TLUiTranslationKey'\nimport { DEFAULT_TRANSLATION } from './defaultTranslation'\nimport { TLUiTranslation, fetchTranslation } from './translations'\n\n/** @public */\nexport interface TLUiTranslationProviderProps {\n\tchildren: React.ReactNode\n\tlocale: string\n\t/**\n\t * A collection of overrides different locales.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * <TranslationProvider overrides={{ en: { 'style-panel.styles': 'Properties' } }} />\n\t * ```\n\t */\n\toverrides?: Record<string, Record<string, string>>\n}\n\n/** @public */\nexport type TLUiTranslationContextType = TLUiTranslation\n\nconst TranslationsContext = React.createContext<TLUiTranslationContextType | null>(null)\n\n/** @public */\nexport function useCurrentTranslation() {\n\tconst translations = React.useContext(TranslationsContext)\n\tif (!translations) {\n\t\tthrow new Error('useCurrentTranslation must be used inside of <TldrawUiContextProvider />')\n\t}\n\treturn translations\n}\n\n/**\n * Provides a translation context to the editor.\n *\n * @internal\n */\nexport function TldrawUiTranslationProvider({\n\toverrides,\n\tlocale,\n\tchildren,\n}: TLUiTranslationProviderProps) {\n\tconst getAssetUrl = useAssetUrls()\n\n\tconst [currentTranslation, setCurrentTranslation] = React.useState<TLUiTranslation>(() => {\n\t\tif (overrides && overrides['en']) {\n\t\t\treturn {\n\t\t\t\tlocale: 'en',\n\t\t\t\tlabel: 'English',\n\t\t\t\tdir: 'ltr',\n\t\t\t\tmessages: { ...DEFAULT_TRANSLATION, ...overrides['en'] },\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tlocale: 'en',\n\t\t\tlabel: 'English',\n\t\t\tdir: 'ltr',\n\t\t\tmessages: DEFAULT_TRANSLATION,\n\t\t}\n\t})\n\n\tReact.useEffect(() => {\n\t\tlet isCancelled = false\n\n\t\tasync function loadTranslation() {\n\t\t\tconst translation = await fetchTranslation(locale, getAssetUrl)\n\n\t\t\tif (translation && !isCancelled) {\n\t\t\t\tif (overrides && overrides[locale]) {\n\t\t\t\t\tsetCurrentTranslation({\n\t\t\t\t\t\t...translation,\n\t\t\t\t\t\tmessages: { ...translation.messages, ...overrides[locale] },\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tsetCurrentTranslation(translation)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tloadTranslation()\n\n\t\treturn () => {\n\t\t\tisCancelled = true\n\t\t}\n\t}, [getAssetUrl, locale, overrides])\n\n\treturn (\n\t\t<TranslationsContext.Provider value={currentTranslation}>\n\t\t\t{children}\n\t\t</TranslationsContext.Provider>\n\t)\n}\n\n/**\n * Returns a function to translate a translation key into a string based on the current translation.\n *\n * @example\n *\n * ```ts\n * const msg = useTranslation()\n * const label = msg('style-panel.styles')\n * ```\n *\n * @public\n */\nexport function useTranslation() {\n\tconst translation = useCurrentTranslation()\n\treturn React.useCallback(\n\t\tfunction msg(id?: Exclude<string, TLUiTranslationKey> | string) {\n\t\t\treturn translation.messages[id as TLUiTranslationKey] ?? id\n\t\t},\n\t\t[translation]\n\t)\n}\n\nexport function untranslated(string: string) {\n\treturn string as TLUiTranslationKey\n}\n"],"names":[],"mappings":";;;;;;AA4FE;AA5FF,YAAY,WAAW;AACvB,SAAS,oBAAoB;AAE7B,SAAS,2BAA2B;AACpC,SAA0B,wBAAwB;;;;;;AAqBlD,MAAM,wLAAsB,MAAM,UAAA,EAAiD,IAAI;AAGhF,SAAS,wBAAwB;IACvC,MAAM,gLAAe,MAAM,QAAA,EAAW,mBAAmB;IACzD,IAAI,CAAC,cAAc;QAClB,MAAM,IAAI,MAAM,0EAA0E;IAC3F;IACA,OAAO;AACR;AAOO,SAAS,4BAA4B,EAC3C,SAAA,EACA,MAAA,EACA,QAAA,EACD,EAAiC;IAChC,MAAM,qMAAc,eAAA,CAAa;IAEjC,MAAM,CAAC,oBAAoB,qBAAqB,CAAA,qKAAI,MAAM,KAAA;gDAA0B,MAAM;YACzF,IAAI,aAAa,SAAA,CAAU,IAAI,CAAA,EAAG;gBACjC,OAAO;oBACN,QAAQ;oBACR,OAAO;oBACP,KAAK;oBACL,UAAU;wBAAE,2MAAG,sBAAA;wBAAqB,GAAG,SAAA,CAAU,IAAI,CAAA;oBAAE;gBACxD;YACD;YAEA,OAAO;gBACN,QAAQ;gBACR,OAAO;gBACP,KAAK;gBACL,kNAAU,sBAAA;YACX;QACD,CAAC;;IAED,CAAA,GAAA,6JAAA,CAAA,MAAM,MAAA;iDAAU,MAAM;YACrB,IAAI,cAAc;YAElB,eAAe,kBAAkB;gBAChC,MAAM,cAAc,OAAM,wNAAA,EAAiB,QAAQ,WAAW;gBAE9D,IAAI,eAAe,CAAC,aAAa;oBAChC,IAAI,aAAa,SAAA,CAAU,MAAM,CAAA,EAAG;wBACnC,sBAAsB;4BACrB,GAAG,WAAA;4BACH,UAAU;gCAAE,GAAG,YAAY,QAAA;gCAAU,GAAG,SAAA,CAAU,MAAM,CAAA;4BAAE;wBAC3D,CAAC;oBACF,OAAO;wBACN,sBAAsB,WAAW;oBAClC;gBACD;YACD;YAEA,gBAAgB;YAEhB;yDAAO,MAAM;oBACZ,cAAc;gBACf;;QACD;gDAAG;QAAC;QAAa;QAAQ,SAAS;KAAC;IAEnC,OACC,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAC,oBAAoB,QAAA,EAApB;QAA6B,OAAO;QACnC;IAAA,CACF;AAEF;AAcO,SAAS,iBAAiB;IAChC,MAAM,cAAc,sBAAsB;IAC1C,yKAAO,MAAM,QAAA,EACZ,SAAS,IAAI,EAAA,EAAmD;QAC/D,OAAO,YAAY,QAAA,CAAS,EAAwB,CAAA,IAAK;IAC1D,GACA;QAAC,WAAW;KAAA;AAEd;AAEO,SAAS,aAAa,MAAA,EAAgB;IAC5C,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 663, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useGetEmbedDefinition.ts"],"sourcesContent":["import { useMaybeEditor } from '@tldraw/editor'\nimport { EmbedShapeUtil } from '../../shapes/embed/EmbedShapeUtil'\n\n/** @internal */\nexport function useGetEmbedShapeUtil() {\n\tconst editor = useMaybeEditor()\n\tif (!editor) return undefined\n\tif (editor.hasShapeUtil('embed')) {\n\t\treturn editor.getShapeUtil('embed') as EmbedShapeUtil\n\t}\n\treturn undefined\n}\n\n/** @public */\nexport function useGetEmbedDefinition() {\n\tconst embedUtil = useGetEmbedShapeUtil()\n\treturn (url: string) => {\n\t\treturn embedUtil ? embedUtil.getEmbedDefinition(url) : undefined\n\t}\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,sBAAsB;;;AAIxB,SAAS,uBAAuB;IACtC,MAAM,gMAAS,iBAAA,CAAe;IAC9B,IAAI,CAAC,OAAQ,CAAA,OAAO,KAAA;IACpB,IAAI,OAAO,YAAA,CAAa,OAAO,GAAG;QACjC,OAAO,OAAO,YAAA,CAAa,OAAO;IACnC;IACA,OAAO,KAAA;AACR;AAGO,SAAS,wBAAwB;IACvC,MAAM,YAAY,qBAAqB;IACvC,OAAO,CAAC,QAAgB;QACvB,OAAO,YAAY,UAAU,kBAAA,CAAmB,GAAG,IAAI,KAAA;IACxD;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 692, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useGetEmbedDefinitions.ts"],"sourcesContent":["import { useGetEmbedShapeUtil } from './useGetEmbedDefinition'\n\n/** @public */\nexport function useGetEmbedDefinitions() {\n\tconst embedUtil = useGetEmbedShapeUtil()\n\treturn embedUtil ? embedUtil.getEmbedDefinitions() : []\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,4BAA4B;;AAG9B,SAAS,yBAAyB;IACxC,MAAM,yMAAY,uBAAA,CAAqB;IACvC,OAAO,YAAY,UAAU,mBAAA,CAAoB,IAAI,CAAC,CAAA;AACvD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 709, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useCollaborationStatus.ts"],"sourcesContent":["import { useMaybeEditor, useValue } from '@tldraw/editor'\n\n/** @public */\nexport function useShowCollaborationUi() {\n\tconst editor = useMaybeEditor()\n\treturn editor?.store.props.collaboration !== undefined\n}\n\n/** @public */\nexport function useCollaborationStatus() {\n\tconst editor = useMaybeEditor()\n\treturn useValue(\n\t\t'sync status',\n\t\t() => {\n\t\t\tif (!editor?.store.props.collaboration?.status) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\treturn editor.store.props.collaboration.status.get()\n\t\t},\n\t\t[editor]\n\t)\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,gBAAgB,gBAAgB;;;;AAGlC,SAAS,yBAAyB;IACxC,MAAM,gMAAS,iBAAA,CAAe;IAC9B,OAAO,QAAQ,MAAM,MAAM,kBAAkB,KAAA;AAC9C;AAGO,SAAS,yBAAyB;IACxC,MAAM,gMAAS,iBAAA,CAAe;IAC9B,4LAAO,WAAA,EACN;2CACA,MAAM;YACL,IAAI,CAAC,QAAQ,MAAM,MAAM,eAAe,QAAQ;gBAC/C,OAAO;YACR;YACA,OAAO,OAAO,KAAA,CAAM,KAAA,CAAM,aAAA,CAAc,MAAA,CAAO,GAAA,CAAI;QACpD;0CACA;QAAC,MAAM;KAAA;AAET","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 742, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useReadonly.ts"],"sourcesContent":["import { useMaybeEditor, useValue } from '@tldraw/editor'\n\n/** @public */\nexport function useReadonly() {\n\tconst editor = useMaybeEditor()\n\treturn useValue('isReadonlyMode', () => !!editor?.getIsReadonly(), [editor])\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,gBAAgB,gBAAgB;;;;AAGlC,SAAS,cAAc;IAC7B,MAAM,gMAAS,iBAAA,CAAe;IAC9B,4LAAO,WAAA,EAAS;gCAAkB,IAAM,CAAC,CAAC,QAAQ,cAAc;+BAAG;QAAC,MAAM;KAAC;AAC5E","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 765, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useMenuIsOpen.ts"],"sourcesContent":["import { useGlobalMenuIsOpen, useMaybeEditor } from '@tldraw/editor'\nimport { useCallback } from 'react'\nimport { TLUiEventMap, useUiEvents } from '../context/events'\n\n/** @public */\nexport function useMenuIsOpen(id: string, cb?: (isOpen: boolean) => void) {\n\tconst editor = useMaybeEditor()\n\n\tconst onChange = useCallback(\n\t\t(isOpen: boolean) => {\n\t\t\tif (isOpen) {\n\t\t\t\teditor?.complete()\n\t\t\t}\n\t\t\tcb?.(isOpen)\n\t\t},\n\t\t[editor, cb]\n\t)\n\n\tconst trackEvent = useUiEvents()\n\n\tconst onEvent = useCallback(\n\t\t(eventName: string) => {\n\t\t\ttrackEvent(eventName as keyof TLUiEventMap, { source: 'unknown', id })\n\t\t},\n\t\t[id, trackEvent]\n\t)\n\n\treturn useGlobalMenuIsOpen(editor ? `${id}-${editor.contextId}` : id, onChange, onEvent)\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,qBAAqB,sBAAsB;;;AACpD,SAAS,mBAAmB;AAC5B,SAAuB,mBAAmB;;;;AAGnC,SAAS,cAAc,EAAA,EAAY,EAAA,EAAgC;IACzE,MAAM,gMAAS,iBAAA,CAAe;IAE9B,MAAM,YAAW,+KAAA;+CAChB,CAAC,WAAoB;YACpB,IAAI,QAAQ;gBACX,QAAQ,SAAS;YAClB;YACA,KAAK,MAAM;QACZ;8CACA;QAAC;QAAQ,EAAE;KAAA;IAGZ,MAAM,6LAAa,cAAA,CAAY;IAE/B,MAAM,4KAAU,cAAA;8CACf,CAAC,cAAsB;YACtB,WAAW,WAAiC;gBAAE,QAAQ;gBAAW;YAAG,CAAC;QACtE;6CACA;QAAC;QAAI,UAAU;KAAA;IAGhB,wMAAO,sBAAA,EAAoB,SAAS,GAAG,EAAE,CAAA,CAAA,EAAI,OAAO,SAAS,EAAA,GAAK,IAAI,UAAU,OAAO;AACxF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/clipboard/pasteFiles.ts"],"sourcesContent":["import { Editor, TLExternalContentSource, VecLike } from '@tldraw/editor'\n\n/**\n * When the clipboard has a file, create an image/video shape from the file and paste it into the scene.\n *\n * @param editor - The editor instance.\n * @param urls - The file urls.\n * @param point - The point at which to paste the file.\n * @internal\n */\nexport async function pasteFiles(\n\teditor: Editor,\n\tblobs: (File | Blob)[],\n\tpoint?: VecLike,\n\tsources?: TLExternalContentSource[]\n) {\n\tconst files = blobs.map((blob) =>\n\t\tblob instanceof File ? blob : new File([blob], 'tldrawFile', { type: blob.type })\n\t)\n\n\teditor.markHistoryStoppingPoint('paste')\n\n\tawait editor.putExternalContent({\n\t\ttype: 'files',\n\t\tfiles,\n\t\tpoint,\n\t\tsources,\n\t})\n}\n"],"names":[],"mappings":";;;AAUA,eAAsB,WACrB,MAAA,EACA,KAAA,EACA,KAAA,EACA,OAAA,EACC;IACD,MAAM,QAAQ,MAAM,GAAA,CAAI,CAAC,OACxB,gBAAgB,OAAO,OAAO,IAAI,KAAK;YAAC,IAAI;SAAA,EAAG,cAAc;YAAE,MAAM,KAAK,IAAA;QAAK,CAAC;IAGjF,OAAO,wBAAA,CAAyB,OAAO;IAEvC,MAAM,OAAO,kBAAA,CAAmB;QAC/B,MAAM;QACN;QACA;QACA;IACD,CAAC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 836, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/clipboard/pasteUrl.ts"],"sourcesContent":["import { Editor, TLExternalContentSource, VecLike } from '@tldraw/editor'\n\n/**\n * When the clipboard has plain text that is a valid URL, create a bookmark shape and insert it into\n * the scene\n *\n * @param editor - The editor instance.\n * @param url - The URL to paste.\n * @param point - The point at which to paste the file.\n * @internal\n */\nexport async function pasteUrl(\n\teditor: Editor,\n\turl: string,\n\tpoint?: VecLike,\n\tsources?: TLExternalContentSource[]\n) {\n\teditor.markHistoryStoppingPoint('paste')\n\n\treturn await editor.putExternalContent({\n\t\ttype: 'url',\n\t\tpoint,\n\t\turl,\n\t\tsources,\n\t})\n}\n"],"names":[],"mappings":";;;AAWA,eAAsB,SACrB,MAAA,EACA,GAAA,EACA,KAAA,EACA,OAAA,EACC;IACD,OAAO,wBAAA,CAAyB,OAAO;IAEvC,OAAO,MAAM,OAAO,kBAAA,CAAmB;QACtC,MAAM;QACN;QACA;QACA;IACD,CAAC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 856, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useClipboardEvents.ts"],"sourcesContent":["import {\n\tEditor,\n\tFileHelpers,\n\tTLExternalContentSource,\n\tVec,\n\tVecLike,\n\tassert,\n\tcompact,\n\tisDefined,\n\tpreventDefault,\n\tstopEventPropagation,\n\tuniq,\n\tuseEditor,\n\tuseMaybeEditor,\n\tuseValue,\n} from '@tldraw/editor'\nimport lz from 'lz-string'\nimport { useCallback, useEffect } from 'react'\nimport { TLDRAW_CUSTOM_PNG_MIME_TYPE, getCanonicalClipboardReadType } from '../../utils/clipboard'\nimport { TLUiEventSource, useUiEvents } from '../context/events'\nimport { pasteFiles } from './clipboard/pasteFiles'\nimport { pasteUrl } from './clipboard/pasteUrl'\n\n// Expected paste mime types. The earlier in this array they appear, the higher preference we give\n// them. For example, we prefer the `web image/png+tldraw` type to plain `image/png` as it does not\n// strip some of the extra metadata we write into it.\nconst expectedPasteFileMimeTypes = [\n\tTLDRAW_CUSTOM_PNG_MIME_TYPE,\n\t'image/png',\n\t'image/jpeg',\n\t'image/webp',\n\t'image/svg+xml',\n] satisfies string[]\n\n/**\n * Strip HTML tags from a string.\n * @param html - The HTML to strip.\n * @internal\n */\nfunction stripHtml(html: string) {\n\t// See <https://github.com/developit/preact-markup/blob/4788b8d61b4e24f83688710746ee36e7464f7bbc/src/parse-markup.js#L60-L69>\n\tconst doc = document.implementation.createHTMLDocument('')\n\tdoc.documentElement.innerHTML = html.trim()\n\treturn doc.body.textContent || doc.body.innerText || ''\n}\n\n/** @public */\nexport const isValidHttpURL = (url: string) => {\n\ttry {\n\t\tconst u = new URL(url)\n\t\treturn u.protocol === 'http:' || u.protocol === 'https:'\n\t} catch {\n\t\treturn false\n\t}\n}\n\n/** @public */\nconst getValidHttpURLList = (url: string) => {\n\tconst urls = url.split(/[\\n\\s]/)\n\tfor (const url of urls) {\n\t\ttry {\n\t\t\tconst u = new URL(url)\n\t\t\tif (!(u.protocol === 'http:' || u.protocol === 'https:')) {\n\t\t\t\treturn\n\t\t\t}\n\t\t} catch {\n\t\t\treturn\n\t\t}\n\t}\n\treturn uniq(urls)\n}\n\n/** @public */\nconst isSvgText = (text: string) => {\n\treturn /^<svg/.test(text)\n}\n\nconst INPUTS = ['input', 'select', 'textarea']\n\n/**\n * Get whether to disallow clipboard events.\n *\n * @internal\n */\nfunction areShortcutsDisabled(editor: Editor) {\n\tconst { activeElement } = document\n\n\treturn (\n\t\teditor.menus.hasAnyOpenMenus() ||\n\t\t(activeElement &&\n\t\t\t((activeElement as HTMLElement).isContentEditable ||\n\t\t\t\tINPUTS.indexOf(activeElement.tagName.toLowerCase()) > -1))\n\t)\n}\n\n/**\n * Handle text pasted into the editor.\n * @param editor - The editor instance.\n * @param data - The text to paste.\n * @param point - The point at which to paste the text.\n * @internal\n */\nconst handleText = (\n\teditor: Editor,\n\tdata: string,\n\tpoint?: VecLike,\n\tsources?: TLExternalContentSource[]\n) => {\n\tconst validUrlList = getValidHttpURLList(data)\n\tif (validUrlList) {\n\t\tfor (const url of validUrlList) {\n\t\t\tpasteUrl(editor, url, point)\n\t\t}\n\t} else if (isValidHttpURL(data)) {\n\t\tpasteUrl(editor, data, point)\n\t} else if (isSvgText(data)) {\n\t\teditor.markHistoryStoppingPoint('paste')\n\t\teditor.putExternalContent({\n\t\t\ttype: 'svg-text',\n\t\t\ttext: data,\n\t\t\tpoint,\n\t\t\tsources,\n\t\t})\n\t} else {\n\t\teditor.markHistoryStoppingPoint('paste')\n\t\teditor.putExternalContent({\n\t\t\ttype: 'text',\n\t\t\ttext: data,\n\t\t\tpoint,\n\t\t\tsources,\n\t\t})\n\t}\n}\n\n/**\n * Something found on the clipboard, either through the event's clipboard data or the browser's clipboard API.\n * @internal\n */\ntype ClipboardThing =\n\t| {\n\t\t\ttype: 'file'\n\t\t\tsource: Promise<File | null>\n\t  }\n\t| {\n\t\t\ttype: 'blob'\n\t\t\tsource: Promise<Blob | null>\n\t  }\n\t| {\n\t\t\ttype: 'url'\n\t\t\tsource: Promise<string>\n\t  }\n\t| {\n\t\t\ttype: 'html'\n\t\t\tsource: Promise<string>\n\t  }\n\t| {\n\t\t\ttype: 'text'\n\t\t\tsource: Promise<string>\n\t  }\n\t| {\n\t\t\ttype: string\n\t\t\tsource: Promise<string>\n\t  }\n\n/**\n * Handle a paste using event clipboard data. This is the \"original\"\n * paste method that uses the clipboard data from the paste event.\n * https://developer.mozilla.org/en-US/docs/Web/API/ClipboardEvent/clipboardData\n *\n * @param editor - The editor\n * @param clipboardData - The clipboard data\n * @param point - The point to paste at\n * @internal\n */\nconst handlePasteFromEventClipboardData = async (\n\teditor: Editor,\n\tclipboardData: DataTransfer,\n\tpoint?: VecLike\n) => {\n\t// Do not paste while in any editing state\n\tif (editor.getEditingShapeId() !== null) return\n\n\tif (!clipboardData) {\n\t\tthrow Error('No clipboard data')\n\t}\n\n\tconst things: ClipboardThing[] = []\n\n\tfor (const item of Object.values(clipboardData.items)) {\n\t\tswitch (item.kind) {\n\t\t\tcase 'file': {\n\t\t\t\t// files are always blobs\n\t\t\t\tthings.push({\n\t\t\t\t\ttype: 'file',\n\t\t\t\t\tsource: new Promise((r) => r(item.getAsFile())) as Promise<File | null>,\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'string': {\n\t\t\t\t// strings can be text or html\n\t\t\t\tif (item.type === 'text/html') {\n\t\t\t\t\tthings.push({\n\t\t\t\t\t\ttype: 'html',\n\t\t\t\t\t\tsource: new Promise((r) => item.getAsString(r)) as Promise<string>,\n\t\t\t\t\t})\n\t\t\t\t} else if (item.type === 'text/plain') {\n\t\t\t\t\tthings.push({\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\tsource: new Promise((r) => item.getAsString(r)) as Promise<string>,\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tthings.push({ type: item.type, source: new Promise((r) => item.getAsString(r)) })\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\thandleClipboardThings(editor, things, point)\n}\n\n/**\n * Handle a paste using items retrieved from the Clipboard API.\n * https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem\n *\n * @param editor - The editor\n * @param clipboardItems - The clipboard items to handle\n * @param point - The point to paste at\n * @internal\n */\nconst handlePasteFromClipboardApi = async ({\n\teditor,\n\tclipboardItems,\n\tpoint,\n\tfallbackFiles,\n}: {\n\teditor: Editor\n\tclipboardItems: ClipboardItem[]\n\tpoint?: VecLike\n\tfallbackFiles?: File[]\n}) => {\n\t// We need to populate the array of clipboard things\n\t// based on the ClipboardItems from the Clipboard API.\n\t// This is done in a different way than when using\n\t// the clipboard data from the paste event.\n\n\tconst things: ClipboardThing[] = []\n\n\tfor (const item of clipboardItems) {\n\t\tfor (const type of expectedPasteFileMimeTypes) {\n\t\t\tif (item.types.includes(type)) {\n\t\t\t\tconst blobPromise = item\n\t\t\t\t\t.getType(type)\n\t\t\t\t\t.then((blob) => FileHelpers.rewriteMimeType(blob, getCanonicalClipboardReadType(type)))\n\t\t\t\tthings.push({\n\t\t\t\t\ttype: 'blob',\n\t\t\t\t\tsource: blobPromise,\n\t\t\t\t})\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif (item.types.includes('text/html')) {\n\t\t\tthings.push({\n\t\t\t\ttype: 'html',\n\t\t\t\tsource: (async () => {\n\t\t\t\t\tconst blob = await item.getType('text/html')\n\t\t\t\t\treturn await FileHelpers.blobToText(blob)\n\t\t\t\t})(),\n\t\t\t})\n\t\t}\n\n\t\tif (item.types.includes('text/uri-list')) {\n\t\t\tthings.push({\n\t\t\t\ttype: 'url',\n\t\t\t\tsource: (async () => {\n\t\t\t\t\tconst blob = await item.getType('text/uri-list')\n\t\t\t\t\treturn await FileHelpers.blobToText(blob)\n\t\t\t\t})(),\n\t\t\t})\n\t\t}\n\n\t\tif (item.types.includes('text/plain')) {\n\t\t\tthings.push({\n\t\t\t\ttype: 'text',\n\t\t\t\tsource: (async () => {\n\t\t\t\t\tconst blob = await item.getType('text/plain')\n\t\t\t\t\treturn await FileHelpers.blobToText(blob)\n\t\t\t\t})(),\n\t\t\t})\n\t\t}\n\t}\n\n\tif (fallbackFiles?.length && things.length === 1 && things[0].type === 'text') {\n\t\tthings.pop()\n\t\tthings.push(\n\t\t\t...fallbackFiles.map((f): ClipboardThing => ({ type: 'file', source: Promise.resolve(f) }))\n\t\t)\n\t} else if (fallbackFiles?.length && things.length === 0) {\n\t\t// Files pasted in Safari from your computer don't have types, so we need to use the fallback files directly\n\t\t// if they're available. This only works if pasted keyboard shortcuts. Pasting from the menu in Safari seems to never\n\t\t// let you access files that are copied from your computer.\n\t\tthings.push(\n\t\t\t...fallbackFiles.map((f): ClipboardThing => ({ type: 'file', source: Promise.resolve(f) }))\n\t\t)\n\t}\n\n\treturn await handleClipboardThings(editor, things, point)\n}\n\nasync function handleClipboardThings(editor: Editor, things: ClipboardThing[], point?: VecLike) {\n\t// 1. Handle files\n\t//\n\t// We need to handle files separately because if we want them to\n\t// be placed next to each other, we need to create them all at once.\n\n\tconst files = things.filter(\n\t\t(t) => (t.type === 'file' || t.type === 'blob') && t.source !== null\n\t) as Extract<ClipboardThing, { type: 'file' } | { type: 'blob' }>[]\n\n\t// Just paste the files, nothing else\n\tif (files.length) {\n\t\tif (files.length > editor.options.maxFilesAtOnce) {\n\t\t\tthrow Error('Too many files')\n\t\t}\n\t\tconst fileBlobs = compact(await Promise.all(files.map((t) => t.source)))\n\t\treturn await pasteFiles(editor, fileBlobs, point)\n\t}\n\n\t// 2. Generate clipboard results for non-file things\n\t//\n\t// Getting the source from the items is async, however they must be accessed syncronously;\n\t// we can't await them in a loop. So we'll map them to promises and await them all at once,\n\t// then make decisions based on what we find.\n\n\tconst results = await Promise.all<TLExternalContentSource>(\n\t\tthings\n\t\t\t.filter((t) => t.type !== 'file')\n\t\t\t.map(\n\t\t\t\t(t) =>\n\t\t\t\t\tnew Promise((r) => {\n\t\t\t\t\t\tconst thing = t as Exclude<ClipboardThing, { type: 'file' } | { type: 'blob' }>\n\n\t\t\t\t\t\tif (thing.type === 'file') {\n\t\t\t\t\t\t\tr({ type: 'error', data: null, reason: 'unexpected file' })\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthing.source.then((text) => {\n\t\t\t\t\t\t\t// first, see if we can find tldraw content, which is JSON inside of an html comment\n\t\t\t\t\t\t\tconst tldrawHtmlComment = text.match(/<div data-tldraw[^>]*>(.*)<\\/div>/)?.[1]\n\n\t\t\t\t\t\t\tif (tldrawHtmlComment) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t// First try parsing as plain JSON (version 2/3 formats)\n\t\t\t\t\t\t\t\t\tlet json\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tjson = JSON.parse(tldrawHtmlComment)\n\t\t\t\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\t\t\t\t// Fall back to LZ decompression (legacy format)\n\t\t\t\t\t\t\t\t\t\tconst jsonComment = lz.decompressFromBase64(tldrawHtmlComment)\n\t\t\t\t\t\t\t\t\t\tif (jsonComment === null) {\n\t\t\t\t\t\t\t\t\t\t\tr({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\t\t\t\t\tdata: null,\n\t\t\t\t\t\t\t\t\t\t\t\treason: `found tldraw data comment but could not parse`,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tjson = JSON.parse(jsonComment)\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (json.type !== 'application/tldraw') {\n\t\t\t\t\t\t\t\t\t\tr({\n\t\t\t\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\t\t\t\tdata: json,\n\t\t\t\t\t\t\t\t\t\t\treason: `found tldraw data comment but JSON was of a different type: ${json.type}`,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle versioned clipboard format\n\t\t\t\t\t\t\t\t\tif (json.version === 3) {\n\t\t\t\t\t\t\t\t\t\t// Version 3: Assets are plain, decompress only other data\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tconst otherData = JSON.parse(\n\t\t\t\t\t\t\t\t\t\t\t\tlz.decompressFromBase64(json.data.otherCompressed) || '{}'\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\tconst reconstructedData = {\n\t\t\t\t\t\t\t\t\t\t\t\tassets: json.data.assets || [],\n\t\t\t\t\t\t\t\t\t\t\t\t...otherData,\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tr({ type: 'tldraw', data: reconstructedData })\n\t\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\t\t\tr({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\t\t\t\t\tdata: json,\n\t\t\t\t\t\t\t\t\t\t\t\treason: `failed to decompress version 2 clipboard data: ${error}`,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (json.version === 2) {\n\t\t\t\t\t\t\t\t\t\t// Version 2: Everything is plain, this had issues with encoding... :-/\n\t\t\t\t\t\t\t\t\t\t// TODO: nix this support after some time.\n\t\t\t\t\t\t\t\t\t\tr({ type: 'tldraw', data: json.data })\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// Version 1 or no version: Legacy format\n\t\t\t\t\t\t\t\t\t\tif (typeof json.data === 'string') {\n\t\t\t\t\t\t\t\t\t\t\tr({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\t\t\t\t\tdata: json,\n\t\t\t\t\t\t\t\t\t\t\t\treason:\n\t\t\t\t\t\t\t\t\t\t\t\t\t'found tldraw json but data was a string instead of a TLClipboardModel object',\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tr({ type: 'tldraw', data: json.data })\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\t\t\tr({\n\t\t\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\t\t\tdata: tldrawHtmlComment,\n\t\t\t\t\t\t\t\t\t\treason:\n\t\t\t\t\t\t\t\t\t\t\t'found tldraw json but data was a string instead of a TLClipboardModel object',\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (thing.type === 'html') {\n\t\t\t\t\t\t\t\t\tr({ type: 'text', data: text, subtype: 'html' })\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (thing.type === 'url') {\n\t\t\t\t\t\t\t\t\tr({ type: 'text', data: text, subtype: 'url' })\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// if we have not found a tldraw comment, Otherwise, try to parse the text as JSON directly.\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst json = JSON.parse(text)\n\t\t\t\t\t\t\t\t\tif (json.type === 'excalidraw/clipboard') {\n\t\t\t\t\t\t\t\t\t\t// If the clipboard contains content copied from excalidraw, then paste that\n\t\t\t\t\t\t\t\t\t\tr({ type: 'excalidraw', data: json })\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tr({ type: 'text', data: text, subtype: 'json' })\n\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\t\t\t// If we could not parse the text as JSON, then it's just text\n\t\t\t\t\t\t\t\t\tr({ type: 'text', data: text, subtype: 'text' })\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tr({ type: 'error', data: text, reason: 'unhandled case' })\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t)\n\t)\n\n\t// 3.\n\t//\n\t// Now that we know what kind of stuff we're dealing with, we can actual create some content.\n\t// There are priorities here, so order matters: we've already handled images and files, which\n\t// take first priority; then we want to handle tldraw content, then excalidraw content, then\n\t// html content, then links, and finally text content.\n\n\t// Try to paste tldraw content\n\tfor (const result of results) {\n\t\tif (result.type === 'tldraw') {\n\t\t\teditor.markHistoryStoppingPoint('paste')\n\t\t\teditor.putExternalContent({ type: 'tldraw', content: result.data, point })\n\t\t\treturn\n\t\t}\n\t}\n\n\t// Try to paste excalidraw content\n\tfor (const result of results) {\n\t\tif (result.type === 'excalidraw') {\n\t\t\teditor.markHistoryStoppingPoint('paste')\n\t\t\teditor.putExternalContent({ type: 'excalidraw', content: result.data, point })\n\t\t\treturn\n\t\t}\n\t}\n\n\t// Try to paste html content\n\tfor (const result of results) {\n\t\tif (result.type === 'text' && result.subtype === 'html') {\n\t\t\t// try to find a link\n\t\t\tconst rootNode = new DOMParser().parseFromString(result.data, 'text/html')\n\t\t\tconst bodyNode = rootNode.querySelector('body')\n\n\t\t\t// Edge on Windows 11 home appears to paste a link as a single <a/> in\n\t\t\t// the HTML document. If we're pasting a single like tag we'll just\n\t\t\t// assume the user meant to paste the URL.\n\t\t\tconst isHtmlSingleLink =\n\t\t\t\tbodyNode &&\n\t\t\t\tArray.from(bodyNode.children).filter((el) => el.nodeType === 1).length === 1 &&\n\t\t\t\tbodyNode.firstElementChild &&\n\t\t\t\tbodyNode.firstElementChild.tagName === 'A' &&\n\t\t\t\tbodyNode.firstElementChild.hasAttribute('href') &&\n\t\t\t\tbodyNode.firstElementChild.getAttribute('href') !== ''\n\n\t\t\tif (isHtmlSingleLink) {\n\t\t\t\tconst href = bodyNode.firstElementChild.getAttribute('href')!\n\t\t\t\thandleText(editor, href, point, results)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// If the html is NOT a link, and we have NO OTHER texty content, then paste the html as text\n\t\t\tif (!results.some((r) => r.type === 'text' && r.subtype !== 'html') && result.data.trim()) {\n\t\t\t\tconst html = stripHtml(result.data) ?? ''\n\t\t\t\tif (html) {\n\t\t\t\t\thandleText(editor, stripHtml(result.data), point, results)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the html is NOT a link, and we have other texty content, then paste the html as a text shape\n\t\t\tif (results.some((r) => r.type === 'text' && r.subtype !== 'html')) {\n\t\t\t\tconst html = stripHtml(result.data) ?? ''\n\t\t\t\tif (html) {\n\t\t\t\t\teditor.markHistoryStoppingPoint('paste')\n\t\t\t\t\teditor.putExternalContent({\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\ttext: html,\n\t\t\t\t\t\thtml: result.data,\n\t\t\t\t\t\tpoint,\n\t\t\t\t\t\tsources: results,\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Allow you to paste YouTube or Google Maps embeds, for example.\n\t\tif (result.type === 'text' && result.subtype === 'text' && result.data.startsWith('<iframe ')) {\n\t\t\t// try to find an iframe\n\t\t\tconst rootNode = new DOMParser().parseFromString(result.data, 'text/html')\n\t\t\tconst bodyNode = rootNode.querySelector('body')\n\n\t\t\tconst isSingleIframe =\n\t\t\t\tbodyNode &&\n\t\t\t\tArray.from(bodyNode.children).filter((el) => el.nodeType === 1).length === 1 &&\n\t\t\t\tbodyNode.firstElementChild &&\n\t\t\t\tbodyNode.firstElementChild.tagName === 'IFRAME' &&\n\t\t\t\tbodyNode.firstElementChild.hasAttribute('src') &&\n\t\t\t\tbodyNode.firstElementChild.getAttribute('src') !== ''\n\n\t\t\tif (isSingleIframe) {\n\t\t\t\tconst src = bodyNode.firstElementChild.getAttribute('src')!\n\t\t\t\thandleText(editor, src, point, results)\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\t// Try to paste a link\n\tfor (const result of results) {\n\t\tif (result.type === 'text' && result.subtype === 'url') {\n\t\t\tpasteUrl(editor, result.data, point, results)\n\t\t\treturn\n\t\t}\n\t}\n\n\t// Finally, if we haven't bailed on anything yet, we can paste text content\n\tfor (const result of results) {\n\t\tif (result.type === 'text' && result.subtype === 'text' && result.data.trim()) {\n\t\t\t// The clipboard may include multiple text items, but we only want to paste the first one\n\t\t\thandleText(editor, result.data, point, results)\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * When the user copies, write the contents to local storage and to the clipboard\n *\n * @param editor - The editor instance.\n * @public\n */\nconst handleNativeOrMenuCopy = async (editor: Editor) => {\n\tconst content = await editor.resolveAssetsInContent(\n\t\teditor.getContentFromCurrentPage(editor.getSelectedShapeIds())\n\t)\n\tif (!content) {\n\t\tif (navigator && navigator.clipboard) {\n\t\t\tnavigator.clipboard.writeText('')\n\t\t}\n\t\treturn\n\t}\n\n\t// Use versioned clipboard format for better compression\n\t// Version 3: Don't compress assets, only compress other data\n\tconst { assets, ...otherData } = content\n\tconst clipboardData = {\n\t\ttype: 'application/tldraw',\n\t\tkind: 'content',\n\t\tversion: 3,\n\t\tdata: {\n\t\t\tassets: assets || [], // Plain JSON, no compression\n\t\t\totherCompressed: lz.compressToBase64(JSON.stringify(otherData)), // Only compress non-asset data\n\t\t},\n\t}\n\n\t// Don't compress the final structure - just use plain JSON\n\tconst stringifiedClipboard = JSON.stringify(clipboardData)\n\n\tif (typeof navigator === 'undefined') {\n\t\treturn\n\t} else {\n\t\t// Extract the text from the clipboard\n\t\tconst textItems = content.shapes\n\t\t\t.map((shape) => {\n\t\t\t\tconst util = editor.getShapeUtil(shape)\n\t\t\t\treturn util.getText(shape)\n\t\t\t})\n\t\t\t.filter(isDefined)\n\n\t\tif (navigator.clipboard?.write) {\n\t\t\tconst htmlBlob = new Blob([`<div data-tldraw>${stringifiedClipboard}</div>`], {\n\t\t\t\ttype: 'text/html',\n\t\t\t})\n\n\t\t\tlet textContent = textItems.join(' ')\n\n\t\t\t// This is a bug in chrome android where it won't paste content if\n\t\t\t// the text/plain content is \"\" so we need to always add an empty\n\t\t\t// space ðŸ¤¬\n\t\t\tif (textContent === '') {\n\t\t\t\ttextContent = ' '\n\t\t\t}\n\n\t\t\tnavigator.clipboard.write([\n\t\t\t\tnew ClipboardItem({\n\t\t\t\t\t'text/html': htmlBlob,\n\t\t\t\t\t// What is this second blob used for?\n\t\t\t\t\t'text/plain': new Blob([textContent], { type: 'text/plain' }),\n\t\t\t\t}),\n\t\t\t])\n\t\t} else if (navigator.clipboard.writeText) {\n\t\t\tnavigator.clipboard.writeText(`<div data-tldraw>${stringifiedClipboard}</div>`)\n\t\t}\n\t}\n}\n\n/** @public */\nexport function useMenuClipboardEvents() {\n\tconst editor = useMaybeEditor()\n\tconst trackEvent = useUiEvents()\n\n\tconst copy = useCallback(\n\t\tasync function onCopy(source: TLUiEventSource) {\n\t\t\tassert(editor, 'editor is required for copy')\n\t\t\tif (editor.getSelectedShapeIds().length === 0) return\n\n\t\t\tawait handleNativeOrMenuCopy(editor)\n\t\t\ttrackEvent('copy', { source })\n\t\t},\n\t\t[editor, trackEvent]\n\t)\n\n\tconst cut = useCallback(\n\t\tasync function onCut(source: TLUiEventSource) {\n\t\t\tif (!editor) return\n\t\t\tif (editor.getSelectedShapeIds().length === 0) return\n\n\t\t\tawait handleNativeOrMenuCopy(editor)\n\t\t\teditor.deleteShapes(editor.getSelectedShapeIds())\n\t\t\ttrackEvent('cut', { source })\n\t\t},\n\t\t[editor, trackEvent]\n\t)\n\n\tconst paste = useCallback(\n\t\tasync function onPaste(\n\t\t\tdata: DataTransfer | ClipboardItem[],\n\t\t\tsource: TLUiEventSource,\n\t\t\tpoint?: VecLike\n\t\t) {\n\t\t\tif (!editor) return\n\t\t\t// If we're editing a shape, or we are focusing an editable input, then\n\t\t\t// we would want the user's paste interaction to go to that element or\n\t\t\t// input instead; e.g. when pasting text into a text shape's content\n\t\t\tif (editor.getEditingShapeId() !== null) return\n\n\t\t\tif (Array.isArray(data) && data[0] instanceof ClipboardItem) {\n\t\t\t\thandlePasteFromClipboardApi({ editor, clipboardItems: data, point })\n\t\t\t\ttrackEvent('paste', { source: 'menu' })\n\t\t\t} else {\n\t\t\t\t// Read it first and then recurse, kind of weird\n\t\t\t\tnavigator.clipboard.read().then((clipboardItems) => {\n\t\t\t\t\tpaste(clipboardItems, source, point)\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\t[editor, trackEvent]\n\t)\n\n\treturn {\n\t\tcopy,\n\t\tcut,\n\t\tpaste,\n\t}\n}\n\n/** @public */\nexport function useNativeClipboardEvents() {\n\tconst editor = useEditor()\n\tconst trackEvent = useUiEvents()\n\n\tconst appIsFocused = useValue('editor.isFocused', () => editor.getInstanceState().isFocused, [\n\t\teditor,\n\t])\n\n\tuseEffect(() => {\n\t\tif (!appIsFocused) return\n\t\tconst copy = async (e: ClipboardEvent) => {\n\t\t\tif (\n\t\t\t\teditor.getSelectedShapeIds().length === 0 ||\n\t\t\t\teditor.getEditingShapeId() !== null ||\n\t\t\t\tareShortcutsDisabled(editor)\n\t\t\t) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreventDefault(e)\n\t\t\tawait handleNativeOrMenuCopy(editor)\n\t\t\ttrackEvent('copy', { source: 'kbd' })\n\t\t}\n\n\t\tasync function cut(e: ClipboardEvent) {\n\t\t\tif (\n\t\t\t\teditor.getSelectedShapeIds().length === 0 ||\n\t\t\t\teditor.getEditingShapeId() !== null ||\n\t\t\t\tareShortcutsDisabled(editor)\n\t\t\t) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tpreventDefault(e)\n\t\t\tawait handleNativeOrMenuCopy(editor)\n\t\t\teditor.deleteShapes(editor.getSelectedShapeIds())\n\t\t\ttrackEvent('cut', { source: 'kbd' })\n\t\t}\n\n\t\tlet disablingMiddleClickPaste = false\n\t\tconst pointerUpHandler = (e: PointerEvent) => {\n\t\t\tif (e.button === 1) {\n\t\t\t\t// middle mouse button\n\t\t\t\tdisablingMiddleClickPaste = true\n\t\t\t\teditor.timers.requestAnimationFrame(() => {\n\t\t\t\t\tdisablingMiddleClickPaste = false\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tconst paste = (e: ClipboardEvent) => {\n\t\t\tif (disablingMiddleClickPaste) {\n\t\t\t\tstopEventPropagation(e)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// If we're editing a shape, or we are focusing an editable input, then\n\t\t\t// we would want the user's paste interaction to go to that element or\n\t\t\t// input instead; e.g. when pasting text into a text shape's content\n\t\t\tif (editor.getEditingShapeId() !== null || areShortcutsDisabled(editor)) return\n\n\t\t\t// Where should the shapes go?\n\t\t\tlet point: Vec | undefined = undefined\n\t\t\tlet pasteAtCursor = false\n\n\t\t\t// | Shiftkey | Paste at cursor mode | Paste at point? |\n\t\t\t// |    N \t\t|         N            |       N \t\t\t\t |\n\t\t\t// |    Y \t\t|         N            |       Y \t\t\t\t |\n\t\t\t// |    N \t\t|         Y            |       Y \t\t\t\t |\n\t\t\t// |    Y \t\t|         Y            |       N \t\t\t\t |\n\t\t\tif (editor.inputs.shiftKey) pasteAtCursor = true\n\t\t\tif (editor.user.getIsPasteAtCursorMode()) pasteAtCursor = !pasteAtCursor\n\t\t\tif (pasteAtCursor) point = editor.inputs.currentPagePoint\n\n\t\t\tconst pasteFromEvent = () => {\n\t\t\t\tif (e.clipboardData) {\n\t\t\t\t\thandlePasteFromEventClipboardData(editor, e.clipboardData, point)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if we can read from the clipboard API, we want to try using that first. that allows\n\t\t\t// us to access most things, and doesn't strip out metadata added to tldraw's own\n\t\t\t// copy-as-png features - so copied shapes come back in at the correct size.\n\t\t\tif (navigator.clipboard?.read) {\n\t\t\t\t// We can't read files from the filesystem using the clipboard API though - they'll\n\t\t\t\t// just come in as the file names instead. So we'll use the clipboard event's files\n\t\t\t\t// as a fallback - if we only got text, but do have files, we use those instead.\n\t\t\t\tconst fallbackFiles = Array.from(e.clipboardData?.files || [])\n\t\t\t\tnavigator.clipboard.read().then(\n\t\t\t\t\t(clipboardItems) => {\n\t\t\t\t\t\tif (Array.isArray(clipboardItems) && clipboardItems[0] instanceof ClipboardItem) {\n\t\t\t\t\t\t\thandlePasteFromClipboardApi({ editor, clipboardItems, point, fallbackFiles })\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\t// if reading from the clipboard fails, try to use the event clipboard data\n\t\t\t\t\t\tpasteFromEvent()\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tpasteFromEvent()\n\t\t\t}\n\n\t\t\tpreventDefault(e)\n\t\t\ttrackEvent('paste', { source: 'kbd' })\n\t\t}\n\n\t\tdocument.addEventListener('copy', copy)\n\t\tdocument.addEventListener('cut', cut)\n\t\tdocument.addEventListener('paste', paste)\n\t\tdocument.addEventListener('pointerup', pointerUpHandler)\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('copy', copy)\n\t\t\tdocument.removeEventListener('cut', cut)\n\t\t\tdocument.removeEventListener('paste', paste)\n\t\t\tdocument.removeEventListener('pointerup', pointerUpHandler)\n\t\t}\n\t}, [editor, trackEvent, appIsFocused])\n}\n"],"names":["url"],"mappings":";;;;;AAAA;;;;;;;;;AAgBA,OAAO,QAAQ;AACf,SAAS,aAAa,iBAAiB;AACvC,SAAS,6BAA6B,qCAAqC;AAC3E,SAA0B,mBAAmB;AAC7C,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;;;;;;;;AAKzB,MAAM,6BAA6B;2KAClC,8BAAA;IACA;IACA;IACA;IACA;CACD;AAOA,SAAS,UAAU,IAAA,EAAc;IAEhC,MAAM,MAAM,SAAS,cAAA,CAAe,kBAAA,CAAmB,EAAE;IACzD,IAAI,eAAA,CAAgB,SAAA,GAAY,KAAK,IAAA,CAAK;IAC1C,OAAO,IAAI,IAAA,CAAK,WAAA,IAAe,IAAI,IAAA,CAAK,SAAA,IAAa;AACtD;AAGO,MAAM,iBAAiB,CAAC,QAAgB;IAC9C,IAAI;QACH,MAAM,IAAI,IAAI,IAAI,GAAG;QACrB,OAAO,EAAE,QAAA,KAAa,WAAW,EAAE,QAAA,KAAa;IACjD,EAAA,OAAQ;QACP,OAAO;IACR;AACD;AAGA,MAAM,sBAAsB,CAAC,QAAgB;IAC5C,MAAM,OAAO,IAAI,KAAA,CAAM,QAAQ;IAC/B,KAAA,MAAWA,QAAO,KAAM;QACvB,IAAI;YACH,MAAM,IAAI,IAAI,IAAIA,IAAG;YACrB,IAAI,CAAA,CAAE,EAAE,QAAA,KAAa,WAAW,EAAE,QAAA,KAAa,QAAA,GAAW;gBACzD;YACD;QACD,EAAA,OAAQ;YACP;QACD;IACD;IACA,QAAO,wLAAA,EAAK,IAAI;AACjB;AAGA,MAAM,YAAY,CAAC,SAAiB;IACnC,OAAO,QAAQ,IAAA,CAAK,IAAI;AACzB;AAEA,MAAM,SAAS;IAAC;IAAS;IAAU,UAAU;CAAA;AAO7C,SAAS,qBAAqB,MAAA,EAAgB;IAC7C,MAAM,EAAE,aAAA,CAAc,CAAA,GAAI;IAE1B,OACC,OAAO,KAAA,CAAM,eAAA,CAAgB,KAC5B,iBAAA,CACE,cAA8B,iBAAA,IAC/B,OAAO,OAAA,CAAQ,cAAc,OAAA,CAAQ,WAAA,CAAY,CAAC,IAAI,CAAA,CAAA;AAE1D;AASA,MAAM,aAAa,CAClB,QACA,MACA,OACA,YACI;IACJ,MAAM,eAAe,oBAAoB,IAAI;IAC7C,IAAI,cAAc;QACjB,KAAA,MAAW,OAAO,aAAc;YAC/B,CAAA,GAAA,wLAAA,CAAA,WAAA,EAAS,QAAQ,KAAK,KAAK;QAC5B;IACD,OAAA,IAAW,eAAe,IAAI,GAAG;QAChC,CAAA,GAAA,wLAAA,CAAA,WAAA,EAAS,QAAQ,MAAM,KAAK;IAC7B,OAAA,IAAW,UAAU,IAAI,GAAG;QAC3B,OAAO,wBAAA,CAAyB,OAAO;QACvC,OAAO,kBAAA,CAAmB;YACzB,MAAM;YACN,MAAM;YACN;YACA;QACD,CAAC;IACF,OAAO;QACN,OAAO,wBAAA,CAAyB,OAAO;QACvC,OAAO,kBAAA,CAAmB;YACzB,MAAM;YACN,MAAM;YACN;YACA;QACD,CAAC;IACF;AACD;AA0CA,MAAM,oCAAoC,OACzC,QACA,eACA,UACI;IAEJ,IAAI,OAAO,iBAAA,CAAkB,MAAM,KAAM,CAAA;IAEzC,IAAI,CAAC,eAAe;QACnB,MAAM,MAAM,mBAAmB;IAChC;IAEA,MAAM,SAA2B,CAAC,CAAA;IAElC,KAAA,MAAW,QAAQ,OAAO,MAAA,CAAO,cAAc,KAAK,EAAG;QACtD,OAAQ,KAAK,IAAA,EAAM;YAClB,KAAK;gBAAQ;oBAEZ,OAAO,IAAA,CAAK;wBACX,MAAM;wBACN,QAAQ,IAAI,QAAQ,CAAC,IAAM,EAAE,KAAK,SAAA,CAAU,CAAC,CAAC;oBAC/C,CAAC;oBACD;gBACD;YACA,KAAK;gBAAU;oBAEd,IAAI,KAAK,IAAA,KAAS,aAAa;wBAC9B,OAAO,IAAA,CAAK;4BACX,MAAM;4BACN,QAAQ,IAAI,QAAQ,CAAC,IAAM,KAAK,WAAA,CAAY,CAAC,CAAC;wBAC/C,CAAC;oBACF,OAAA,IAAW,KAAK,IAAA,KAAS,cAAc;wBACtC,OAAO,IAAA,CAAK;4BACX,MAAM;4BACN,QAAQ,IAAI,QAAQ,CAAC,IAAM,KAAK,WAAA,CAAY,CAAC,CAAC;wBAC/C,CAAC;oBACF,OAAO;wBACN,OAAO,IAAA,CAAK;4BAAE,MAAM,KAAK,IAAA;4BAAM,QAAQ,IAAI,QAAQ,CAAC,IAAM,KAAK,WAAA,CAAY,CAAC,CAAC;wBAAE,CAAC;oBACjF;oBACA;gBACD;QACD;IACD;IAEA,sBAAsB,QAAQ,QAAQ,KAAK;AAC5C;AAWA,MAAM,8BAA8B,OAAO,EAC1C,MAAA,EACA,cAAA,EACA,KAAA,EACA,aAAA,EACD,KAKM;IAML,MAAM,SAA2B,CAAC,CAAA;IAElC,KAAA,MAAW,QAAQ,eAAgB;QAClC,KAAA,MAAW,QAAQ,2BAA4B;YAC9C,IAAI,KAAK,KAAA,CAAM,QAAA,CAAS,IAAI,GAAG;gBAC9B,MAAM,cAAc,KAClB,OAAA,CAAQ,IAAI,EACZ,IAAA,CAAK,CAAC,2KAAS,cAAA,CAAY,eAAA,CAAgB,MAAM,2MAAA,EAA8B,IAAI,CAAC,CAAC;gBACvF,OAAO,IAAA,CAAK;oBACX,MAAM;oBACN,QAAQ;gBACT,CAAC;gBACD;YACD;QACD;QAEA,IAAI,KAAK,KAAA,CAAM,QAAA,CAAS,WAAW,GAAG;YACrC,OAAO,IAAA,CAAK;gBACX,MAAM;gBACN,QAAA,CAAS,YAAY;oBACpB,MAAM,OAAO,MAAM,KAAK,OAAA,CAAQ,WAAW;oBAC3C,OAAO,0KAAM,cAAA,CAAY,UAAA,CAAW,IAAI;gBACzC,CAAA,EAAG;YACJ,CAAC;QACF;QAEA,IAAI,KAAK,KAAA,CAAM,QAAA,CAAS,eAAe,GAAG;YACzC,OAAO,IAAA,CAAK;gBACX,MAAM;gBACN,QAAA,CAAS,YAAY;oBACpB,MAAM,OAAO,MAAM,KAAK,OAAA,CAAQ,eAAe;oBAC/C,OAAO,0KAAM,cAAA,CAAY,UAAA,CAAW,IAAI;gBACzC,CAAA,EAAG;YACJ,CAAC;QACF;QAEA,IAAI,KAAK,KAAA,CAAM,QAAA,CAAS,YAAY,GAAG;YACtC,OAAO,IAAA,CAAK;gBACX,MAAM;gBACN,QAAA,CAAS,YAAY;oBACpB,MAAM,OAAO,MAAM,KAAK,OAAA,CAAQ,YAAY;oBAC5C,OAAO,0KAAM,cAAA,CAAY,UAAA,CAAW,IAAI;gBACzC,CAAA,EAAG;YACJ,CAAC;QACF;IACD;IAEA,IAAI,eAAe,UAAU,OAAO,MAAA,KAAW,KAAK,MAAA,CAAO,CAAC,CAAA,CAAE,IAAA,KAAS,QAAQ;QAC9E,OAAO,GAAA,CAAI;QACX,OAAO,IAAA,IACH,cAAc,GAAA,CAAI,CAAC,IAAA,CAAuB;gBAAE,MAAM;gBAAQ,QAAQ,QAAQ,OAAA,CAAQ,CAAC;YAAE,CAAA,CAAE;IAE5F,OAAA,IAAW,eAAe,UAAU,OAAO,MAAA,KAAW,GAAG;QAIxD,OAAO,IAAA,IACH,cAAc,GAAA,CAAI,CAAC,IAAA,CAAuB;gBAAE,MAAM;gBAAQ,QAAQ,QAAQ,OAAA,CAAQ,CAAC;YAAE,CAAA,CAAE;IAE5F;IAEA,OAAO,MAAM,sBAAsB,QAAQ,QAAQ,KAAK;AACzD;AAEA,eAAe,sBAAsB,MAAA,EAAgB,MAAA,EAA0B,KAAA,EAAiB;IAM/F,MAAM,QAAQ,OAAO,MAAA,CACpB,CAAC,IAAA,CAAO,EAAE,IAAA,KAAS,UAAU,EAAE,IAAA,KAAS,MAAA,KAAW,EAAE,MAAA,KAAW;IAIjE,IAAI,MAAM,MAAA,EAAQ;QACjB,IAAI,MAAM,MAAA,GAAS,OAAO,OAAA,CAAQ,cAAA,EAAgB;YACjD,MAAM,MAAM,gBAAgB;QAC7B;QACA,MAAM,aAAY,kLAAA,EAAQ,MAAM,QAAQ,GAAA,CAAI,MAAM,GAAA,CAAI,CAAC,IAAM,EAAE,MAAM,CAAC,CAAC;QACvE,OAAO,qMAAM,aAAA,EAAW,QAAQ,WAAW,KAAK;IACjD;IAQA,MAAM,UAAU,MAAM,QAAQ,GAAA,CAC7B,OACE,MAAA,CAAO,CAAC,IAAM,EAAE,IAAA,KAAS,MAAM,EAC/B,GAAA,CACA,CAAC,IACA,IAAI,QAAQ,CAAC,MAAM;YAClB,MAAM,QAAQ;YAEd,IAAI,MAAM,IAAA,KAAS,QAAQ;gBAC1B,EAAE;oBAAE,MAAM;oBAAS,MAAM;oBAAM,QAAQ;gBAAkB,CAAC;gBAC1D;YACD;YAEA,MAAM,MAAA,CAAO,IAAA,CAAK,CAAC,SAAS;gBAE3B,MAAM,oBAAoB,KAAK,KAAA,CAAM,mCAAmC,GAAA,CAAI,CAAC,CAAA;gBAE7E,IAAI,mBAAmB;oBACtB,IAAI;wBAEH,IAAI;wBACJ,IAAI;4BACH,OAAO,KAAK,KAAA,CAAM,iBAAiB;wBACpC,EAAA,OAAQ;4BAEP,MAAM,sKAAc,UAAA,CAAG,oBAAA,CAAqB,iBAAiB;4BAC7D,IAAI,gBAAgB,MAAM;gCACzB,EAAE;oCACD,MAAM;oCACN,MAAM;oCACN,QAAQ,CAAA,6CAAA,CAAA;gCACT,CAAC;gCACD;4BACD;4BACA,OAAO,KAAK,KAAA,CAAM,WAAW;wBAC9B;wBAEA,IAAI,KAAK,IAAA,KAAS,sBAAsB;4BACvC,EAAE;gCACD,MAAM;gCACN,MAAM;gCACN,QAAQ,CAAA,4DAAA,EAA+D,KAAK,IAAI,EAAA;4BACjF,CAAC;4BACD;wBACD;wBAGA,IAAI,KAAK,OAAA,KAAY,GAAG;4BAEvB,IAAI;gCACH,MAAM,YAAY,KAAK,KAAA,CACtB,kKAAA,CAAG,oBAAA,CAAqB,KAAK,IAAA,CAAK,eAAe,KAAK;gCAEvD,MAAM,oBAAoB;oCACzB,QAAQ,KAAK,IAAA,CAAK,MAAA,IAAU,CAAC,CAAA;oCAC7B,GAAG,SAAA;gCACJ;gCAEA,EAAE;oCAAE,MAAM;oCAAU,MAAM;gCAAkB,CAAC;gCAC7C;4BACD,EAAA,OAAS,OAAO;gCACf,EAAE;oCACD,MAAM;oCACN,MAAM;oCACN,QAAQ,CAAA,+CAAA,EAAkD,KAAK,EAAA;gCAChE,CAAC;gCACD;4BACD;wBACD;wBACA,IAAI,KAAK,OAAA,KAAY,GAAG;4BAGvB,EAAE;gCAAE,MAAM;gCAAU,MAAM,KAAK,IAAA;4BAAK,CAAC;wBACtC,OAAO;4BAEN,IAAI,OAAO,KAAK,IAAA,KAAS,UAAU;gCAClC,EAAE;oCACD,MAAM;oCACN,MAAM;oCACN,QACC;gCACF,CAAC;gCACD;4BACD;4BAEA,EAAE;gCAAE,MAAM;gCAAU,MAAM,KAAK,IAAA;4BAAK,CAAC;4BACrC;wBACD;oBACD,EAAA,OAAQ;wBACP,EAAE;4BACD,MAAM;4BACN,MAAM;4BACN,QACC;wBACF,CAAC;wBACD;oBACD;gBACD,OAAO;oBACN,IAAI,MAAM,IAAA,KAAS,QAAQ;wBAC1B,EAAE;4BAAE,MAAM;4BAAQ,MAAM;4BAAM,SAAS;wBAAO,CAAC;wBAC/C;oBACD;oBAEA,IAAI,MAAM,IAAA,KAAS,OAAO;wBACzB,EAAE;4BAAE,MAAM;4BAAQ,MAAM;4BAAM,SAAS;wBAAM,CAAC;wBAC9C;oBACD;oBAGA,IAAI;wBACH,MAAM,OAAO,KAAK,KAAA,CAAM,IAAI;wBAC5B,IAAI,KAAK,IAAA,KAAS,wBAAwB;4BAEzC,EAAE;gCAAE,MAAM;gCAAc,MAAM;4BAAK,CAAC;4BACpC;wBACD,OAAO;4BACN,EAAE;gCAAE,MAAM;gCAAQ,MAAM;gCAAM,SAAS;4BAAO,CAAC;4BAC/C;wBACD;oBACD,EAAA,OAAQ;wBAEP,EAAE;4BAAE,MAAM;4BAAQ,MAAM;4BAAM,SAAS;wBAAO,CAAC;wBAC/C;oBACD;gBACD;gBAEA,EAAE;oBAAE,MAAM;oBAAS,MAAM;oBAAM,QAAQ;gBAAiB,CAAC;YAC1D,CAAC;QACF,CAAC;IAYL,KAAA,MAAW,UAAU,QAAS;QAC7B,IAAI,OAAO,IAAA,KAAS,UAAU;YAC7B,OAAO,wBAAA,CAAyB,OAAO;YACvC,OAAO,kBAAA,CAAmB;gBAAE,MAAM;gBAAU,SAAS,OAAO,IAAA;gBAAM;YAAM,CAAC;YACzE;QACD;IACD;IAGA,KAAA,MAAW,UAAU,QAAS;QAC7B,IAAI,OAAO,IAAA,KAAS,cAAc;YACjC,OAAO,wBAAA,CAAyB,OAAO;YACvC,OAAO,kBAAA,CAAmB;gBAAE,MAAM;gBAAc,SAAS,OAAO,IAAA;gBAAM;YAAM,CAAC;YAC7E;QACD;IACD;IAGA,KAAA,MAAW,UAAU,QAAS;QAC7B,IAAI,OAAO,IAAA,KAAS,UAAU,OAAO,OAAA,KAAY,QAAQ;YAExD,MAAM,WAAW,IAAI,UAAU,EAAE,eAAA,CAAgB,OAAO,IAAA,EAAM,WAAW;YACzE,MAAM,WAAW,SAAS,aAAA,CAAc,MAAM;YAK9C,MAAM,mBACL,YACA,MAAM,IAAA,CAAK,SAAS,QAAQ,EAAE,MAAA,CAAO,CAAC,KAAO,GAAG,QAAA,KAAa,CAAC,EAAE,MAAA,KAAW,KAC3E,SAAS,iBAAA,IACT,SAAS,iBAAA,CAAkB,OAAA,KAAY,OACvC,SAAS,iBAAA,CAAkB,YAAA,CAAa,MAAM,KAC9C,SAAS,iBAAA,CAAkB,YAAA,CAAa,MAAM,MAAM;YAErD,IAAI,kBAAkB;gBACrB,MAAM,OAAO,SAAS,iBAAA,CAAkB,YAAA,CAAa,MAAM;gBAC3D,WAAW,QAAQ,MAAM,OAAO,OAAO;gBACvC;YACD;YAGA,IAAI,CAAC,QAAQ,IAAA,CAAK,CAAC,IAAM,EAAE,IAAA,KAAS,UAAU,EAAE,OAAA,KAAY,MAAM,KAAK,OAAO,IAAA,CAAK,IAAA,CAAK,GAAG;gBAC1F,MAAM,OAAO,UAAU,OAAO,IAAI,KAAK;gBACvC,IAAI,MAAM;oBACT,WAAW,QAAQ,UAAU,OAAO,IAAI,GAAG,OAAO,OAAO;oBACzD;gBACD;YACD;YAGA,IAAI,QAAQ,IAAA,CAAK,CAAC,IAAM,EAAE,IAAA,KAAS,UAAU,EAAE,OAAA,KAAY,MAAM,GAAG;gBACnE,MAAM,OAAO,UAAU,OAAO,IAAI,KAAK;gBACvC,IAAI,MAAM;oBACT,OAAO,wBAAA,CAAyB,OAAO;oBACvC,OAAO,kBAAA,CAAmB;wBACzB,MAAM;wBACN,MAAM;wBACN,MAAM,OAAO,IAAA;wBACb;wBACA,SAAS;oBACV,CAAC;oBACD;gBACD;YACD;QACD;QAGA,IAAI,OAAO,IAAA,KAAS,UAAU,OAAO,OAAA,KAAY,UAAU,OAAO,IAAA,CAAK,UAAA,CAAW,UAAU,GAAG;YAE9F,MAAM,WAAW,IAAI,UAAU,EAAE,eAAA,CAAgB,OAAO,IAAA,EAAM,WAAW;YACzE,MAAM,WAAW,SAAS,aAAA,CAAc,MAAM;YAE9C,MAAM,iBACL,YACA,MAAM,IAAA,CAAK,SAAS,QAAQ,EAAE,MAAA,CAAO,CAAC,KAAO,GAAG,QAAA,KAAa,CAAC,EAAE,MAAA,KAAW,KAC3E,SAAS,iBAAA,IACT,SAAS,iBAAA,CAAkB,OAAA,KAAY,YACvC,SAAS,iBAAA,CAAkB,YAAA,CAAa,KAAK,KAC7C,SAAS,iBAAA,CAAkB,YAAA,CAAa,KAAK,MAAM;YAEpD,IAAI,gBAAgB;gBACnB,MAAM,MAAM,SAAS,iBAAA,CAAkB,YAAA,CAAa,KAAK;gBACzD,WAAW,QAAQ,KAAK,OAAO,OAAO;gBACtC;YACD;QACD;IACD;IAGA,KAAA,MAAW,UAAU,QAAS;QAC7B,IAAI,OAAO,IAAA,KAAS,UAAU,OAAO,OAAA,KAAY,OAAO;YACvD,CAAA,GAAA,wLAAA,CAAA,WAAA,EAAS,QAAQ,OAAO,IAAA,EAAM,OAAO,OAAO;YAC5C;QACD;IACD;IAGA,KAAA,MAAW,UAAU,QAAS;QAC7B,IAAI,OAAO,IAAA,KAAS,UAAU,OAAO,OAAA,KAAY,UAAU,OAAO,IAAA,CAAK,IAAA,CAAK,GAAG;YAE9E,WAAW,QAAQ,OAAO,IAAA,EAAM,OAAO,OAAO;YAC9C;QACD;IACD;AACD;AAQA,MAAM,yBAAyB,OAAO,WAAmB;IACxD,MAAM,UAAU,MAAM,OAAO,sBAAA,CAC5B,OAAO,yBAAA,CAA0B,OAAO,mBAAA,CAAoB,CAAC;IAE9D,IAAI,CAAC,SAAS;QACb,IAAI,aAAa,UAAU,SAAA,EAAW;YACrC,UAAU,SAAA,CAAU,SAAA,CAAU,EAAE;QACjC;QACA;IACD;IAIA,MAAM,EAAE,MAAA,EAAQ,GAAG,UAAU,CAAA,GAAI;IACjC,MAAM,gBAAgB;QACrB,MAAM;QACN,MAAM;QACN,SAAS;QACT,MAAM;YACL,QAAQ,UAAU,CAAC,CAAA;YAAA,6BAAA;YACnB,yKAAiB,UAAA,CAAG,gBAAA,CAAiB,KAAK,SAAA,CAAU,SAAS,CAAC;QAC/D;IACD;IAGA,MAAM,uBAAuB,KAAK,SAAA,CAAU,aAAa;IAEzD,IAAI,OAAO,cAAc,aAAa;QACrC;IACD,OAAO;QAEN,MAAM,YAAY,QAAQ,MAAA,CACxB,GAAA,CAAI,CAAC,UAAU;YACf,MAAM,OAAO,OAAO,YAAA,CAAa,KAAK;YACtC,OAAO,KAAK,OAAA,CAAQ,KAAK;QAC1B,CAAC,EACA,MAAA,CAAO,iLAAS;QAElB,IAAI,UAAU,SAAA,EAAW,OAAO;YAC/B,MAAM,WAAW,IAAI,KAAK;gBAAC,CAAA,iBAAA,EAAoB,oBAAoB,CAAA,MAAA,CAAQ;aAAA,EAAG;gBAC7E,MAAM;YACP,CAAC;YAED,IAAI,cAAc,UAAU,IAAA,CAAK,GAAG;YAKpC,IAAI,gBAAgB,IAAI;gBACvB,cAAc;YACf;YAEA,UAAU,SAAA,CAAU,KAAA,CAAM;gBACzB,IAAI,cAAc;oBACjB,aAAa;oBAAA,qCAAA;oBAEb,cAAc,IAAI,KAAK;wBAAC,WAAW;qBAAA,EAAG;wBAAE,MAAM;oBAAa,CAAC;gBAC7D,CAAC;aACD;QACF,OAAA,IAAW,UAAU,SAAA,CAAU,SAAA,EAAW;YACzC,UAAU,SAAA,CAAU,SAAA,CAAU,CAAA,iBAAA,EAAoB,oBAAoB,CAAA,MAAA,CAAQ;QAC/E;IACD;AACD;AAGO,SAAS,yBAAyB;IACxC,MAAM,gMAAS,iBAAA,CAAe;IAC9B,MAAM,cAAa,6LAAA,CAAY;IAE/B,MAAM,yKAAO,cAAA,EACZ,eAAe,OAAO,MAAA,EAAyB;QAC9C,CAAA,GAAA,sKAAA,CAAA,SAAA,EAAO,QAAQ,6BAA6B;QAC5C,IAAI,OAAO,mBAAA,CAAoB,EAAE,MAAA,KAAW,EAAG,CAAA;QAE/C,MAAM,uBAAuB,MAAM;QACnC,WAAW,QAAQ;YAAE;QAAO,CAAC;IAC9B,GACA;QAAC;QAAQ,UAAU;KAAA;IAGpB,MAAM,wKAAM,cAAA,EACX,eAAe,MAAM,MAAA,EAAyB;QAC7C,IAAI,CAAC,OAAQ,CAAA;QACb,IAAI,OAAO,mBAAA,CAAoB,EAAE,MAAA,KAAW,EAAG,CAAA;QAE/C,MAAM,uBAAuB,MAAM;QACnC,OAAO,YAAA,CAAa,OAAO,mBAAA,CAAoB,CAAC;QAChD,WAAW,OAAO;YAAE;QAAO,CAAC;IAC7B,GACA;QAAC;QAAQ,UAAU;KAAA;IAGpB,MAAM,0KAAQ,cAAA,EACb,eAAe,QACd,IAAA,EACA,MAAA,EACA,KAAA,EACC;QACD,IAAI,CAAC,OAAQ,CAAA;QAIb,IAAI,OAAO,iBAAA,CAAkB,MAAM,KAAM,CAAA;QAEzC,IAAI,MAAM,OAAA,CAAQ,IAAI,KAAK,IAAA,CAAK,CAAC,CAAA,YAAa,eAAe;YAC5D,4BAA4B;gBAAE;gBAAQ,gBAAgB;gBAAM;YAAM,CAAC;YACnE,WAAW,SAAS;gBAAE,QAAQ;YAAO,CAAC;QACvC,OAAO;YAEN,UAAU,SAAA,CAAU,IAAA,CAAK,EAAE,IAAA;qEAAK,CAAC,mBAAmB;oBACnD,MAAM,gBAAgB,QAAQ,KAAK;gBACpC,CAAC;;QACF;IACD,GACA;QAAC;QAAQ,UAAU;KAAA;IAGpB,OAAO;QACN;QACA;QACA;IACD;AACD;AAGO,SAAS,2BAA2B;IAC1C,MAAM,SAAS,mMAAA,CAAU;IACzB,MAAM,6LAAa,cAAA,CAAY;IAE/B,MAAM,oMAAe,WAAA,EAAS;2DAAoB,IAAM,OAAO,gBAAA,CAAiB,EAAE,SAAA;0DAAW;QAC5F;KACA;IAED,CAAA,GAAA,6JAAA,CAAA,YAAA;8CAAU,MAAM;YACf,IAAI,CAAC,aAAc,CAAA;YACnB,MAAM;2DAAO,OAAO,MAAsB;oBACzC,IACC,OAAO,mBAAA,CAAoB,EAAE,MAAA,KAAW,KACxC,OAAO,iBAAA,CAAkB,MAAM,QAC/B,qBAAqB,MAAM,GAC1B;wBACD;oBACD;oBAEA,CAAA,GAAA,4KAAA,CAAA,iBAAA,EAAe,CAAC;oBAChB,MAAM,uBAAuB,MAAM;oBACnC,WAAW,QAAQ;wBAAE,QAAQ;oBAAM,CAAC;gBACrC;;YAEA,eAAe,IAAI,CAAA,EAAmB;gBACrC,IACC,OAAO,mBAAA,CAAoB,EAAE,MAAA,KAAW,KACxC,OAAO,iBAAA,CAAkB,MAAM,QAC/B,qBAAqB,MAAM,GAC1B;oBACD;gBACD;gBACA,CAAA,GAAA,4KAAA,CAAA,iBAAA,EAAe,CAAC;gBAChB,MAAM,uBAAuB,MAAM;gBACnC,OAAO,YAAA,CAAa,OAAO,mBAAA,CAAoB,CAAC;gBAChD,WAAW,OAAO;oBAAE,QAAQ;gBAAM,CAAC;YACpC;YAEA,IAAI,4BAA4B;YAChC,MAAM;uEAAmB,CAAC,MAAoB;oBAC7C,IAAI,EAAE,MAAA,KAAW,GAAG;wBAEnB,4BAA4B;wBAC5B,OAAO,MAAA,CAAO,qBAAA;mFAAsB,MAAM;gCACzC,4BAA4B;4BAC7B,CAAC;;oBACF;gBACD;;YAEA,MAAM;4DAAQ,CAAC,MAAsB;oBACpC,IAAI,2BAA2B;wBAC9B,CAAA,GAAA,4KAAA,CAAA,uBAAA,EAAqB,CAAC;wBACtB;oBACD;oBAKA,IAAI,OAAO,iBAAA,CAAkB,MAAM,QAAQ,qBAAqB,MAAM,EAAG,CAAA;oBAGzE,IAAI,QAAyB,KAAA;oBAC7B,IAAI,gBAAgB;oBAOpB,IAAI,OAAO,MAAA,CAAO,QAAA,CAAU,CAAA,gBAAgB;oBAC5C,IAAI,OAAO,IAAA,CAAK,sBAAA,CAAuB,EAAG,CAAA,gBAAgB,CAAC;oBAC3D,IAAI,cAAe,CAAA,QAAQ,OAAO,MAAA,CAAO,gBAAA;oBAEzC,MAAM;mFAAiB,MAAM;4BAC5B,IAAI,EAAE,aAAA,EAAe;gCACpB,kCAAkC,QAAQ,EAAE,aAAA,EAAe,KAAK;4BACjE;wBACD;;oBAKA,IAAI,UAAU,SAAA,EAAW,MAAM;wBAI9B,MAAM,gBAAgB,MAAM,IAAA,CAAK,EAAE,aAAA,EAAe,SAAS,CAAC,CAAC;wBAC7D,UAAU,SAAA,CAAU,IAAA,CAAK,EAAE,IAAA;wEAC1B,CAAC,mBAAmB;gCACnB,IAAI,MAAM,OAAA,CAAQ,cAAc,KAAK,cAAA,CAAe,CAAC,CAAA,YAAa,eAAe;oCAChF,4BAA4B;wCAAE;wCAAQ;wCAAgB;wCAAO;oCAAc,CAAC;gCAC7E;4BACD;;wEACA,MAAM;gCAEL,eAAe;4BAChB;;oBAEF,OAAO;wBACN,eAAe;oBAChB;oBAEA,CAAA,GAAA,4KAAA,CAAA,iBAAA,EAAe,CAAC;oBAChB,WAAW,SAAS;wBAAE,QAAQ;oBAAM,CAAC;gBACtC;;YAEA,SAAS,gBAAA,CAAiB,QAAQ,IAAI;YACtC,SAAS,gBAAA,CAAiB,OAAO,GAAG;YACpC,SAAS,gBAAA,CAAiB,SAAS,KAAK;YACxC,SAAS,gBAAA,CAAiB,aAAa,gBAAgB;YAEvD;sDAAO,MAAM;oBACZ,SAAS,mBAAA,CAAoB,QAAQ,IAAI;oBACzC,SAAS,mBAAA,CAAoB,OAAO,GAAG;oBACvC,SAAS,mBAAA,CAAoB,SAAS,KAAK;oBAC3C,SAAS,mBAAA,CAAoB,aAAa,gBAAgB;gBAC3D;;QACD;6CAAG;QAAC;QAAQ;QAAY,YAAY;KAAC;AACtC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1500, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useCopyAs.ts"],"sourcesContent":["import { TLShapeId, assert, useMaybeEditor } from '@tldraw/editor'\nimport { useCallback } from 'react'\nimport { TLCopyType, copyAs } from '../../utils/export/copyAs'\nimport { useToasts } from '../context/toasts'\nimport { useTranslation } from './useTranslation/useTranslation'\n\n/** @public */\nexport function useCopyAs() {\n\tconst editor = useMaybeEditor()\n\tconst { addToast } = useToasts()\n\tconst msg = useTranslation()\n\n\treturn useCallback(\n\t\t(ids: TLShapeId[], format: TLCopyType = 'svg') => {\n\t\t\tassert(editor, 'useCopyAs: editor is required')\n\t\t\tcopyAs(editor, ids, { format }).catch(() => {\n\t\t\t\taddToast({\n\t\t\t\t\tid: 'copy-fail',\n\t\t\t\t\tseverity: 'warning',\n\t\t\t\t\ttitle: msg('toast.error.copy-fail.title'),\n\t\t\t\t\tdescription: msg('toast.error.copy-fail.desc'),\n\t\t\t\t})\n\t\t\t})\n\t\t},\n\t\t[editor, addToast, msg]\n\t)\n}\n"],"names":[],"mappings":";;;AAAA,SAAoB,QAAQ,sBAAsB;;;AAClD,SAAS,mBAAmB;AAC5B,SAAqB,cAAc;AACnC,SAAS,iBAAiB;AAC1B,SAAS,sBAAsB;;;;;;AAGxB,SAAS,YAAY;IAC3B,MAAM,gMAAS,iBAAA,CAAe;IAC9B,MAAM,EAAE,QAAA,CAAS,CAAA,IAAI,2LAAA,CAAU;IAC/B,MAAM,8MAAM,iBAAA,CAAe;IAE3B,yKAAO,cAAA;iCACN,CAAC,KAAkB,SAAqB,KAAA,KAAU;YACjD,CAAA,GAAA,sKAAA,CAAA,SAAA,EAAO,QAAQ,+BAA+B;YAC9C,CAAA,GAAA,6KAAA,CAAA,SAAA,EAAO,QAAQ,KAAK;gBAAE;YAAO,CAAC,EAAE,KAAA;yCAAM,MAAM;oBAC3C,SAAS;wBACR,IAAI;wBACJ,UAAU;wBACV,OAAO,IAAI,6BAA6B;wBACxC,aAAa,IAAI,4BAA4B;oBAC9C,CAAC;gBACF,CAAC;;QACF;gCACA;QAAC;QAAQ;QAAU,GAAG;KAAA;AAExB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1549, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useExportAs.ts"],"sourcesContent":["import { TLExportType, TLShapeId, assert, useMaybeEditor } from '@tldraw/editor'\nimport { useCallback } from 'react'\nimport { exportAs } from '../../utils/export/exportAs'\nimport { useToasts } from '../context/toasts'\nimport { useTranslation } from './useTranslation/useTranslation'\n\n/** @public */\nexport function useExportAs() {\n\tconst editor = useMaybeEditor()\n\tconst { addToast } = useToasts()\n\tconst msg = useTranslation()\n\n\treturn useCallback(\n\t\t(ids: TLShapeId[], format: TLExportType = 'png', name: string | undefined) => {\n\t\t\tassert(editor, 'useExportAs: editor is required')\n\t\t\texportAs(editor, ids, {\n\t\t\t\tformat,\n\t\t\t\tname,\n\t\t\t\tscale: 1,\n\t\t\t}).catch((e) => {\n\t\t\t\tconsole.error(e.message)\n\t\t\t\taddToast({\n\t\t\t\t\tid: 'export-fail',\n\t\t\t\t\ttitle: msg('toast.error.export-fail.title'),\n\t\t\t\t\tdescription: msg('toast.error.export-fail.desc'),\n\t\t\t\t\tseverity: 'error',\n\t\t\t\t})\n\t\t\t})\n\t\t},\n\t\t[editor, addToast, msg]\n\t)\n}\n"],"names":[],"mappings":";;;AAAA,SAAkC,QAAQ,sBAAsB;;;AAChE,SAAS,mBAAmB;AAC5B,SAAS,gBAAgB;AACzB,SAAS,iBAAiB;AAC1B,SAAS,sBAAsB;;;;;;AAGxB,SAAS,cAAc;IAC7B,MAAM,gMAAS,iBAAA,CAAe;IAC9B,MAAM,EAAE,QAAA,CAAS,CAAA,IAAI,2LAAA,CAAU;IAC/B,MAAM,8MAAM,iBAAA,CAAe;IAE3B,yKAAO,cAAA;mCACN,CAAC,KAAkB,SAAuB,KAAA,EAAO,SAA6B;YAC7E,CAAA,GAAA,sKAAA,CAAA,SAAA,EAAO,QAAQ,iCAAiC;YAChD,CAAA,GAAA,+KAAA,CAAA,WAAA,EAAS,QAAQ,KAAK;gBACrB;gBACA;gBACA,OAAO;YACR,CAAC,EAAE,KAAA;2CAAM,CAAC,MAAM;oBACf,QAAQ,KAAA,CAAM,EAAE,OAAO;oBACvB,SAAS;wBACR,IAAI;wBACJ,OAAO,IAAI,+BAA+B;wBAC1C,aAAa,IAAI,8BAA8B;wBAC/C,UAAU;oBACX,CAAC;gBACF,CAAC;;QACF;kCACA;QAAC;QAAQ;QAAU,GAAG;KAAA;AAExB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1601, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/usePrint.ts"],"sourcesContent":["import { assert, tlenv, uniqueId, useMaybeEditor } from '@tldraw/editor'\nimport { useCallback, useRef } from 'react'\n\n/** @internal */\nexport function usePrint() {\n\tconst editor = useMaybeEditor()\n\tconst prevPrintEl = useRef<HTMLDivElement | null>(null)\n\tconst prevStyleEl = useRef<HTMLStyleElement | null>(null)\n\n\treturn useCallback(\n\t\tasync function printSelectionOrPages() {\n\t\t\tassert(editor, 'usePrint: editor is required')\n\t\t\tconst el = document.createElement('div')\n\t\t\tconst style = document.createElement('style')\n\n\t\t\t// todo: why are these using a ref? this seems like it could be a function rather than a hook\n\t\t\tconst clearElements = (printEl: HTMLDivElement | null, styleEl: HTMLStyleElement | null) => {\n\t\t\t\tif (printEl) printEl.innerHTML = ''\n\t\t\t\tif (styleEl && document.head.contains(styleEl)) document.head.removeChild(styleEl)\n\t\t\t\tif (printEl && document.body.contains(printEl)) {\n\t\t\t\t\tdocument.body.removeChild(printEl)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Always make sure we have a clean root element.\n\t\t\tclearElements(prevPrintEl.current, prevStyleEl.current)\n\t\t\tprevPrintEl.current = el\n\t\t\tprevStyleEl.current = style\n\n\t\t\t// Random because this isn't for end users\n\t\t\tconst className = `tl-print-surface-${uniqueId()}`\n\n\t\t\tel.className = className\n\t\t\t// NOTE: Works in most envs except safari, needs further review\n\t\t\tconst enableMargins = false\n\t\t\t// NOTE: Currently buggy needs further investigation\n\t\t\tconst allowAllPages = false\n\t\t\tstyle.innerHTML = `\n\t\t\t.${className} {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t\t.${className} svg {\n\t\t\t\tmax-width: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tdisplay: block;\n\t\t\t}\n\n\t\t\t@media print {\t\t\t\t  \n\t\t\t\thtml, body {\n\t\t\t\t\tmin-height: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tmargin: 0;\n\t\t\t\t}\n\n\t\t\t\tbody {\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\n\t\t\t\tbody > * {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t.tldraw__editor {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t.${className} {\n\t\t\t\t\tdisplay: block !important;\n\t\t\t\t\tbackground: white;\n\t\t\t\t\tmin-height: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tmax-width: 100%;\n\t\t\t\t}\n\n\t\t\t\t.${className}__item {\n\t\t\t\t\tpadding: 10mm;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tmin-height: 100%;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\tpage-break-after: always;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\theight: 100%;\n\t\t\t\t}\n\n\t\t\t\t.${className}__item__main {\n\t\t\t\t\tflex: 1;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\tmax-height: 100%;\n\t\t\t\t}\n\n\t\t\t\t.${className}__item__header {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t.${className}__item__footer {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t\ttext-align: right;\n\t\t\t\t}\n\n\t\t\t\t.${className}__item__footer__hide {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\n\t\t\t\t${\n\t\t\t\t\t!enableMargins\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: `\n\t\t\t\t\t/**\n\t\t\t\t\t * Note: Safari doesn't support removing the page margins to remove them all!\n\t\t\t\t\t */\n\t\t\t\t\t@page {\n\t\t\t\t\t\tmargin:0;\n\t\t\t\t\t}\n\n\t\t\t\t\t.${className} .${className}__item__header {\n\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t}\n\n\t\t\t\t\t.${className} .${className}__item__footer {\n\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t}\n\t\t\t\t`\n\t\t\t\t}\n\t\t\t}\n\n\t\t`\n\n\t\t\tconst beforePrintHandler = () => {\n\t\t\t\tdocument.head.appendChild(style)\n\t\t\t\tdocument.body.appendChild(el)\n\t\t\t}\n\n\t\t\tconst afterPrintHandler = () => {\n\t\t\t\teditor.once('tick', () => {\n\t\t\t\t\tclearElements(el, style)\n\t\t\t\t})\n\t\t\t}\n\n\t\t\twindow.addEventListener('beforeprint', beforePrintHandler)\n\t\t\twindow.addEventListener('afterprint', afterPrintHandler)\n\n\t\t\tfunction addPageToPrint(title: string, footer: string | null, svg: string) {\n\t\t\t\ttry {\n\t\t\t\t\tel.innerHTML += `<div class=\"${className}__item\">\n        <div class=\"${className}__item__header\">\n          ${title.replace(/</g, '&lt;').replace(/>/g, '&gt;')}\n        </div>\n        <div class=\"${className}__item__main\">\n          ${svg}\n        </div>\n        <div class=\"${className}__item__footer ${className}__item__footer__${footer ? '' : 'hide'}\">\n          ${footer ?? ''}\n        </div>\n      </div>`\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction triggerPrint() {\n\t\t\t\tif (tlenv.isChromeForIos) {\n\t\t\t\t\tbeforePrintHandler()\n\t\t\t\t\twindow.print()\n\t\t\t\t} else if (tlenv.isSafari) {\n\t\t\t\t\tbeforePrintHandler()\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-deprecated\n\t\t\t\t\tdocument.execCommand('print', false)\n\t\t\t\t} else {\n\t\t\t\t\twindow.print()\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst selectedShapeIds = editor.getSelectedShapeIds()\n\t\t\tconst currentPageId = editor.getCurrentPageId()\n\t\t\tconst pages = editor.getPages()\n\n\t\t\tconst preserveAspectRatio = 'xMidYMid meet'\n\n\t\t\tconst svgOpts = {\n\t\t\t\tscale: 1,\n\t\t\t\tbackground: false,\n\t\t\t\tdarkMode: false,\n\t\t\t\tpreserveAspectRatio,\n\t\t\t}\n\n\t\t\tif (editor.getSelectedShapeIds().length > 0) {\n\t\t\t\t// Print the selected ids from the current page\n\t\t\t\tconst svgExport = await editor.getSvgString(selectedShapeIds, svgOpts)\n\n\t\t\t\tif (svgExport) {\n\t\t\t\t\tconst page = pages.find((p) => p.id === currentPageId)\n\t\t\t\t\taddPageToPrint(`tldraw â€” ${page?.name}`, null, svgExport.svg)\n\t\t\t\t\ttriggerPrint()\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (allowAllPages) {\n\t\t\t\t\t// Print all pages\n\t\t\t\t\tfor (let i = 0; i < pages.length; i++) {\n\t\t\t\t\t\tconst page = pages[i]\n\t\t\t\t\t\tconst svgExport = await editor.getSvgString(\n\t\t\t\t\t\t\teditor.getSortedChildIdsForParent(page.id),\n\t\t\t\t\t\t\tsvgOpts\n\t\t\t\t\t\t)\n\t\t\t\t\t\tif (svgExport) {\n\t\t\t\t\t\t\taddPageToPrint(`tldraw â€” ${page.name}`, `${i}/${pages.length}`, svgExport.svg)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttriggerPrint()\n\t\t\t\t} else {\n\t\t\t\t\tconst page = editor.getCurrentPage()\n\t\t\t\t\tconst svgExport = await editor.getSvgString(\n\t\t\t\t\t\teditor.getSortedChildIdsForParent(page.id),\n\t\t\t\t\t\tsvgOpts\n\t\t\t\t\t)\n\t\t\t\t\tif (svgExport) {\n\t\t\t\t\t\taddPageToPrint(`tldraw â€” ${page.name}`, null, svgExport.svg)\n\t\t\t\t\t\ttriggerPrint()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twindow.removeEventListener('beforeprint', beforePrintHandler)\n\t\t\twindow.removeEventListener('afterprint', afterPrintHandler)\n\t\t},\n\t\t[editor]\n\t)\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1800, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useTools.tsx"],"sourcesContent":["import { Editor, GeoShapeGeoStyle, useMaybeEditor } from '@tldraw/editor'\nimport * as React from 'react'\nimport { EmbedDialog } from '../components/EmbedDialog'\nimport { TLUiIconJsx } from '../components/primitives/TldrawUiIcon'\nimport { useA11y } from '../context/a11y'\nimport { TLUiEventSource, useUiEvents } from '../context/events'\nimport { TLUiIconType } from '../icon-types'\nimport { TLUiOverrideHelpers, useDefaultHelpers } from '../overrides'\nimport { TLUiTranslationKey } from './useTranslation/TLUiTranslationKey'\nimport { useTranslation } from './useTranslation/useTranslation'\n\n/** @public */\nexport interface TLUiToolItem<\n\tTranslationKey extends string = string,\n\tIconType extends string = string,\n> {\n\tid: string\n\tlabel: TranslationKey\n\tshortcutsLabel?: TranslationKey\n\ticon: IconType | TLUiIconJsx\n\tonSelect(source: TLUiEventSource): void\n\t/**\n\t * The keyboard shortcut for this tool. This is a string that can be a single key,\n\t * or a combination of keys.\n\t * For example, `cmd+z` or `cmd+shift+z` or `cmd+u,ctrl+u`, or just `v` or `a`.\n\t * We have backwards compatibility with the old system, where we used to use\n\t * symbols to denote cmd/alt/shift, using `!` for shift, `$` for cmd, and `?` for alt.\n\t */\n\tkbd?: string\n\treadonlyOk?: boolean\n\tmeta?: {\n\t\t[key: string]: any\n\t}\n}\n\n/** @public */\nexport type TLUiToolsContextType = Record<string, TLUiToolItem>\n\n/** @internal */\nexport const ToolsContext = React.createContext<null | TLUiToolsContextType>(null)\n\n/** @public */\nexport interface TLUiToolsProviderProps {\n\toverrides?(\n\t\teditor: Editor,\n\t\ttools: TLUiToolsContextType,\n\t\thelpers: Partial<TLUiOverrideHelpers>\n\t): TLUiToolsContextType\n\tchildren: React.ReactNode\n}\n\n/** @internal */\nexport function ToolsProvider({ overrides, children }: TLUiToolsProviderProps) {\n\tconst editor = useMaybeEditor()\n\tconst trackEvent = useUiEvents()\n\n\tconst a11y = useA11y()\n\tconst msg = useTranslation()\n\tconst helpers = useDefaultHelpers()\n\n\tconst onToolSelect = React.useCallback(\n\t\t(\n\t\t\tsource: TLUiEventSource,\n\t\t\ttool: TLUiToolItem<TLUiTranslationKey, TLUiIconType>,\n\t\t\tid?: string\n\t\t) => {\n\t\t\ta11y.announce({ msg: msg(tool.label) })\n\t\t\ttrackEvent('select-tool', { source, id: id ?? tool.id })\n\t\t},\n\t\t[a11y, msg, trackEvent]\n\t)\n\n\tconst tools = React.useMemo<TLUiToolsContextType>(() => {\n\t\tif (!editor) return {}\n\t\tconst toolsArray: TLUiToolItem<TLUiTranslationKey, TLUiIconType>[] = [\n\t\t\t{\n\t\t\t\tid: 'select',\n\t\t\t\tlabel: 'tool.select',\n\t\t\t\ticon: 'tool-pointer',\n\t\t\t\tkbd: 'v',\n\t\t\t\treadonlyOk: true,\n\t\t\t\tonSelect(source) {\n\t\t\t\t\tif (editor.isIn('select')) {\n\t\t\t\t\t\t// There's a quirk of select mode, where editing a shape is a sub-state of select.\n\t\t\t\t\t\t// Because the text tool can be locked/sticky, we need to make sure we exit the\n\t\t\t\t\t\t// text tool.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// psst, if you're changing this code, also change the code\n\t\t\t\t\t\t// in strange-tools.test.ts! Sadly it's duplicated there.\n\t\t\t\t\t\tconst currentNode = editor.root.getCurrent()!\n\t\t\t\t\t\tcurrentNode.exit({}, currentNode.id)\n\t\t\t\t\t\tcurrentNode.enter({}, currentNode.id)\n\t\t\t\t\t}\n\t\t\t\t\teditor.setCurrentTool('select')\n\t\t\t\t\tonToolSelect(source, this)\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'hand',\n\t\t\t\tlabel: 'tool.hand',\n\t\t\t\ticon: 'tool-hand',\n\t\t\t\tkbd: 'h',\n\t\t\t\treadonlyOk: true,\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setCurrentTool('hand')\n\t\t\t\t\tonToolSelect(source, this)\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'eraser',\n\t\t\t\tlabel: 'tool.eraser',\n\t\t\t\ticon: 'tool-eraser',\n\t\t\t\tkbd: 'e',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setCurrentTool('eraser')\n\t\t\t\t\tonToolSelect(source, this)\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'draw',\n\t\t\t\tlabel: 'tool.draw',\n\t\t\t\ticon: 'tool-pencil',\n\t\t\t\tkbd: 'd,b,x',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setCurrentTool('draw')\n\t\t\t\t\tonToolSelect(source, this)\n\t\t\t\t},\n\t\t\t},\n\t\t\t...[...GeoShapeGeoStyle.values].map((id) => ({\n\t\t\t\tid,\n\t\t\t\tlabel: `tool.${id}` as TLUiTranslationKey,\n\t\t\t\tmeta: {\n\t\t\t\t\tgeo: id,\n\t\t\t\t},\n\t\t\t\tkbd: id === 'rectangle' ? 'r' : id === 'ellipse' ? 'o' : undefined,\n\t\t\t\ticon: ('geo-' + id) as TLUiIconType,\n\t\t\t\tonSelect(source: TLUiEventSource) {\n\t\t\t\t\teditor.run(() => {\n\t\t\t\t\t\teditor.setStyleForNextShapes(GeoShapeGeoStyle, id)\n\t\t\t\t\t\teditor.setCurrentTool('geo')\n\t\t\t\t\t\tonToolSelect(source, this, `geo-${id}`)\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t})),\n\t\t\t{\n\t\t\t\tid: 'arrow',\n\t\t\t\tlabel: 'tool.arrow',\n\t\t\t\ticon: 'tool-arrow',\n\t\t\t\tkbd: 'a',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setCurrentTool('arrow')\n\t\t\t\t\tonToolSelect(source, this)\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'line',\n\t\t\t\tlabel: 'tool.line',\n\t\t\t\ticon: 'tool-line',\n\t\t\t\tkbd: 'l',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setCurrentTool('line')\n\t\t\t\t\tonToolSelect(source, this)\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'frame',\n\t\t\t\tlabel: 'tool.frame',\n\t\t\t\ticon: 'tool-frame',\n\t\t\t\tkbd: 'f',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setCurrentTool('frame')\n\t\t\t\t\tonToolSelect(source, this)\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'text',\n\t\t\t\tlabel: 'tool.text',\n\t\t\t\ticon: 'tool-text',\n\t\t\t\tkbd: 't',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setCurrentTool('text')\n\t\t\t\t\tonToolSelect(source, this)\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'asset',\n\t\t\t\tlabel: 'tool.media',\n\t\t\t\ticon: 'tool-media',\n\t\t\t\tkbd: 'cmd+u,ctrl+u',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\thelpers.insertMedia()\n\t\t\t\t\tonToolSelect(source, this, 'media')\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'note',\n\t\t\t\tlabel: 'tool.note',\n\t\t\t\ticon: 'tool-note',\n\t\t\t\tkbd: 'n',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setCurrentTool('note')\n\t\t\t\t\tonToolSelect(source, this)\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'laser',\n\t\t\t\tlabel: 'tool.laser',\n\t\t\t\treadonlyOk: true,\n\t\t\t\ticon: 'tool-laser',\n\t\t\t\tkbd: 'k',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setCurrentTool('laser')\n\t\t\t\t\tonToolSelect(source, this)\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'embed',\n\t\t\t\tlabel: 'tool.embed',\n\t\t\t\ticon: 'dot',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\thelpers.addDialog({ component: EmbedDialog })\n\t\t\t\t\tonToolSelect(source, this)\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'highlight',\n\t\t\t\tlabel: 'tool.highlight',\n\t\t\t\ticon: 'tool-highlight',\n\t\t\t\t// TODO: pick a better shortcut\n\t\t\t\tkbd: 'shift+d',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setCurrentTool('highlight')\n\t\t\t\t\tonToolSelect(source, this)\n\t\t\t\t},\n\t\t\t},\n\t\t]\n\n\t\ttoolsArray.forEach((t) => (t.onSelect = t.onSelect.bind(t)))\n\n\t\tconst tools = Object.fromEntries(toolsArray.map((t) => [t.id, t]))\n\n\t\tif (overrides) {\n\t\t\treturn overrides(editor, tools, helpers)\n\t\t}\n\n\t\treturn tools\n\t}, [overrides, editor, helpers, onToolSelect])\n\n\treturn <ToolsContext.Provider value={tools}>{children}</ToolsContext.Provider>\n}\n\n/** @public */\nexport function useTools() {\n\tconst ctx = React.useContext(ToolsContext)\n\n\tif (!ctx) {\n\t\tthrow new Error('useTools must be used within a ToolProvider')\n\t}\n\n\treturn ctx\n}\n"],"names":["tools"],"mappings":";;;;;AAwPQ;AAxPR,SAAiB,kBAAkB,sBAAsB;;;AACzD,YAAY,WAAW;AACvB,SAAS,mBAAmB;AAE5B,SAAS,eAAe;AACxB,SAA0B,mBAAmB;AAE7C,SAA8B,yBAAyB;AAEvD,SAAS,sBAAsB;;;;;;;;;AA8BxB,MAAM,iLAAe,MAAM,UAAA,EAA2C,IAAI;AAa1E,SAAS,cAAc,EAAE,SAAA,EAAW,QAAA,CAAS,CAAA,EAA2B;IAC9E,MAAM,gMAAS,iBAAA,CAAe;IAC9B,MAAM,6LAAa,cAAA,CAAY;IAE/B,MAAM,qLAAO,UAAA,CAAQ;IACrB,MAAM,6MAAM,kBAAA,CAAe;IAC3B,MAAM,kLAAU,oBAAA,CAAkB;IAElC,MAAM,iLAAe,MAAM,QAAA;mDAC1B,CACC,QACA,MACA,OACI;YACJ,KAAK,QAAA,CAAS;gBAAE,KAAK,IAAI,KAAK,KAAK;YAAE,CAAC;YACtC,WAAW,eAAe;gBAAE;gBAAQ,IAAI,MAAM,KAAK,EAAA;YAAG,CAAC;QACxD;kDACA;QAAC;QAAM;QAAK,UAAU;KAAA;IAGvB,MAAM,QAAQ,MAAM,sKAAA;wCAA8B,MAAM;YACvD,IAAI,CAAC,OAAQ,CAAA,OAAO,CAAC;YACrB,MAAM,aAA+D;gBACpE;oBACC,IAAI;oBACJ,OAAO;oBACP,MAAM;oBACN,KAAK;oBACL,YAAY;oBACZ,UAAS,MAAA,EAAQ;wBAChB,IAAI,OAAO,IAAA,CAAK,QAAQ,GAAG;4BAO1B,MAAM,cAAc,OAAO,IAAA,CAAK,UAAA,CAAW;4BAC3C,YAAY,IAAA,CAAK,CAAC,GAAG,YAAY,EAAE;4BACnC,YAAY,KAAA,CAAM,CAAC,GAAG,YAAY,EAAE;wBACrC;wBACA,OAAO,cAAA,CAAe,QAAQ;wBAC9B,aAAa,QAAQ,IAAI;oBAC1B;gBACD;gBACA;oBACC,IAAI;oBACJ,OAAO;oBACP,MAAM;oBACN,KAAK;oBACL,YAAY;oBACZ,UAAS,MAAA,EAAQ;wBAChB,OAAO,cAAA,CAAe,MAAM;wBAC5B,aAAa,QAAQ,IAAI;oBAC1B;gBACD;gBACA;oBACC,IAAI;oBACJ,OAAO;oBACP,MAAM;oBACN,KAAK;oBACL,UAAS,MAAA,EAAQ;wBAChB,OAAO,cAAA,CAAe,QAAQ;wBAC9B,aAAa,QAAQ,IAAI;oBAC1B;gBACD;gBACA;oBACC,IAAI;oBACJ,OAAO;oBACP,MAAM;oBACN,KAAK;oBACL,UAAS,MAAA,EAAQ;wBAChB,OAAO,cAAA,CAAe,MAAM;wBAC5B,aAAa,QAAQ,IAAI;oBAC1B;gBACD;mBACG,CAAC;uMAAG,mBAAA,CAAiB,MAAM;iBAAA,CAAE,GAAA;oDAAI,CAAC,KAAA,CAAQ;4BAC5C;4BACA,OAAO,CAAA,KAAA,EAAQ,EAAE,EAAA;4BACjB,MAAM;gCACL,KAAK;4BACN;4BACA,KAAK,OAAO,cAAc,MAAM,OAAO,YAAY,MAAM,KAAA;4BACzD,MAAO,SAAS;4BAChB,UAAS,MAAA,EAAyB;gCACjC,OAAO,GAAA;oEAAI,MAAM;wCAChB,OAAO,qBAAA,iLAAsB,mBAAA,EAAkB,EAAE;wCACjD,OAAO,cAAA,CAAe,KAAK;wCAC3B,aAAa,QAAQ,IAAA,EAAM,CAAA,IAAA,EAAO,EAAE,EAAE;oCACvC,CAAC;;4BACF;wBACD,CAAA,CAAE;;gBACF;oBACC,IAAI;oBACJ,OAAO;oBACP,MAAM;oBACN,KAAK;oBACL,UAAS,MAAA,EAAQ;wBAChB,OAAO,cAAA,CAAe,OAAO;wBAC7B,aAAa,QAAQ,IAAI;oBAC1B;gBACD;gBACA;oBACC,IAAI;oBACJ,OAAO;oBACP,MAAM;oBACN,KAAK;oBACL,UAAS,MAAA,EAAQ;wBAChB,OAAO,cAAA,CAAe,MAAM;wBAC5B,aAAa,QAAQ,IAAI;oBAC1B;gBACD;gBACA;oBACC,IAAI;oBACJ,OAAO;oBACP,MAAM;oBACN,KAAK;oBACL,UAAS,MAAA,EAAQ;wBAChB,OAAO,cAAA,CAAe,OAAO;wBAC7B,aAAa,QAAQ,IAAI;oBAC1B;gBACD;gBACA;oBACC,IAAI;oBACJ,OAAO;oBACP,MAAM;oBACN,KAAK;oBACL,UAAS,MAAA,EAAQ;wBAChB,OAAO,cAAA,CAAe,MAAM;wBAC5B,aAAa,QAAQ,IAAI;oBAC1B;gBACD;gBACA;oBACC,IAAI;oBACJ,OAAO;oBACP,MAAM;oBACN,KAAK;oBACL,UAAS,MAAA,EAAQ;wBAChB,QAAQ,WAAA,CAAY;wBACpB,aAAa,QAAQ,IAAA,EAAM,OAAO;oBACnC;gBACD;gBACA;oBACC,IAAI;oBACJ,OAAO;oBACP,MAAM;oBACN,KAAK;oBACL,UAAS,MAAA,EAAQ;wBAChB,OAAO,cAAA,CAAe,MAAM;wBAC5B,aAAa,QAAQ,IAAI;oBAC1B;gBACD;gBACA;oBACC,IAAI;oBACJ,OAAO;oBACP,YAAY;oBACZ,MAAM;oBACN,KAAK;oBACL,UAAS,MAAA,EAAQ;wBAChB,OAAO,cAAA,CAAe,OAAO;wBAC7B,aAAa,QAAQ,IAAI;oBAC1B;gBACD;gBACA;oBACC,IAAI;oBACJ,OAAO;oBACP,MAAM;oBACN,UAAS,MAAA,EAAQ;wBAChB,QAAQ,SAAA,CAAU;4BAAE,+LAAW,cAAA;wBAAY,CAAC;wBAC5C,aAAa,QAAQ,IAAI;oBAC1B;gBACD;gBACA;oBACC,IAAI;oBACJ,OAAO;oBACP,MAAM;oBAAA,+BAAA;oBAEN,KAAK;oBACL,UAAS,MAAA,EAAQ;wBAChB,OAAO,cAAA,CAAe,WAAW;wBACjC,aAAa,QAAQ,IAAI;oBAC1B;gBACD;aACD;YAEA,WAAW,OAAA;gDAAQ,CAAC,IAAO,EAAE,QAAA,GAAW,EAAE,QAAA,CAAS,IAAA,CAAK,CAAC,CAAE;;YAE3D,MAAMA,SAAQ,OAAO,WAAA,CAAY,WAAW,GAAA;uDAAI,CAAC,IAAM;wBAAC,EAAE,EAAA;wBAAI,CAAC;qBAAC,CAAC;;YAEjE,IAAI,WAAW;gBACd,OAAO,UAAU,QAAQA,QAAO,OAAO;YACxC;YAEA,OAAOA;QACR;uCAAG;QAAC;QAAW;QAAQ;QAAS,YAAY;KAAC;IAE7C,OAAO,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAC,aAAa,QAAA,EAAb;QAAsB,OAAO;QAAQ;IAAA,CAAS;AACvD;AAGO,SAAS,WAAW;IAC1B,MAAM,wKAAM,MAAM,OAAA,EAAW,YAAY;IAEzC,IAAI,CAAC,KAAK;QACT,MAAM,IAAI,MAAM,6CAA6C;IAC9D;IAEA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2052, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useFlatten.ts"],"sourcesContent":["import {\n\tBox,\n\tEditor,\n\tIndexKey,\n\tTLImageAsset,\n\tTLImageShape,\n\tTLShape,\n\tTLShapeId,\n\tVec,\n\tcompact,\n\tcreateShapeId,\n\tisShapeId,\n\ttransact,\n\tuseEditor,\n} from '@tldraw/editor'\nimport { useCallback } from 'react'\n\nexport async function flattenShapesToImages(\n\teditor: Editor,\n\tshapeIds: TLShapeId[],\n\tflattenImageBoundsExpand?: number\n) {\n\tconst shapes = compact(\n\t\tshapeIds.map((id) => {\n\t\t\tconst shape = editor.getShape(id)\n\t\t\tif (!shape) return\n\t\t\tconst util = editor.getShapeUtil(shape.type)\n\t\t\t// skip shapes that don't have a toSvg method\n\t\t\tif (util.toSvg === undefined) return\n\t\t\treturn shape\n\t\t})\n\t)\n\n\tif (shapes.length === 0) return\n\n\t// Don't flatten if it's just one image\n\tif (shapes.length === 1) {\n\t\tconst shape = shapes[0]\n\t\tif (!shape) return\n\t\tif (editor.isShapeOfType(shape, 'image')) return\n\t}\n\n\tconst groups: { shapes: TLShape[]; bounds: Box; asset?: TLImageAsset }[] = []\n\n\tif (flattenImageBoundsExpand !== undefined) {\n\t\tconst expandedBounds = shapes.map((shape) => {\n\t\t\treturn {\n\t\t\t\tshape,\n\t\t\t\tbounds: editor.getShapeMaskedPageBounds(shape)!.clone().expandBy(flattenImageBoundsExpand),\n\t\t\t}\n\t\t})\n\n\t\tfor (let i = 0; i < expandedBounds.length; i++) {\n\t\t\tconst item = expandedBounds[i]\n\t\t\tif (i === 0) {\n\t\t\t\tgroups[0] = {\n\t\t\t\t\tshapes: [item.shape],\n\t\t\t\t\tbounds: item.bounds,\n\t\t\t\t}\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tlet didLand = false\n\n\t\t\tfor (const group of groups) {\n\t\t\t\tif (group.bounds.includes(item.bounds)) {\n\t\t\t\t\tgroup.shapes.push(item.shape)\n\t\t\t\t\tgroup.bounds.expand(item.bounds)\n\t\t\t\t\tdidLand = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!didLand) {\n\t\t\t\tgroups.push({\n\t\t\t\t\tshapes: [item.shape],\n\t\t\t\t\tbounds: item.bounds,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst bounds = Box.Common(shapes.map((shape) => editor.getShapeMaskedPageBounds(shape)!))\n\t\tgroups.push({\n\t\t\tshapes,\n\t\t\tbounds,\n\t\t})\n\t}\n\n\tconst padding = editor.options.flattenImageBoundsPadding\n\n\tfor (const group of groups) {\n\t\tif (flattenImageBoundsExpand !== undefined) {\n\t\t\t// shrink the bounds again, removing the expanded area\n\t\t\tgroup.bounds.expandBy(-flattenImageBoundsExpand)\n\t\t}\n\n\t\t// get an image for the shapes\n\t\tconst svgResult = await editor.getSvgString(group.shapes, {\n\t\t\tpadding,\n\t\t\tbackground: false,\n\t\t})\n\t\tif (!svgResult?.svg) continue\n\n\t\t// get an image asset for the image\n\t\tconst asset = (await editor.getAssetForExternalContent({\n\t\t\ttype: 'file',\n\t\t\tfile: new File([svgResult.svg], 'asset.svg', { type: 'image/svg+xml' }),\n\t\t})) as TLImageAsset\n\t\tif (!asset) continue\n\n\t\t// add it to the group\n\t\tgroup.asset = asset\n\t}\n\n\tconst createdShapeIds: TLShapeId[] = []\n\n\ttransact(() => {\n\t\tfor (const group of groups) {\n\t\t\tconst { asset, bounds, shapes } = group\n\t\t\tif (!asset) continue\n\n\t\t\tconst commonAncestorId = editor.findCommonAncestor(shapes) ?? editor.getCurrentPageId()\n\t\t\tif (!commonAncestorId) continue\n\n\t\t\tlet index: IndexKey = 'a1' as IndexKey\n\t\t\tfor (const shape of shapes) {\n\t\t\t\tif (shape.parentId === commonAncestorId) {\n\t\t\t\t\tif (shape.index > index) {\n\t\t\t\t\t\tindex = shape.index\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x: number\n\t\t\tlet y: number\n\t\t\tlet rotation: number\n\n\t\t\tif (isShapeId(commonAncestorId)) {\n\t\t\t\tconst commonAncestor = editor.getShape(commonAncestorId)\n\t\t\t\tif (!commonAncestor) continue\n\t\t\t\t// put the point in the parent's space\n\t\t\t\tconst point = editor.getPointInShapeSpace(commonAncestor, {\n\t\t\t\t\tx: bounds.x,\n\t\t\t\t\ty: bounds.y,\n\t\t\t\t})\n\t\t\t\t// get the parent's rotation\n\t\t\t\trotation = editor.getShapePageTransform(commonAncestorId).rotation()\n\t\t\t\t// rotate the point against the parent's rotation\n\t\t\t\tpoint.sub(new Vec(padding, padding).rot(-rotation))\n\t\t\t\tx = point.x\n\t\t\t\ty = point.y\n\t\t\t} else {\n\t\t\t\t// if the common ancestor is the page, then just adjust for the padding\n\t\t\t\tx = bounds.x - padding\n\t\t\t\ty = bounds.y - padding\n\t\t\t\trotation = 0\n\t\t\t}\n\n\t\t\t// delete the shapes\n\t\t\teditor.deleteShapes(shapes)\n\n\t\t\t// create the asset\n\t\t\teditor.createAssets([{ ...asset, id: asset.id }])\n\n\t\t\tconst shapeId = createShapeId()\n\n\t\t\t// create an image shape in the same place as the shapes\n\t\t\teditor.createShape<TLImageShape>({\n\t\t\t\tid: shapeId,\n\t\t\t\ttype: 'image',\n\t\t\t\tindex,\n\t\t\t\tparentId: commonAncestorId,\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\trotation: -rotation,\n\t\t\t\tprops: {\n\t\t\t\t\tassetId: asset.id,\n\t\t\t\t\tw: bounds.w + padding * 2,\n\t\t\t\t\th: bounds.h + padding * 2,\n\t\t\t\t},\n\t\t\t})\n\n\t\t\tcreatedShapeIds.push(shapeId)\n\t\t}\n\t})\n\n\treturn createdShapeIds\n}\n\nexport function useFlatten() {\n\tconst editor = useEditor()\n\treturn useCallback(\n\t\t(ids: TLShapeId[]) => {\n\t\t\treturn flattenShapesToImages(editor, ids)\n\t\t},\n\t\t[editor]\n\t)\n}\n"],"names":["shapes"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2225, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/menu-hooks.ts"],"sourcesContent":["import {\n\tEditor,\n\tTLArrowShape,\n\tTLDrawShape,\n\tTLGroupShape,\n\tTLImageShape,\n\tTLLineShape,\n\tTLTextShape,\n\tuseEditor,\n\tuseValue,\n} from '@tldraw/editor'\nimport { getArrowBindings } from '../../shapes/arrow/shared'\n\nfunction shapesWithUnboundArrows(editor: Editor) {\n\tconst selectedShapeIds = editor.getSelectedShapeIds()\n\tconst selectedShapes = selectedShapeIds.map((id) => {\n\t\treturn editor.getShape(id)\n\t})\n\n\treturn selectedShapes.filter((shape) => {\n\t\tif (!shape) return false\n\t\tif (editor.isShapeOfType<TLArrowShape>(shape, 'arrow')) {\n\t\t\tconst bindings = getArrowBindings(editor, shape)\n\t\t\tif (bindings.start || bindings.end) return false\n\t\t}\n\t\treturn true\n\t})\n}\n\n/** @internal */\nexport const useThreeStackableItems = () => {\n\tconst editor = useEditor()\n\treturn useValue('threeStackableItems', () => shapesWithUnboundArrows(editor).length > 2, [editor])\n}\n\n/** @internal */\nexport const useIsInSelectState = () => {\n\tconst editor = useEditor()\n\treturn useValue('isInSelectState', () => editor.isIn('select'), [editor])\n}\n\n/** @internal */\nexport const useAllowGroup = () => {\n\tconst editor = useEditor()\n\treturn useValue(\n\t\t'allow group',\n\t\t() => {\n\t\t\t// We can't group arrows that are bound to shapes that aren't selected\n\t\t\t// if more than one shape has an arrow bound to it, allow group\n\t\t\tconst selectedShapes = editor.getSelectedShapes()\n\n\t\t\tif (selectedShapes.length < 2) return false\n\n\t\t\tfor (const shape of selectedShapes) {\n\t\t\t\tif (editor.isShapeOfType<TLArrowShape>(shape, 'arrow')) {\n\t\t\t\t\tconst bindings = getArrowBindings(editor, shape)\n\t\t\t\t\tif (bindings.start) {\n\t\t\t\t\t\t// if the other shape is not among the selected shapes...\n\t\t\t\t\t\tif (!selectedShapes.some((s) => s.id === bindings.start!.toId)) {\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (bindings.end) {\n\t\t\t\t\t\t// if the other shape is not among the selected shapes...\n\t\t\t\t\t\tif (!selectedShapes.some((s) => s.id === bindings.end!.toId)) {\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true\n\t\t},\n\t\t[editor]\n\t)\n}\n\n/** @internal */\nexport const useAllowUngroup = () => {\n\tconst editor = useEditor()\n\treturn useValue(\n\t\t'allowUngroup',\n\t\t() => editor.getSelectedShapeIds().some((id) => editor.getShape(id)?.type === 'group'),\n\t\t[editor]\n\t)\n}\n\nexport const showMenuPaste =\n\ttypeof window !== 'undefined' &&\n\t'navigator' in window &&\n\tBoolean(navigator.clipboard) &&\n\tBoolean(navigator.clipboard.read)\n\n/**\n * Returns true if the number of LOCKED OR UNLOCKED selected shapes is at least min or at most max.\n */\nexport function useAnySelectedShapesCount(min?: number, max?: number) {\n\tconst editor = useEditor()\n\treturn useValue(\n\t\t'selectedShapes',\n\t\t() => {\n\t\t\tconst len = editor.getSelectedShapes().length\n\t\t\tif (min === undefined) {\n\t\t\t\tif (max === undefined) {\n\t\t\t\t\t// just length\n\t\t\t\t\treturn len\n\t\t\t\t} else {\n\t\t\t\t\t// max but no min\n\t\t\t\t\treturn len <= max\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (max === undefined) {\n\t\t\t\t\t// min but no max\n\t\t\t\t\treturn len >= min\n\t\t\t\t} else {\n\t\t\t\t\t// max and min\n\t\t\t\t\treturn len >= min && len <= max\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[editor, min, max]\n\t)\n}\n\n/**\n * Returns true if the number of UNLOCKED selected shapes is at least min or at most max.\n */\nexport function useUnlockedSelectedShapesCount(min?: number, max?: number) {\n\tconst editor = useEditor()\n\treturn useValue(\n\t\t'selectedShapes',\n\t\t() => {\n\t\t\tconst len = editor\n\t\t\t\t.getSelectedShapes()\n\t\t\t\t.filter((s) => !editor.isShapeOrAncestorLocked(s)).length\n\t\t\tif (min === undefined) {\n\t\t\t\tif (max === undefined) {\n\t\t\t\t\t// just length\n\t\t\t\t\treturn len\n\t\t\t\t} else {\n\t\t\t\t\t// max but no min\n\t\t\t\t\treturn len <= max\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (max === undefined) {\n\t\t\t\t\t// min but no max\n\t\t\t\t\treturn len >= min\n\t\t\t\t} else {\n\t\t\t\t\t// max and min\n\t\t\t\t\treturn len >= min && len <= max\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[editor]\n\t)\n}\n\nexport function useShowAutoSizeToggle() {\n\tconst editor = useEditor()\n\treturn useValue(\n\t\t'showAutoSizeToggle',\n\t\t() => {\n\t\t\tconst selectedShapes = editor.getSelectedShapes()\n\t\t\treturn (\n\t\t\t\tselectedShapes.length === 1 &&\n\t\t\t\teditor.isShapeOfType<TLTextShape>(selectedShapes[0], 'text') &&\n\t\t\t\tselectedShapes[0].props.autoSize === false\n\t\t\t)\n\t\t},\n\t\t[editor]\n\t)\n}\n\nexport function useHasLinkShapeSelected() {\n\tconst editor = useEditor()\n\treturn useValue(\n\t\t'hasLinkShapeSelected',\n\t\t() => {\n\t\t\tconst onlySelectedShape = editor.getOnlySelectedShape()\n\t\t\treturn !!(\n\t\t\t\tonlySelectedShape &&\n\t\t\t\tonlySelectedShape.type !== 'embed' &&\n\t\t\t\t'url' in onlySelectedShape.props &&\n\t\t\t\t!onlySelectedShape.isLocked\n\t\t\t)\n\t\t},\n\t\t[editor]\n\t)\n}\n\nexport function useOnlyFlippableShape() {\n\tconst editor = useEditor()\n\treturn useValue(\n\t\t'onlyFlippableShape',\n\t\t() => {\n\t\t\tconst shape = editor.getOnlySelectedShape()\n\t\t\treturn (\n\t\t\t\tshape &&\n\t\t\t\t(editor.isShapeOfType<TLGroupShape>(shape, 'group') ||\n\t\t\t\t\teditor.isShapeOfType<TLImageShape>(shape, 'image') ||\n\t\t\t\t\teditor.isShapeOfType<TLArrowShape>(shape, 'arrow') ||\n\t\t\t\t\teditor.isShapeOfType<TLLineShape>(shape, 'line') ||\n\t\t\t\t\teditor.isShapeOfType<TLDrawShape>(shape, 'draw'))\n\t\t\t)\n\t\t},\n\t\t[editor]\n\t)\n}\n\n/** @public */\nexport function useCanRedo() {\n\tconst editor = useEditor()\n\treturn useValue('useCanRedo', () => editor.getCanRedo(), [editor])\n}\n\n/** @public */\nexport function useCanUndo() {\n\tconst editor = useEditor()\n\treturn useValue('useCanUndo', () => editor.getCanUndo(), [editor])\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2424, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useLocalStorageState.ts"],"sourcesContent":["import { getFromLocalStorage, setInLocalStorage } from '@tldraw/editor'\nimport React from 'react'\n\n/** @public */\nexport function useLocalStorageState<T = any>(key: string, defaultValue: T) {\n\tconst [state, setState] = React.useState(defaultValue)\n\n\tReact.useLayoutEffect(() => {\n\t\tconst value = getFromLocalStorage(key)\n\t\tif (value) {\n\t\t\ttry {\n\t\t\t\tsetState(JSON.parse(value))\n\t\t\t} catch {\n\t\t\t\tconsole.error(`Could not restore value ${key} from local storage.`)\n\t\t\t}\n\t\t}\n\t}, [key])\n\n\tconst updateValue = React.useCallback(\n\t\t(setter: T | ((value: T) => T)) => {\n\t\t\tsetState((s) => {\n\t\t\t\tconst value = typeof setter === 'function' ? (setter as any)(s) : setter\n\t\t\t\tsetInLocalStorage(key, JSON.stringify(value))\n\t\t\t\treturn value\n\t\t\t})\n\t\t},\n\t\t[key]\n\t)\n\n\treturn [state, updateValue] as const\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,qBAAqB,yBAAyB;;AACvD,OAAO,WAAW;;;AAGX,SAAS,qBAA8B,GAAA,EAAa,YAAA,EAAiB;IAC3E,MAAM,CAAC,OAAO,QAAQ,CAAA,iKAAI,UAAA,CAAM,QAAA,CAAS,YAAY;IAErD,6JAAA,CAAA,UAAA,CAAM,eAAA;gDAAgB,MAAM;YAC3B,MAAM,QAAQ,iMAAA,EAAoB,GAAG;YACrC,IAAI,OAAO;gBACV,IAAI;oBACH,SAAS,KAAK,KAAA,CAAM,KAAK,CAAC;gBAC3B,EAAA,OAAQ;oBACP,QAAQ,KAAA,CAAM,CAAA,wBAAA,EAA2B,GAAG,CAAA,oBAAA,CAAsB;gBACnE;YACD;QACD;+CAAG;QAAC,GAAG;KAAC;IAER,MAAM,4KAAc,UAAA,CAAM,WAAA;yDACzB,CAAC,WAAkC;YAClC;iEAAS,CAAC,MAAM;oBACf,MAAM,QAAQ,OAAO,WAAW,aAAc,OAAe,CAAC,IAAI;oBAClE,CAAA,GAAA,sKAAA,CAAA,oBAAA,EAAkB,KAAK,KAAK,SAAA,CAAU,KAAK,CAAC;oBAC5C,OAAO;gBACR,CAAC;;QACF;wDACA;QAAC,GAAG;KAAA;IAGL,OAAO;QAAC;QAAO,WAAW;KAAA;AAC3B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2474, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useRelevantStyles.ts"],"sourcesContent":["import {\n\tDefaultColorStyle,\n\tDefaultDashStyle,\n\tDefaultFillStyle,\n\tDefaultSizeStyle,\n\tReadonlySharedStyleMap,\n\tSharedStyleMap,\n\tStyleProp,\n\tuseEditor,\n\tuseValue,\n} from '@tldraw/editor'\n\nconst selectToolStyles: readonly StyleProp<any>[] = Object.freeze([\n\tDefaultColorStyle,\n\tDefaultDashStyle,\n\tDefaultFillStyle,\n\tDefaultSizeStyle,\n])\n\n/** @public */\nexport function useRelevantStyles(stylesToCheck = selectToolStyles): ReadonlySharedStyleMap | null {\n\tconst editor = useEditor()\n\treturn useValue(\n\t\t'getRelevantStyles',\n\t\t() => {\n\t\t\tconst styles = new SharedStyleMap(editor.getSharedStyles())\n\t\t\tconst isInShapeSpecificTool = !!editor.root.getCurrent()?.shapeType\n\t\t\tconst hasShapesSelected = editor.isIn('select') && editor.getSelectedShapeIds().length > 0\n\n\t\t\tif (styles.size === 0 && editor.isIn('select') && editor.getSelectedShapeIds().length === 0) {\n\t\t\t\tfor (const style of stylesToCheck) {\n\t\t\t\t\tstyles.applyValue(style, editor.getStyleForNextShape(style))\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isInShapeSpecificTool || hasShapesSelected || styles.size > 0) {\n\t\t\t\t// If size is 0 we may still want to return an empty styles map to allow\n\t\t\t\t// the opacity slider to show up.\n\t\t\t\t// This can happen in two situations:\n\t\t\t\t// 1. When the user is in the select tool and has multiple shapes selected but they have no supported styles (beyond opacity).\n\t\t\t\t// 2. When the user is in a shape-specific tool and the shape has no supported styles (beyond opacity obvs).\n\t\t\t\treturn styles\n\t\t\t}\n\n\t\t\treturn null\n\t\t},\n\t\t[editor]\n\t)\n}\n"],"names":[],"mappings":";;;AAAA;;;;;;;;;AAYA,MAAM,mBAA8C,OAAO,MAAA,CAAO;sLACjE,oBAAA;qLACA,mBAAA;qLACA,mBAAA;qLACA,mBAAA;CACA;AAGM,SAAS,kBAAkB,gBAAgB,gBAAA,EAAiD;IAClG,MAAM,UAAS,kMAAA,CAAU;IACzB,4LAAO,WAAA,EACN;sCACA,MAAM;YACL,MAAM,SAAS,6LAAI,iBAAA,CAAe,OAAO,eAAA,CAAgB,CAAC;YAC1D,MAAM,wBAAwB,CAAC,CAAC,OAAO,IAAA,CAAK,UAAA,CAAW,GAAG;YAC1D,MAAM,oBAAoB,OAAO,IAAA,CAAK,QAAQ,KAAK,OAAO,mBAAA,CAAoB,EAAE,MAAA,GAAS;YAEzF,IAAI,OAAO,IAAA,KAAS,KAAK,OAAO,IAAA,CAAK,QAAQ,KAAK,OAAO,mBAAA,CAAoB,EAAE,MAAA,KAAW,GAAG;gBAC5F,KAAA,MAAW,SAAS,cAAe;oBAClC,OAAO,UAAA,CAAW,OAAO,OAAO,oBAAA,CAAqB,KAAK,CAAC;gBAC5D;YACD;YAEA,IAAI,yBAAyB,qBAAqB,OAAO,IAAA,GAAO,GAAG;gBAMlE,OAAO;YACR;YAEA,OAAO;QACR;qCACA;QAAC,MAAM;KAAA;AAET","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2521, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useKeyboardShortcuts.ts"],"sourcesContent":["import {\n\tEditor,\n\tTLPointerEventInfo,\n\tisAccelKey,\n\tpreventDefault,\n\tuseEditor,\n\tuseValue,\n} from '@tldraw/editor'\nimport hotkeys from 'hotkeys-js'\nimport { useEffect } from 'react'\nimport { useActions } from '../context/actions'\nimport { useReadonly } from './useReadonly'\nimport { useTools } from './useTools'\n\nconst SKIP_KBDS = [\n\t// we set these in useNativeClipboardEvents instead\n\t'copy',\n\t'cut',\n\t'paste',\n\t// There's also an upload asset action, so we don't want to set the kbd twice\n\t'asset',\n]\n\n/** @public */\nexport function useKeyboardShortcuts() {\n\tconst editor = useEditor()\n\n\tconst isReadonlyMode = useReadonly()\n\tconst actions = useActions()\n\tconst tools = useTools()\n\tconst isFocused = useValue('is focused', () => editor.getInstanceState().isFocused, [editor])\n\tuseEffect(() => {\n\t\tif (!isFocused) return\n\n\t\tconst disposables = new Array<() => void>()\n\t\tconst container = editor.getContainer()\n\n\t\tconst hot = (keys: string, callback: (event: KeyboardEvent) => void) => {\n\t\t\thotkeys(keys, { element: container.ownerDocument.body }, callback)\n\t\t\tdisposables.push(() => {\n\t\t\t\thotkeys.unbind(keys, callback)\n\t\t\t})\n\t\t}\n\n\t\tconst hotUp = (keys: string, callback: (event: KeyboardEvent) => void) => {\n\t\t\thotkeys(\n\t\t\t\tkeys,\n\t\t\t\t{ element: container.ownerDocument.body, keyup: true, keydown: false },\n\t\t\t\tcallback\n\t\t\t)\n\t\t\tdisposables.push(() => {\n\t\t\t\thotkeys.unbind(keys, callback)\n\t\t\t})\n\t\t}\n\n\t\t// Add hotkeys for actions and tools.\n\t\t// Except those that in SKIP_KBDS!\n\t\tfor (const action of Object.values(actions)) {\n\t\t\tif (!action.kbd) continue\n\t\t\tif (isReadonlyMode && !action.readonlyOk) continue\n\t\t\tif (SKIP_KBDS.includes(action.id)) continue\n\n\t\t\thot(getHotkeysStringFromKbd(action.kbd), (event) => {\n\t\t\t\tif (areShortcutsDisabled(editor) && !action.isRequiredA11yAction) return\n\t\t\t\tpreventDefault(event)\n\t\t\t\taction.onSelect('kbd')\n\t\t\t})\n\t\t}\n\n\t\tfor (const tool of Object.values(tools)) {\n\t\t\tif (!tool.kbd || (!tool.readonlyOk && editor.getIsReadonly())) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tif (SKIP_KBDS.includes(tool.id)) continue\n\n\t\t\thot(getHotkeysStringFromKbd(tool.kbd), (event) => {\n\t\t\t\tif (areShortcutsDisabled(editor)) return\n\t\t\t\tpreventDefault(event)\n\t\t\t\ttool.onSelect('kbd')\n\t\t\t})\n\t\t}\n\n\t\thot(',', (e) => {\n\t\t\t// Skip if shortcuts are disabled\n\t\t\tif (areShortcutsDisabled(editor)) return\n\n\t\t\t// Don't press again if already pressed\n\t\t\tif (editor.inputs.keys.has('Comma')) return\n\n\t\t\tpreventDefault(e) // prevent whatever would normally happen\n\t\t\teditor.focus() // Focus if not already focused\n\n\t\t\teditor.inputs.keys.add('Comma')\n\n\t\t\tconst { x, y, z } = editor.inputs.currentPagePoint\n\t\t\tconst screenpoints = editor.pageToScreen({ x, y })\n\n\t\t\tconst info: TLPointerEventInfo = {\n\t\t\t\ttype: 'pointer',\n\t\t\t\tname: 'pointer_down',\n\t\t\t\tpoint: { x: screenpoints.x, y: screenpoints.y, z },\n\t\t\t\tshiftKey: e.shiftKey,\n\t\t\t\taltKey: e.altKey,\n\t\t\t\tctrlKey: e.metaKey || e.ctrlKey,\n\t\t\t\tmetaKey: e.metaKey,\n\t\t\t\taccelKey: isAccelKey(e),\n\t\t\t\tpointerId: 0,\n\t\t\t\tbutton: 0,\n\t\t\t\tisPen: editor.getInstanceState().isPenMode,\n\t\t\t\ttarget: 'canvas',\n\t\t\t}\n\n\t\t\teditor.dispatch(info)\n\t\t})\n\n\t\thotUp(',', (e) => {\n\t\t\tif (areShortcutsDisabled(editor)) return\n\t\t\tif (!editor.inputs.keys.has('Comma')) return\n\n\t\t\teditor.inputs.keys.delete('Comma')\n\n\t\t\tconst { x, y, z } = editor.inputs.currentScreenPoint\n\t\t\tconst info: TLPointerEventInfo = {\n\t\t\t\ttype: 'pointer',\n\t\t\t\tname: 'pointer_up',\n\t\t\t\tpoint: { x, y, z },\n\t\t\t\tshiftKey: e.shiftKey,\n\t\t\t\taltKey: e.altKey,\n\t\t\t\tctrlKey: e.metaKey || e.ctrlKey,\n\t\t\t\tmetaKey: e.metaKey,\n\t\t\t\taccelKey: isAccelKey(e),\n\t\t\t\tpointerId: 0,\n\t\t\t\tbutton: 0,\n\t\t\t\tisPen: editor.getInstanceState().isPenMode,\n\t\t\t\ttarget: 'canvas',\n\t\t\t}\n\n\t\t\teditor.dispatch(info)\n\t\t})\n\n\t\treturn () => {\n\t\t\tdisposables.forEach((d) => d())\n\t\t}\n\t}, [actions, tools, isReadonlyMode, editor, isFocused])\n}\n\nexport function areShortcutsDisabled(editor: Editor) {\n\treturn (\n\t\teditor.menus.hasAnyOpenMenus() ||\n\t\teditor.getEditingShapeId() !== null ||\n\t\teditor.getCrashingError() ||\n\t\t!editor.user.getAreKeyboardShortcutsEnabled()\n\t)\n}\n\n// The \"raw\" kbd here will look something like \"a\" or a combination of keys \"del,backspace\".\n// We need to first split them up by comma, then parse each key to ensure backwards compatibility\n// with the old kbd format. We used to have symbols to denote cmd/alt/shift,\n// using ! for shift, $ for cmd, and ? for alt.\nfunction getHotkeysStringFromKbd(kbd: string) {\n\treturn getKeys(kbd)\n\t\t.map((kbd) => {\n\t\t\tlet str = ''\n\n\t\t\tconst shift = kbd.includes('!')\n\t\t\tconst alt = kbd.includes('?')\n\t\t\tconst cmd = kbd.includes('$')\n\n\t\t\t// remove the modifiers; the remaining string are the actual key\n\t\t\tconst k = kbd.replace(/[!?$]/g, '')\n\n\t\t\tif (shift && alt && cmd) {\n\t\t\t\tstr = `cmd+shift+alt+${k},ctrl+shift+alt+${k}`\n\t\t\t} else if (shift && cmd) {\n\t\t\t\tstr = `cmd+shift+${k},ctrl+shift+${k}`\n\t\t\t} else if (alt && cmd) {\n\t\t\t\tstr = `cmd+alt+${k},ctrl+alt+${k}`\n\t\t\t} else if (alt && shift) {\n\t\t\t\tstr = `shift+alt+${k}`\n\t\t\t} else if (shift) {\n\t\t\t\tstr = `shift+${k}`\n\t\t\t} else if (alt) {\n\t\t\t\tstr = `alt+${k}`\n\t\t\t} else if (cmd) {\n\t\t\t\tstr = `cmd+${k},ctrl+${k}`\n\t\t\t} else {\n\t\t\t\tstr = k\n\t\t\t}\n\n\t\t\treturn str\n\t\t})\n\t\t.join(',')\n}\n\n// Logic to split kbd string from hotkeys-js util.\nfunction getKeys(key: string) {\n\tif (typeof key !== 'string') key = ''\n\tkey = key.replace(/\\s/g, '')\n\tconst keys = key.split(',')\n\tlet index = keys.lastIndexOf('')\n\n\tfor (; index >= 0; ) {\n\t\tkeys[index - 1] += ','\n\t\tkeys.splice(index, 1)\n\t\tindex = keys.lastIndexOf('')\n\t}\n\n\treturn keys\n}\n"],"names":["kbd"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2741, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/tldraw/src/lib/ui/hooks/useEditorEvents.ts"],"sourcesContent":["import { useEditor } from '@tldraw/editor'\nimport { useEffect } from 'react'\nimport { useToasts } from '../context/toasts'\n\n/** @internal */\nexport function useEditorEvents() {\n\tconst editor = useEditor()\n\tconst { addToast } = useToasts()\n\n\tuseEffect(() => {\n\t\tfunction handleMaxShapes({ name, count }: { name: string; pageId: string; count: number }) {\n\t\t\taddToast({\n\t\t\t\ttitle: 'Maximum Shapes Reached',\n\t\t\t\tdescription: `You've reached the maximum number of shapes allowed on ${name} (${count}). Please delete some shapes or move to a different page to continue.`,\n\t\t\t\tseverity: 'warning',\n\t\t\t})\n\t\t}\n\n\t\teditor.addListener('max-shapes', handleMaxShapes)\n\t\treturn () => {\n\t\t\teditor.removeListener('max-shapes', handleMaxShapes)\n\t\t}\n\t}, [editor, addToast])\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,iBAAiB;;AAC1B,SAAS,iBAAiB;AAC1B,SAAS,iBAAiB;;;;AAGnB,SAAS,kBAAkB;IACjC,MAAM,gMAAS,YAAA,CAAU;IACzB,MAAM,EAAE,QAAA,CAAS,CAAA,GAAI,4LAAA,CAAU;IAE/B,CAAA,GAAA,6JAAA,CAAA,YAAA;qCAAU,MAAM;YACf,SAAS,gBAAgB,EAAE,IAAA,EAAM,KAAA,CAAM,CAAA,EAAoD;gBAC1F,SAAS;oBACR,OAAO;oBACP,aAAa,CAAA,uDAAA,EAA0D,IAAI,CAAA,EAAA,EAAK,KAAK,CAAA,qEAAA,CAAA;oBACrF,UAAU;gBACX,CAAC;YACF;YAEA,OAAO,WAAA,CAAY,cAAc,eAAe;YAChD;6CAAO,MAAM;oBACZ,OAAO,cAAA,CAAe,cAAc,eAAe;gBACpD;;QACD;oCAAG;QAAC;QAAQ,QAAQ;KAAC;AACtB","ignoreList":[0],"debugId":null}}]
}