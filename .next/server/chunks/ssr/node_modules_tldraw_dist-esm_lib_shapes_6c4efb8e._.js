module.exports = {

"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/PathBuilder.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "PathBuilder": (()=>PathBuilder),
    "PathBuilderGeometry2d": (()=>PathBuilderGeometry2d)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$CubicBezier2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/CubicBezier2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Edge2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Edge2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Geometry2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Geometry2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$shared$2f$getPerfectDashProps$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/shared/getPerfectDashProps.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$geometry$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/geometry-constants.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Group2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Group2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
;
;
class PathBuilder {
    static lineThroughPoints(points, opts) {
        const path = new PathBuilder();
        path.moveTo(points[0].x, points[0].y, {
            ...opts,
            offset: opts?.endOffsets ?? opts?.offset
        });
        for(let i = 1; i < points.length; i++){
            const isLast = i === points.length - 1;
            path.lineTo(points[i].x, points[i].y, isLast ? {
                offset: opts?.endOffsets
            } : void 0);
        }
        return path;
    }
    static cubicSplineThroughPoints(points, opts) {
        const path = new PathBuilder();
        const len = points.length;
        const last = len - 2;
        const k = 1.25;
        path.moveTo(points[0].x, points[0].y, {
            ...opts,
            offset: opts?.endOffsets ?? opts?.offset
        });
        for(let i = 0; i < len - 1; i++){
            const p0 = i === 0 ? points[0] : points[i - 1];
            const p1 = points[i];
            const p2 = points[i + 1];
            const p3 = i === last ? p2 : points[i + 2];
            let cp1x, cp1y, cp2x, cp2y;
            if (i === 0) {
                cp1x = p0.x;
                cp1y = p0.y;
            } else {
                cp1x = p1.x + (p2.x - p0.x) / 6 * k;
                cp1y = p1.y + (p2.y - p0.y) / 6 * k;
            }
            let pointOpts = void 0;
            if (i === last) {
                cp2x = p2.x;
                cp2y = p2.y;
                pointOpts = {
                    offset: opts?.endOffsets
                };
            } else {
                cp2x = p2.x - (p3.x - p1.x) / 6 * k;
                cp2y = p2.y - (p3.y - p1.y) / 6 * k;
            }
            path.cubicBezierTo(p2.x, p2.y, cp1x, cp1y, cp2x, cp2y, pointOpts);
        }
        return path;
    }
    constructor(){}
    /** @internal */ commands = [];
    lastMoveTo = null;
    assertHasMoveTo() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assert"])(this.lastMoveTo, "Start an SVGPathBuilder with `.moveTo()`");
        return this.lastMoveTo;
    }
    moveTo(x, y, opts) {
        this.lastMoveTo = {
            type: "move",
            x,
            y,
            closeIdx: null,
            isClose: false,
            opts
        };
        this.commands.push(this.lastMoveTo);
        return this;
    }
    lineTo(x, y, opts) {
        this.assertHasMoveTo();
        this.commands.push({
            type: "line",
            x,
            y,
            isClose: false,
            opts
        });
        return this;
    }
    circularArcTo(radius, largeArcFlag, sweepFlag, x2, y2, opts) {
        return this.arcTo(radius, radius, largeArcFlag, sweepFlag, 0, x2, y2, opts);
    }
    arcTo(rx, ry, largeArcFlag, sweepFlag, xAxisRotationRadians, x2, y2, opts) {
        this.assertHasMoveTo();
        const x1 = this.commands[this.commands.length - 1].x;
        const y1 = this.commands[this.commands.length - 1].y;
        if (x1 === x2 && y1 === y2) {
            return this;
        }
        if (rx === 0 || ry === 0) {
            return this.lineTo(x2, y2, opts);
        }
        const phi = xAxisRotationRadians;
        const sinPhi = Math.sin(phi);
        const cosPhi = Math.cos(phi);
        let rx1 = Math.abs(rx);
        let ry1 = Math.abs(ry);
        const dx = (x1 - x2) / 2;
        const dy = (y1 - y2) / 2;
        const x1p = cosPhi * dx + sinPhi * dy;
        const y1p = -sinPhi * dx + cosPhi * dy;
        const lambda = x1p * x1p / (rx1 * rx1) + y1p * y1p / (ry1 * ry1);
        if (lambda > 1) {
            const sqrtLambda = Math.sqrt(lambda);
            rx1 *= sqrtLambda;
            ry1 *= sqrtLambda;
        }
        const sign = largeArcFlag !== sweepFlag ? 1 : -1;
        const term = rx1 * rx1 * ry1 * ry1 - rx1 * rx1 * y1p * y1p - ry1 * ry1 * x1p * x1p;
        const numerator = rx1 * rx1 * y1p * y1p + ry1 * ry1 * x1p * x1p;
        let radicand = term / numerator;
        radicand = radicand < 0 ? 0 : radicand;
        const coef = sign * Math.sqrt(radicand);
        const cxp = coef * (rx1 * y1p / ry1);
        const cyp = coef * (-(ry1 * x1p) / rx1);
        const cx = cosPhi * cxp - sinPhi * cyp + (x1 + x2) / 2;
        const cy = sinPhi * cxp + cosPhi * cyp + (y1 + y2) / 2;
        const ux = (x1p - cxp) / rx1;
        const uy = (y1p - cyp) / ry1;
        const vx = (-x1p - cxp) / rx1;
        const vy = (-y1p - cyp) / ry1;
        const startAngle = Math.atan2(uy, ux);
        let endAngle = Math.atan2(vy, vx);
        if (!sweepFlag && endAngle > startAngle) {
            endAngle -= 2 * Math.PI;
        } else if (sweepFlag && endAngle < startAngle) {
            endAngle += 2 * Math.PI;
        }
        const sweepAngle = endAngle - startAngle;
        const approximateArcLength = Math.max(rx1, ry1) * Math.abs(sweepAngle);
        const numSegments = Math.min(4, Math.ceil(Math.abs(sweepAngle) / (Math.PI / 2)));
        const resolutionPerSegment = Math.ceil((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$geometry$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getVerticesCountForArcLength"])(approximateArcLength) / numSegments);
        const anglePerSegment = sweepAngle / numSegments;
        const ellipsePoint = (angle)=>{
            return {
                x: cx + rx1 * Math.cos(angle) * cosPhi - ry1 * Math.sin(angle) * sinPhi,
                y: cy + rx1 * Math.cos(angle) * sinPhi + ry1 * Math.sin(angle) * cosPhi
            };
        };
        const ellipseDerivative = (angle)=>{
            return {
                x: -rx1 * Math.sin(angle) * cosPhi - ry1 * Math.cos(angle) * sinPhi,
                y: -rx1 * Math.sin(angle) * sinPhi + ry1 * Math.cos(angle) * cosPhi
            };
        };
        for(let i = 0; i < numSegments; i++){
            const theta1 = startAngle + i * anglePerSegment;
            const theta2 = startAngle + (i + 1) * anglePerSegment;
            const deltaTheta = theta2 - theta1;
            const start = ellipsePoint(theta1);
            const end = ellipsePoint(theta2);
            const d1 = ellipseDerivative(theta1);
            const d2 = ellipseDerivative(theta2);
            const handleScale = 4 / 3 * Math.tan(deltaTheta / 4);
            const cp1x = start.x + handleScale * d1.x;
            const cp1y = start.y + handleScale * d1.y;
            const cp2x = end.x - handleScale * d2.x;
            const cp2y = end.y - handleScale * d2.y;
            const bezierOpts = i === 0 ? opts : {
                ...opts,
                mergeWithPrevious: true
            };
            this.cubicBezierToWithResolution(end.x, end.y, cp1x, cp1y, cp2x, cp2y, bezierOpts, resolutionPerSegment);
        }
        return this;
    }
    cubicBezierTo(x, y, cp1X, cp1Y, cp2X, cp2Y, opts) {
        return this.cubicBezierToWithResolution(x, y, cp1X, cp1Y, cp2X, cp2Y, opts);
    }
    cubicBezierToWithResolution(x, y, cp1X, cp1Y, cp2X, cp2Y, opts, resolution) {
        this.assertHasMoveTo();
        this.commands.push({
            type: "cubic",
            x,
            y,
            cp1: {
                x: cp1X,
                y: cp1Y
            },
            cp2: {
                x: cp2X,
                y: cp2Y
            },
            isClose: false,
            opts,
            resolution
        });
        return this;
    }
    close() {
        const lastMoveTo = this.assertHasMoveTo();
        const lastCommand = this.commands[this.commands.length - 1];
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["approximately"])(lastMoveTo.x, lastCommand.x) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["approximately"])(lastMoveTo.y, lastCommand.y)) {
            lastCommand.isClose = true;
        } else {
            this.commands.push({
                type: "line",
                x: lastMoveTo.x,
                y: lastMoveTo.y,
                isClose: true
            });
        }
        lastMoveTo.closeIdx = this.commands.length - 1;
        this.lastMoveTo = null;
        return this;
    }
    toD(opts = {}) {
        const { startIdx = 0, endIdx = this.commands.length, onlyFilled = false } = opts;
        const parts = [];
        let isSkippingCurrentLine = false;
        let didAddMove = false;
        let didAddNaturalMove = false;
        const addMoveIfNeeded = (i)=>{
            if (didAddMove || i === 0) return;
            didAddMove = true;
            const command = this.commands[i - 1];
            parts.push("M", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(command.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(command.y));
        };
        for(let i = startIdx; i < endIdx; i++){
            const command = this.commands[i];
            switch(command.type){
                case "move":
                    {
                        const isFilled = command.opts?.geometry === false ? false : command.opts?.geometry?.isFilled ?? false;
                        if (onlyFilled && !isFilled) {
                            isSkippingCurrentLine = true;
                        } else {
                            isSkippingCurrentLine = false;
                            didAddMove = true;
                            didAddNaturalMove = true;
                            parts.push("M", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(command.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(command.y));
                        }
                        break;
                    }
                case "line":
                    if (isSkippingCurrentLine) break;
                    addMoveIfNeeded(i);
                    if (command.isClose && didAddNaturalMove) {
                        parts.push("Z");
                    } else {
                        parts.push("L", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(command.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(command.y));
                    }
                    break;
                case "cubic":
                    if (isSkippingCurrentLine) break;
                    addMoveIfNeeded(i);
                    parts.push("C", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(command.cp1.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(command.cp1.y), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(command.cp2.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(command.cp2.y), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(command.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(command.y));
                    break;
                default:
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(command, "type");
            }
        }
        return parts.join(" ");
    }
    toSvg(opts) {
        if (opts.forceSolid) {
            return this.toSolidSvg(opts);
        }
        switch(opts.style){
            case "solid":
                return this.toSolidSvg(opts);
            case "dashed":
            case "dotted":
                return this.toDashedSvg(opts);
            case "draw":
                {
                    const d = this.toDrawSvg(opts);
                    return d;
                }
            default:
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(opts, "style");
        }
    }
    toGeometry() {
        const geometries = [];
        let current = null;
        for(let i = 0; i < this.commands.length; i++){
            const command = this.commands[i];
            if (command.type === "move") {
                if (current && current.opts?.geometry !== false) {
                    geometries.push(new PathBuilderGeometry2d(this, current.startIdx, i, {
                        ...current.opts?.geometry,
                        isFilled: current.opts?.geometry?.isFilled ?? false,
                        isClosed: current.moveCommand.closeIdx !== null
                    }));
                }
                current = {
                    startIdx: i,
                    moveCommand: command,
                    opts: command.opts,
                    isClosed: false
                };
            }
            if (command.isClose) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assert"])(current, "No current move command");
                current.isClosed = true;
            }
        }
        if (current && current.opts?.geometry !== false) {
            geometries.push(new PathBuilderGeometry2d(this, current.startIdx, this.commands.length, {
                ...current.opts?.geometry,
                isFilled: current.opts?.geometry?.isFilled ?? false,
                isClosed: current.moveCommand.closeIdx !== null
            }));
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assert"])(geometries.length > 0);
        if (geometries.length === 1) return geometries[0];
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Group2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Group2d"]({
            children: geometries
        });
    }
    toSolidSvg(opts) {
        const { strokeWidth, props } = opts;
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
            strokeWidth,
            d: this.toD({
                onlyFilled: opts.onlyFilled
            }),
            ...props
        });
    }
    toDashedSvg(opts) {
        const { style, strokeWidth, snap, lengthRatio, props: { markerStart, markerEnd, ...props } = {} } = opts;
        const parts = [];
        let isCurrentPathClosed = false;
        let isSkippingCurrentLine = false;
        let currentLineOpts = void 0;
        let currentRun = null;
        const addCurrentRun = ()=>{
            if (!currentRun) return;
            const { startIdx, endIdx, isFirst, isLast, length, lineOpts, pathIsClosed } = currentRun;
            currentRun = null;
            if (startIdx === endIdx && this.commands[startIdx].type === "move") return;
            const start = lineOpts?.dashStart ?? opts.start;
            const end = lineOpts?.dashEnd ?? opts.end;
            const { strokeDasharray, strokeDashoffset } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$shared$2f$getPerfectDashProps$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPerfectDashProps"])(length, strokeWidth, {
                style,
                snap,
                lengthRatio,
                start: isFirst ? start ?? (pathIsClosed ? "outset" : "none") : "outset",
                end: isLast ? end ?? (pathIsClosed ? "outset" : "none") : "outset"
            });
            const d = this.toD({
                startIdx,
                endIdx: endIdx + 1
            });
            parts.push(/* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
                d,
                strokeDasharray,
                strokeDashoffset,
                markerStart: isFirst ? markerStart : void 0,
                markerEnd: isLast ? markerEnd : void 0
            }, parts.length));
        };
        for(let i = 0; i < this.commands.length; i++){
            const command = this.commands[i];
            const lastCommand = this.commands[i - 1];
            if (command.type === "move") {
                isCurrentPathClosed = command.closeIdx !== null;
                const isFilled = command.opts?.geometry === false ? false : command.opts?.geometry?.isFilled ?? false;
                if (opts.onlyFilled && !isFilled) {
                    isSkippingCurrentLine = true;
                } else {
                    isSkippingCurrentLine = false;
                    currentLineOpts = command.opts;
                }
                continue;
            }
            if (isSkippingCurrentLine) continue;
            const segmentLength = this.calculateSegmentLength(lastCommand, command);
            const isFirst = lastCommand.type === "move";
            const isLast = command.isClose || i === this.commands.length - 1 || this.commands[i + 1]?.type === "move";
            if (currentRun && command.opts?.mergeWithPrevious) {
                currentRun.length += segmentLength;
                currentRun.endIdx = i;
                currentRun.isLast = isLast;
            } else {
                addCurrentRun();
                currentRun = {
                    startIdx: i,
                    endIdx: i,
                    isFirst,
                    isLast,
                    length: segmentLength,
                    lineOpts: currentLineOpts,
                    pathIsClosed: isCurrentPathClosed
                };
            }
        }
        addCurrentRun();
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("g", {
            strokeWidth,
            ...props,
            children: parts
        });
    }
    toDrawSvg(opts) {
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
            strokeWidth: opts.strokeWidth,
            d: this.toDrawD(opts),
            ...opts.props
        });
    }
    toDrawD(opts) {
        const { strokeWidth, randomSeed, offset: defaultOffset = strokeWidth / 3, roundness: defaultRoundness = strokeWidth * 2, passes = 2, onlyFilled = false } = opts;
        const parts = [];
        const commandInfo = this.getCommandInfo();
        const drawCommands = [];
        let lastMoveCommandIdx = null;
        for(let i = 0; i < this.commands.length; i++){
            const command = this.commands[i];
            const offset = command.opts?.offset ?? defaultOffset;
            const roundness = command.opts?.roundness ?? defaultRoundness;
            if (command.type === "move") {
                lastMoveCommandIdx = i;
            }
            const nextIdx = command.isClose ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assertExists"])(lastMoveCommandIdx) + 1 : !this.commands[i + 1] || this.commands[i + 1].type === "move" ? void 0 : i + 1;
            const nextInfo = nextIdx !== void 0 && this.commands[nextIdx] && this.commands[nextIdx]?.type !== "move" ? commandInfo[nextIdx] : void 0;
            const currentSupportsRoundness = commandsSupportingRoundness[command.type];
            const nextSupportsRoundness = nextIdx !== void 0 ? commandsSupportingRoundness[this.commands[nextIdx].type] : false;
            const currentInfo = commandInfo[i];
            const tangentToPrev = currentInfo?.tangentEnd;
            const tangentToNext = nextInfo?.tangentStart;
            const roundnessClampedForAngle = currentSupportsRoundness && nextSupportsRoundness && tangentToPrev && tangentToNext && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Len2(tangentToPrev) > 0.01 && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Len2(tangentToNext) > 0.01 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["modulate"])(Math.abs(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].AngleBetween(tangentToPrev, tangentToNext)), [
                Math.PI / 2,
                Math.PI
            ], [
                roundness,
                0
            ], true) : 0;
            const shortestDistance = Math.min(currentInfo?.length ?? Infinity, nextInfo?.length ?? Infinity);
            const offsetLimit = shortestDistance - roundnessClampedForAngle * 2;
            const offsetAmount = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(offset, 0, offsetLimit / 4);
            const roundnessBeforeClampedForLength = Math.min(roundnessClampedForAngle, (currentInfo?.length ?? Infinity) / 4);
            const roundnessAfterClampedForLength = Math.min(roundnessClampedForAngle, (nextInfo?.length ?? Infinity) / 4);
            const drawCommand = {
                command,
                offsetAmount,
                roundnessBefore: roundnessBeforeClampedForLength,
                roundnessAfter: roundnessAfterClampedForLength,
                tangentToPrev: commandInfo[i]?.tangentEnd,
                tangentToNext: nextInfo?.tangentStart,
                moveDidClose: false
            };
            drawCommands.push(drawCommand);
            if (command.isClose && lastMoveCommandIdx !== null) {
                const lastMoveCommand = drawCommands[lastMoveCommandIdx];
                lastMoveCommand.moveDidClose = true;
                lastMoveCommand.roundnessAfter = roundnessAfterClampedForLength;
            } else if (command.type === "move") {
                lastMoveCommandIdx = i;
            }
        }
        for(let pass = 0; pass < passes; pass++){
            const random = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rng"])(randomSeed + pass);
            let lastMoveToOffset = {
                x: 0,
                y: 0
            };
            let isSkippingCurrentLine = false;
            for (const { command, offsetAmount, roundnessBefore, roundnessAfter, tangentToNext, tangentToPrev } of drawCommands){
                const offset = command.isClose ? lastMoveToOffset : {
                    x: random() * offsetAmount,
                    y: random() * offsetAmount
                };
                if (command.type === "move") {
                    lastMoveToOffset = offset;
                    const isFilled = command.opts?.geometry === false ? false : command.opts?.geometry?.isFilled ?? false;
                    if (onlyFilled && !isFilled) {
                        isSkippingCurrentLine = true;
                    } else {
                        isSkippingCurrentLine = false;
                    }
                }
                if (isSkippingCurrentLine) continue;
                const offsetPoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(command, offset);
                const endPoint = tangentToNext && roundnessAfter > 0 ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(tangentToNext, -roundnessAfter).add(offsetPoint) : offsetPoint;
                const startPoint = tangentToPrev && roundnessBefore > 0 ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(tangentToPrev, roundnessBefore).add(offsetPoint) : offsetPoint;
                if (endPoint === offsetPoint || startPoint === offsetPoint) {
                    switch(command.type){
                        case "move":
                            parts.push("M", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(endPoint.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(endPoint.y));
                            break;
                        case "line":
                            parts.push("L", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(endPoint.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(endPoint.y));
                            break;
                        case "cubic":
                            {
                                const offsetCp1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(command.cp1, offset);
                                const offsetCp2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(command.cp2, offset);
                                parts.push("C", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(offsetCp1.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(offsetCp1.y), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(offsetCp2.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(offsetCp2.y), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(endPoint.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(endPoint.y));
                                break;
                            }
                        default:
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(command, "type");
                    }
                } else {
                    switch(command.type){
                        case "move":
                            parts.push("M", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(endPoint.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(endPoint.y));
                            break;
                        case "line":
                            parts.push("L", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(startPoint.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(startPoint.y), "Q", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(offsetPoint.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(offsetPoint.y), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(endPoint.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(endPoint.y));
                            break;
                        case "cubic":
                            {
                                const offsetCp1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(command.cp1, offset);
                                const offsetCp2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(command.cp2, offset);
                                parts.push("C", (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(offsetCp1.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(offsetCp1.y), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(offsetCp2.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(offsetCp2.y), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(offsetPoint.x), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(offsetPoint.y));
                                break;
                            }
                        default:
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(command, "type");
                    }
                }
            }
        }
        return parts.join(" ");
    }
    calculateSegmentLength(lastPoint, command) {
        switch(command.type){
            case "move":
                return 0;
            case "line":
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(lastPoint, command);
            case "cubic":
                return CubicBezier.length(lastPoint.x, lastPoint.y, command.cp1.x, command.cp1.y, command.cp2.x, command.cp2.y, command.x, command.y);
            default:
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(command, "type");
        }
    }
    /** @internal */ getCommands() {
        return this.commands;
    }
    /** @internal */ getCommandInfo() {
        const commandInfo = [];
        for(let i = 1; i < this.commands.length; i++){
            const previous = this.commands[i - 1];
            const current = this.commands[i];
            if (current._info) {
                commandInfo[i] = current._info;
                continue;
            }
            if (current.type === "move") {
                continue;
            }
            let tangentStart, tangentEnd;
            switch(current.type){
                case "line":
                    tangentStart = tangentEnd = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(previous, current).uni();
                    break;
                case "cubic":
                    {
                        tangentStart = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(current.cp1, previous).uni();
                        tangentEnd = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(current.cp2, current).uni();
                        break;
                    }
                default:
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(current, "type");
            }
            current._info = {
                tangentStart,
                tangentEnd,
                length: this.calculateSegmentLength(previous, current)
            };
            commandInfo[i] = current._info;
        }
        return commandInfo;
    }
}
const commandsSupportingRoundness = {
    line: true,
    move: true,
    cubic: false
};
class PathBuilderGeometry2d extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Geometry2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Geometry2d"] {
    constructor(path, startIdx, endIdx, options){
        super(options);
        this.path = path;
        this.startIdx = startIdx;
        this.endIdx = endIdx;
    }
    _segments = null;
    getSegments() {
        if (this._segments) return this._segments;
        this._segments = [];
        let last = this.path.commands[this.startIdx];
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assert"])(last.type === "move");
        for(let i = this.startIdx + 1; i < this.endIdx; i++){
            const command = this.path.commands[i];
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assert"])(command.type !== "move");
            switch(command.type){
                case "line":
                    this._segments.push(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Edge2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Edge2d"]({
                        start: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(last),
                        end: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(command)
                    }));
                    break;
                case "cubic":
                    {
                        this._segments.push(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$CubicBezier2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CubicBezier2d"]({
                            start: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(last),
                            cp1: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(command.cp1),
                            cp2: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(command.cp2),
                            end: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(command),
                            resolution: command.resolution
                        }));
                        break;
                    }
                default:
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(command, "type");
            }
            last = command;
        }
        return this._segments;
    }
    getVertices(filters) {
        const vs = this.getSegments().flatMap((s)=>s.getVertices(filters)).filter((vertex, i, vertices)=>{
            const prev = vertices[i - 1];
            if (!prev) return true;
            return !__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Equals(prev, vertex);
        });
        if (this.isClosed) {
            const last = vs[vs.length - 1];
            const first = vs[0];
            if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Equals(last, first)) {
                vs.push(first);
            }
        }
        return vs;
    }
    nearestPoint(point, _filters) {
        let nearest = null;
        let nearestDistance = Infinity;
        for (const segment of this.getSegments()){
            const candidate = segment.nearestPoint(point);
            const distance = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(point, candidate);
            if (distance < nearestDistance) {
                nearestDistance = distance;
                nearest = candidate;
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assert"])(nearest, "No nearest point found");
        return nearest;
    }
    hitTestLineSegment(A, B, distance = 0, filters) {
        return super.hitTestLineSegment(A, B, distance, filters);
    }
    getSvgPathData() {
        return this.path.toD({
            startIdx: this.startIdx,
            endIdx: this.endIdx
        });
    }
}
/*!
 * Adapted from https://github.com/adobe-webplatform/Snap.svg/tree/master
 * Apache License: https://github.com/adobe-webplatform/Snap.svg/blob/master/LICENSE
 * https://github.com/adobe-webplatform/Snap.svg/blob/c8e483c9694517e24b282f8f59f985629f4994ce/dist/snap.svg.js#L5786
 */ const CubicBezier = {
    base3 (t, p1, p2, p3, p4) {
        const t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4;
        const t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;
        return t * t2 - 3 * p1 + 3 * p2;
    },
    /**
   * Calculate the approximate length of a cubic bezier curve from (x1, y1) to (x4, y4) with
   * control points (x2, y2) and (x3, y3).
   */ length (x1, y1, x2, y2, x3, y3, x4, y4, z = 1) {
        z = z > 1 ? 1 : z < 0 ? 0 : z;
        const z2 = z / 2;
        const n = 12;
        let sum = 0;
        sum = 0;
        for(let i = 0; i < n; i++){
            const ct = z2 * CubicBezier.Tvalues[i] + z2;
            const xbase = CubicBezier.base3(ct, x1, x2, x3, x4);
            const ybase = CubicBezier.base3(ct, y1, y2, y3, y4);
            const comb = xbase * xbase + ybase * ybase;
            sum += CubicBezier.Cvalues[i] * Math.sqrt(comb);
        }
        return z2 * sum;
    },
    Tvalues: [
        -0.1252,
        0.1252,
        -0.3678,
        0.3678,
        -0.5873,
        0.5873,
        -0.7699,
        0.7699,
        -0.9041,
        0.9041,
        -0.9816,
        0.9816
    ],
    Cvalues: [
        0.2491,
        0.2491,
        0.2335,
        0.2335,
        0.2032,
        0.2032,
        0.1601,
        0.1601,
        0.1069,
        0.1069,
        0.0472,
        0.0472
    ]
};
;
 //# sourceMappingURL=PathBuilder.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/usePrefersReducedMotion.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "usePrefersReducedMotion": (()=>usePrefersReducedMotion)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
function usePrefersReducedMotion() {
    const [prefersReducedMotion, setPrefersReducedMotion] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(false);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (typeof window === "undefined" || !("matchMedia" in window)) return;
        const mql = window.matchMedia("(prefers-reduced-motion: reduce)");
        const handler = ()=>{
            setPrefersReducedMotion(mql.matches);
        };
        handler();
        mql.addEventListener("change", handler);
        return ()=>mql.removeEventListener("change", handler);
    }, []);
    return prefersReducedMotion;
}
;
 //# sourceMappingURL=usePrefersReducedMotion.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/straight-arrow.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getStraightArrowInfo": (()=>getStraightArrowInfo)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Mat.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/shared.mjs [app-ssr] (ecmascript)");
;
;
function getStraightArrowInfo(editor, shape, bindings) {
    const { arrowheadStart, arrowheadEnd } = shape.props;
    const terminalsInArrowSpace = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowTerminalsInArrowSpace"])(editor, shape, bindings);
    const a = terminalsInArrowSpace.start.clone();
    const b = terminalsInArrowSpace.end.clone();
    const c = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Med(a, b);
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Equals(a, b)) {
        return {
            bindings,
            type: "straight",
            start: {
                handle: a,
                point: a,
                arrowhead: shape.props.arrowheadStart
            },
            end: {
                handle: b,
                point: b,
                arrowhead: shape.props.arrowheadEnd
            },
            middle: c,
            isValid: false,
            length: 0
        };
    }
    const uAB = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(b, a).uni();
    const startShapeInfo = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getBoundShapeInfoForTerminal"])(editor, shape, "start");
    const endShapeInfo = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getBoundShapeInfoForTerminal"])(editor, shape, "end");
    const arrowPageTransform = editor.getShapePageTransform(shape);
    updateArrowheadPointWithBoundShape(b, // <-- will be mutated
    terminalsInArrowSpace.start, arrowPageTransform, endShapeInfo);
    updateArrowheadPointWithBoundShape(a, // <-- will be mutated
    terminalsInArrowSpace.end, arrowPageTransform, startShapeInfo);
    let offsetA = 0;
    let offsetB = 0;
    let strokeOffsetA = 0;
    let strokeOffsetB = 0;
    let minLength = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MIN_ARROW_LENGTH"] * shape.props.scale;
    const isSelfIntersection = startShapeInfo && endShapeInfo && startShapeInfo.shape === endShapeInfo.shape;
    const relationship = startShapeInfo && endShapeInfo ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getBoundShapeRelationships"])(editor, startShapeInfo.shape.id, endShapeInfo.shape.id) : "safe";
    if (relationship === "safe" && startShapeInfo && endShapeInfo && !isSelfIntersection && !startShapeInfo.isExact && !endShapeInfo.isExact) {
        if (endShapeInfo.didIntersect && !startShapeInfo.didIntersect) {
            if (startShapeInfo.isClosed) {
                a.setTo(b.clone().add(uAB.clone().mul(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MIN_ARROW_LENGTH"] * shape.props.scale)));
            }
        } else if (!endShapeInfo.didIntersect) {
            if (endShapeInfo.isClosed) {
                b.setTo(a.clone().sub(uAB.clone().mul(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MIN_ARROW_LENGTH"] * shape.props.scale)));
            }
        }
    }
    const distance = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(b, a);
    const u = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Len(distance) ? distance.uni() : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(distance);
    const didFlip = !__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Equals(u, uAB);
    if (!isSelfIntersection) {
        if (relationship !== "start-contains-end" && startShapeInfo && arrowheadStart !== "none" && !startShapeInfo.isExact) {
            strokeOffsetA = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape.props.size] / 2 + ("size" in startShapeInfo.shape.props ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][startShapeInfo.shape.props.size] / 2 : 0);
            offsetA = (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BOUND_ARROW_OFFSET"] + strokeOffsetA) * shape.props.scale;
            minLength += strokeOffsetA * shape.props.scale;
        }
        if (relationship !== "end-contains-start" && endShapeInfo && arrowheadEnd !== "none" && !endShapeInfo.isExact) {
            strokeOffsetB = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape.props.size] / 2 + ("size" in endShapeInfo.shape.props ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][endShapeInfo.shape.props.size] / 2 : 0);
            offsetB = (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BOUND_ARROW_OFFSET"] + strokeOffsetB) * shape.props.scale;
            minLength += strokeOffsetB * shape.props.scale;
        }
    }
    const tA = a.clone().add(u.clone().mul(offsetA * (didFlip ? -1 : 1)));
    const tB = b.clone().sub(u.clone().mul(offsetB * (didFlip ? -1 : 1)));
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].DistMin(tA, tB, minLength)) {
        if (offsetA !== 0 && offsetB !== 0) {
            offsetA *= -1.5;
            offsetB *= -1.5;
        } else if (offsetA !== 0) {
            offsetA *= -1;
        } else if (offsetB !== 0) {
            offsetB *= -1;
        } else {}
    }
    a.add(u.clone().mul(offsetA * (didFlip ? -1 : 1)));
    b.sub(u.clone().mul(offsetB * (didFlip ? -1 : 1)));
    if (didFlip) {
        if (startShapeInfo && endShapeInfo) {
            b.setTo(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(a, u.clone().mul(-__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MIN_ARROW_LENGTH"] * shape.props.scale)));
        }
        c.setTo(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Med(terminalsInArrowSpace.start, terminalsInArrowSpace.end));
    } else {
        c.setTo(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Med(a, b));
    }
    const length = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(a, b);
    return {
        bindings,
        type: "straight",
        start: {
            handle: terminalsInArrowSpace.start,
            point: a,
            arrowhead: shape.props.arrowheadStart
        },
        end: {
            handle: terminalsInArrowSpace.end,
            point: b,
            arrowhead: shape.props.arrowheadEnd
        },
        middle: c,
        isValid: length > 0,
        length
    };
}
function updateArrowheadPointWithBoundShape(point, opposite, arrowPageTransform, targetShapeInfo) {
    if (targetShapeInfo === void 0) {
        return;
    }
    if (targetShapeInfo.isExact) {
        return;
    }
    const pageFrom = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(arrowPageTransform, opposite);
    const pageTo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(arrowPageTransform, point);
    const targetFrom = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].Inverse(targetShapeInfo.transform), pageFrom);
    const targetTo = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].Inverse(targetShapeInfo.transform), pageTo);
    const intersection = Array.from(targetShapeInfo.geometry.intersectLineSegment(targetFrom, targetTo, {
        includeLabels: false,
        includeInternal: false
    }));
    let targetInt;
    if (intersection.length) {
        targetInt = intersection.sort((p1, p2)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(p1, targetFrom) - __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(p2, targetFrom))[0] ?? (targetShapeInfo.isClosed ? void 0 : targetTo);
    }
    if (targetInt === void 0) {
        targetInt = targetShapeInfo.geometry.nearestPoint(targetTo);
        if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].DistMin(targetInt, targetTo, 1)) {
            return;
        }
    }
    const pageInt = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(targetShapeInfo.transform, targetInt);
    const arrowInt = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].Inverse(arrowPageTransform), pageInt);
    point.setTo(arrowInt);
    targetShapeInfo.didIntersect = true;
}
;
 //# sourceMappingURL=straight-arrow.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/curved-arrow.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getCurvedArrowInfo": (()=>getCurvedArrowInfo)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Mat.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/shared.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$straight$2d$arrow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/straight-arrow.mjs [app-ssr] (ecmascript)");
;
;
;
function getCurvedArrowInfo(editor, shape, bindings) {
    const { arrowheadEnd, arrowheadStart } = shape.props;
    const bend = shape.props.bend;
    if (Math.abs(bend) > Math.abs(shape.props.bend * (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WAY_TOO_BIG_ARROW_BEND_FACTOR"] * shape.props.scale))) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$straight$2d$arrow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStraightArrowInfo"])(editor, shape, bindings);
    }
    const terminalsInArrowSpace = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowTerminalsInArrowSpace"])(editor, shape, bindings);
    const med = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Med(terminalsInArrowSpace.start, terminalsInArrowSpace.end);
    const distance = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(terminalsInArrowSpace.end, terminalsInArrowSpace.start);
    const u = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Len(distance) ? distance.uni() : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(distance);
    const middle = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(med, u.per().mul(-bend));
    const startShapeInfo = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getBoundShapeInfoForTerminal"])(editor, shape, "start");
    const endShapeInfo = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getBoundShapeInfoForTerminal"])(editor, shape, "end");
    const a = terminalsInArrowSpace.start.clone();
    const b = terminalsInArrowSpace.end.clone();
    const c = middle.clone();
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Equals(a, b)) {
        return {
            bindings,
            type: "straight",
            start: {
                handle: a,
                point: a,
                arrowhead: shape.props.arrowheadStart
            },
            end: {
                handle: b,
                point: b,
                arrowhead: shape.props.arrowheadEnd
            },
            middle: c,
            isValid: false,
            length: 0
        };
    }
    const isClockwise = shape.props.bend < 0;
    const distFn = isClockwise ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clockwiseAngleDist"] : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["counterClockwiseAngleDist"];
    const handleArc = getArcInfo(a, b, c);
    const handle_aCA = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Angle(handleArc.center, a);
    const handle_aCB = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Angle(handleArc.center, b);
    const handle_dAB = distFn(handle_aCA, handle_aCB);
    if (handleArc.length === 0 || handleArc.size === 0 || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isSafeFloat"])(handleArc.length) || !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isSafeFloat"])(handleArc.size)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$straight$2d$arrow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStraightArrowInfo"])(editor, shape, bindings);
    }
    const tempA = a.clone();
    const tempB = b.clone();
    const tempC = c.clone();
    const arrowPageTransform = editor.getShapePageTransform(shape);
    let offsetA = 0;
    let offsetB = 0;
    let minLength = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MIN_ARROW_LENGTH"] * shape.props.scale;
    if (startShapeInfo && !startShapeInfo.isExact) {
        const startInPageSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(arrowPageTransform, tempA);
        const centerInPageSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(arrowPageTransform, handleArc.center);
        const endInPageSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(arrowPageTransform, tempB);
        const inverseTransform = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].Inverse(startShapeInfo.transform);
        const startInStartShapeLocalSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(inverseTransform, startInPageSpace);
        const centerInStartShapeLocalSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(inverseTransform, centerInPageSpace);
        const endInStartShapeLocalSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(inverseTransform, endInPageSpace);
        const { isClosed } = startShapeInfo;
        let point;
        let intersections = Array.from(startShapeInfo.geometry.intersectCircle(centerInStartShapeLocalSpace, handleArc.radius, {
            includeLabels: false,
            includeInternal: false
        }));
        if (intersections.length) {
            const angleToStart = centerInStartShapeLocalSpace.angle(startInStartShapeLocalSpace);
            const angleToEnd = centerInStartShapeLocalSpace.angle(endInStartShapeLocalSpace);
            const dAB2 = distFn(angleToStart, angleToEnd);
            intersections = intersections.filter((pt)=>distFn(angleToStart, centerInStartShapeLocalSpace.angle(pt)) <= dAB2);
            const targetDist = dAB2 * 0.25;
            intersections.sort(isClosed ? (p0, p1)=>Math.abs(distFn(angleToStart, centerInStartShapeLocalSpace.angle(p0)) - targetDist) < Math.abs(distFn(angleToStart, centerInStartShapeLocalSpace.angle(p1)) - targetDist) ? -1 : 1 : (p0, p1)=>distFn(angleToStart, centerInStartShapeLocalSpace.angle(p0)) < distFn(angleToStart, centerInStartShapeLocalSpace.angle(p1)) ? -1 : 1);
            point = intersections[0];
        }
        if (!point) {
            if (isClosed) {
                const nearestPoint = startShapeInfo.geometry.nearestPoint(startInStartShapeLocalSpace);
                if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].DistMin(nearestPoint, startInStartShapeLocalSpace, 1)) {
                    point = nearestPoint;
                }
            } else {
                point = startInStartShapeLocalSpace;
            }
        }
        if (point) {
            tempA.setTo(editor.getPointInShapeSpace(shape, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(startShapeInfo.transform, point)));
            startShapeInfo.didIntersect = true;
            if (arrowheadStart !== "none") {
                const strokeOffset = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape.props.size] / 2 + ("size" in startShapeInfo.shape.props ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][startShapeInfo.shape.props.size] / 2 : 0);
                offsetA = (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BOUND_ARROW_OFFSET"] + strokeOffset) * shape.props.scale;
                minLength += strokeOffset * shape.props.scale;
            }
        }
    }
    if (endShapeInfo && !endShapeInfo.isExact) {
        const startInPageSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(arrowPageTransform, tempA);
        const endInPageSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(arrowPageTransform, tempB);
        const centerInPageSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(arrowPageTransform, handleArc.center);
        const inverseTransform = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].Inverse(endShapeInfo.transform);
        const startInEndShapeLocalSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(inverseTransform, startInPageSpace);
        const centerInEndShapeLocalSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(inverseTransform, centerInPageSpace);
        const endInEndShapeLocalSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(inverseTransform, endInPageSpace);
        const isClosed = endShapeInfo.isClosed;
        let point;
        let intersections = Array.from(endShapeInfo.geometry.intersectCircle(centerInEndShapeLocalSpace, handleArc.radius, {
            includeLabels: false,
            includeInternal: false
        }));
        if (intersections.length) {
            const angleToStart = centerInEndShapeLocalSpace.angle(startInEndShapeLocalSpace);
            const angleToEnd = centerInEndShapeLocalSpace.angle(endInEndShapeLocalSpace);
            const dAB2 = distFn(angleToStart, angleToEnd);
            const targetDist = dAB2 * 0.75;
            intersections = intersections.filter((pt)=>distFn(angleToStart, centerInEndShapeLocalSpace.angle(pt)) <= dAB2);
            intersections.sort(isClosed ? (p0, p1)=>Math.abs(distFn(angleToStart, centerInEndShapeLocalSpace.angle(p0)) - targetDist) < Math.abs(distFn(angleToStart, centerInEndShapeLocalSpace.angle(p1)) - targetDist) ? -1 : 1 : (p0, p1)=>distFn(angleToStart, centerInEndShapeLocalSpace.angle(p0)) < distFn(angleToStart, centerInEndShapeLocalSpace.angle(p1)) ? -1 : 1);
            point = intersections[0];
        }
        if (!point) {
            if (isClosed) {
                const nearestPoint = endShapeInfo.geometry.nearestPoint(endInEndShapeLocalSpace);
                if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].DistMin(nearestPoint, endInEndShapeLocalSpace, 1)) {
                    point = nearestPoint;
                }
            } else {
                point = endInEndShapeLocalSpace;
            }
        }
        if (point) {
            tempB.setTo(editor.getPointInShapeSpace(shape, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(endShapeInfo.transform, point)));
            endShapeInfo.didIntersect = true;
            if (arrowheadEnd !== "none") {
                const strokeOffset = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape.props.size] / 2 + ("size" in endShapeInfo.shape.props ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][endShapeInfo.shape.props.size] / 2 : 0);
                offsetB = (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BOUND_ARROW_OFFSET"] + strokeOffset) * shape.props.scale;
                minLength += strokeOffset * shape.props.scale;
            }
        }
    }
    let aCA = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Angle(handleArc.center, tempA);
    let aCB = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Angle(handleArc.center, tempB);
    let dAB = distFn(aCA, aCB);
    let lAB = dAB * handleArc.radius;
    const tA = tempA.clone();
    const tB = tempB.clone();
    if (offsetA !== 0) {
        tA.setTo(handleArc.center).add(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].FromAngle(aCA + dAB * (offsetA / lAB * (isClockwise ? 1 : -1))).mul(handleArc.radius));
    }
    if (offsetB !== 0) {
        tB.setTo(handleArc.center).add(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].FromAngle(aCB + dAB * (offsetB / lAB * (isClockwise ? -1 : 1))).mul(handleArc.radius));
    }
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].DistMin(tA, tB, minLength)) {
        if (offsetA !== 0 && offsetB !== 0) {
            offsetA *= -1.5;
            offsetB *= -1.5;
        } else if (offsetA !== 0) {
            offsetA *= -2;
        } else if (offsetB !== 0) {
            offsetB *= -2;
        } else {}
        const minOffsetA = 0.1 - distFn(handle_aCA, aCA) * handleArc.radius;
        const minOffsetB = 0.1 - distFn(aCB, handle_aCB) * handleArc.radius;
        offsetA = Math.max(offsetA, minOffsetA);
        offsetB = Math.max(offsetB, minOffsetB);
    }
    if (offsetA !== 0) {
        tempA.setTo(handleArc.center).add(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].FromAngle(aCA + dAB * (offsetA / lAB * (isClockwise ? 1 : -1))).mul(handleArc.radius));
    }
    if (offsetB !== 0) {
        tempB.setTo(handleArc.center).add(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].FromAngle(aCB + dAB * (offsetB / lAB * (isClockwise ? -1 : 1))).mul(handleArc.radius));
    }
    if (startShapeInfo && endShapeInfo && !startShapeInfo.isExact && !endShapeInfo.isExact) {
        aCA = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Angle(handleArc.center, tempA);
        aCB = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Angle(handleArc.center, tempB);
        dAB = distFn(aCA, aCB);
        lAB = dAB * handleArc.radius;
        const relationship = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getBoundShapeRelationships"])(editor, startShapeInfo.shape.id, endShapeInfo.shape.id);
        if (relationship === "double-bound" && lAB < 30) {
            tempA.setTo(a);
            tempB.setTo(b);
            tempC.setTo(c);
        } else if (relationship === "safe") {
            if (startShapeInfo && !startShapeInfo.didIntersect) {
                tempA.setTo(a);
            }
            if (endShapeInfo && !endShapeInfo.didIntersect || distFn(handle_aCA, aCA) > distFn(handle_aCA, aCB)) {
                tempB.setTo(handleArc.center).add(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].FromAngle(aCA + dAB * (Math.min(0.9, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MIN_ARROW_LENGTH"] * shape.props.scale / lAB) * (isClockwise ? 1 : -1))).mul(handleArc.radius));
            }
        }
    }
    placeCenterHandle(handleArc.center, handleArc.radius, tempA, tempB, tempC, handle_dAB, isClockwise);
    if (tempA.equals(tempB)) {
        tempA.setTo(tempC.clone().addXY(1, 1));
        tempB.setTo(tempC.clone().subXY(1, 1));
    }
    a.setTo(tempA);
    b.setTo(tempB);
    c.setTo(tempC);
    const bodyArc = getArcInfo(a, b, c);
    return {
        bindings,
        type: "arc",
        start: {
            point: a,
            handle: terminalsInArrowSpace.start,
            arrowhead: shape.props.arrowheadStart
        },
        end: {
            point: b,
            handle: terminalsInArrowSpace.end,
            arrowhead: shape.props.arrowheadEnd
        },
        middle: c,
        handleArc,
        bodyArc,
        isValid: bodyArc.length !== 0 && isFinite(bodyArc.center.x) && isFinite(bodyArc.center.y)
    };
}
function getArcInfo(a, b, c) {
    const center = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["centerOfCircleFromThreePoints"])(a, b, c) ?? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Med(a, b);
    const radius = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(center, a);
    const sweepFlag = +__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Clockwise(a, c, b);
    const ab = ((a.y - b.y) ** 2 + (a.x - b.x) ** 2) ** 0.5;
    const bc = ((b.y - c.y) ** 2 + (b.x - c.x) ** 2) ** 0.5;
    const ca = ((c.y - a.y) ** 2 + (c.x - a.x) ** 2) ** 0.5;
    const theta = Math.acos((bc * bc + ca * ca - ab * ab) / (2 * bc * ca)) * 2;
    const largeArcFlag = +(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"] > theta);
    const size = (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI2"] - theta) * (sweepFlag ? 1 : -1);
    const length = size * radius;
    return {
        center,
        radius,
        size,
        length,
        largeArcFlag,
        sweepFlag
    };
}
function placeCenterHandle(center, radius, tempA, tempB, tempC, originalArcLength, isClockwise) {
    const aCA = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Angle(center, tempA);
    const aCB = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Angle(center, tempB);
    let dAB = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clockwiseAngleDist"])(aCA, aCB);
    if (!isClockwise) dAB = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI2"] - dAB;
    tempC.setTo(center).add(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].FromAngle(aCA + dAB * (0.5 * (isClockwise ? 1 : -1))).mul(radius));
    if (dAB > originalArcLength) {
        tempC.rotWith(center, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"]);
        const t = tempB.clone();
        tempB.setTo(tempA);
        tempA.setTo(t);
    }
}
;
 //# sourceMappingURL=curved-arrow.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/definitions.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ElbowArrowAxes": (()=>ElbowArrowAxes),
    "ElbowArrowSideAxes": (()=>ElbowArrowSideAxes),
    "ElbowArrowSideDeltas": (()=>ElbowArrowSideDeltas),
    "ElbowArrowSideOpposites": (()=>ElbowArrowSideOpposites),
    "ElbowArrowSides": (()=>ElbowArrowSides)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
;
const ElbowArrowSides = [
    "right",
    "bottom",
    "left",
    "top"
];
const ElbowArrowSideDeltas = {
    top: {
        x: 0,
        y: -1
    },
    right: {
        x: 1,
        y: 0
    },
    bottom: {
        x: 0,
        y: 1
    },
    left: {
        x: -1,
        y: 0
    }
};
const ElbowArrowSideAxes = {
    left: "x",
    right: "x",
    top: "y",
    bottom: "y"
};
const ElbowArrowSideOpposites = {
    top: "bottom",
    right: "left",
    bottom: "top",
    left: "right"
};
const ElbowArrowAxes = {
    x: {
        v: (x, y)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](x, y),
        loEdge: "left",
        hiEdge: "right",
        crossMid: "midY",
        gap: "gapX",
        midRange: "midXRange",
        self: "x",
        cross: "y",
        size: "width"
    },
    y: {
        v: (y, x)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](x, y),
        loEdge: "top",
        hiEdge: "bottom",
        crossMid: "midX",
        gap: "gapY",
        midRange: "midYRange",
        self: "y",
        cross: "x",
        size: "height"
    }
};
;
 //# sourceMappingURL=definitions.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/range.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "clampToRange": (()=>clampToRange),
    "createRange": (()=>createRange),
    "doRangesOverlap": (()=>doRangesOverlap),
    "expandRange": (()=>expandRange),
    "isWithinRange": (()=>isWithinRange),
    "rangeCenter": (()=>rangeCenter),
    "rangeSize": (()=>rangeSize),
    "subtractRange": (()=>subtractRange)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
;
function expandRange(range, amount) {
    const newRange = {
        min: range.min - amount,
        max: range.max + amount
    };
    if (newRange.min > newRange.max) {
        return null;
    }
    return newRange;
}
function clampToRange(value, range) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(value, range.min, range.max);
}
function subtractRange(a, b) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assert"])(a.min <= a.max && b.min <= b.max);
    if (a.min <= b.min && b.max <= a.max) {
        return [
            {
                min: a.min,
                max: b.min
            },
            {
                min: b.max,
                max: a.max
            }
        ];
    }
    if (b.max <= a.min || b.min >= a.max) {
        return [
            a
        ];
    }
    if (b.min <= a.min && a.max <= b.max) {
        return [];
    }
    if (isWithinRange(a.min, b)) {
        return [
            {
                min: b.max,
                max: a.max
            }
        ];
    }
    if (isWithinRange(a.max, b)) {
        return [
            {
                min: a.min,
                max: b.min
            }
        ];
    }
    return [];
}
function createRange(a, b) {
    return {
        min: Math.min(a, b),
        max: Math.max(a, b)
    };
}
function doRangesOverlap(a, b) {
    return a.min <= b.max && a.max >= b.min;
}
function isWithinRange(value, range) {
    return value >= range.min && value <= range.max;
}
function rangeSize(range) {
    return range.max - range.min;
}
function rangeCenter(range) {
    return (range.min + range.max) / 2;
}
;
 //# sourceMappingURL=range.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/routes/ElbowArrowWorkingInfo.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ElbowArrowTransform": (()=>ElbowArrowTransform),
    "ElbowArrowWorkingInfo": (()=>ElbowArrowWorkingInfo),
    "debugElbowArrowTransform": (()=>debugElbowArrowTransform),
    "transformElbowArrowTransform": (()=>transformElbowArrowTransform)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
;
function flipEdgeCrossInPlace(edge) {
    if (!edge) return;
    const tmp = edge.cross.min;
    edge.cross.min = -edge.cross.max;
    edge.cross.max = -tmp;
    edge.crossTarget = -edge.crossTarget;
}
function flipEdgeValueInPlace(edge) {
    if (!edge) return;
    edge.value = -edge.value;
    edge.expanded = edge.expanded === null ? null : -edge.expanded;
}
const ElbowArrowTransform = {
    Identity: {
        x: 1,
        y: 1,
        transpose: false
    },
    Rotate90: {
        x: -1,
        y: 1,
        transpose: true
    },
    Rotate180: {
        x: -1,
        y: -1,
        transpose: false
    },
    Rotate270: {
        x: 1,
        y: -1,
        transpose: true
    },
    FlipX: {
        x: -1,
        y: 1,
        transpose: false
    },
    FlipY: {
        x: 1,
        y: -1,
        transpose: false
    }
};
function invertElbowArrowTransform(transform) {
    if (transform.transpose) {
        return {
            x: transform.y,
            y: transform.x,
            transpose: true
        };
    }
    return transform;
}
function transformElbowArrowTransform(a, b) {
    const next = {
        ...a
    };
    if (b.transpose) {
        swap(next, "x", "y");
        next.transpose = !next.transpose;
    }
    if (b.x === -1) {
        next.x = -next.x;
    }
    if (b.y === -1) {
        next.y = -next.y;
    }
    return next;
}
function swap(object, a, b) {
    const temp = object[a];
    object[a] = object[b];
    object[b] = temp;
}
function transformVecInPlace(transform, point) {
    point.x = transform.x * point.x;
    point.y = transform.y * point.y;
    if (transform.transpose) {
        swap(point, "x", "y");
    }
}
function transformBoxInPlace(transform, box) {
    if (transform.x === -1) {
        box.x = -(box.x + box.width);
    }
    if (transform.y === -1) {
        box.y = -(box.y + box.height);
    }
    if (transform.transpose) {
        swap(box, "x", "y");
        swap(box, "width", "height");
    }
}
function transformEdgesInPlace(transform, edges) {
    if (transform.x === -1) {
        swap(edges, "left", "right");
        flipEdgeCrossInPlace(edges.top);
        flipEdgeCrossInPlace(edges.bottom);
        flipEdgeValueInPlace(edges.left);
        flipEdgeValueInPlace(edges.right);
    }
    if (transform.y === -1) {
        swap(edges, "top", "bottom");
        flipEdgeCrossInPlace(edges.left);
        flipEdgeCrossInPlace(edges.right);
        flipEdgeValueInPlace(edges.top);
        flipEdgeValueInPlace(edges.bottom);
    }
    if (transform.transpose) {
        swap(edges, "left", "top");
        swap(edges, "right", "bottom");
    }
}
function debugElbowArrowTransform(transform) {
    switch(`${transform.transpose ? "t" : ""}${transform.x === -1 ? "x" : ""}${transform.y === -1 ? "y" : ""}`){
        case "":
            return "Identity";
        case "t":
            return "Transpose";
        case "x":
            return "FlipX";
        case "y":
            return "FlipY";
        case "tx":
            return "Rotate90";
        case "ty":
            return "Rotate270";
        case "xy":
            return "Rotate180";
        case "txy":
            return "spooky (transpose + flip both)";
        default:
            throw new Error("Unknown transform");
    }
}
class ElbowArrowWorkingInfo {
    options;
    A;
    B;
    common;
    gapX;
    gapY;
    midX;
    midY;
    bias;
    constructor(info){
        this.options = info.options;
        this.A = info.A;
        this.B = info.B;
        this.common = info.common;
        this.midX = info.midX;
        this.midY = info.midY;
        this.gapX = info.gapX;
        this.gapY = info.gapY;
        this.bias = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](1, 1);
    }
    transform = ElbowArrowTransform.Identity;
    inverse = ElbowArrowTransform.Identity;
    apply(transform) {
        this.transform = transformElbowArrowTransform(transform, this.transform);
        this.inverse = invertElbowArrowTransform(this.transform);
        transformBoxInPlace(transform, this.A.original);
        transformBoxInPlace(transform, this.B.original);
        transformBoxInPlace(transform, this.common.original);
        transformBoxInPlace(transform, this.A.expanded);
        transformBoxInPlace(transform, this.B.expanded);
        transformBoxInPlace(transform, this.common.expanded);
        transformEdgesInPlace(transform, this.A.edges);
        transformEdgesInPlace(transform, this.B.edges);
        transformVecInPlace(transform, this.bias);
        if (transform.x === -1) {
            this.gapX = -this.gapX;
            this.midX = this.midX === null ? null : -this.midX;
        }
        if (transform.y === -1) {
            this.gapY = -this.gapY;
            this.midY = this.midY === null ? null : -this.midY;
        }
        if (transform.transpose) {
            let temp = this.midX;
            this.midX = this.midY;
            this.midY = temp;
            temp = this.gapX;
            this.gapX = this.gapY;
            this.gapY = temp;
        }
    }
    reset() {
        this.apply(this.inverse);
    }
    vec(x, y) {
        const point = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](x, y);
        transformVecInPlace(this.inverse, point);
        return point;
    }
}
;
 //# sourceMappingURL=ElbowArrowWorkingInfo.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/routes/ElbowArrowRouteBuilder.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ElbowArrowRouteBuilder": (()=>ElbowArrowRouteBuilder)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
;
const MIN_DISTANCE = 0.01;
class ElbowArrowRouteBuilder {
    constructor(info, name){
        this.info = info;
        this.name = name;
    }
    points = [];
    add(x, y) {
        this.points.push(this.info.vec(x, y));
        return this;
    }
    _midpointHandle = null;
    midpointHandle(axis) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assert"])(this._midpointHandle === null, "midX/midY called multiple times");
        const point = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Lrp(this.points[this.points.length - 2], this.points[this.points.length - 1], 0.5);
        this._midpointHandle = {
            axis: this.info.transform.transpose ? axis === "x" ? "y" : "x" : axis,
            point,
            segmentStart: this.points[this.points.length - 2].clone(),
            segmentEnd: this.points[this.points.length - 1].clone()
        };
        return this;
    }
    build() {
        const finalPoints = [];
        for(let i = 0; i < this.points.length; i++){
            const p0 = this.points[i];
            const p1 = finalPoints[finalPoints.length - 1];
            const p2 = finalPoints[finalPoints.length - 2];
            if (!p1 || !p2) {
                finalPoints.push(p0);
            } else {
                const d1x = Math.abs(p0.x - p1.x);
                const d1y = Math.abs(p0.y - p1.y);
                const d2x = Math.abs(p0.x - p2.x);
                const d2y = Math.abs(p0.y - p2.y);
                if (d1x < MIN_DISTANCE && d1y < MIN_DISTANCE) {} else if (d1x < MIN_DISTANCE && d2x < MIN_DISTANCE) {
                    p1.y = p0.y;
                } else if (d1y < MIN_DISTANCE && d2y < MIN_DISTANCE) {
                    p1.x = p0.x;
                } else {
                    finalPoints.push(p0);
                }
            }
        }
        return {
            name: this.name,
            points: finalPoints,
            distance: measureRouteManhattanDistance(finalPoints),
            aEdgePicking: "manual",
            bEdgePicking: "manual",
            skipPointsWhenDrawing: /* @__PURE__ */ new Set(),
            midpointHandle: this._midpointHandle
        };
    }
}
function measureRouteManhattanDistance(path) {
    let distance = 0;
    for(let i = 0; i < path.length - 1; i++){
        const start = path[i];
        const end = path[i + 1];
        distance += Math.abs(end.x - start.x) + Math.abs(end.y - start.y);
    }
    return distance;
}
;
 //# sourceMappingURL=ElbowArrowRouteBuilder.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/routes/elbowArrowRoutes.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "routeRightToBottom": (()=>routeRightToBottom),
    "routeRightToLeft": (()=>routeRightToLeft),
    "routeRightToRight": (()=>routeRightToRight),
    "routeRightToTop": (()=>routeRightToTop),
    "tryRouteArrow": (()=>tryRouteArrow)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowRouteBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/routes/ElbowArrowRouteBuilder.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/routes/ElbowArrowWorkingInfo.mjs [app-ssr] (ecmascript)");
;
;
function routeRightToLeft(info) {
    const aEdge = info.A.edges.right;
    const bEdge = info.B.edges.left;
    if (!aEdge || !bEdge) return null;
    if (aEdge.crossTarget > bEdge.crossTarget) {
        info.apply(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].FlipY);
    }
    if (info.gapX > 0 && info.midX !== null) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowRouteBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowRouteBuilder"](info, "to left 1").add(aEdge.value, aEdge.crossTarget).add(info.midX, aEdge.crossTarget).add(info.midX, bEdge.crossTarget).midpointHandle("x").add(bEdge.value, bEdge.crossTarget).build();
    }
    if (aEdge.expanded === null || bEdge.expanded === null) return null;
    if (info.midY !== null) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowRouteBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowRouteBuilder"](info, "to left 2").add(aEdge.value, aEdge.crossTarget).add(aEdge.expanded, aEdge.crossTarget).add(aEdge.expanded, info.midY).add(bEdge.expanded, info.midY).midpointHandle("y").add(bEdge.expanded, bEdge.crossTarget).add(bEdge.value, bEdge.crossTarget).build();
    }
    const arrow3Distance = Math.abs(aEdge.value - info.common.expanded.right) + Math.abs(aEdge.crossTarget - info.common.expanded.bottom) + Math.abs(info.common.expanded.right - bEdge.expanded) + Math.abs(info.common.expanded.bottom - bEdge.crossTarget) + info.options.expandElbowLegLength + 6;
    const arrow4Distance = info.options.expandElbowLegLength + Math.abs(aEdge.crossTarget - info.common.expanded.top) + Math.abs(aEdge.expanded - info.common.expanded.left) + Math.abs(info.common.expanded.top - bEdge.crossTarget) + Math.abs(info.common.expanded.left - bEdge.value) + // 6 points in this arrow, plus bias towards down/right:
    6 + info.bias.y;
    const arrow5Distance = info.gapX < 0 && info.midX !== null ? info.options.expandElbowLegLength + Math.abs(aEdge.crossTarget - info.A.expanded.bottom) + info.common.expanded.width + Math.abs(info.A.expanded.bottom - info.B.expanded.top) + Math.abs(info.B.expanded.top - bEdge.crossTarget) + info.options.expandElbowLegLength + // 8 points in this arrow
    8 : Infinity;
    if (arrow3Distance < arrow4Distance && arrow3Distance < arrow5Distance) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowRouteBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowRouteBuilder"](info, "to left 3").add(aEdge.value, aEdge.crossTarget).add(info.common.expanded.right, aEdge.crossTarget).add(info.common.expanded.right, info.common.expanded.bottom).add(bEdge.expanded, info.common.expanded.bottom).add(bEdge.expanded, bEdge.crossTarget).add(bEdge.value, bEdge.crossTarget).build();
    }
    if (arrow4Distance < arrow5Distance) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowRouteBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowRouteBuilder"](info, "to left 4").add(aEdge.value, aEdge.crossTarget).add(aEdge.expanded, aEdge.crossTarget).add(aEdge.expanded, info.common.expanded.top).add(info.common.expanded.left, info.common.expanded.top).add(info.common.expanded.left, bEdge.crossTarget).add(bEdge.value, bEdge.crossTarget).build();
    }
    if (info.midX !== null) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowRouteBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowRouteBuilder"](info, "to left 5").add(aEdge.value, aEdge.crossTarget).add(aEdge.expanded, aEdge.crossTarget).add(aEdge.expanded, info.A.expanded.bottom).add(info.midX, info.A.expanded.bottom).add(info.midX, info.B.expanded.top).midpointHandle("y").add(bEdge.expanded, info.B.expanded.top).add(bEdge.expanded, bEdge.crossTarget).add(bEdge.value, bEdge.crossTarget).build();
    }
    return null;
}
function routeRightToTop(info) {
    const aEdge = info.A.edges.right;
    const bEdge = info.B.edges.top;
    if (!aEdge || !bEdge) return null;
    if (aEdge.crossTarget < (bEdge.expanded ?? bEdge.value) && bEdge.crossTarget > (aEdge.expanded ?? aEdge.value) || info.A.isPoint && info.B.expanded.containsPoint(info.A.original.center)) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowRouteBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowRouteBuilder"](info, "to top 1").add(aEdge.value, aEdge.crossTarget).add(bEdge.crossTarget, aEdge.crossTarget).add(bEdge.crossTarget, bEdge.value).build();
    }
    if (info.gapX > 0 && info.midX !== null && bEdge.expanded !== null) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowRouteBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowRouteBuilder"](info, "to top 2").add(aEdge.value, aEdge.crossTarget).add(info.midX, aEdge.crossTarget).add(info.midX, bEdge.expanded).midpointHandle("x").add(bEdge.crossTarget, bEdge.expanded).add(bEdge.crossTarget, bEdge.value).build();
    }
    if (info.gapY > 0 && aEdge.expanded !== null && bEdge.crossTarget < aEdge.expanded && info.midY !== null) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowRouteBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowRouteBuilder"](info, "to top 3").add(aEdge.value, aEdge.crossTarget).add(aEdge.expanded, aEdge.crossTarget).add(aEdge.expanded, info.midY).add(bEdge.crossTarget, info.midY).midpointHandle("y").add(bEdge.crossTarget, bEdge.value).build();
    }
    const arrow4Length = Math.abs(aEdge.value - info.common.expanded.right) + Math.abs(aEdge.crossTarget - info.common.expanded.top) + Math.abs(bEdge.crossTarget - info.common.expanded.right) + Math.abs(bEdge.value - info.common.expanded.top);
    const arrow5Length = aEdge.expanded !== null && info.midY !== null && bEdge.expanded !== null ? Math.abs(aEdge.value - aEdge.expanded) + Math.abs(info.B.expanded.left - aEdge.expanded) + Math.abs(info.B.expanded.left - bEdge.crossTarget) + Math.abs(aEdge.crossTarget - info.B.expanded.top) + Math.abs(bEdge.value - bEdge.expanded) : Infinity;
    const arrow6Length = aEdge.expanded !== null && info.midX !== null && bEdge.expanded !== null ? Math.abs(aEdge.value - info.common.expanded.right) + Math.abs(aEdge.crossTarget - info.A.expanded.bottom) + Math.abs(aEdge.expanded - bEdge.crossTarget) + Math.abs(info.A.expanded.bottom - bEdge.expanded) + Math.abs(bEdge.expanded - bEdge.value) : Infinity;
    if (arrow4Length < arrow5Length && arrow4Length < arrow6Length) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowRouteBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowRouteBuilder"](info, "to top 4").add(aEdge.value, aEdge.crossTarget).add(info.common.expanded.right, aEdge.crossTarget).add(info.common.expanded.right, info.common.expanded.top).add(bEdge.crossTarget, info.common.expanded.top).add(bEdge.crossTarget, bEdge.value).build();
    }
    if (bEdge.expanded !== null && aEdge.expanded !== null && info.midY !== null && arrow5Length < arrow6Length) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowRouteBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowRouteBuilder"](info, "to top 5").add(aEdge.value, aEdge.crossTarget).add(aEdge.expanded, aEdge.crossTarget).add(aEdge.expanded, info.midY).add(info.B.expanded.left, info.midY).midpointHandle("y").add(info.B.expanded.left, bEdge.expanded).add(bEdge.crossTarget, bEdge.expanded).add(bEdge.crossTarget, bEdge.value).build();
    }
    if (bEdge.expanded !== null && aEdge.expanded !== null && info.midX !== null) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowRouteBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowRouteBuilder"](info, "to top 6").add(aEdge.value, aEdge.crossTarget).add(aEdge.expanded, aEdge.crossTarget).add(aEdge.expanded, info.A.expanded.bottom).add(info.midX, info.A.expanded.bottom).add(info.midX, bEdge.expanded).midpointHandle("x").add(bEdge.crossTarget, bEdge.expanded).add(bEdge.crossTarget, bEdge.value).build();
    }
    return null;
}
function routeRightToBottom(info) {
    info.apply(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].FlipY);
    return routeRightToTop(info);
}
function routeRightToRight(info) {
    const aEdge = info.A.edges.right;
    const bEdge = info.B.edges.right;
    if (!aEdge || !bEdge) return null;
    if ((info.gapX <= 0 || aEdge.crossTarget > info.B.expanded.bottom || aEdge.crossTarget < info.B.expanded.top) && (bEdge.value > info.A.original.left || bEdge.crossTarget > info.A.expanded.bottom || bEdge.crossTarget < info.A.expanded.top)) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowRouteBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowRouteBuilder"](info, "to right 1").add(aEdge.value, aEdge.crossTarget).add(info.common.expanded.right, aEdge.crossTarget).add(info.common.expanded.right, bEdge.crossTarget).add(bEdge.value, bEdge.crossTarget).build();
    }
    if (info.midX === null) return null;
    if (bEdge.expanded !== null && info.gapX >= 0) {
        const viaBottomLength = Math.abs(bEdge.crossTarget - info.B.expanded.bottom) + Math.abs(aEdge.crossTarget - info.B.expanded.bottom);
        const viaTopLength = Math.abs(bEdge.crossTarget - info.B.expanded.top) + Math.abs(aEdge.crossTarget - info.B.expanded.top);
        const topOrBottom = viaBottomLength < viaTopLength ? "bottom" : "top";
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowRouteBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowRouteBuilder"](info, `to right 2 via ${topOrBottom}`).add(aEdge.value, aEdge.crossTarget).add(info.midX, aEdge.crossTarget).add(info.midX, info.B.expanded[topOrBottom]).midpointHandle("x").add(bEdge.expanded, info.B.expanded[topOrBottom]).add(bEdge.expanded, bEdge.crossTarget).add(bEdge.value, bEdge.crossTarget).build();
    }
    if (aEdge.expanded !== null && info.gapX <= 0) {
        const viaBottomLength = Math.abs(bEdge.crossTarget - info.A.expanded.bottom) + Math.abs(aEdge.crossTarget - info.A.expanded.bottom);
        const viaTopLength = Math.abs(bEdge.crossTarget - info.A.expanded.top) + Math.abs(aEdge.crossTarget - info.A.expanded.top);
        const topOrBottom = viaBottomLength < viaTopLength ? "bottom" : "top";
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowRouteBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowRouteBuilder"](info, `to right 3 via ${topOrBottom}`).add(aEdge.value, aEdge.crossTarget).add(aEdge.expanded, aEdge.crossTarget).add(aEdge.expanded, info.A.expanded[topOrBottom]).add(info.midX, info.A.expanded[topOrBottom]).add(info.midX, bEdge.crossTarget).midpointHandle("x").add(bEdge.value, bEdge.crossTarget).build();
    }
    return null;
}
const routes = {
    top: {
        top: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Rotate270,
            routeRightToRight
        ],
        left: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Rotate270,
            routeRightToTop
        ],
        bottom: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Rotate270,
            routeRightToLeft
        ],
        right: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Rotate270,
            routeRightToBottom
        ]
    },
    right: {
        top: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Identity,
            routeRightToTop
        ],
        right: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Identity,
            routeRightToRight
        ],
        bottom: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Identity,
            routeRightToBottom
        ],
        left: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Identity,
            routeRightToLeft
        ]
    },
    bottom: {
        top: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Rotate90,
            routeRightToLeft
        ],
        left: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Rotate90,
            routeRightToBottom
        ],
        bottom: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Rotate90,
            routeRightToRight
        ],
        right: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Rotate90,
            routeRightToTop
        ]
    },
    left: {
        top: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Rotate180,
            routeRightToBottom
        ],
        left: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Rotate180,
            routeRightToRight
        ],
        bottom: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Rotate180,
            routeRightToTop
        ],
        right: [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowTransform"].Rotate180,
            routeRightToLeft
        ]
    }
};
function tryRouteArrow(info, aEdge, bEdge) {
    const [transform, routeFn] = routes[aEdge][bEdge];
    info.apply(transform);
    const route = routeFn(info);
    info.reset();
    return route;
}
;
 //# sourceMappingURL=elbowArrowRoutes.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/routes/routeArrowWithAutoEdgePicking.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "routeArrowWithAutoEdgePicking": (()=>routeArrowWithAutoEdgePicking),
    "routeArrowWithManualEdgePicking": (()=>routeArrowWithManualEdgePicking),
    "routeArrowWithPartialEdgePicking": (()=>routeArrowWithPartialEdgePicking)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/definitions.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/routes/elbowArrowRoutes.mjs [app-ssr] (ecmascript)");
;
;
;
function routeArrowWithAutoEdgePicking(info, reason) {
    let idealRoute = null;
    if (// +1 to bias us towards the x-axis. without this, we get flicker as we move an arrow locket
    // to 45 deg (as gapx/gapy are almost equal and the result depends on floating point
    // precision)
    Math.abs(info.gapX) + 1 > Math.abs(info.gapY) && info.midX !== null) {
        if (info.gapX > 0) {
            idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "right", "left");
        } else {
            idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "left", "right");
        }
    } else {
        const aRight = info.A.edges.right;
        const aLeft = info.A.edges.left;
        const bTop = info.B.edges.top;
        const bBottom = info.B.edges.bottom;
        if (info.A.isPoint && info.B.isPoint) {
            if (info.gapY > 0) {
                idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "bottom", "top");
            } else {
                idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "top", "bottom");
            }
        } else if (aRight && bTop && (aRight.expanded ?? aRight.value) <= bTop.crossTarget && aRight.crossTarget <= (bTop.expanded ?? bTop.value)) {
            idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "right", "top");
        } else if (aRight && bBottom && (aRight.expanded ?? aRight.value) <= bBottom.crossTarget && aRight.crossTarget >= (bBottom.expanded ?? bBottom.value)) {
            idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "right", "bottom");
        } else if (aLeft && bTop && (aLeft.expanded ?? aLeft.value) >= bTop.crossTarget && aLeft.crossTarget <= (bTop.expanded ?? bTop.value)) {
            idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "left", "top");
        } else if (aLeft && bBottom && (aLeft.expanded ?? aLeft.value) >= bBottom.crossTarget && aLeft.crossTarget >= (bBottom.expanded ?? bBottom.value)) {
            idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "left", "bottom");
        } else if (info.gapY > 0 && info.midY !== null) {
            idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "bottom", "top");
        } else if (info.gapY < 0 && info.midY !== null) {
            idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "top", "bottom");
        }
    }
    if (idealRoute) {
        idealRoute.aEdgePicking = reason;
        idealRoute.bEdgePicking = reason;
        return idealRoute;
    }
    const aAvailableSide = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowSides"].filter((side)=>info.A.edges[side]);
    const bAvailableSides = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowSides"].filter((side)=>info.B.edges[side]);
    const nonPartialRouteCandidates = aAvailableSide.flatMap((aSide)=>bAvailableSides.map((bSide)=>[
                aSide,
                bSide,
                reason,
                reason
            ]));
    return pickBest(info, nonPartialRouteCandidates);
}
function routeArrowWithPartialEdgePicking(info, aSide) {
    let idealRoute = null;
    const aRight = info.A.edges.right;
    const aLeft = info.A.edges.left;
    const bTop = info.B.edges.top;
    const bBottom = info.B.edges.bottom;
    switch(aSide){
        case "right":
            if (info.gapX > 0 && info.gapX > Math.abs(info.gapY) && info.midX !== null) {
                idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "right", "left");
            } else if (aRight && bTop && (aRight.expanded ?? aRight.value) <= bTop.crossTarget && aRight.crossTarget <= (bTop.expanded ?? bTop.value)) {
                idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "right", "top");
            } else if (aRight && bBottom && (aRight.expanded ?? aRight.value) <= bBottom.crossTarget && aRight.crossTarget >= (bBottom.expanded ?? bBottom.value)) {
                idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "right", "bottom");
            }
            break;
        case "left":
            if (info.gapX < 0 && Math.abs(info.gapX) > Math.abs(info.gapY) && info.midX !== null) {
                idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "left", "right");
            } else if (aLeft && bTop && (aLeft.expanded ?? aLeft.value) >= bTop.crossTarget && aLeft.crossTarget <= (bTop.expanded ?? bTop.value)) {
                idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "left", "top");
            } else if (aLeft && bBottom && (aLeft.expanded ?? aLeft.value) >= bBottom.crossTarget && aLeft.crossTarget >= (bBottom.expanded ?? bBottom.value)) {
                idealRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, "left", "bottom");
            }
            break;
        case "top":
        case "bottom":
            break;
        default:
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(aSide);
    }
    if (idealRoute) {
        idealRoute.aEdgePicking = "manual";
        idealRoute.bEdgePicking = "auto";
        return idealRoute;
    }
    switch(aSide){
        case "top":
            return pickBest(info, [
                [
                    "top",
                    "bottom",
                    "manual",
                    "auto"
                ],
                [
                    "top",
                    "right",
                    "manual",
                    "auto"
                ],
                [
                    "top",
                    "left",
                    "manual",
                    "auto"
                ],
                [
                    "top",
                    "top",
                    "manual",
                    "auto"
                ]
            ]);
        case "bottom":
            return pickBest(info, [
                [
                    "bottom",
                    "top",
                    "manual",
                    "auto"
                ],
                [
                    "bottom",
                    "right",
                    "manual",
                    "auto"
                ],
                [
                    "bottom",
                    "left",
                    "manual",
                    "auto"
                ],
                [
                    "bottom",
                    "bottom",
                    "manual",
                    "auto"
                ]
            ]);
        case "left":
            return pickBest(info, [
                [
                    "left",
                    "right",
                    "manual",
                    "auto"
                ],
                [
                    "left",
                    "bottom",
                    "manual",
                    "auto"
                ],
                [
                    "left",
                    "left",
                    "manual",
                    "auto"
                ],
                [
                    "left",
                    "top",
                    "manual",
                    "auto"
                ]
            ]);
        case "right":
            return pickBest(info, [
                [
                    "right",
                    "left",
                    "manual",
                    "auto"
                ],
                [
                    "right",
                    "bottom",
                    "manual",
                    "auto"
                ],
                [
                    "right",
                    "right",
                    "manual",
                    "auto"
                ],
                [
                    "right",
                    "top",
                    "manual",
                    "auto"
                ]
            ]);
    }
}
function routeArrowWithManualEdgePicking(info, aSide, bSide) {
    const route = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, aSide, bSide);
    if (route) return route;
    if (info.A.isPoint && info.B.isPoint) {
        return pickBest(info, [
            [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowSideOpposites"][aSide],
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowSideOpposites"][bSide],
                "manual",
                "manual"
            ],
            [
                aSide,
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowSideOpposites"][bSide],
                "manual",
                "auto"
            ],
            [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowSideOpposites"][aSide],
                bSide,
                "auto",
                "manual"
            ]
        ]);
    } else if (info.A.isPoint) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowSideOpposites"][aSide], bSide);
    } else if (info.B.isPoint) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, aSide, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowSideOpposites"][bSide]);
    }
    return null;
}
function pickBest(info, edges) {
    let bestRoute = null;
    let bestCornerCount = Infinity;
    let bestDistance = Infinity;
    let distanceBias = 0;
    for (const [aSide, bSide, aEdgePicking, bEdgePicking] of edges){
        distanceBias += 1;
        const route = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$elbowArrowRoutes$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tryRouteArrow"])(info, aSide, bSide);
        if (route) {
            route.aEdgePicking = aEdgePicking;
            route.bEdgePicking = bEdgePicking;
            if (route.points.length < bestCornerCount) {
                bestCornerCount = route.points.length;
                bestDistance = route.distance;
                bestRoute = route;
            } else if (route.points.length === bestCornerCount && route.distance + distanceBias < bestDistance) {
                bestDistance = route.distance;
                bestRoute = route;
            }
        }
    }
    return bestRoute;
}
;
 //# sourceMappingURL=routeArrowWithAutoEdgePicking.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/getElbowArrowInfo.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getEdgeFromNormalizedAnchor": (()=>getEdgeFromNormalizedAnchor),
    "getElbowArrowInfo": (()=>getElbowArrowInfo),
    "getRouteHandlePath": (()=>getRouteHandlePath),
    "getUsableEdge": (()=>getUsableEdge)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Box.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Geometry2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Geometry2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Mat.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/shared.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/definitions.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$range$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/range.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/routes/ElbowArrowWorkingInfo.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$routeArrowWithAutoEdgePicking$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/routes/routeArrowWithAutoEdgePicking.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
;
function getElbowArrowInfo(editor, arrow, bindings) {
    const shapeOptions = editor.getShapeUtil(arrow.type).options;
    const options = {
        elbowMidpoint: arrow.props.elbowMidPoint,
        expandElbowLegLength: shapeOptions.expandElbowLegLength[arrow.props.size] * arrow.props.scale,
        minElbowLegLength: shapeOptions.minElbowLegLength[arrow.props.size] * arrow.props.scale
    };
    let startTerminal = getElbowArrowTerminalInfo(editor, arrow, bindings.start, arrow.props.start);
    let endTerminal = getElbowArrowTerminalInfo(editor, arrow, bindings.end, arrow.props.end);
    startTerminal = adjustTerminalForUnclosedPathIfNeeded(startTerminal, endTerminal, options);
    endTerminal = adjustTerminalForUnclosedPathIfNeeded(endTerminal, startTerminal, options);
    const swapOrder = !!(!startTerminal.side && endTerminal.side);
    let { aTerminal, bTerminal } = swapOrder ? {
        aTerminal: endTerminal,
        bTerminal: startTerminal
    } : {
        aTerminal: startTerminal,
        bTerminal: endTerminal
    };
    let edgesA = {
        top: getUsableEdge(aTerminal, bTerminal, "top", options),
        right: getUsableEdge(aTerminal, bTerminal, "right", options),
        bottom: getUsableEdge(aTerminal, bTerminal, "bottom", options),
        left: getUsableEdge(aTerminal, bTerminal, "left", options)
    };
    let edgesB = {
        top: getUsableEdge(bTerminal, aTerminal, "top", options),
        right: getUsableEdge(bTerminal, aTerminal, "right", options),
        bottom: getUsableEdge(bTerminal, aTerminal, "bottom", options),
        left: getUsableEdge(bTerminal, aTerminal, "left", options)
    };
    const aIsUsable = hasUsableEdge(edgesA, aTerminal.side);
    const bIsUsable = hasUsableEdge(edgesB, bTerminal.side);
    let needsNewEdges = false;
    if (!aIsUsable || !bIsUsable) {
        needsNewEdges = true;
        if (!aIsUsable) {
            bTerminal = convertTerminalToPoint(bTerminal);
        }
        if (!bIsUsable) {
            aTerminal = convertTerminalToPoint(aTerminal);
        }
        if (bTerminal.bounds.containsPoint(aTerminal.target, options.expandElbowLegLength)) {
            bTerminal = convertTerminalToPoint(bTerminal);
        }
        if (aTerminal.bounds.containsPoint(bTerminal.target, options.expandElbowLegLength)) {
            aTerminal = convertTerminalToPoint(aTerminal);
        }
    }
    if (needsNewEdges) {
        edgesA = {
            top: getUsableEdge(aTerminal, bTerminal, "top", options),
            right: getUsableEdge(aTerminal, bTerminal, "right", options),
            bottom: getUsableEdge(aTerminal, bTerminal, "bottom", options),
            left: getUsableEdge(aTerminal, bTerminal, "left", options)
        };
        edgesB = {
            top: getUsableEdge(bTerminal, aTerminal, "top", options),
            right: getUsableEdge(bTerminal, aTerminal, "right", options),
            bottom: getUsableEdge(bTerminal, aTerminal, "bottom", options),
            left: getUsableEdge(bTerminal, aTerminal, "left", options)
        };
    }
    const expandedA = aTerminal.isPoint ? aTerminal.bounds : aTerminal.bounds.clone().expandBy(options.expandElbowLegLength);
    const expandedB = bTerminal.isPoint ? bTerminal.bounds : bTerminal.bounds.clone().expandBy(options.expandElbowLegLength);
    const common = {
        original: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"].Common([
            aTerminal.bounds,
            bTerminal.bounds
        ]),
        expanded: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"].Common([
            expandedA,
            expandedB
        ])
    };
    let gapX = bTerminal.bounds.minX - aTerminal.bounds.maxX;
    if (gapX < 0) {
        gapX = aTerminal.bounds.minX - bTerminal.bounds.maxX;
        if (gapX < 0) {
            gapX = 0;
        }
        gapX = -gapX;
    }
    let gapY = bTerminal.bounds.minY - aTerminal.bounds.maxY;
    if (gapY < 0) {
        gapY = aTerminal.bounds.minY - bTerminal.bounds.maxY;
        if (gapY < 0) {
            gapY = 0;
        }
        gapY = -gapY;
    }
    const aMinLength = aTerminal.minEndSegmentLength * 3;
    const bMinLength = bTerminal.minEndSegmentLength * 3;
    const minLegDistanceNeeded = (aTerminal.isPoint ? aMinLength : options.minElbowLegLength) + (bTerminal.isPoint ? bMinLength : options.minElbowLegLength);
    let mxRange = null;
    if (gapX > minLegDistanceNeeded) {
        mxRange = {
            a: aTerminal.isPoint ? aTerminal.bounds.maxX + aMinLength : expandedA.maxX,
            b: bTerminal.isPoint ? bTerminal.bounds.minX - bMinLength : expandedB.minX
        };
    } else if (gapX < -minLegDistanceNeeded) {
        mxRange = {
            a: aTerminal.isPoint ? aTerminal.bounds.minX - aMinLength : expandedA.minX,
            b: bTerminal.isPoint ? bTerminal.bounds.maxX + bMinLength : expandedB.maxX
        };
    }
    let myRange = null;
    if (gapY > minLegDistanceNeeded) {
        myRange = {
            a: aTerminal.isPoint ? aTerminal.bounds.maxY + aMinLength : expandedA.maxY,
            b: bTerminal.isPoint ? bTerminal.bounds.minY - bMinLength : expandedB.minY
        };
    } else if (gapY < -minLegDistanceNeeded) {
        myRange = {
            a: aTerminal.isPoint ? aTerminal.bounds.minY - aMinLength : expandedA.minY,
            b: bTerminal.isPoint ? bTerminal.bounds.maxY + bMinLength : expandedB.maxY
        };
    }
    const midpoint = swapOrder ? 1 - options.elbowMidpoint : options.elbowMidpoint;
    const mx = mxRange ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(mxRange.a, mxRange.b, midpoint) : null;
    const my = myRange ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(myRange.a, myRange.b, midpoint) : null;
    const info = {
        options,
        swapOrder,
        A: {
            isPoint: aTerminal.isPoint,
            target: aTerminal.target,
            isExact: aTerminal.isExact,
            arrowheadOffset: aTerminal.arrowheadOffset,
            minEndSegmentLength: aTerminal.minEndSegmentLength,
            original: aTerminal.bounds,
            expanded: expandedA,
            edges: edgesA,
            geometry: aTerminal.geometry
        },
        B: {
            isPoint: bTerminal.isPoint,
            target: bTerminal.target,
            isExact: bTerminal.isExact,
            arrowheadOffset: bTerminal.arrowheadOffset,
            minEndSegmentLength: bTerminal.minEndSegmentLength,
            original: bTerminal.bounds,
            expanded: expandedB,
            edges: edgesB,
            geometry: bTerminal.geometry
        },
        common,
        gapX,
        gapY,
        midX: mx,
        midY: my
    };
    const workingInfo = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$ElbowArrowWorkingInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowWorkingInfo"](info);
    const aSide = getSideToUse(aTerminal, bTerminal, info.A.edges);
    const bSide = getSideToUse(bTerminal, aTerminal, info.B.edges);
    let route;
    if (aSide && bSide) {
        route = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$routeArrowWithAutoEdgePicking$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["routeArrowWithManualEdgePicking"])(workingInfo, aSide, bSide);
    } else if (aSide && !bSide) {
        route = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$routeArrowWithAutoEdgePicking$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["routeArrowWithPartialEdgePicking"])(workingInfo, aSide);
    }
    if (!route) {
        route = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$routes$2f$routeArrowWithAutoEdgePicking$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["routeArrowWithAutoEdgePicking"])(workingInfo, aSide || bSide ? "fallback" : "auto");
    }
    if (route) {
        castPathSegmentIntoGeometry("first", info.A, info.B, route);
        castPathSegmentIntoGeometry("last", info.B, info.A, route);
        fixTinyEndNubs(route, aTerminal, bTerminal);
        if (swapOrder) route.points.reverse();
    }
    return {
        ...info,
        route,
        midXRange: mxRange ? swapOrder ? {
            lo: mxRange.b,
            hi: mxRange.a
        } : {
            lo: mxRange.a,
            hi: mxRange.b
        } : null,
        midYRange: myRange ? swapOrder ? {
            lo: myRange.b,
            hi: myRange.a
        } : {
            lo: myRange.a,
            hi: myRange.b
        } : null
    };
}
function getRouteHandlePath(info, route) {
    const startTarget = info.swapOrder ? info.B.target : info.A.target;
    const endTarget = info.swapOrder ? info.A.target : info.B.target;
    const firstSegmentLength = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].ManhattanDist(route.points[0], route.points[1]);
    const lastSegmentLength = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].ManhattanDist(route.points[route.points.length - 2], route.points[route.points.length - 1]);
    const newFirstSegmentLength = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].ManhattanDist(startTarget, route.points[1]);
    const newLastSegmentLength = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].ManhattanDist(route.points[route.points.length - 2], endTarget);
    const firstSegmentLengthChange = firstSegmentLength - newFirstSegmentLength;
    const lastSegmentLengthChange = lastSegmentLength - newLastSegmentLength;
    const newPoints = [
        startTarget,
        ...route.points,
        endTarget
    ];
    return {
        name: route.name,
        distance: route.distance + firstSegmentLengthChange + lastSegmentLengthChange,
        points: newPoints.filter((p)=>!route.skipPointsWhenDrawing.has(p)),
        aEdgePicking: route.aEdgePicking,
        bEdgePicking: route.bEdgePicking,
        skipPointsWhenDrawing: route.skipPointsWhenDrawing,
        midpointHandle: route.midpointHandle
    };
}
function getEdgeFromNormalizedAnchor(normalizedAnchor) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["approximately"])(normalizedAnchor.x, 0.5) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["approximately"])(normalizedAnchor.y, 0.5)) {
        return null;
    }
    if (Math.abs(normalizedAnchor.x - 0.5) > // slightly bias towards x arrows to prevent flickering when the anchor is right on the line
    // between the two directions
    Math.abs(normalizedAnchor.y - 0.5) - 1e-4) {
        return normalizedAnchor.x < 0.5 ? "left" : "right";
    }
    return normalizedAnchor.y < 0.5 ? "top" : "bottom";
}
function getElbowArrowTerminalInfo(editor, arrow, binding, point) {
    const arrowStrokeSize = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][arrow.props.size] * arrow.props.scale / 2;
    const minEndSegmentLength = arrowStrokeSize * arrow.props.scale * 3;
    if (binding) {
        const target = editor.getShape(binding.toId);
        const geometry = getBindingGeometryInArrowSpace(editor, arrow, binding.toId, binding.props);
        if (geometry && target) {
            let arrowheadOffset = 0;
            const arrowheadProp = binding.props.terminal === "start" ? "arrowheadStart" : "arrowheadEnd";
            if (arrow.props[arrowheadProp] !== "none") {
                const targetScale = "scale" in target.props ? target.props.scale : 1;
                const targetStrokeSize = "size" in target.props ? (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][target.props.size] ?? 0) * targetScale / 2 : 0;
                arrowheadOffset = arrowStrokeSize + targetStrokeSize + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BOUND_ARROW_OFFSET"] * arrow.props.scale;
            }
            let side = null;
            const targetPoint = geometry.target;
            if (binding.props.isPrecise) {
                side = getEdgeFromNormalizedAnchor(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].RotWith(binding.props.normalizedAnchor, {
                    x: 0.5,
                    y: 0.5
                }, geometry.shapeToArrowTransform.rotation()));
            }
            return {
                targetShapeId: binding.toId,
                isPoint: false,
                isExact: binding.props.isExact,
                bounds: geometry.bounds,
                geometry: geometry.geometry,
                target: targetPoint,
                arrowheadOffset,
                minEndSegmentLength,
                side,
                snap: binding.props.snap
            };
        }
    }
    return {
        targetShapeId: null,
        bounds: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"].FromCenter(point, {
            x: 0,
            y: 0
        }),
        geometry: null,
        isExact: false,
        isPoint: true,
        target: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(point),
        arrowheadOffset: 0,
        minEndSegmentLength,
        side: null,
        snap: "none"
    };
}
function getBindingGeometryInArrowSpace(editor, arrow, targetId, bindingProps) {
    const hasArrowhead = bindingProps.terminal === "start" ? arrow.props.arrowheadStart !== "none" : arrow.props.arrowheadEnd !== "none";
    const targetGeometryInTargetSpace = editor.getShapeGeometry(targetId, hasArrowhead ? void 0 : {
        context: "@tldraw/arrow-without-arrowhead"
    });
    if (!targetGeometryInTargetSpace) {
        return null;
    }
    const arrowTransform = editor.getShapePageTransform(arrow.id);
    const shapeTransform = editor.getShapePageTransform(targetId);
    const shapeToArrowTransform = arrowTransform.clone().invert().multiply(shapeTransform);
    const targetGeometryInArrowSpace = targetGeometryInTargetSpace.transform(shapeToArrowTransform);
    const center = {
        x: 0.5,
        y: 0.5
    };
    const normalizedAnchor = bindingProps.isPrecise ? bindingProps.normalizedAnchor : center;
    const targetInShapeSpace = {
        x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(targetGeometryInTargetSpace.bounds.minX, targetGeometryInTargetSpace.bounds.maxX, normalizedAnchor.x),
        y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(targetGeometryInTargetSpace.bounds.minY, targetGeometryInTargetSpace.bounds.maxY, normalizedAnchor.y)
    };
    const centerInShapeSpace = {
        x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(targetGeometryInTargetSpace.bounds.minX, targetGeometryInTargetSpace.bounds.maxX, center.x),
        y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(targetGeometryInTargetSpace.bounds.minY, targetGeometryInTargetSpace.bounds.maxY, center.y)
    };
    const targetInArrowSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(shapeToArrowTransform, targetInShapeSpace);
    const centerInArrowSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(shapeToArrowTransform, centerInShapeSpace);
    return {
        bounds: targetGeometryInArrowSpace.bounds,
        geometry: targetGeometryInArrowSpace,
        target: targetInArrowSpace,
        center: centerInArrowSpace,
        shapeToArrowTransform
    };
}
const sideProps = {
    top: {
        expand: -1,
        main: "minY",
        opposite: "maxY",
        crossMid: "midX",
        crossMin: "minX",
        crossMax: "maxX",
        bRangeExpand: "max",
        crossAxis: "x"
    },
    bottom: {
        expand: 1,
        main: "maxY",
        opposite: "minY",
        crossMid: "midX",
        crossMin: "minX",
        crossMax: "maxX",
        bRangeExpand: "min",
        crossAxis: "x"
    },
    left: {
        expand: -1,
        main: "minX",
        opposite: "maxX",
        crossMid: "midY",
        crossMin: "minY",
        crossMax: "maxY",
        bRangeExpand: "max",
        crossAxis: "y"
    },
    right: {
        expand: 1,
        main: "maxX",
        opposite: "minX",
        crossMid: "midY",
        crossMin: "minY",
        crossMax: "maxY",
        bRangeExpand: "min",
        crossAxis: "y"
    }
};
function getUsableEdge(a, b, side, options) {
    const props = sideProps[side];
    const isSelfBoundAndShouldRouteExternal = a.targetShapeId === b.targetShapeId && a.targetShapeId !== null && (a.snap === "edge" || a.snap === "edge-point") && (b.snap === "edge" || b.snap === "edge-point");
    const aValue = a.bounds[props.main];
    const aExpanded = a.isPoint ? null : aValue + props.expand * options.expandElbowLegLength;
    const originalACrossRange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$range$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createRange"])(a.bounds[props.crossMin], a.bounds[props.crossMax]);
    let aCrossRange = originalACrossRange;
    if (!aCrossRange) {
        return null;
    }
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assert"])(originalACrossRange);
    const bRange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$range$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createRange"])(b.bounds[props.main], b.bounds[props.opposite]);
    if (!b.isPoint) {
        bRange[props.bRangeExpand] -= options.minElbowLegLength * 2 * props.expand;
    }
    const bCrossRange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$range$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["expandRange"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$range$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createRange"])(b.bounds[props.crossMin], b.bounds[props.crossMax]), options.expandElbowLegLength);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assert"])(bRange && bCrossRange);
    let isPartial = false;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$range$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isWithinRange"])(aValue, bRange) && !a.isPoint && !b.isPoint && !isSelfBoundAndShouldRouteExternal) {
        const subtracted = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$range$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["subtractRange"])(aCrossRange, bCrossRange);
        switch(subtracted.length){
            case 0:
                return null;
            case 1:
                isPartial = subtracted[0] !== aCrossRange;
                aCrossRange = subtracted[0];
                break;
            case 2:
                isPartial = true;
                aCrossRange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$range$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rangeSize"])(subtracted[0]) > (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$range$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rangeSize"])(subtracted[1]) ? subtracted[0] : subtracted[1];
                break;
            default:
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(subtracted);
        }
    }
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$range$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isWithinRange"])(a.target[props.crossAxis], aCrossRange)) {
        return null;
    }
    const crossTarget = a.target[props.crossAxis];
    return {
        value: aValue,
        expanded: aExpanded,
        cross: aCrossRange,
        crossTarget,
        isPartial
    };
}
function hasUsableEdge(edges, side) {
    if (side === null) {
        return !!(edges.bottom || edges.left || edges.right || edges.top);
    }
    if (side === "x") {
        return !!edges.left || !!edges.right;
    }
    if (side === "y") {
        return !!edges.top || !!edges.bottom;
    }
    return !!edges[side];
}
function getSideToUse(binding, other, edges) {
    switch(binding.side){
        case null:
            return null;
        case "x":
            if (binding.bounds.center.x > other.bounds.center.x && edges?.left) {
                return "left";
            } else if (edges?.right) {
                return "right";
            }
            return null;
        case "y":
            if (binding.bounds.center.y > other.bounds.center.y && edges?.top) {
                return "top";
            } else if (edges?.bottom) {
                return "bottom";
            }
            return null;
        default:
            return binding.side;
    }
}
function convertTerminalToPoint(terminal) {
    if (terminal.isPoint) return terminal;
    let side = null;
    let arrowheadOffset = 0;
    if (terminal.snap === "edge" || terminal.snap === "edge-point") {
        arrowheadOffset = terminal.arrowheadOffset;
        if (terminal.side === "x" || terminal.side === "left" || terminal.side === "right") {
            side = "x";
        }
        if (terminal.side === "y" || terminal.side === "top" || terminal.side === "bottom") {
            side = "y";
        }
    }
    return {
        targetShapeId: terminal.targetShapeId,
        side,
        bounds: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"](terminal.target.x, terminal.target.y, 0, 0),
        geometry: terminal.geometry,
        target: terminal.target,
        arrowheadOffset,
        minEndSegmentLength: terminal.minEndSegmentLength,
        isExact: terminal.isExact,
        isPoint: true,
        snap: terminal.snap
    };
}
function castPathSegmentIntoGeometry(segment, target, other, route) {
    if (!target.geometry) return;
    const point1 = segment === "first" ? route.points[0] : route.points[route.points.length - 1];
    const point2 = segment === "first" ? route.points[1] : route.points[route.points.length - 2];
    const pointToFindClosestIntersectionTo = target.geometry.isClosed ? point2 : target.target;
    const initialDistance = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].ManhattanDist(point1, pointToFindClosestIntersectionTo);
    let nearestIntersectionToPoint2 = null;
    let nearestDistanceToPoint2 = Infinity;
    if (target.isExact) {
        nearestIntersectionToPoint2 = target.target;
    } else if (target.geometry) {
        const intersections = target.geometry.intersectLineSegment(point2, target.target, {
            includeLabels: false,
            includeInternal: false
        });
        if (target.geometry.hitTestPoint(target.target, Math.max(1, target.arrowheadOffset), true, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Geometry2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Geometry2dFilters"].EXCLUDE_NON_STANDARD)) {
            intersections.push(target.target);
        }
        for (const intersection of intersections){
            const point2Distance = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].ManhattanDist(pointToFindClosestIntersectionTo, intersection);
            if (point2Distance < nearestDistanceToPoint2) {
                nearestDistanceToPoint2 = point2Distance;
                nearestIntersectionToPoint2 = intersection;
            }
        }
    }
    if (nearestIntersectionToPoint2) {
        let offset = target.arrowheadOffset;
        const currentFinalSegmentLength = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].ManhattanDist(point2, nearestIntersectionToPoint2);
        const minLength = target.arrowheadOffset * 2;
        if (currentFinalSegmentLength < minLength) {
            const targetLength = minLength - target.arrowheadOffset;
            offset = currentFinalSegmentLength - targetLength;
        }
        if (offset < target.minEndSegmentLength) {
            if (target.geometry.bounds.containsPoint(other.target)) {
                offset = Math.max(0, offset);
            } else {
                offset = -target.arrowheadOffset;
            }
        }
        let nudgedPoint = nearestIntersectionToPoint2;
        let shouldAddExtraPointForNudge = false;
        if (!target.isExact && offset !== 0) {
            const nudged = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Nudge(nearestIntersectionToPoint2, point2, offset);
            nudgedPoint = nudged;
            if (offset < 0 && !target.geometry.hitTestPoint(nudged, 0, true, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Geometry2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Geometry2dFilters"].EXCLUDE_NON_STANDARD)) {
                nudgedPoint = nearestIntersectionToPoint2;
            } else {
                if (offset < 0) {
                    shouldAddExtraPointForNudge = true;
                }
                nudgedPoint = nudged;
            }
        }
        const newDistance = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].ManhattanDist(point2, nudgedPoint);
        route.distance += newDistance - initialDistance;
        point1.x = nudgedPoint.x;
        point1.y = nudgedPoint.y;
        if (shouldAddExtraPointForNudge) {
            const midPoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Lrp(point2, point1, 0.5);
            route.skipPointsWhenDrawing.add(midPoint);
            route.points.splice(segment === "first" ? 1 : route.points.length - 1, 0, midPoint);
        }
    }
}
function fixTinyEndNubs(route, aTerminal, bTerminal) {
    if (!route) return;
    if (route.points.length >= 3) {
        const a = route.points[0];
        const b = route.points[1];
        const firstSegmentLength = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].ManhattanDist(a, b);
        if (firstSegmentLength < aTerminal.minEndSegmentLength) {
            route.points.splice(1, 1);
            if (route.points.length >= 3) {
                const matchAxis = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["approximately"])(a.x, b.x) ? "y" : "x";
                route.points[1][matchAxis] = a[matchAxis];
            }
        }
    }
    if (route.points.length >= 3) {
        const a = route.points[route.points.length - 1];
        const b = route.points[route.points.length - 2];
        const lastSegmentLength = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].ManhattanDist(a, b);
        if (lastSegmentLength < bTerminal.minEndSegmentLength) {
            route.points.splice(route.points.length - 2, 1);
            if (route.points.length >= 3) {
                const matchAxis = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["approximately"])(a.x, b.x) ? "y" : "x";
                route.points[route.points.length - 2][matchAxis] = a[matchAxis];
            }
        }
    }
}
function adjustTerminalForUnclosedPathIfNeeded(terminal, otherTerminal, options) {
    if (!terminal.geometry || terminal.geometry.isClosed) return terminal;
    const normalizedPointAlongPath = terminal.geometry.uninterpolateAlongEdge(terminal.target, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Geometry2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Geometry2dFilters"].EXCLUDE_NON_STANDARD);
    const prev = terminal.geometry.interpolateAlongEdge(normalizedPointAlongPath - 0.01 / terminal.geometry.length);
    const next = terminal.geometry.interpolateAlongEdge(normalizedPointAlongPath + 0.01 / terminal.geometry.length);
    const normal = next.sub(prev).per().uni();
    const axis = Math.abs(normal.x) > Math.abs(normal.y) ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowAxes"].x : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowAxes"].y;
    if (terminal.geometry.bounds.containsPoint(otherTerminal.target, options.expandElbowLegLength)) {
        terminal.side = axis.self;
        return convertTerminalToPoint(terminal);
    }
    const min = axis.v(terminal.target[axis.self] - terminal.bounds[axis.size] * 2, terminal.target[axis.cross]);
    const max = axis.v(terminal.target[axis.self] + terminal.bounds[axis.size] * 2, terminal.target[axis.cross]);
    let furthestIntersectionTowardsMin = null;
    let furthestIntersectionTowardsMinDistance = 0;
    let furthestIntersectionTowardsMax = null;
    let furthestIntersectionTowardsMaxDistance = 0;
    let side = axis.self;
    for (const intersection of terminal.geometry.intersectLineSegment(min, max, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Geometry2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Geometry2dFilters"].EXCLUDE_NON_STANDARD)){
        if (Math.abs(intersection[axis.self] - terminal.target[axis.self]) < 1) {
            continue;
        }
        if (intersection[axis.self] < terminal.target[axis.self]) {
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].ManhattanDist(intersection, terminal.target) > furthestIntersectionTowardsMinDistance) {
                furthestIntersectionTowardsMinDistance = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].ManhattanDist(intersection, terminal.target);
                furthestIntersectionTowardsMin = intersection;
            }
        } else {
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].ManhattanDist(intersection, terminal.target) > furthestIntersectionTowardsMaxDistance) {
                furthestIntersectionTowardsMaxDistance = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].ManhattanDist(intersection, terminal.target);
                furthestIntersectionTowardsMax = intersection;
            }
        }
    }
    if (furthestIntersectionTowardsMin && furthestIntersectionTowardsMax) {
        if (furthestIntersectionTowardsMinDistance > furthestIntersectionTowardsMaxDistance) {
            side = axis.hiEdge;
        } else {
            side = axis.loEdge;
        }
    } else if (furthestIntersectionTowardsMin && !furthestIntersectionTowardsMax) {
        side = axis.hiEdge;
    } else if (!furthestIntersectionTowardsMin && furthestIntersectionTowardsMax) {
        side = axis.loEdge;
    }
    terminal.side = side;
    return terminal;
}
;
 //# sourceMappingURL=getElbowArrowInfo.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/shared.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "BOUND_ARROW_OFFSET": (()=>BOUND_ARROW_OFFSET),
    "MIN_ARROW_LENGTH": (()=>MIN_ARROW_LENGTH),
    "STROKE_SIZES": (()=>STROKE_SIZES),
    "WAY_TOO_BIG_ARROW_BEND_FACTOR": (()=>WAY_TOO_BIG_ARROW_BEND_FACTOR),
    "createOrUpdateArrowBinding": (()=>createOrUpdateArrowBinding),
    "getArrowBindings": (()=>getArrowBindings),
    "getArrowInfo": (()=>getArrowInfo),
    "getArrowTerminalInArrowSpace": (()=>getArrowTerminalInArrowSpace),
    "getArrowTerminalsInArrowSpace": (()=>getArrowTerminalsInArrowSpace),
    "getBoundShapeInfoForTerminal": (()=>getBoundShapeInfoForTerminal),
    "getBoundShapeRelationships": (()=>getBoundShapeRelationships),
    "getIsArrowStraight": (()=>getIsArrowStraight),
    "removeArrowBinding": (()=>removeArrowBinding)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/object.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Mat.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$store$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/store/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$store$2f$dist$2d$esm$2f$lib$2f$Store$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/store/dist-esm/lib/Store.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$curved$2d$arrow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/curved-arrow.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$getElbowArrowInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/getElbowArrowInfo.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$straight$2d$arrow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/straight-arrow.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
const MIN_ARROW_BEND = 8;
function getIsArrowStraight(shape) {
    if (shape.props.kind !== "arc") return false;
    return Math.abs(shape.props.bend) < MIN_ARROW_BEND * shape.props.scale;
}
function getBoundShapeInfoForTerminal(editor, arrow, terminalName) {
    const binding = editor.getBindingsFromShape(arrow, "arrow").find((b)=>b.props.terminal === terminalName);
    if (!binding) return;
    const boundShape = editor.getShape(binding.toId);
    if (!boundShape) return;
    const transform = editor.getShapePageTransform(boundShape);
    const hasArrowhead = terminalName === "start" ? arrow.props.arrowheadStart !== "none" : arrow.props.arrowheadEnd !== "none";
    const geometry = editor.getShapeGeometry(boundShape, hasArrowhead ? void 0 : {
        context: "@tldraw/arrow-without-arrowhead"
    });
    return {
        shape: boundShape,
        transform,
        isClosed: geometry.isClosed,
        isExact: binding.props.isExact,
        didIntersect: false,
        geometry
    };
}
function getArrowTerminalInArrowSpace(editor, arrowPageTransform, binding, forceImprecise) {
    const boundShape = editor.getShape(binding.toId);
    if (!boundShape) {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](0, 0);
    } else {
        const { point, size } = editor.getShapeGeometry(boundShape).bounds;
        const shapePoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(point, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].MulV(// if the parent is the bound shape, then it's ALWAYS precise
        binding.props.isPrecise || forceImprecise ? binding.props.normalizedAnchor : {
            x: 0.5,
            y: 0.5
        }, size));
        const pagePoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(editor.getShapePageTransform(boundShape), shapePoint);
        const arrowPoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].Inverse(arrowPageTransform), pagePoint);
        return arrowPoint;
    }
}
const arrowBindingsCache = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$store$2f$dist$2d$esm$2f$lib$2f$Store$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createComputedCache"])("arrow bindings", (editor, arrow)=>{
    const bindings = editor.getBindingsFromShape(arrow.id, "arrow");
    return {
        start: bindings.find((b)=>b.props.terminal === "start"),
        end: bindings.find((b)=>b.props.terminal === "end")
    };
}, {
    // we only look at the arrow IDs:
    areRecordsEqual: (a, b)=>a.id === b.id,
    // the records should stay the same:
    areResultsEqual: (a, b)=>a.start === b.start && a.end === b.end
});
function getArrowBindings(editor, shape) {
    return arrowBindingsCache.get(editor, shape.id);
}
const arrowInfoCache = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$store$2f$dist$2d$esm$2f$lib$2f$Store$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createComputedCache"])("arrow info", (editor, shape)=>{
    const bindings = getArrowBindings(editor, shape);
    if (shape.props.kind === "elbow") {
        const elbowInfo = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$getElbowArrowInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getElbowArrowInfo"])(editor, shape, bindings);
        if (!elbowInfo?.route) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$straight$2d$arrow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStraightArrowInfo"])(editor, shape, bindings);
        const start = elbowInfo.swapOrder ? elbowInfo.B : elbowInfo.A;
        const end = elbowInfo.swapOrder ? elbowInfo.A : elbowInfo.B;
        return {
            type: "elbow",
            bindings,
            start: {
                handle: start.target,
                point: elbowInfo.route.points[0],
                arrowhead: shape.props.arrowheadStart
            },
            end: {
                handle: end.target,
                point: elbowInfo.route.points[elbowInfo.route.points.length - 1],
                arrowhead: shape.props.arrowheadEnd
            },
            elbow: elbowInfo,
            route: elbowInfo.route,
            isValid: true
        };
    }
    if (getIsArrowStraight(shape)) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$straight$2d$arrow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStraightArrowInfo"])(editor, shape, bindings);
    } else {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$curved$2d$arrow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getCurvedArrowInfo"])(editor, shape, bindings);
    }
}, {
    areRecordsEqual: (a, b)=>a.props === b.props,
    areResultsEqual: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEqualAllowingForFloatingPointErrors"]
});
function getArrowInfo(editor, shape) {
    const id = typeof shape === "string" ? shape : shape.id;
    return arrowInfoCache.get(editor, id);
}
function getArrowTerminalsInArrowSpace(editor, shape, bindings) {
    const arrowPageTransform = editor.getShapePageTransform(shape);
    const boundShapeRelationships = getBoundShapeRelationships(editor, bindings.start?.toId, bindings.end?.toId);
    const start = bindings.start ? getArrowTerminalInArrowSpace(editor, arrowPageTransform, bindings.start, boundShapeRelationships === "double-bound" || boundShapeRelationships === "start-contains-end") : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(shape.props.start);
    const end = bindings.end ? getArrowTerminalInArrowSpace(editor, arrowPageTransform, bindings.end, boundShapeRelationships === "double-bound" || boundShapeRelationships === "end-contains-start") : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(shape.props.end);
    return {
        start,
        end
    };
}
function createOrUpdateArrowBinding(editor, arrow, target, props) {
    const arrowId = typeof arrow === "string" ? arrow : arrow.id;
    const targetId = typeof target === "string" ? target : target.id;
    const existingMany = editor.getBindingsFromShape(arrowId, "arrow").filter((b)=>b.props.terminal === props.terminal);
    if (existingMany.length > 1) {
        editor.deleteBindings(existingMany.slice(1));
    }
    const existing = existingMany[0];
    if (existing) {
        editor.updateBinding({
            ...existing,
            toId: targetId,
            props
        });
    } else {
        editor.createBinding({
            type: "arrow",
            fromId: arrowId,
            toId: targetId,
            props
        });
    }
}
function removeArrowBinding(editor, arrow, terminal) {
    const existing = editor.getBindingsFromShape(arrow, "arrow").filter((b)=>b.props.terminal === terminal);
    editor.deleteBindings(existing);
}
const MIN_ARROW_LENGTH = 10;
const BOUND_ARROW_OFFSET = 10;
const WAY_TOO_BIG_ARROW_BEND_FACTOR = 10;
const STROKE_SIZES = {
    s: 2,
    m: 3.5,
    l: 5,
    xl: 10
};
function getBoundShapeRelationships(editor, startShapeId, endShapeId) {
    if (!startShapeId || !endShapeId) return "safe";
    if (startShapeId === endShapeId) return "double-bound";
    const startBounds = editor.getShapePageBounds(startShapeId);
    const endBounds = editor.getShapePageBounds(endShapeId);
    if (startBounds && endBounds) {
        if (startBounds.contains(endBounds)) return "start-contains-end";
        if (endBounds.contains(startBounds)) return "end-contains-start";
    }
    return "safe";
}
;
 //# sourceMappingURL=shared.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/arrowTargetState.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "clearArrowTargetState": (()=>clearArrowTargetState),
    "getArrowTargetState": (()=>getArrowTargetState),
    "updateArrowTargetState": (()=>updateArrowTargetState)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLArrowShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/shapes/TLArrowShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Atom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/Atom.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Box.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Geometry2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Geometry2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/object.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/cache.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/definitions.mjs [app-ssr] (ecmascript)");
;
;
const arrowTargetStore = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WeakCache"]();
function getArrowTargetAtom(editor) {
    return arrowTargetStore.get(editor, ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Atom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["atom"])("arrowTarget", null));
}
function getArrowTargetState(editor) {
    return getArrowTargetAtom(editor).get();
}
function clearArrowTargetState(editor) {
    getArrowTargetAtom(editor).set(null);
}
function updateArrowTargetState({ editor, pointInPageSpace, arrow, isPrecise, currentBinding, oppositeBinding }) {
    const util = editor.getShapeUtil("arrow");
    if (util.options.shouldIgnoreTargets(editor)) {
        getArrowTargetAtom(editor).set(null);
        return null;
    }
    const isExact = util.options.shouldBeExact(editor);
    const arrowKind = arrow ? arrow.props.kind : editor.getStyleForNextShape(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLArrowShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ArrowShapeKindStyle"]);
    const target = editor.getShapeAtPoint(pointInPageSpace, {
        hitInside: true,
        hitFrameInside: true,
        margin: arrowKind === "elbow" ? 8 : 0,
        filter: (targetShape)=>{
            return !targetShape.isLocked && editor.canBindShapes({
                fromShape: arrow ?? targetFilterFallback,
                toShape: targetShape,
                binding: "arrow"
            });
        }
    });
    if (!target) {
        getArrowTargetAtom(editor).set(null);
        return null;
    }
    const targetGeometryInTargetSpace = editor.getShapeGeometry(target);
    const targetBoundsInTargetSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"].ZeroFix(targetGeometryInTargetSpace.bounds);
    const targetCenterInTargetSpace = targetGeometryInTargetSpace.center;
    const targetTransform = editor.getShapePageTransform(target);
    const pointInTargetSpace = editor.getPointInShapeSpace(target, pointInPageSpace);
    const castDistance = Math.max(targetGeometryInTargetSpace.bounds.width, targetGeometryInTargetSpace.bounds.height);
    const handlesInPageSpace = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mapObjectMapValues"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowSideDeltas"], (side, delta)=>{
        const axis = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowAxes"][__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowSideAxes"][side]];
        const farPoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(delta, castDistance).add(targetCenterInTargetSpace);
        let isEnabled = false;
        let handlePointInTargetSpace = axis.v(targetBoundsInTargetSpace[side], targetBoundsInTargetSpace[axis.crossMid]);
        let furthestDistance = 0;
        const intersections = targetGeometryInTargetSpace.intersectLineSegment(targetCenterInTargetSpace, farPoint, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Geometry2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Geometry2dFilters"].EXCLUDE_NON_STANDARD);
        for (const intersection of intersections){
            const distance = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(intersection, targetCenterInTargetSpace);
            if (distance > furthestDistance) {
                furthestDistance = distance;
                handlePointInTargetSpace = intersection;
                isEnabled = targetGeometryInTargetSpace.isClosed;
            }
        }
        const handlePointInPageSpace = targetTransform.applyToPoint(handlePointInTargetSpace);
        return {
            point: handlePointInPageSpace,
            isEnabled,
            far: targetTransform.applyToPoint(farPoint)
        };
    });
    const zoomLevel = editor.getZoomLevel();
    const minDistScaled = util.options.minElbowHandleDistance / zoomLevel;
    const targetCenterInPageSpace = targetTransform.applyToPoint(targetCenterInTargetSpace);
    for (const side of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectMapKeys"])(handlesInPageSpace)){
        const handle = handlesInPageSpace[side];
        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].DistMin(handle.point, targetCenterInPageSpace, minDistScaled)) {
            handle.isEnabled = false;
        }
    }
    let precise = isPrecise || isExact;
    if (!precise) {
        if (!currentBinding || currentBinding && target.id !== currentBinding.toId) {
            precise = editor.inputs.pointerVelocity.len() < 0.5;
        }
    }
    if (!isPrecise) {
        if (!targetGeometryInTargetSpace.isClosed) {
            precise = true;
        }
        if (oppositeBinding && target.id === oppositeBinding.toId && oppositeBinding.props.isPrecise) {
            precise = true;
        }
    }
    const shouldSnapCenter = !isExact && precise && targetGeometryInTargetSpace.isClosed;
    const shouldSnapEdges = !isExact && (precise && arrowKind === "elbow" || !targetGeometryInTargetSpace.isClosed);
    const shouldSnapEdgePoints = !isExact && precise && arrowKind === "elbow" && targetGeometryInTargetSpace.isClosed;
    const shouldSnapNone = precise && (targetGeometryInTargetSpace.isClosed || isExact);
    const shouldSnapCenterAxis = !isExact && precise && arrowKind === "elbow" && targetGeometryInTargetSpace.isClosed;
    let snap = "none";
    let anchorInPageSpace = pointInPageSpace;
    if (!shouldSnapNone) {
        snap = "center";
        anchorInPageSpace = targetCenterInPageSpace;
    }
    if (shouldSnapEdges) {
        const snapDistance = shouldSnapNone ? calculateSnapDistance(editor, targetBoundsInTargetSpace, util.options.elbowArrowEdgeSnapDistance) : Infinity;
        const nearestPointOnEdgeInTargetSpace = targetGeometryInTargetSpace.nearestPoint(pointInTargetSpace, {
            includeLabels: false,
            includeInternal: false
        });
        const nearestPointOnEdgeInPageSpace = targetTransform.applyToPoint(nearestPointOnEdgeInTargetSpace);
        const distance = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(nearestPointOnEdgeInPageSpace, pointInPageSpace);
        if (distance < snapDistance) {
            snap = "edge";
            anchorInPageSpace = nearestPointOnEdgeInPageSpace;
        }
    }
    if (shouldSnapCenterAxis) {
        const snapDistance = calculateSnapDistance(editor, targetBoundsInTargetSpace, util.options.elbowArrowAxisSnapDistance);
        const distanceFromXAxis = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].DistanceToLineSegment(handlesInPageSpace.left.far, handlesInPageSpace.right.far, pointInPageSpace);
        const distanceFromYAxis = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].DistanceToLineSegment(handlesInPageSpace.top.far, handlesInPageSpace.bottom.far, pointInPageSpace);
        const snapAxis = distanceFromXAxis < distanceFromYAxis && distanceFromXAxis < snapDistance ? "x" : distanceFromYAxis < snapDistance ? "y" : null;
        if (snapAxis) {
            const axis = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowAxes"][snapAxis];
            const loDist2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(handlesInPageSpace[axis.loEdge].far, pointInPageSpace);
            const hiDist2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(handlesInPageSpace[axis.hiEdge].far, pointInPageSpace);
            const side = loDist2 < hiDist2 ? axis.loEdge : axis.hiEdge;
            if (handlesInPageSpace[side].isEnabled) {
                snap = "edge-point";
                anchorInPageSpace = handlesInPageSpace[side].point;
            }
        }
    }
    if (shouldSnapEdgePoints) {
        const snapDistance = calculateSnapDistance(editor, targetBoundsInTargetSpace, util.options.elbowArrowPointSnapDistance);
        let closestSide = null;
        let closestDistance = Infinity;
        for (const [side, handle] of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectMapEntries"])(handlesInPageSpace)){
            if (!handle.isEnabled) continue;
            const distance = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(handle.point, pointInPageSpace);
            if (distance < snapDistance && distance < closestDistance) {
                closestDistance = distance;
                closestSide = side;
            }
        }
        if (closestSide) {
            snap = "edge-point";
            anchorInPageSpace = handlesInPageSpace[closestSide].point;
        }
    }
    if (shouldSnapCenter) {
        const snapDistance = calculateSnapDistance(editor, targetBoundsInTargetSpace, arrowKind === "elbow" ? util.options.elbowArrowCenterSnapDistance : util.options.arcArrowCenterSnapDistance);
        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(pointInTargetSpace, targetBoundsInTargetSpace.center) < snapDistance) {
            snap = "center";
            anchorInPageSpace = targetCenterInPageSpace;
        }
    }
    const snapPointInTargetSpace = editor.getPointInShapeSpace(target, anchorInPageSpace);
    const normalizedAnchor = {
        x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["invLerp"])(targetBoundsInTargetSpace.minX, targetBoundsInTargetSpace.maxX, snapPointInTargetSpace.x),
        y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["invLerp"])(targetBoundsInTargetSpace.minY, targetBoundsInTargetSpace.maxY, snapPointInTargetSpace.y)
    };
    const result = {
        target,
        arrowKind,
        handlesInPageSpace,
        centerInPageSpace: targetCenterInPageSpace,
        anchorInPageSpace,
        isExact,
        isPrecise: precise,
        snap,
        normalizedAnchor
    };
    getArrowTargetAtom(editor).set(result);
    return result;
}
const targetFilterFallback = {
    type: "arrow"
};
function calculateSnapDistance(editor, targetBoundsInTargetSpace, idealSnapDistance) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(Math.min(targetBoundsInTargetSpace.width, targetBoundsInTargetSpace.height) * 0.15, 4, idealSnapDistance) / editor.getZoomLevel();
}
;
 //# sourceMappingURL=arrowTargetState.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/getStrokeOutlinePoints.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getStrokeOutlinePoints": (()=>getStrokeOutlinePoints),
    "getStrokeOutlineTracks": (()=>getStrokeOutlineTracks)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
;
const { PI } = Math;
const FIXED_PI = PI + 1e-4;
function getStrokeOutlineTracks(strokePoints, options = {}) {
    const { size = 16, smoothing = 0.5 } = options;
    if (strokePoints.length === 0 || size <= 0) {
        return {
            left: [],
            right: []
        };
    }
    const firstStrokePoint = strokePoints[0];
    const lastStrokePoint = strokePoints[strokePoints.length - 1];
    const totalLength = lastStrokePoint.runningLength;
    const minDistance = Math.pow(size * smoothing, 2);
    const leftPts = [];
    const rightPts = [];
    let prevVector = strokePoints[0].vector;
    let pl = strokePoints[0].point;
    let pr = pl;
    let tl = pl;
    let tr = pr;
    let isPrevPointSharpCorner = false;
    let strokePoint;
    for(let i = 0; i < strokePoints.length; i++){
        strokePoint = strokePoints[i];
        const { point, vector } = strokePoints[i];
        const prevDpr = strokePoint.vector.dpr(prevVector);
        const nextVector = (i < strokePoints.length - 1 ? strokePoints[i + 1] : strokePoints[i]).vector;
        const nextDpr = i < strokePoints.length - 1 ? nextVector.dpr(strokePoint.vector) : 1;
        const isPointSharpCorner = prevDpr < 0 && !isPrevPointSharpCorner;
        const isNextPointSharpCorner = nextDpr !== null && nextDpr < 0.2;
        if (isPointSharpCorner || isNextPointSharpCorner) {
            if (nextDpr > -0.62 && totalLength - strokePoint.runningLength > strokePoint.radius) {
                const offset2 = prevVector.clone().mul(strokePoint.radius);
                const cpr = prevVector.clone().cpr(nextVector);
                if (cpr < 0) {
                    tl = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(point, offset2);
                    tr = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(point, offset2);
                } else {
                    tl = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(point, offset2);
                    tr = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(point, offset2);
                }
                leftPts.push(tl);
                rightPts.push(tr);
            } else {
                const offset2 = prevVector.clone().mul(strokePoint.radius).per();
                const start = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(strokePoint.input, offset2);
                for(let step = 1 / 13, t = 0; t < 1; t += step){
                    tl = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].RotWith(start, strokePoint.input, FIXED_PI * t);
                    leftPts.push(tl);
                    tr = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].RotWith(start, strokePoint.input, FIXED_PI + FIXED_PI * -t);
                    rightPts.push(tr);
                }
            }
            pl = tl;
            pr = tr;
            if (isNextPointSharpCorner) {
                isPrevPointSharpCorner = true;
            }
            continue;
        }
        isPrevPointSharpCorner = false;
        if (strokePoint === firstStrokePoint || strokePoint === lastStrokePoint) {
            const offset2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Per(vector).mul(strokePoint.radius);
            leftPts.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(point, offset2));
            rightPts.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(point, offset2));
            continue;
        }
        const offset = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Lrp(nextVector, vector, nextDpr).per().mul(strokePoint.radius);
        tl = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(point, offset);
        if (i <= 1 || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(pl, tl) > minDistance) {
            leftPts.push(tl);
            pl = tl;
        }
        tr = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(point, offset);
        if (i <= 1 || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(pr, tr) > minDistance) {
            rightPts.push(tr);
            pr = tr;
        }
        prevVector = vector;
        continue;
    }
    return {
        left: leftPts,
        right: rightPts
    };
}
function getStrokeOutlinePoints(strokePoints, options = {}) {
    const { size = 16, start = {}, end = {}, last: isComplete = false } = options;
    const { cap: capStart = true } = start;
    const { cap: capEnd = true } = end;
    if (strokePoints.length === 0 || size <= 0) {
        return [];
    }
    const firstStrokePoint = strokePoints[0];
    const lastStrokePoint = strokePoints[strokePoints.length - 1];
    const totalLength = lastStrokePoint.runningLength;
    const taperStart = start.taper === false ? 0 : start.taper === true ? Math.max(size, totalLength) : start.taper;
    const taperEnd = end.taper === false ? 0 : end.taper === true ? Math.max(size, totalLength) : end.taper;
    const { left: leftPts, right: rightPts } = getStrokeOutlineTracks(strokePoints, options);
    const firstPoint = firstStrokePoint.point;
    const lastPoint = strokePoints.length > 1 ? strokePoints[strokePoints.length - 1].point : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].AddXY(firstStrokePoint.point, 1, 1);
    if (strokePoints.length === 1) {
        if (!(taperStart || taperEnd) || isComplete) {
            const start2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(firstPoint, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(firstPoint, lastPoint).uni().per().mul(-firstStrokePoint.radius));
            const dotPts = [];
            for(let step = 1 / 13, t = step; t <= 1; t += step){
                dotPts.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].RotWith(start2, firstPoint, FIXED_PI * 2 * t));
            }
            return dotPts;
        }
    }
    const startCap = [];
    if (taperStart || taperEnd && strokePoints.length === 1) {} else if (capStart) {
        for(let step = 1 / 8, t = step; t <= 1; t += step){
            const pt = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].RotWith(rightPts[0], firstPoint, FIXED_PI * t);
            startCap.push(pt);
        }
    } else {
        const cornersVector = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(leftPts[0], rightPts[0]);
        const offsetA = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(cornersVector, 0.5);
        const offsetB = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(cornersVector, 0.51);
        startCap.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(firstPoint, offsetA), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(firstPoint, offsetB), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(firstPoint, offsetB), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(firstPoint, offsetA));
    }
    const endCap = [];
    const direction = lastStrokePoint.vector.clone().per().neg();
    if (taperEnd || taperStart && strokePoints.length === 1) {
        endCap.push(lastPoint);
    } else if (capEnd) {
        const start2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(lastPoint, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(direction, lastStrokePoint.radius));
        for(let step = 1 / 29, t = step; t < 1; t += step){
            endCap.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].RotWith(start2, lastPoint, FIXED_PI * 3 * t));
        }
    } else {
        endCap.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(lastPoint, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(direction, lastStrokePoint.radius)), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(lastPoint, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(direction, lastStrokePoint.radius * 0.99)), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(lastPoint, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(direction, lastStrokePoint.radius * 0.99)), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(lastPoint, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(direction, lastStrokePoint.radius)));
    }
    return leftPts.concat(endCap, rightPts.reverse(), startCap);
}
;
 //# sourceMappingURL=getStrokeOutlinePoints.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/getStrokePoints.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getStrokePoints": (()=>getStrokePoints)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
;
const MIN_START_PRESSURE = 0.025;
const MIN_END_PRESSURE = 0.01;
function getStrokePoints(rawInputPoints, options = {}) {
    const { streamline = 0.5, size = 16, simulatePressure = false } = options;
    if (rawInputPoints.length === 0) return [];
    const t = 0.15 + (1 - streamline) * 0.85;
    let pts = rawInputPoints.map(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From);
    let pointsRemovedFromNearEnd = 0;
    if (!simulatePressure) {
        let pt2 = pts[0];
        while(pt2){
            if (pt2.z >= MIN_START_PRESSURE) break;
            pts.shift();
            pt2 = pts[0];
        }
    }
    if (!simulatePressure) {
        let pt2 = pts[pts.length - 1];
        while(pt2){
            if (pt2.z >= MIN_END_PRESSURE) break;
            pts.pop();
            pt2 = pts[pts.length - 1];
        }
    }
    if (pts.length === 0) return [
        {
            point: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(rawInputPoints[0]),
            input: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(rawInputPoints[0]),
            pressure: simulatePressure ? 0.5 : 0.15,
            vector: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](1, 1),
            distance: 0,
            runningLength: 0,
            radius: 1
        }
    ];
    let pt = pts[1];
    while(pt){
        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(pt, pts[0]) > (size / 3) ** 2) break;
        pts[0].z = Math.max(pts[0].z, pt.z);
        pts.splice(1, 1);
        pt = pts[1];
    }
    const last = pts.pop();
    pt = pts[pts.length - 1];
    while(pt){
        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(pt, last) > (size / 3) ** 2) break;
        pts.pop();
        pt = pts[pts.length - 1];
        pointsRemovedFromNearEnd++;
    }
    pts.push(last);
    const isComplete = options.last || !options.simulatePressure || pts.length > 1 && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(pts[pts.length - 1], pts[pts.length - 2]) < size ** 2 || pointsRemovedFromNearEnd > 0;
    if (pts.length === 2 && options.simulatePressure) {
        const last2 = pts[1];
        pts = pts.slice(0, -1);
        for(let i = 1; i < 5; i++){
            const next = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Lrp(pts[0], last2, i / 4);
            next.z = (pts[0].z + (last2.z - pts[0].z)) * i / 4;
            pts.push(next);
        }
    }
    const strokePoints = [
        {
            point: pts[0],
            input: pts[0],
            pressure: simulatePressure ? 0.5 : pts[0].z,
            vector: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](1, 1),
            distance: 0,
            runningLength: 0,
            radius: 1
        }
    ];
    let totalLength = 0;
    let prev = strokePoints[0];
    let point, distance;
    if (isComplete && streamline > 0) {
        pts.push(pts[pts.length - 1].clone());
    }
    for(let i = 1, n = pts.length; i < n; i++){
        point = !t || options.last && i === n - 1 ? pts[i].clone() : pts[i].clone().lrp(prev.point, 1 - t);
        if (prev.point.equals(point)) continue;
        distance = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(point, prev.point);
        totalLength += distance;
        if (i < 4 && totalLength < size) {
            continue;
        }
        prev = {
            input: pts[i],
            // The adjusted point
            point,
            // The input pressure (or .5 if not specified)
            pressure: simulatePressure ? 0.5 : pts[i].z,
            // The vector from the current point to the previous point
            vector: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(prev.point, point).uni(),
            // The distance between the current point and the previous point
            distance,
            // The total distance so far
            runningLength: totalLength,
            // The stroke point's radius
            radius: 1
        };
        strokePoints.push(prev);
    }
    if (strokePoints[1]?.vector) {
        strokePoints[0].vector = strokePoints[1].vector.clone();
    }
    if (totalLength < 1) {
        const maxPressureAmongPoints = Math.max(0.5, ...strokePoints.map((s)=>s.pressure));
        strokePoints.forEach((s)=>s.pressure = maxPressureAmongPoints);
    }
    return strokePoints;
}
;
 //# sourceMappingURL=getStrokePoints.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/setStrokePointRadii.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "setStrokePointRadii": (()=>setStrokePointRadii)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$easings$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/easings.mjs [app-ssr] (ecmascript)");
;
const { min } = Math;
const RATE_OF_PRESSURE_CHANGE = 0.275;
function setStrokePointRadii(strokePoints, options) {
    const { size = 16, thinning = 0.5, simulatePressure = true, easing = (t)=>t, start = {}, end = {} } = options;
    const { easing: taperStartEase = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$easings$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EASINGS"].easeOutQuad } = start;
    const { easing: taperEndEase = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$easings$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EASINGS"].easeOutCubic } = end;
    const totalLength = strokePoints[strokePoints.length - 1].runningLength;
    let firstRadius;
    let prevPressure = strokePoints[0].pressure;
    let strokePoint;
    if (!simulatePressure && totalLength < size) {
        const max = strokePoints.reduce((max2, curr)=>Math.max(max2, curr.pressure), 0.5);
        strokePoints.forEach((sp)=>{
            sp.pressure = max;
            sp.radius = size * easing(0.5 - thinning * (0.5 - sp.pressure));
        });
        return strokePoints;
    } else {
        let p;
        for(let i = 0, n = strokePoints.length; i < n; i++){
            strokePoint = strokePoints[i];
            if (strokePoint.runningLength > size * 5) break;
            const sp = min(1, strokePoint.distance / size);
            if (simulatePressure) {
                const rp = min(1, 1 - sp);
                p = min(1, prevPressure + (rp - prevPressure) * (sp * RATE_OF_PRESSURE_CHANGE));
            } else {
                p = min(1, prevPressure + (strokePoint.pressure - prevPressure) * 0.5);
            }
            prevPressure = prevPressure + (p - prevPressure) * 0.5;
        }
        for(let i = 0; i < strokePoints.length; i++){
            strokePoint = strokePoints[i];
            if (thinning) {
                let { pressure } = strokePoint;
                const sp = min(1, strokePoint.distance / size);
                if (simulatePressure) {
                    const rp = min(1, 1 - sp);
                    pressure = min(1, prevPressure + (rp - prevPressure) * (sp * RATE_OF_PRESSURE_CHANGE));
                } else {
                    pressure = min(1, prevPressure + (pressure - prevPressure) * (sp * RATE_OF_PRESSURE_CHANGE));
                }
                strokePoint.radius = size * easing(0.5 - thinning * (0.5 - pressure));
                prevPressure = pressure;
            } else {
                strokePoint.radius = size / 2;
            }
            if (firstRadius === void 0) {
                firstRadius = strokePoint.radius;
            }
        }
    }
    const taperStart = start.taper === false ? 0 : start.taper === true ? Math.max(size, totalLength) : start.taper;
    const taperEnd = end.taper === false ? 0 : end.taper === true ? Math.max(size, totalLength) : end.taper;
    if (taperStart || taperEnd) {
        for(let i = 0; i < strokePoints.length; i++){
            strokePoint = strokePoints[i];
            const { runningLength } = strokePoint;
            const ts = runningLength < taperStart ? taperStartEase(runningLength / taperStart) : 1;
            const te = totalLength - runningLength < taperEnd ? taperEndEase((totalLength - runningLength) / taperEnd) : 1;
            strokePoint.radius = Math.max(0.01, strokePoint.radius * Math.min(ts, te));
        }
    }
    return strokePoints;
}
;
 //# sourceMappingURL=setStrokePointRadii.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/getStroke.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getStroke": (()=>getStroke)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokeOutlinePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/getStrokeOutlinePoints.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/getStrokePoints.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$setStrokePointRadii$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/setStrokePointRadii.mjs [app-ssr] (ecmascript)");
;
;
;
function getStroke(points, options = {}) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokeOutlinePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStrokeOutlinePoints"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$setStrokePointRadii$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["setStrokePointRadii"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStrokePoints"])(points, options), options), options);
}
;
 //# sourceMappingURL=getStroke.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/crop.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ASPECT_RATIO_OPTIONS": (()=>ASPECT_RATIO_OPTIONS),
    "ASPECT_RATIO_TO_VALUE": (()=>ASPECT_RATIO_TO_VALUE),
    "MAX_ZOOM": (()=>MAX_ZOOM),
    "MIN_CROP_SIZE": (()=>MIN_CROP_SIZE),
    "getCropBox": (()=>getCropBox),
    "getCroppedImageDataForAspectRatio": (()=>getCroppedImageDataForAspectRatio),
    "getCroppedImageDataForReplacedImage": (()=>getCroppedImageDataForReplacedImage),
    "getCroppedImageDataWhenZooming": (()=>getCroppedImageDataWhenZooming),
    "getDefaultCrop": (()=>getDefaultCrop),
    "getUncroppedSize": (()=>getUncroppedSize)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Box.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$isequal$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__isEqual$3e$__ = __turbopack_context__.i("[project]/node_modules/lodash.isequal/index.js [app-ssr] (ecmascript) <export default as isEqual>");
;
const MIN_CROP_SIZE = 8;
function getDefaultCrop() {
    return {
        topLeft: {
            x: 0,
            y: 0
        },
        bottomRight: {
            x: 1,
            y: 1
        }
    };
}
const ASPECT_RATIO_OPTIONS = [
    "original",
    "square",
    "circle",
    "landscape",
    "portrait",
    "wide"
];
const ASPECT_RATIO_TO_VALUE = {
    original: 0,
    square: 1,
    circle: 1,
    landscape: 4 / 3,
    portrait: 3 / 4,
    wide: 16 / 9
};
function getUncroppedSize(shapeSize, crop) {
    if (!crop) return {
        w: shapeSize.w,
        h: shapeSize.h
    };
    const w = shapeSize.w / (crop.bottomRight.x - crop.topLeft.x);
    const h = shapeSize.h / (crop.bottomRight.y - crop.topLeft.y);
    return {
        w,
        h
    };
}
function getCropDimensions(crop) {
    return {
        width: crop.bottomRight.x - crop.topLeft.x,
        height: crop.bottomRight.y - crop.topLeft.y
    };
}
function getCropCenter(crop) {
    const { width, height } = getCropDimensions(crop);
    return {
        x: crop.topLeft.x + width / 2,
        y: crop.topLeft.y + height / 2
    };
}
function createCropAroundCenter(centerX, centerY, width, height, isCircle) {
    const topLeftX = Math.max(0, Math.min(1 - width, centerX - width / 2));
    const topLeftY = Math.max(0, Math.min(1 - height, centerY - height / 2));
    return {
        topLeft: {
            x: topLeftX,
            y: topLeftY
        },
        bottomRight: {
            x: topLeftX + width,
            y: topLeftY + height
        },
        isCircle
    };
}
function getCropBox(shape, info, opts = {}) {
    const { handle, change, crop, aspectRatioLocked } = info;
    const { w, h } = info.uncroppedSize;
    const { minWidth = MIN_CROP_SIZE, minHeight = MIN_CROP_SIZE } = opts;
    if (w < minWidth || h < minHeight || change.x === 0 && change.y === 0) {
        return;
    }
    const prevCropBox = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"](crop.topLeft.x * w, crop.topLeft.y * h, (crop.bottomRight.x - crop.topLeft.x) * w, (crop.bottomRight.y - crop.topLeft.y) * h);
    const targetRatio = prevCropBox.aspectRatio;
    const tempBox = prevCropBox.clone();
    if (handle === "top_left" || handle === "bottom_left" || handle === "left") {
        tempBox.x = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(tempBox.x + change.x, 0, prevCropBox.maxX - minWidth);
        tempBox.w = prevCropBox.maxX - tempBox.x;
    } else if (handle === "top_right" || handle === "bottom_right" || handle === "right") {
        const tempRight = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(tempBox.maxX + change.x, prevCropBox.x + minWidth, w);
        tempBox.w = tempRight - tempBox.x;
    }
    if (handle === "top_left" || handle === "top_right" || handle === "top") {
        tempBox.y = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(tempBox.y + change.y, 0, prevCropBox.maxY - minHeight);
        tempBox.h = prevCropBox.maxY - tempBox.y;
    } else if (handle === "bottom_left" || handle === "bottom_right" || handle === "bottom") {
        const tempBottom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(tempBox.maxY + change.y, prevCropBox.y + minHeight, h);
        tempBox.h = tempBottom - tempBox.y;
    }
    if (aspectRatioLocked) {
        const isXLimiting = tempBox.aspectRatio > targetRatio;
        if (isXLimiting) {
            tempBox.h = tempBox.w / targetRatio;
        } else {
            tempBox.w = tempBox.h * targetRatio;
        }
        switch(handle){
            case "top_left":
                {
                    tempBox.x = prevCropBox.maxX - tempBox.w;
                    tempBox.y = prevCropBox.maxY - tempBox.h;
                    if (tempBox.x <= 0) {
                        tempBox.x = 0;
                        tempBox.w = prevCropBox.maxX - tempBox.x;
                        tempBox.h = tempBox.w / targetRatio;
                        tempBox.y = prevCropBox.maxY - tempBox.h;
                    }
                    if (tempBox.y <= 0) {
                        tempBox.y = 0;
                        tempBox.h = prevCropBox.maxY - tempBox.y;
                        tempBox.w = tempBox.h * targetRatio;
                        tempBox.x = prevCropBox.maxX - tempBox.w;
                    }
                    break;
                }
            case "top_right":
                {
                    tempBox.x = prevCropBox.x;
                    tempBox.y = prevCropBox.maxY - tempBox.h;
                    if (tempBox.maxX >= w) {
                        tempBox.w = w - prevCropBox.x;
                        tempBox.h = tempBox.w / targetRatio;
                        tempBox.y = prevCropBox.maxY - tempBox.h;
                    }
                    if (tempBox.y <= 0) {
                        tempBox.y = 0;
                        tempBox.h = prevCropBox.maxY - tempBox.y;
                        tempBox.w = tempBox.h * targetRatio;
                    }
                    break;
                }
            case "bottom_left":
                {
                    tempBox.x = prevCropBox.maxX - tempBox.w;
                    tempBox.y = prevCropBox.y;
                    if (tempBox.x <= 0) {
                        tempBox.x = 0;
                        tempBox.w = prevCropBox.maxX - tempBox.x;
                        tempBox.h = tempBox.w / targetRatio;
                    }
                    if (tempBox.maxY >= h) {
                        tempBox.h = h - prevCropBox.y;
                        tempBox.w = tempBox.h * targetRatio;
                        tempBox.x = prevCropBox.maxX - tempBox.w;
                    }
                    break;
                }
            case "bottom_right":
                {
                    tempBox.x = prevCropBox.x;
                    tempBox.y = prevCropBox.y;
                    if (tempBox.maxX >= w) {
                        tempBox.w = w - prevCropBox.x;
                        tempBox.h = tempBox.w / targetRatio;
                    }
                    if (tempBox.maxY >= h) {
                        tempBox.h = h - prevCropBox.y;
                        tempBox.w = tempBox.h * targetRatio;
                    }
                    break;
                }
            case "top":
                {
                    tempBox.h = prevCropBox.maxY - tempBox.y;
                    tempBox.w = tempBox.h * targetRatio;
                    tempBox.x -= (tempBox.w - prevCropBox.w) / 2;
                    if (tempBox.x <= 0) {
                        const leftSide = prevCropBox.midX;
                        tempBox.w = leftSide * 2;
                        tempBox.h = tempBox.w / targetRatio;
                        tempBox.x = 0;
                    }
                    if (tempBox.maxX >= w) {
                        const rightSide = w - prevCropBox.midX;
                        tempBox.w = rightSide * 2;
                        tempBox.h = tempBox.w / targetRatio;
                        tempBox.x = w - tempBox.w;
                    }
                    tempBox.y = prevCropBox.maxY - tempBox.h;
                    break;
                }
            case "right":
                {
                    tempBox.w = tempBox.maxX - prevCropBox.x;
                    tempBox.h = tempBox.w / targetRatio;
                    tempBox.y -= (tempBox.h - prevCropBox.h) / 2;
                    if (tempBox.y <= 0) {
                        const topSide = prevCropBox.midY;
                        tempBox.h = topSide * 2;
                        tempBox.w = tempBox.h * targetRatio;
                        tempBox.y = 0;
                    }
                    if (tempBox.maxY >= h) {
                        const bottomSide = h - prevCropBox.midY;
                        tempBox.h = bottomSide * 2;
                        tempBox.w = tempBox.h * targetRatio;
                        tempBox.y = h - tempBox.h;
                    }
                    break;
                }
            case "bottom":
                {
                    tempBox.h = tempBox.maxY - prevCropBox.y;
                    tempBox.w = tempBox.h * targetRatio;
                    tempBox.x -= (tempBox.w - prevCropBox.w) / 2;
                    if (tempBox.x <= 0) {
                        const leftSide = prevCropBox.midX;
                        tempBox.w = leftSide * 2;
                        tempBox.h = tempBox.w / targetRatio;
                        tempBox.x = 0;
                    }
                    if (tempBox.maxX >= w) {
                        const rightSide = w - prevCropBox.midX;
                        tempBox.w = rightSide * 2;
                        tempBox.h = tempBox.w / targetRatio;
                        tempBox.x = w - tempBox.w;
                    }
                    break;
                }
            case "left":
                {
                    tempBox.w = prevCropBox.maxX - tempBox.x;
                    tempBox.h = tempBox.w / targetRatio;
                    tempBox.y -= (tempBox.h - prevCropBox.h) / 2;
                    if (tempBox.y <= 0) {
                        const topSide = prevCropBox.midY;
                        tempBox.h = topSide * 2;
                        tempBox.w = tempBox.h * targetRatio;
                        tempBox.y = 0;
                    }
                    if (tempBox.maxY >= h) {
                        const bottomSide = h - prevCropBox.midY;
                        tempBox.h = bottomSide * 2;
                        tempBox.w = tempBox.h * targetRatio;
                        tempBox.y = h - tempBox.h;
                    }
                    tempBox.x = prevCropBox.maxX - tempBox.w;
                    break;
                }
        }
    }
    const newCrop = {
        topLeft: {
            x: tempBox.x / w,
            y: tempBox.y / h
        },
        bottomRight: {
            x: tempBox.maxX / w,
            y: tempBox.maxY / h
        },
        isCircle: crop.isCircle
    };
    if (newCrop.topLeft.x === crop.topLeft.x && newCrop.topLeft.y === crop.topLeft.y && newCrop.bottomRight.x === crop.bottomRight.x && newCrop.bottomRight.y === crop.bottomRight.y) {
        return;
    }
    const newPoint = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](tempBox.x - crop.topLeft.x * w, tempBox.y - crop.topLeft.y * h).rot(shape.rotation).add(shape);
    return {
        id: shape.id,
        type: shape.type,
        x: newPoint.x,
        y: newPoint.y,
        props: {
            w: tempBox.w,
            h: tempBox.h,
            crop: newCrop
        }
    };
}
function calculateCropChange(imageShape, newCropWidth, newCropHeight, centerOnCurrentCrop = true, isCircle = false) {
    const { w, h } = getUncroppedSize(imageShape.props, imageShape.props.crop ?? getDefaultCrop());
    const currentCrop = imageShape.props.crop || getDefaultCrop();
    const imageCenterX = imageShape.x + imageShape.props.w / 2;
    const imageCenterY = imageShape.y + imageShape.props.h / 2;
    let cropCenterX, cropCenterY;
    if (centerOnCurrentCrop) {
        const { x, y } = getCropCenter(currentCrop);
        cropCenterX = x;
        cropCenterY = y;
    } else {
        cropCenterX = 0.5;
        cropCenterY = 0.5;
    }
    const newCrop = createCropAroundCenter(cropCenterX, cropCenterY, newCropWidth, newCropHeight, isCircle);
    const croppedW = newCropWidth * w;
    const croppedH = newCropHeight * h;
    return {
        crop: newCrop,
        w: croppedW,
        h: croppedH,
        x: imageCenterX - croppedW / 2,
        y: imageCenterY - croppedH / 2
    };
}
const MAX_ZOOM = 3;
function getCroppedImageDataWhenZooming(zoom, imageShape, maxZoom) {
    const oldCrop = imageShape.props.crop || getDefaultCrop();
    const { width: oldWidth, height: oldHeight } = getCropDimensions(oldCrop);
    const aspectRatio = oldWidth / oldHeight;
    const derivedMaxZoom = maxZoom ? 1 / (1 - maxZoom) : MAX_ZOOM;
    const zoomScale = 1 + zoom * (derivedMaxZoom - 1);
    let newWidth, newHeight;
    if (aspectRatio > 1) {
        newWidth = Math.min(1, 1 / zoomScale);
        newHeight = newWidth / aspectRatio;
    } else {
        newHeight = Math.min(1, 1 / zoomScale);
        newWidth = newHeight * aspectRatio;
    }
    const result = calculateCropChange(imageShape, newWidth, newHeight, true, oldCrop.isCircle);
    const scaleFactor = Math.min(MAX_ZOOM, oldWidth / newWidth);
    result.w *= scaleFactor;
    result.h *= scaleFactor;
    const imageCenterX = imageShape.x + imageShape.props.w / 2;
    const imageCenterY = imageShape.y + imageShape.props.h / 2;
    result.x = imageCenterX - result.w / 2;
    result.y = imageCenterY - result.h / 2;
    return result;
}
function getCroppedImageDataForReplacedImage(imageShape, newImageWidth, newImageHeight) {
    const defaultCrop = getDefaultCrop();
    const currentCrop = imageShape.props.crop || defaultCrop;
    const origDisplayW = imageShape.props.w;
    const origDisplayH = imageShape.props.h;
    const newImageAspectRatio = newImageWidth / newImageHeight;
    let crop = defaultCrop;
    let newDisplayW = origDisplayW;
    let newDisplayH = origDisplayH;
    const isOriginalCrop = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$isequal$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__isEqual$3e$__["isEqual"])(imageShape.props.crop, defaultCrop);
    if (isOriginalCrop) {
        newDisplayW = origDisplayW;
        newDisplayH = origDisplayW * newImageHeight / newImageWidth;
    } else {
        const { w: uncroppedW, h: uncroppedH } = getUncroppedSize(imageShape.props, imageShape.props.crop || getDefaultCrop());
        const { width: cropW, height: cropH } = getCropDimensions(currentCrop);
        const targetRatio = cropW / cropH;
        const oldImageAspectRatio = uncroppedW / uncroppedH;
        let newRelativeWidth;
        let newRelativeHeight;
        const currentCropCenter = getCropCenter(currentCrop);
        newRelativeWidth = cropW;
        const ratioConversion = newImageAspectRatio / oldImageAspectRatio / targetRatio;
        newRelativeHeight = newRelativeWidth * ratioConversion;
        const maxRatioConversion = MAX_ZOOM / (MAX_ZOOM - 1);
        if (ratioConversion > maxRatioConversion) {
            const minDimension = 1 / MAX_ZOOM;
            if (1 / newRelativeHeight < 1 / newRelativeWidth) {
                const scale = newRelativeHeight / minDimension;
                newRelativeHeight = newRelativeHeight / scale;
                newRelativeWidth = newRelativeWidth / scale;
            } else {
                const scale = newRelativeWidth / minDimension;
                newRelativeWidth = newRelativeWidth / scale;
                newRelativeHeight = newRelativeHeight / scale;
            }
        }
        newRelativeWidth = Math.max(0, Math.min(1, newRelativeWidth));
        newRelativeHeight = Math.max(0, Math.min(1, newRelativeHeight));
        crop = createCropAroundCenter(currentCropCenter.x, currentCropCenter.y, newRelativeWidth, newRelativeHeight, currentCrop.isCircle);
    }
    const pageCenterX = imageShape.x + origDisplayW / 2;
    const pageCenterY = imageShape.y + origDisplayH / 2;
    const newX = pageCenterX - newDisplayW / 2;
    const newY = pageCenterY - newDisplayH / 2;
    return {
        crop,
        w: newDisplayW,
        h: newDisplayH,
        x: newX,
        y: newY
    };
}
function getCroppedImageDataForAspectRatio(aspectRatioOption, imageShape) {
    if (aspectRatioOption === "original") {
        const { w, h } = getUncroppedSize(imageShape.props, imageShape.props.crop ?? getDefaultCrop());
        const imageCenterX = imageShape.x + imageShape.props.w / 2;
        const imageCenterY = imageShape.y + imageShape.props.h / 2;
        return {
            crop: getDefaultCrop(),
            w,
            h,
            x: imageCenterX - w / 2,
            y: imageCenterY - h / 2
        };
    }
    const targetRatio = ASPECT_RATIO_TO_VALUE[aspectRatioOption];
    const isCircle = aspectRatioOption === "circle";
    const { w: uncroppedW, h: uncroppedH } = getUncroppedSize(imageShape.props, imageShape.props.crop || getDefaultCrop());
    const imageAspectRatio = uncroppedW / uncroppedH;
    const currentCrop = imageShape.props.crop || getDefaultCrop();
    const { width: cropW, height: cropH } = getCropDimensions(currentCrop);
    const currentCropCenter = getCropCenter(currentCrop);
    const currentCropZoom = Math.min(1 / cropW, 1 / cropH);
    let newRelativeWidth;
    let newRelativeHeight;
    if (imageAspectRatio === 0 || !Number.isFinite(imageAspectRatio) || targetRatio === 0) {
        newRelativeWidth = 1;
        newRelativeHeight = 1;
    } else {
        const currentAbsoluteWidth = cropW * uncroppedW;
        const currentAbsoluteHeight = cropH * uncroppedH;
        const longestCurrentDimension = Math.max(currentAbsoluteWidth, currentAbsoluteHeight);
        const isWidthLongest = currentAbsoluteWidth >= currentAbsoluteHeight;
        let newAbsoluteWidth;
        let newAbsoluteHeight;
        if (isWidthLongest) {
            newAbsoluteWidth = longestCurrentDimension;
            newAbsoluteHeight = newAbsoluteWidth / targetRatio;
        } else {
            newAbsoluteHeight = longestCurrentDimension;
            newAbsoluteWidth = newAbsoluteHeight * targetRatio;
        }
        newRelativeWidth = newAbsoluteWidth / uncroppedW;
        newRelativeHeight = newAbsoluteHeight / uncroppedH;
        if (newRelativeWidth > 1) {
            newRelativeWidth = 1;
            newRelativeHeight = imageAspectRatio / targetRatio;
        }
        if (newRelativeHeight > 1) {
            newRelativeHeight = 1;
            newRelativeWidth = targetRatio / imageAspectRatio;
        }
        newRelativeWidth = Math.max(0, Math.min(1, newRelativeWidth));
        newRelativeHeight = Math.max(0, Math.min(1, newRelativeHeight));
    }
    const newCropZoom = Math.min(1 / newRelativeWidth, 1 / newRelativeHeight);
    newRelativeWidth *= newCropZoom / currentCropZoom;
    newRelativeHeight *= newCropZoom / currentCropZoom;
    newRelativeWidth = Math.max(0, Math.min(1, newRelativeWidth));
    newRelativeHeight = Math.max(0, Math.min(1, newRelativeHeight));
    const newCrop = createCropAroundCenter(currentCropCenter.x, currentCropCenter.y, newRelativeWidth, newRelativeHeight, isCircle);
    const finalRelativeWidth = newCrop.bottomRight.x - newCrop.topLeft.x;
    const finalRelativeHeight = newCrop.bottomRight.y - newCrop.topLeft.y;
    const baseW = finalRelativeWidth * uncroppedW;
    const baseH = finalRelativeHeight * uncroppedH;
    let currentScale = 1;
    if (cropW > 0) {
        currentScale = imageShape.props.w / (cropW * uncroppedW);
    } else if (cropH > 0) {
        currentScale = imageShape.props.h / (cropH * uncroppedH);
    }
    const newW = baseW * currentScale;
    const newH = baseH * currentScale;
    const currentCenterXPage = imageShape.x + imageShape.props.w / 2;
    const currentCenterYPage = imageShape.y + imageShape.props.h / 2;
    const newX = currentCenterXPage - newW / 2;
    const newY = currentCenterYPage - newH / 2;
    return {
        crop: newCrop,
        w: newW,
        h: newH,
        x: newX,
        y: newY
    };
}
;
 //# sourceMappingURL=crop.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/default-shape-constants.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ARROW_LABEL_FONT_SIZES": (()=>ARROW_LABEL_FONT_SIZES),
    "ARROW_LABEL_PADDING": (()=>ARROW_LABEL_PADDING),
    "FONT_FAMILIES": (()=>FONT_FAMILIES),
    "FONT_SIZES": (()=>FONT_SIZES),
    "LABEL_FONT_SIZES": (()=>LABEL_FONT_SIZES),
    "LABEL_PADDING": (()=>LABEL_PADDING),
    "LABEL_TO_ARROW_PADDING": (()=>LABEL_TO_ARROW_PADDING),
    "STROKE_SIZES": (()=>STROKE_SIZES),
    "TEXT_PROPS": (()=>TEXT_PROPS)
});
const TEXT_PROPS = {
    lineHeight: 1.35,
    fontWeight: "normal",
    fontVariant: "normal",
    fontStyle: "normal",
    padding: "0px"
};
const STROKE_SIZES = {
    s: 2,
    m: 3.5,
    l: 5,
    xl: 10
};
const FONT_SIZES = {
    s: 18,
    m: 24,
    l: 36,
    xl: 44
};
const LABEL_FONT_SIZES = {
    s: 18,
    m: 22,
    l: 26,
    xl: 32
};
const ARROW_LABEL_FONT_SIZES = {
    s: 18,
    m: 20,
    l: 24,
    xl: 28
};
const FONT_FAMILIES = {
    draw: "var(--tl-font-draw)",
    sans: "var(--tl-font-sans)",
    serif: "var(--tl-font-serif)",
    mono: "var(--tl-font-mono)"
};
const LABEL_TO_ARROW_PADDING = 20;
const ARROW_LABEL_PADDING = 4.25;
const LABEL_PADDING = 16;
;
 //# sourceMappingURL=default-shape-constants.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/defaultFonts.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "DefaultFontFaces": (()=>DefaultFontFaces),
    "allDefaultFontFaces": (()=>allDefaultFontFaces)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/object.mjs [app-ssr] (ecmascript)");
;
const DefaultFontFaces = {
    tldraw_draw: {
        normal: {
            normal: {
                family: "tldraw_draw",
                src: {
                    url: "tldraw_draw",
                    format: "woff2"
                },
                weight: "normal"
            },
            bold: {
                family: "tldraw_draw",
                src: {
                    url: "tldraw_draw_bold",
                    format: "woff2"
                },
                weight: "bold"
            }
        },
        italic: {
            normal: {
                family: "tldraw_draw",
                src: {
                    url: "tldraw_draw_italic",
                    format: "woff2"
                },
                weight: "normal",
                style: "italic"
            },
            bold: {
                family: "tldraw_draw",
                src: {
                    url: "tldraw_draw_italic_bold",
                    format: "woff2"
                },
                weight: "bold",
                style: "italic"
            }
        }
    },
    tldraw_sans: {
        normal: {
            normal: {
                family: "tldraw_sans",
                src: {
                    url: "tldraw_sans",
                    format: "woff2"
                },
                weight: "normal",
                style: "normal"
            },
            bold: {
                family: "tldraw_sans",
                src: {
                    url: "tldraw_sans_bold",
                    format: "woff2"
                },
                weight: "bold",
                style: "normal"
            }
        },
        italic: {
            normal: {
                family: "tldraw_sans",
                src: {
                    url: "tldraw_sans_italic",
                    format: "woff2"
                },
                weight: "normal",
                style: "italic"
            },
            bold: {
                family: "tldraw_sans",
                src: {
                    url: "tldraw_sans_italic_bold",
                    format: "woff2"
                },
                weight: "bold",
                style: "italic"
            }
        }
    },
    tldraw_serif: {
        normal: {
            normal: {
                family: "tldraw_serif",
                src: {
                    url: "tldraw_serif",
                    format: "woff2"
                },
                weight: "normal",
                style: "normal"
            },
            bold: {
                family: "tldraw_serif",
                src: {
                    url: "tldraw_serif_bold",
                    format: "woff2"
                },
                weight: "bold",
                style: "normal"
            }
        },
        italic: {
            normal: {
                family: "tldraw_serif",
                src: {
                    url: "tldraw_serif_italic",
                    format: "woff2"
                },
                weight: "normal",
                style: "italic"
            },
            bold: {
                family: "tldraw_serif",
                src: {
                    url: "tldraw_serif_italic_bold",
                    format: "woff2"
                },
                weight: "bold",
                style: "italic"
            }
        }
    },
    tldraw_mono: {
        normal: {
            normal: {
                family: "tldraw_mono",
                src: {
                    url: "tldraw_mono",
                    format: "woff2"
                },
                weight: "normal",
                style: "normal"
            },
            bold: {
                family: "tldraw_mono",
                src: {
                    url: "tldraw_mono_bold",
                    format: "woff2"
                },
                weight: "bold",
                style: "normal"
            }
        },
        italic: {
            normal: {
                family: "tldraw_mono",
                src: {
                    url: "tldraw_mono_italic",
                    format: "woff2"
                },
                weight: "normal",
                style: "italic"
            },
            bold: {
                family: "tldraw_mono",
                src: {
                    url: "tldraw_mono_italic_bold",
                    format: "woff2"
                },
                weight: "bold",
                style: "italic"
            }
        }
    }
};
const allDefaultFontFaces = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectMapValues"])(DefaultFontFaces).flatMap((font)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["objectMapValues"])(font).flatMap((fontFace)=>Object.values(fontFace)));
;
 //# sourceMappingURL=defaultFonts.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/TextHelpers.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "INDENT": (()=>INDENT),
    "TextHelpers": (()=>TextHelpers)
});
const INDENT = "  ";
class TextHelpers {
    static fixNewLines = /\r?\n|\r/g;
    static normalizeText(text) {
        return text.replace(TextHelpers.fixNewLines, "\n");
    }
    static normalizeTextForDom(text) {
        return text.replace(TextHelpers.fixNewLines, "\n").split("\n").map((x)=>x || " ").join("\n");
    }
}
;
 //# sourceMappingURL=TextHelpers.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/toolStates/Idle.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Idle": (()=>Idle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowTargetState$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/arrowTargetState.mjs [app-ssr] (ecmascript)");
;
;
class Idle extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "idle";
    isPrecise = false;
    isPreciseTimerId = null;
    preciseTargetId = null;
    onPointerMove() {
        this.update();
    }
    onPointerDown(info) {
        this.parent.transition("pointing", {
            ...info,
            isPrecise: this.isPrecise
        });
    }
    onEnter() {
        this.editor.setCursor({
            type: "cross",
            rotation: 0
        });
        this.update();
    }
    onCancel() {
        this.editor.setCurrentTool("select");
    }
    onExit() {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowTargetState$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clearArrowTargetState"])(this.editor);
        if (this.isPreciseTimerId !== null) {
            clearTimeout(this.isPreciseTimerId);
        }
    }
    onKeyDown() {
        this.update();
    }
    onKeyUp(info) {
        this.update();
        if (info.key === "Enter") {
            if (this.editor.getIsReadonly()) return null;
            const onlySelectedShape = this.editor.getOnlySelectedShape();
            if (onlySelectedShape && this.editor.getShapeUtil(onlySelectedShape).canEdit(onlySelectedShape)) {
                this.editor.setCurrentTool("select");
                this.editor.setEditingShape(onlySelectedShape.id);
                this.editor.root.getCurrent()?.transition("editing_shape", {
                    ...info,
                    target: "shape",
                    shape: onlySelectedShape
                });
            }
        }
    }
    update() {
        const arrowUtil = this.editor.getShapeUtil("arrow");
        const targetState = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowTargetState$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["updateArrowTargetState"])({
            editor: this.editor,
            pointInPageSpace: this.editor.inputs.currentPagePoint,
            arrow: void 0,
            isPrecise: this.isPrecise,
            currentBinding: void 0,
            oppositeBinding: void 0
        });
        if (targetState && targetState.target.id !== this.preciseTargetId) {
            if (this.isPreciseTimerId !== null) {
                clearTimeout(this.isPreciseTimerId);
            }
            this.preciseTargetId = targetState.target.id;
            this.isPreciseTimerId = this.editor.timers.setTimeout(()=>{
                this.isPrecise = true;
                this.update();
            }, arrowUtil.options.hoverPreciseTimeout);
        } else if (!targetState && this.preciseTargetId) {
            this.isPrecise = false;
            this.preciseTargetId = null;
            if (this.isPreciseTimerId !== null) {
                clearTimeout(this.isPreciseTimerId);
            }
        }
    }
}
;
 //# sourceMappingURL=Idle.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/toolStates/Pointing.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Pointing": (()=>Pointing)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/records/TLShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/BaseBoxShapeTool/children/Pointing.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowTargetState$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/arrowTargetState.mjs [app-ssr] (ecmascript)");
;
;
class Pointing extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "pointing";
    shape;
    isPrecise = false;
    isPreciseTimerId = null;
    markId = "";
    onEnter(info) {
        this.markId = "";
        this.isPrecise = !!info.isPrecise;
        const targetState = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowTargetState$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["updateArrowTargetState"])({
            editor: this.editor,
            pointInPageSpace: this.editor.inputs.currentPagePoint,
            arrow: void 0,
            isPrecise: this.isPrecise,
            currentBinding: void 0,
            oppositeBinding: void 0
        });
        if (!targetState) {
            this.createArrowShape();
            if (!this.shape) {
                this.cancel();
                return;
            }
        }
        this.startPreciseTimeout();
    }
    onExit() {
        this.shape = void 0;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowTargetState$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clearArrowTargetState"])(this.editor);
        this.clearPreciseTimeout();
    }
    onPointerMove() {
        if (this.editor.inputs.isDragging) {
            if (!this.shape) {
                this.createArrowShape();
            }
            if (!this.shape) {
                this.cancel();
                return;
            }
            this.updateArrowShapeEndHandle();
            this.editor.setCurrentTool("select.dragging_handle", {
                shape: this.shape,
                handle: {
                    id: "end",
                    type: "vertex",
                    index: "a3",
                    x: 0,
                    y: 0
                },
                isCreating: true,
                creatingMarkId: this.markId || void 0,
                onInteractionEnd: "arrow"
            });
        }
    }
    onPointerUp() {
        this.cancel();
    }
    onCancel() {
        this.cancel();
    }
    onComplete() {
        this.cancel();
    }
    onInterrupt() {
        this.cancel();
    }
    cancel() {
        if (this.shape) {
            this.editor.bailToMark(this.markId);
        }
        this.parent.transition("idle");
    }
    createArrowShape() {
        const { originPagePoint } = this.editor.inputs;
        const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createShapeId"])();
        this.markId = this.editor.markHistoryStoppingPoint(`creating_arrow:${id}`);
        const newPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeSnapToGrid"])(originPagePoint, this.editor);
        this.editor.createShape({
            id,
            type: "arrow",
            x: newPoint.x,
            y: newPoint.y,
            props: {
                scale: this.editor.user.getIsDynamicResizeMode() ? 1 / this.editor.getZoomLevel() : 1
            }
        });
        const shape = this.editor.getShape(id);
        if (!shape) return;
        const handles = this.editor.getShapeHandles(shape);
        if (!handles) throw Error(`expected handles for arrow`);
        const util = this.editor.getShapeUtil("arrow");
        const initial = this.shape;
        const startHandle = handles.find((h)=>h.id === "start");
        const change = util.onHandleDrag?.(shape, {
            handle: {
                ...startHandle,
                x: 0,
                y: 0
            },
            isPrecise: true,
            initial
        });
        if (change) {
            this.editor.updateShapes([
                change
            ]);
        }
        this.shape = this.editor.getShape(id);
        this.editor.select(id);
    }
    updateArrowShapeEndHandle() {
        const shape = this.shape;
        if (!shape) throw Error(`expected shape`);
        const handles = this.editor.getShapeHandles(shape);
        if (!handles) throw Error(`expected handles for arrow`);
        {
            const util = this.editor.getShapeUtil("arrow");
            const initial = this.shape;
            const startHandle = handles.find((h)=>h.id === "start");
            const change = util.onHandleDrag?.(shape, {
                handle: {
                    ...startHandle,
                    x: 0,
                    y: 0
                },
                isPrecise: this.isPrecise,
                initial
            });
            if (change) {
                this.editor.updateShapes([
                    change
                ]);
            }
        }
        {
            const util = this.editor.getShapeUtil("arrow");
            const initial = this.shape;
            const point = this.editor.getPointInShapeSpace(shape, this.editor.inputs.currentPagePoint);
            const endHandle = handles.find((h)=>h.id === "end");
            const change = util.onHandleDrag?.(this.editor.getShape(shape), {
                handle: {
                    ...endHandle,
                    x: point.x,
                    y: point.y
                },
                isPrecise: false,
                initial
            });
            if (change) {
                this.editor.updateShapes([
                    change
                ]);
            }
        }
        this.shape = this.editor.getShape(shape.id);
    }
    startPreciseTimeout() {
        const arrowUtil = this.editor.getShapeUtil("arrow");
        this.isPreciseTimerId = this.editor.timers.setTimeout(()=>{
            if (!this.getIsActive()) return;
            this.isPrecise = true;
        }, arrowUtil.options.pointingPreciseTimeout);
    }
    clearPreciseTimeout() {
        if (this.isPreciseTimerId !== null) {
            clearTimeout(this.isPreciseTimerId);
        }
    }
}
;
 //# sourceMappingURL=Pointing.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/ArrowShapeTool.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ArrowShapeTool": (()=>ArrowShapeTool)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$toolStates$2f$Idle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/toolStates/Idle.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$toolStates$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/toolStates/Pointing.mjs [app-ssr] (ecmascript)");
;
;
;
class ArrowShapeTool extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "arrow";
    static initial = "idle";
    static children() {
        return [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$toolStates$2f$Idle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Idle"],
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$toolStates$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Pointing"]
        ];
    }
    shapeType = "arrow";
}
;
 //# sourceMappingURL=ArrowShapeTool.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/draw/toolStates/Drawing.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Drawing": (()=>Drawing)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Mat.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/records/TLShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/array.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$value$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/value.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$id$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/id.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/default-shape-constants.mjs [app-ssr] (ecmascript)");
;
;
class Drawing extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "drawing";
    info = {};
    initialShape;
    shapeType = this.parent.id === "highlight" ? "highlight" : "draw";
    util = this.editor.getShapeUtil(this.shapeType);
    isPen = false;
    isPenOrStylus = false;
    segmentMode = "free";
    didJustShiftClickToExtendPreviousShapeLine = false;
    pagePointWhereCurrentSegmentChanged = {};
    pagePointWhereNextSegmentChanged = null;
    lastRecordedPoint = {};
    mergeNextPoint = false;
    currentLineLength = 0;
    markId = null;
    onEnter(info) {
        this.markId = null;
        this.info = info;
        this.lastRecordedPoint = this.editor.inputs.currentPagePoint.clone();
        this.startShape();
    }
    onPointerMove() {
        const { inputs } = this.editor;
        if (this.isPen && !inputs.isPen) {
            if (this.markId) {
                this.editor.bailToMark(this.markId);
                this.startShape();
                return;
            }
        }
        if (this.isPenOrStylus) {
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(inputs.currentPagePoint, this.lastRecordedPoint) >= 1 / this.editor.getZoomLevel()) {
                this.lastRecordedPoint = inputs.currentPagePoint.clone();
                this.mergeNextPoint = false;
            } else {
                this.mergeNextPoint = true;
            }
        } else {
            this.mergeNextPoint = false;
        }
        this.updateDrawingShape();
    }
    onKeyDown(info) {
        if (info.key === "Shift") {
            switch(this.segmentMode){
                case "free":
                    {
                        this.segmentMode = "starting_straight";
                        this.pagePointWhereNextSegmentChanged = this.editor.inputs.currentPagePoint.clone();
                        break;
                    }
                case "starting_free":
                    {
                        this.segmentMode = "starting_straight";
                    }
            }
        }
        this.updateDrawingShape();
    }
    onKeyUp(info) {
        if (info.key === "Shift") {
            this.editor.snaps.clearIndicators();
            switch(this.segmentMode){
                case "straight":
                    {
                        this.segmentMode = "starting_free";
                        this.pagePointWhereNextSegmentChanged = this.editor.inputs.currentPagePoint.clone();
                        break;
                    }
                case "starting_straight":
                    {
                        this.pagePointWhereNextSegmentChanged = null;
                        this.segmentMode = "free";
                        break;
                    }
            }
        }
        this.updateDrawingShape();
    }
    onExit() {
        this.editor.snaps.clearIndicators();
        this.pagePointWhereCurrentSegmentChanged = this.editor.inputs.currentPagePoint.clone();
    }
    canClose() {
        return this.shapeType !== "highlight";
    }
    getIsClosed(segments, size, scale) {
        if (!this.canClose()) return false;
        const strokeWidth = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][size];
        const firstPoint = segments[0].points[0];
        const lastSegment = segments[segments.length - 1];
        const lastPoint = lastSegment.points[lastSegment.points.length - 1];
        return firstPoint !== lastPoint && this.currentLineLength > strokeWidth * 4 * scale && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].DistMin(firstPoint, lastPoint, strokeWidth * 2 * scale);
    }
    startShape() {
        const { inputs: { originPagePoint, isPen } } = this.editor;
        this.markId = this.editor.markHistoryStoppingPoint("draw start");
        const { z = 0.5 } = this.info.point;
        this.isPen = isPen;
        this.isPenOrStylus = isPen || z > 0 && z < 0.5 || z > 0.5 && z < 1;
        const pressure = this.isPenOrStylus ? z * 1.25 : 0.5;
        this.segmentMode = this.editor.inputs.shiftKey ? "straight" : "free";
        this.didJustShiftClickToExtendPreviousShapeLine = false;
        this.lastRecordedPoint = originPagePoint.clone();
        if (this.initialShape) {
            const shape2 = this.editor.getShape(this.initialShape.id);
            if (shape2 && this.segmentMode === "straight") {
                this.didJustShiftClickToExtendPreviousShapeLine = true;
                const prevSegment = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["last"])(shape2.props.segments);
                if (!prevSegment) throw Error("Expected a previous segment!");
                const prevPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["last"])(prevSegment.points);
                if (!prevPoint) throw Error("Expected a previous point!");
                const { x, y } = this.editor.getPointInShapeSpace(shape2, originPagePoint).toFixed();
                const newSegment = {
                    type: this.segmentMode,
                    points: [
                        {
                            x: prevPoint.x,
                            y: prevPoint.y,
                            z: +pressure.toFixed(2)
                        },
                        {
                            x,
                            y,
                            z: +pressure.toFixed(2)
                        }
                    ]
                };
                const prevPointPageSpace = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(this.editor.getShapePageTransform(shape2.id), prevPoint);
                this.pagePointWhereCurrentSegmentChanged = prevPointPageSpace;
                this.pagePointWhereNextSegmentChanged = null;
                const segments = [
                    ...shape2.props.segments,
                    newSegment
                ];
                if (this.currentLineLength < __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape2.props.size] * 4) {
                    this.currentLineLength = this.getLineLength(segments);
                }
                const shapePartial = {
                    id: shape2.id,
                    type: this.shapeType,
                    props: {
                        segments
                    }
                };
                if (this.canClose()) {
                    ;
                    shapePartial.props.isClosed = this.getIsClosed(segments, shape2.props.size, shape2.props.scale);
                }
                this.editor.updateShapes([
                    shapePartial
                ]);
                return;
            }
        }
        this.pagePointWhereCurrentSegmentChanged = originPagePoint.clone();
        const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createShapeId"])();
        this.editor.createShape({
            id,
            type: this.shapeType,
            x: originPagePoint.x,
            y: originPagePoint.y,
            props: {
                isPen: this.isPenOrStylus,
                scale: this.editor.user.getIsDynamicResizeMode() ? 1 / this.editor.getZoomLevel() : 1,
                segments: [
                    {
                        type: this.segmentMode,
                        points: [
                            {
                                x: 0,
                                y: 0,
                                z: +pressure.toFixed(2)
                            }
                        ]
                    }
                ]
            }
        });
        const shape = this.editor.getShape(id);
        if (!shape) {
            this.cancel();
            return;
        }
        this.currentLineLength = 0;
        this.initialShape = this.editor.getShape(id);
    }
    updateDrawingShape() {
        const { initialShape } = this;
        const { inputs } = this.editor;
        if (!initialShape) return;
        const { id, props: { size, scale } } = initialShape;
        const shape = this.editor.getShape(id);
        if (!shape) return;
        const { segments } = shape.props;
        const { x, y, z } = this.editor.getPointInShapeSpace(shape, inputs.currentPagePoint).toFixed();
        const pressure = this.isPenOrStylus ? +(inputs.currentPagePoint.z * 1.25).toFixed(2) : 0.5;
        const newPoint = {
            x,
            y,
            z: pressure
        };
        switch(this.segmentMode){
            case "starting_straight":
                {
                    const { pagePointWhereNextSegmentChanged } = this;
                    if (pagePointWhereNextSegmentChanged === null) {
                        throw Error("We should have a point where the segment changed");
                    }
                    const hasMovedFarEnough = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(pagePointWhereNextSegmentChanged, inputs.currentPagePoint) > this.editor.options.dragDistanceSquared;
                    if (hasMovedFarEnough) {
                        this.pagePointWhereCurrentSegmentChanged = this.pagePointWhereNextSegmentChanged.clone();
                        this.pagePointWhereNextSegmentChanged = null;
                        this.segmentMode = "straight";
                        const prevSegment = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["last"])(segments);
                        if (!prevSegment) throw Error("Expected a previous segment!");
                        const prevLastPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["last"])(prevSegment.points);
                        if (!prevLastPoint) throw Error("Expected a previous last point!");
                        let newSegment;
                        const newLastPoint = this.editor.getPointInShapeSpace(shape, this.pagePointWhereCurrentSegmentChanged).toFixed().toJson();
                        if (prevSegment.type === "straight") {
                            this.currentLineLength += __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(prevLastPoint, newLastPoint);
                            newSegment = {
                                type: "straight",
                                points: [
                                    {
                                        ...prevLastPoint
                                    },
                                    newLastPoint
                                ]
                            };
                            const transform = this.editor.getShapePageTransform(shape);
                            this.pagePointWhereCurrentSegmentChanged = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(transform, prevLastPoint);
                        } else {
                            newSegment = {
                                type: "straight",
                                points: [
                                    newLastPoint,
                                    newPoint
                                ]
                            };
                        }
                        const shapePartial = {
                            id,
                            type: this.shapeType,
                            props: {
                                segments: [
                                    ...segments,
                                    newSegment
                                ]
                            }
                        };
                        if (this.canClose()) {
                            ;
                            shapePartial.props.isClosed = this.getIsClosed(segments, size, scale);
                        }
                        this.editor.updateShapes([
                            shapePartial
                        ]);
                    }
                    break;
                }
            case "starting_free":
                {
                    const { pagePointWhereNextSegmentChanged } = this;
                    if (pagePointWhereNextSegmentChanged === null) {
                        throw Error("We should have a point where the segment changed");
                    }
                    const hasMovedFarEnough = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(pagePointWhereNextSegmentChanged, inputs.currentPagePoint) > this.editor.options.dragDistanceSquared;
                    if (hasMovedFarEnough) {
                        this.pagePointWhereCurrentSegmentChanged = this.pagePointWhereNextSegmentChanged.clone();
                        this.pagePointWhereNextSegmentChanged = null;
                        this.segmentMode = "free";
                        const newSegments = segments.slice();
                        const prevStraightSegment = newSegments[newSegments.length - 1];
                        const prevPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["last"])(prevStraightSegment.points);
                        if (!prevPoint) {
                            throw Error("No previous point!");
                        }
                        const newFreeSegment = {
                            type: "free",
                            points: [
                                ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].PointsBetween(prevPoint, newPoint, 6).map((p)=>({
                                        x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toFixed"])(p.x),
                                        y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toFixed"])(p.y),
                                        z: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toFixed"])(p.z)
                                    }))
                            ]
                        };
                        const finalSegments = [
                            ...newSegments,
                            newFreeSegment
                        ];
                        if (this.currentLineLength < __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape.props.size] * 4) {
                            this.currentLineLength = this.getLineLength(finalSegments);
                        }
                        const shapePartial = {
                            id,
                            type: this.shapeType,
                            props: {
                                segments: finalSegments
                            }
                        };
                        if (this.canClose()) {
                            ;
                            shapePartial.props.isClosed = this.getIsClosed(finalSegments, size, scale);
                        }
                        this.editor.updateShapes([
                            shapePartial
                        ]);
                    }
                    break;
                }
            case "straight":
                {
                    const newSegments = segments.slice();
                    const newSegment = newSegments[newSegments.length - 1];
                    const { pagePointWhereCurrentSegmentChanged } = this;
                    const { ctrlKey, currentPagePoint } = this.editor.inputs;
                    if (!pagePointWhereCurrentSegmentChanged) throw Error("We should have a point where the segment changed");
                    let pagePoint;
                    let shouldSnapToAngle = false;
                    if (this.didJustShiftClickToExtendPreviousShapeLine) {
                        if (this.editor.inputs.isDragging) {
                            shouldSnapToAngle = !ctrlKey;
                            this.didJustShiftClickToExtendPreviousShapeLine = false;
                        } else {}
                    } else {
                        shouldSnapToAngle = !ctrlKey;
                    }
                    let newPoint2 = this.editor.getPointInShapeSpace(shape, currentPagePoint).toFixed().toJson();
                    let didSnap = false;
                    let snapSegment = void 0;
                    const shouldSnap = this.editor.user.getIsSnapMode() ? !ctrlKey : ctrlKey;
                    if (shouldSnap) {
                        if (newSegments.length > 2) {
                            let nearestPoint = void 0;
                            let minDistance = 8 / this.editor.getZoomLevel();
                            for(let i = 0, n = segments.length - 2; i < n; i++){
                                const segment = segments[i];
                                if (!segment) break;
                                if (segment.type === "free") continue;
                                const first = segment.points[0];
                                const lastPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["last"])(segment.points);
                                if (!(first && lastPoint)) continue;
                                const nearestPointOnSegment = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].NearestPointOnLineSegment(first, lastPoint, newPoint2);
                                if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].DistMin(nearestPointOnSegment, newPoint2, minDistance)) {
                                    nearestPoint = nearestPointOnSegment.toFixed().toJson();
                                    minDistance = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(nearestPointOnSegment, newPoint2);
                                    snapSegment = segment;
                                    break;
                                }
                            }
                            if (nearestPoint) {
                                didSnap = true;
                                newPoint2 = nearestPoint;
                            }
                        }
                    }
                    if (didSnap && snapSegment) {
                        const transform = this.editor.getShapePageTransform(shape);
                        const first = snapSegment.points[0];
                        const lastPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["last"])(snapSegment.points);
                        if (!lastPoint) throw Error("Expected a last point!");
                        const A = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(transform, first);
                        const B = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(transform, lastPoint);
                        const snappedPoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(transform, newPoint2);
                        this.editor.snaps.setIndicators([
                            {
                                id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$id$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["uniqueId"])(),
                                type: "points",
                                points: [
                                    A,
                                    snappedPoint,
                                    B
                                ]
                            }
                        ]);
                    } else {
                        this.editor.snaps.clearIndicators();
                        if (shouldSnapToAngle) {
                            const currentAngle = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Angle(pagePointWhereCurrentSegmentChanged, currentPagePoint);
                            const snappedAngle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["snapAngle"])(currentAngle, 24);
                            const angleDiff = snappedAngle - currentAngle;
                            pagePoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].RotWith(currentPagePoint, pagePointWhereCurrentSegmentChanged, angleDiff);
                        } else {
                            pagePoint = currentPagePoint;
                        }
                        newPoint2 = this.editor.getPointInShapeSpace(shape, pagePoint).toFixed().toJson();
                    }
                    this.currentLineLength += __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(newSegment.points[0], newPoint2);
                    newSegments[newSegments.length - 1] = {
                        ...newSegment,
                        type: "straight",
                        points: [
                            newSegment.points[0],
                            newPoint2
                        ]
                    };
                    const shapePartial = {
                        id,
                        type: this.shapeType,
                        props: {
                            segments: newSegments
                        }
                    };
                    if (this.canClose()) {
                        ;
                        shapePartial.props.isClosed = this.getIsClosed(segments, size, scale);
                    }
                    this.editor.updateShapes([
                        shapePartial
                    ]);
                    break;
                }
            case "free":
                {
                    const newSegments = segments.slice();
                    const newSegment = newSegments[newSegments.length - 1];
                    const newPoints = [
                        ...newSegment.points
                    ];
                    if (newPoints.length && this.mergeNextPoint) {
                        const { z: z2 } = newPoints[newPoints.length - 1];
                        newPoints[newPoints.length - 1] = {
                            x: newPoint.x,
                            y: newPoint.y,
                            z: z2 ? Math.max(z2, newPoint.z) : newPoint.z
                        };
                    } else {
                        this.currentLineLength += __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(newPoints[newPoints.length - 1], newPoint);
                        newPoints.push(newPoint);
                    }
                    newSegments[newSegments.length - 1] = {
                        ...newSegment,
                        points: newPoints
                    };
                    if (this.currentLineLength < __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape.props.size] * 4) {
                        this.currentLineLength = this.getLineLength(newSegments);
                    }
                    const shapePartial = {
                        id,
                        type: this.shapeType,
                        props: {
                            segments: newSegments
                        }
                    };
                    if (this.canClose()) {
                        ;
                        shapePartial.props.isClosed = this.getIsClosed(newSegments, size, scale);
                    }
                    this.editor.updateShapes([
                        shapePartial
                    ]);
                    if (newPoints.length > this.util.options.maxPointsPerShape) {
                        this.editor.updateShapes([
                            {
                                id,
                                type: this.shapeType,
                                props: {
                                    isComplete: true
                                }
                            }
                        ]);
                        const newShapeId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createShapeId"])();
                        const props = this.editor.getShape(id).props;
                        if (!this.editor.canCreateShapes([
                            newShapeId
                        ])) return this.cancel();
                        this.editor.createShape({
                            id: newShapeId,
                            type: this.shapeType,
                            x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toFixed"])(inputs.currentPagePoint.x),
                            y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toFixed"])(inputs.currentPagePoint.y),
                            props: {
                                isPen: this.isPenOrStylus,
                                scale: props.scale,
                                segments: [
                                    {
                                        type: "free",
                                        points: [
                                            {
                                                x: 0,
                                                y: 0,
                                                z: this.isPenOrStylus ? +(z * 1.25).toFixed() : 0.5
                                            }
                                        ]
                                    }
                                ]
                            }
                        });
                        const shape2 = this.editor.getShape(newShapeId);
                        if (!shape2) {
                            return this.cancel();
                        }
                        this.initialShape = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$value$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["structuredClone"])(shape2);
                        this.mergeNextPoint = false;
                        this.lastRecordedPoint = inputs.currentPagePoint.clone();
                        this.currentLineLength = 0;
                    }
                    break;
                }
        }
    }
    getLineLength(segments) {
        let length = 0;
        for (const segment of segments){
            for(let i = 0; i < segment.points.length - 1; i++){
                const A = segment.points[i];
                const B = segment.points[i + 1];
                length += __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(B, A);
            }
        }
        return Math.sqrt(length);
    }
    onPointerUp() {
        this.complete();
    }
    onCancel() {
        this.cancel();
    }
    onComplete() {
        this.complete();
    }
    onInterrupt() {
        if (this.editor.inputs.isDragging) {
            return;
        }
        if (this.markId) {
            this.editor.bailToMark(this.markId);
        }
        this.cancel();
    }
    complete() {
        const { initialShape } = this;
        if (!initialShape) return;
        this.editor.updateShapes([
            {
                id: initialShape.id,
                type: initialShape.type,
                props: {
                    isComplete: true
                }
            }
        ]);
        this.parent.transition("idle");
    }
    cancel() {
        this.parent.transition("idle", this.info);
    }
}
;
 //# sourceMappingURL=Drawing.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/draw/toolStates/Idle.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Idle": (()=>Idle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
;
class Idle extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "idle";
    onPointerDown(info) {
        this.parent.transition("drawing", info);
    }
    onEnter() {
        this.editor.setCursor({
            type: "cross",
            rotation: 0
        });
    }
    onCancel() {
        this.editor.setCurrentTool("select");
    }
}
;
 //# sourceMappingURL=Idle.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/draw/DrawShapeTool.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "DrawShapeTool": (()=>DrawShapeTool)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$toolStates$2f$Drawing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/draw/toolStates/Drawing.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$toolStates$2f$Idle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/draw/toolStates/Idle.mjs [app-ssr] (ecmascript)");
;
;
;
class DrawShapeTool extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "draw";
    static initial = "idle";
    static isLockable = false;
    static useCoalescedEvents = true;
    static children() {
        return [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$toolStates$2f$Idle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Idle"],
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$toolStates$2f$Drawing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Drawing"]
        ];
    }
    shapeType = "draw";
    onExit() {
        const drawingState = this.children["drawing"];
        drawingState.initialShape = void 0;
    }
}
;
 //# sourceMappingURL=DrawShapeTool.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/frame/FrameShapeTool.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FrameShapeTool": (()=>FrameShapeTool)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$BaseBoxShapeTool$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/BaseBoxShapeTool/BaseBoxShapeTool.mjs [app-ssr] (ecmascript)");
;
class FrameShapeTool extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$BaseBoxShapeTool$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BaseBoxShapeTool"] {
    static id = "frame";
    static initial = "idle";
    shapeType = "frame";
    onCreate(shape) {
        if (!shape) return;
        const bounds = this.editor.getShapePageBounds(shape);
        const shapesToAddToFrame = [];
        const ancestorIds = this.editor.getShapeAncestors(shape).map((shape2)=>shape2.id);
        this.editor.getSortedChildIdsForParent(shape.parentId).map((siblingShapeId)=>{
            const siblingShape = this.editor.getShape(siblingShapeId);
            if (!siblingShape) return;
            if (siblingShape.id === shape.id) return;
            if (siblingShape.isLocked) return;
            const pageShapeBounds = this.editor.getShapePageBounds(siblingShape);
            if (!pageShapeBounds) return;
            if (bounds.contains(pageShapeBounds)) {
                if (canEnclose(siblingShape, ancestorIds, shape)) {
                    shapesToAddToFrame.push(siblingShape.id);
                }
            }
        });
        this.editor.reparentShapes(shapesToAddToFrame, shape.id);
        if (this.editor.getInstanceState().isToolLocked) {
            this.editor.setCurrentTool("frame");
        } else {
            this.editor.setCurrentTool("select.idle");
        }
    }
}
function canEnclose(shape, ancestorIds, frame) {
    if (ancestorIds.includes(shape.id)) {
        return false;
    }
    if (shape.parentId === frame.parentId) {
        return true;
    }
    return false;
}
;
 //# sourceMappingURL=FrameShapeTool.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/geo/toolStates/Idle.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Idle": (()=>Idle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
;
class Idle extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "idle";
    onPointerDown(info) {
        this.parent.transition("pointing", info);
    }
    onEnter() {
        this.editor.setCursor({
            type: "cross",
            rotation: 0
        });
    }
    onKeyUp(info) {
        if (info.key === "Enter") {
            if (this.editor.getIsReadonly()) return null;
            const onlySelectedShape = this.editor.getOnlySelectedShape();
            if (onlySelectedShape && this.editor.getShapeUtil(onlySelectedShape).canEdit(onlySelectedShape)) {
                this.editor.setCurrentTool("select");
                this.editor.setEditingShape(onlySelectedShape.id);
                this.editor.root.getCurrent()?.transition("editing_shape", {
                    ...info,
                    target: "shape",
                    shape: onlySelectedShape
                });
            }
        }
    }
    onCancel() {
        this.editor.setCurrentTool("select");
    }
}
;
 //# sourceMappingURL=Idle.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/geo/toolStates/Pointing.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Pointing": (()=>Pointing)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLGeoShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/shapes/TLGeoShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/records/TLShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/BaseBoxShapeTool/children/Pointing.mjs [app-ssr] (ecmascript)");
;
class Pointing extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "pointing";
    onPointerUp() {
        this.complete();
    }
    onPointerMove(info) {
        if (this.editor.inputs.isDragging) {
            const { originPagePoint } = this.editor.inputs;
            const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createShapeId"])();
            const creatingMarkId = this.editor.markHistoryStoppingPoint(`creating_geo:${id}`);
            const newPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeSnapToGrid"])(originPagePoint, this.editor);
            this.editor.createShapes([
                {
                    id,
                    type: "geo",
                    x: newPoint.x,
                    y: newPoint.y,
                    props: {
                        w: 1,
                        h: 1,
                        geo: this.editor.getStyleForNextShape(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLGeoShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GeoShapeGeoStyle"]),
                        scale: this.editor.user.getIsDynamicResizeMode() ? 1 / this.editor.getZoomLevel() : 1
                    }
                }
            ]).select(id);
            const shape = this.editor.getShape(id);
            if (!shape) {
                this.cancel();
                return;
            }
            this.editor.setCurrentTool("select.resizing", {
                ...info,
                target: "selection",
                handle: "bottom_right",
                isCreating: true,
                creatingMarkId,
                creationCursorOffset: {
                    x: 1,
                    y: 1
                },
                onInteractionEnd: "geo"
            });
        }
    }
    onCancel() {
        this.cancel();
    }
    onComplete() {
        this.complete();
    }
    onInterrupt() {
        this.cancel();
    }
    complete() {
        const { originPagePoint } = this.editor.inputs;
        const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createShapeId"])();
        this.editor.markHistoryStoppingPoint(`creating_geo:${id}`);
        const scale = this.editor.user.getIsDynamicResizeMode() ? 1 / this.editor.getZoomLevel() : 1;
        const geo = this.editor.getStyleForNextShape(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLGeoShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GeoShapeGeoStyle"]);
        const size = geo === "star" ? {
            w: 200,
            h: 190
        } : geo === "cloud" ? {
            w: 300,
            h: 180
        } : {
            w: 200,
            h: 200
        };
        this.editor.createShapes([
            {
                id,
                type: "geo",
                x: originPagePoint.x,
                y: originPagePoint.y,
                props: {
                    geo: this.editor.getStyleForNextShape(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLGeoShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GeoShapeGeoStyle"]),
                    scale,
                    ...size
                }
            }
        ]);
        const shape = this.editor.getShape(id);
        if (!shape) {
            this.cancel();
            return;
        }
        const { w, h } = shape.props;
        const delta = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](w / 2, h / 2).mul(scale);
        const parentTransform = this.editor.getShapeParentTransform(shape);
        if (parentTransform) delta.rot(-parentTransform.rotation());
        const newPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeSnapToGrid"])(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](shape.x - delta.x, shape.y - delta.y), this.editor);
        this.editor.select(id);
        this.editor.updateShape({
            id: shape.id,
            type: "geo",
            x: newPoint.x,
            y: newPoint.y,
            props: {
                geo: this.editor.getStyleForNextShape(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLGeoShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GeoShapeGeoStyle"]),
                w: w * scale,
                h: h * scale
            }
        });
        if (this.editor.getInstanceState().isToolLocked) {
            this.parent.transition("idle");
        } else {
            this.editor.setCurrentTool("select", {});
        }
    }
    cancel() {
        this.parent.transition("idle");
    }
}
;
 //# sourceMappingURL=Pointing.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/geo/GeoShapeTool.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "GeoShapeTool": (()=>GeoShapeTool)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$geo$2f$toolStates$2f$Idle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/geo/toolStates/Idle.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$geo$2f$toolStates$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/geo/toolStates/Pointing.mjs [app-ssr] (ecmascript)");
;
;
;
class GeoShapeTool extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "geo";
    static initial = "idle";
    static children() {
        return [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$geo$2f$toolStates$2f$Idle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Idle"],
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$geo$2f$toolStates$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Pointing"]
        ];
    }
    shapeType = "geo";
}
;
 //# sourceMappingURL=GeoShapeTool.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/highlight/HighlightShapeTool.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "HighlightShapeTool": (()=>HighlightShapeTool)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$toolStates$2f$Drawing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/draw/toolStates/Drawing.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$toolStates$2f$Idle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/draw/toolStates/Idle.mjs [app-ssr] (ecmascript)");
;
;
;
class HighlightShapeTool extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "highlight";
    static initial = "idle";
    static useCoalescedEvents = true;
    static children() {
        return [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$toolStates$2f$Idle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Idle"],
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$toolStates$2f$Drawing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Drawing"]
        ];
    }
    static isLockable = false;
    shapeType = "highlight";
    onExit() {
        const drawingState = this.children["drawing"];
        drawingState.initialShape = void 0;
    }
}
;
 //# sourceMappingURL=HighlightShapeTool.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/line/toolStates/Idle.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Idle": (()=>Idle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
;
class Idle extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "idle";
    shapeId = "";
    onEnter(info) {
        this.shapeId = info.shapeId;
        this.editor.setCursor({
            type: "cross",
            rotation: 0
        });
    }
    onPointerDown() {
        this.parent.transition("pointing", {
            shapeId: this.shapeId
        });
    }
    onCancel() {
        this.editor.setCurrentTool("select");
    }
}
;
 //# sourceMappingURL=Idle.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/line/toolStates/Pointing.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Pointing": (()=>Pointing)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Mat.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/records/TLShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$reordering$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/reordering.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/array.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/BaseBoxShapeTool/children/Pointing.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$value$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/value.mjs [app-ssr] (ecmascript)");
;
const MINIMUM_DISTANCE_BETWEEN_SHIFT_CLICKED_HANDLES = 2;
class Pointing extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "pointing";
    shape = {};
    markId;
    onEnter(info) {
        const { inputs } = this.editor;
        const { currentPagePoint } = inputs;
        this.markId = void 0;
        const shape = info.shapeId && this.editor.getShape(info.shapeId);
        if (shape && inputs.shiftKey) {
            this.markId = this.editor.markHistoryStoppingPoint(`creating_line:${shape.id}`);
            this.shape = shape;
            const handles = this.editor.getShapeHandles(this.shape);
            if (!handles) return;
            const vertexHandles = handles.filter((h)=>h.type === "vertex").sort(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$reordering$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sortByIndex"]);
            const endHandle = vertexHandles[vertexHandles.length - 1];
            const prevEndHandle = vertexHandles[vertexHandles.length - 2];
            const shapePagePoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Mat$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Mat"].applyToPoint(this.editor.getShapeParentTransform(this.shape), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](this.shape.x, this.shape.y));
            const nudgedPoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(currentPagePoint, shapePagePoint).addXY(0.1, 0.1);
            const nextPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeSnapToGrid"])(nudgedPoint, this.editor);
            const points = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$value$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["structuredClone"])(this.shape.props.points);
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].DistMin(endHandle, prevEndHandle, MINIMUM_DISTANCE_BETWEEN_SHIFT_CLICKED_HANDLES) || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].DistMin(nextPoint, endHandle, MINIMUM_DISTANCE_BETWEEN_SHIFT_CLICKED_HANDLES)) {
                points[endHandle.id] = {
                    id: endHandle.id,
                    index: endHandle.index,
                    x: nextPoint.x,
                    y: nextPoint.y
                };
            } else {
                const nextIndex = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$reordering$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getIndexAbove"])(endHandle.index);
                points[nextIndex] = {
                    id: nextIndex,
                    index: nextIndex,
                    x: nextPoint.x,
                    y: nextPoint.y
                };
            }
            this.editor.updateShapes([
                {
                    id: this.shape.id,
                    type: this.shape.type,
                    props: {
                        points
                    }
                }
            ]);
        } else {
            const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createShapeId"])();
            this.markId = this.editor.markHistoryStoppingPoint(`creating_line:${id}`);
            const newPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeSnapToGrid"])(currentPagePoint, this.editor);
            this.editor.createShapes([
                {
                    id,
                    type: "line",
                    x: newPoint.x,
                    y: newPoint.y,
                    props: {
                        scale: this.editor.user.getIsDynamicResizeMode() ? 1 / this.editor.getZoomLevel() : 1
                    }
                }
            ]);
            if (!this.editor.getShape(id)) {
                this.cancel();
                return;
            }
            this.editor.select(id);
            this.shape = this.editor.getShape(id);
        }
    }
    onPointerMove() {
        if (!this.shape) return;
        if (this.editor.inputs.isDragging) {
            const handles = this.editor.getShapeHandles(this.shape);
            if (!handles) {
                if (this.markId) this.editor.bailToMark(this.markId);
                throw Error("No handles found");
            }
            const lastHandle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["last"])(handles);
            this.editor.setCurrentTool("select.dragging_handle", {
                shape: this.shape,
                isCreating: true,
                creatingMarkId: this.markId,
                // remove the offset that we added to the handle when we created it
                handle: {
                    ...lastHandle,
                    x: lastHandle.x - 0.1,
                    y: lastHandle.y - 0.1
                },
                onInteractionEnd: "line"
            });
        }
    }
    onPointerUp() {
        this.complete();
    }
    onCancel() {
        this.cancel();
    }
    onComplete() {
        this.complete();
    }
    onInterrupt() {
        this.parent.transition("idle");
        if (this.markId) this.editor.bailToMark(this.markId);
        this.editor.snaps.clearIndicators();
    }
    complete() {
        this.parent.transition("idle", {
            shapeId: this.shape.id
        });
        this.editor.snaps.clearIndicators();
    }
    cancel() {
        if (this.markId) this.editor.bailToMark(this.markId);
        this.parent.transition("idle", {
            shapeId: this.shape.id
        });
        this.editor.snaps.clearIndicators();
    }
}
;
 //# sourceMappingURL=Pointing.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/line/LineShapeTool.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "LineShapeTool": (()=>LineShapeTool)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$line$2f$toolStates$2f$Idle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/line/toolStates/Idle.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$line$2f$toolStates$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/line/toolStates/Pointing.mjs [app-ssr] (ecmascript)");
;
;
;
class LineShapeTool extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "line";
    static initial = "idle";
    static children() {
        return [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$line$2f$toolStates$2f$Idle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Idle"],
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$line$2f$toolStates$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Pointing"]
        ];
    }
    shapeType = "line";
}
;
 //# sourceMappingURL=LineShapeTool.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/note/toolStates/Idle.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Idle": (()=>Idle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
;
class Idle extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "idle";
    onPointerDown(info) {
        this.parent.transition("pointing", info);
    }
    onEnter() {
        this.editor.setCursor({
            type: "cross",
            rotation: 0
        });
    }
    onCancel() {
        this.editor.setCurrentTool("select");
    }
}
;
 //# sourceMappingURL=Idle.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/note/noteHelpers.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "CLONE_HANDLE_MARGIN": (()=>CLONE_HANDLE_MARGIN),
    "NOTE_ADJACENT_POSITION_SNAP_RADIUS": (()=>NOTE_ADJACENT_POSITION_SNAP_RADIUS),
    "NOTE_CENTER_OFFSET": (()=>NOTE_CENTER_OFFSET),
    "NOTE_SIZE": (()=>NOTE_SIZE),
    "getAvailableNoteAdjacentPositions": (()=>getAvailableNoteAdjacentPositions),
    "getNoteAdjacentPositions": (()=>getNoteAdjacentPositions),
    "getNoteShapeForAdjacentPosition": (()=>getNoteShapeForAdjacentPosition)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/array.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/records/TLShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$misc$2f$TLRichText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/misc/TLRichText.mjs [app-ssr] (ecmascript)");
;
const CLONE_HANDLE_MARGIN = 0;
const NOTE_SIZE = 200;
const NOTE_CENTER_OFFSET = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](NOTE_SIZE / 2, NOTE_SIZE / 2);
const NOTE_ADJACENT_POSITION_SNAP_RADIUS = 10;
const BASE_NOTE_POSITIONS = (editor)=>[
        [
            [
                "a1"
            ],
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](NOTE_SIZE * 0.5, NOTE_SIZE * -0.5 - editor.options.adjacentShapeMargin)
        ],
        // t
        [
            [
                "a2"
            ],
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](NOTE_SIZE * 1.5 + editor.options.adjacentShapeMargin, NOTE_SIZE * 0.5)
        ],
        // r
        [
            [
                "a3"
            ],
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](NOTE_SIZE * 0.5, NOTE_SIZE * 1.5 + editor.options.adjacentShapeMargin)
        ],
        // b
        [
            [
                "a4"
            ],
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](NOTE_SIZE * -0.5 - editor.options.adjacentShapeMargin, NOTE_SIZE * 0.5)
        ]
    ];
function getBaseAdjacentNotePositions(editor, scale) {
    if (scale === 1) return BASE_NOTE_POSITIONS(editor);
    const s = NOTE_SIZE * scale;
    const m = editor.options.adjacentShapeMargin * scale;
    return [
        [
            [
                "a1"
            ],
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](s * 0.5, s * -0.5 - m)
        ],
        // t
        [
            [
                "a2"
            ],
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](s * 1.5 + m, s * 0.5)
        ],
        // r
        [
            [
                "a3"
            ],
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](s * 0.5, s * 1.5 + m)
        ],
        // b
        [
            [
                "a4"
            ],
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](s * -0.5 - m, s * 0.5)
        ]
    ];
}
function getNoteAdjacentPositions(editor, pagePoint, pageRotation, growY, extraHeight, scale) {
    return Object.fromEntries(getBaseAdjacentNotePositions(editor, scale).map(([id, v], i)=>{
        const point = v.clone();
        if (i === 0 && extraHeight) {
            point.y -= extraHeight;
        } else if (i === 2 && growY) {
            point.y += growY;
        }
        return [
            id,
            point.rot(pageRotation).add(pagePoint)
        ];
    }));
}
function getAvailableNoteAdjacentPositions(editor, rotation, scale, extraHeight) {
    const selectedShapeIds = new Set(editor.getSelectedShapeIds());
    const minSize = (NOTE_SIZE + editor.options.adjacentShapeMargin + extraHeight) ** 2;
    const allCenters = /* @__PURE__ */ new Map();
    const positions = [];
    for (const shape of editor.getCurrentPageShapes()){
        if (!editor.isShapeOfType(shape, "note") || scale !== shape.props.scale || selectedShapeIds.has(shape.id)) {
            continue;
        }
        const transform = editor.getShapePageTransform(shape.id);
        if (rotation !== transform.rotation()) continue;
        allCenters.set(shape, editor.getShapePageBounds(shape).center);
        positions.push(...Object.values(getNoteAdjacentPositions(editor, transform.point(), rotation, shape.props.growY, extraHeight, scale)));
    }
    const len = positions.length;
    let position;
    for (const [shape, center] of allCenters){
        for(let i = 0; i < len; i++){
            position = positions[i];
            if (!position) continue;
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(center, position) > minSize) continue;
            if (editor.isPointInShape(shape, position)) {
                positions[i] = void 0;
            }
        }
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compact"])(positions);
}
function getNoteShapeForAdjacentPosition(editor, shape, center, pageRotation, forceNew = false) {
    let nextNote;
    const allShapesOnPage = editor.getCurrentPageShapesSorted();
    const minDistance = (NOTE_SIZE + editor.options.adjacentShapeMargin ** 2) ** shape.props.scale;
    for(let i = allShapesOnPage.length - 1; i >= 0; i--){
        const otherNote = allShapesOnPage[i];
        if (otherNote.type === "note" && otherNote.id !== shape.id) {
            const otherBounds = editor.getShapePageBounds(otherNote);
            if (otherBounds && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(otherBounds.center, center) < minDistance && editor.isPointInShape(otherNote, center)) {
                nextNote = otherNote;
                break;
            }
        }
    }
    editor.complete();
    if (!nextNote || forceNew) {
        editor.markHistoryStoppingPoint("creating note shape");
        const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createShapeId"])();
        editor.createShape({
            id,
            type: "note",
            x: center.x,
            y: center.y,
            rotation: pageRotation,
            opacity: shape.opacity,
            props: {
                // Use the props of the shape we're cloning
                ...shape.props,
                richText: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$misc$2f$TLRichText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toRichText"])(""),
                growY: 0,
                fontSizeAdjustment: 0,
                url: ""
            }
        });
        const createdShape = editor.getShape(id);
        if (!createdShape) return;
        const topLeft = editor.getPointInParentSpace(createdShape, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(center, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Rot(NOTE_CENTER_OFFSET.clone().mul(createdShape.props.scale), pageRotation)));
        editor.updateShape({
            id,
            type: "note",
            x: topLeft.x,
            y: topLeft.y
        });
        nextNote = editor.getShape(id);
    }
    editor.zoomToSelectionIfOffscreen(16, {
        animation: {
            duration: editor.options.animationMediumMs
        },
        inset: 0
    });
    return nextNote;
}
;
 //# sourceMappingURL=noteHelpers.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/note/toolStates/Pointing.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Pointing": (()=>Pointing),
    "createNoteShape": (()=>createNoteShape),
    "getNoteShapeAdjacentPositionOffset": (()=>getNoteShapeAdjacentPositionOffset)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/records/TLShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/BaseBoxShapeTool/children/Pointing.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/note/noteHelpers.mjs [app-ssr] (ecmascript)");
;
;
class Pointing extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "pointing";
    dragged = false;
    info = {};
    markId = "";
    shape = {};
    onEnter() {
        const { editor } = this;
        const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createShapeId"])();
        this.markId = editor.markHistoryStoppingPoint(`creating_note:${id}`);
        const center = this.editor.inputs.originPagePoint.clone();
        const offset = getNoteShapeAdjacentPositionOffset(this.editor, center, this.editor.user.getIsDynamicResizeMode() ? 1 / this.editor.getZoomLevel() : 1);
        if (offset) {
            center.sub(offset);
        }
        const shape = createNoteShape(this.editor, id, center);
        if (shape) {
            this.shape = shape;
        } else {
            this.cancel();
        }
    }
    onPointerMove(info) {
        if (this.editor.inputs.isDragging) {
            this.editor.setCurrentTool("select.translating", {
                ...info,
                target: "shape",
                shape: this.shape,
                onInteractionEnd: "note",
                isCreating: true,
                creatingMarkId: this.markId,
                onCreate: ()=>{
                    this.editor.setEditingShape(this.shape.id);
                    this.editor.setCurrentTool("select.editing_shape");
                }
            });
        }
    }
    onPointerUp() {
        this.complete();
    }
    onInterrupt() {
        this.cancel();
    }
    onComplete() {
        this.complete();
    }
    onCancel() {
        this.cancel();
    }
    complete() {
        if (this.editor.getInstanceState().isToolLocked) {
            this.parent.transition("idle");
        } else {
            this.editor.setEditingShape(this.shape.id);
            this.editor.setCurrentTool("select.editing_shape", {
                ...this.info,
                target: "shape",
                shape: this.shape
            });
        }
    }
    cancel() {
        this.editor.bailToMark(this.markId);
        this.parent.transition("idle", this.info);
    }
}
function getNoteShapeAdjacentPositionOffset(editor, center, scale) {
    let min = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_ADJACENT_POSITION_SNAP_RADIUS"] / editor.getZoomLevel();
    let offset;
    for (const pit of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getAvailableNoteAdjacentPositions"])(editor, 0, scale, 0)){
        const deltaToPit = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(center, pit);
        const dist = deltaToPit.len();
        if (dist < min) {
            min = dist;
            offset = deltaToPit;
        }
    }
    return offset;
}
function createNoteShape(editor, id, center) {
    editor.createShape({
        id,
        type: "note",
        x: center.x,
        y: center.y,
        props: {
            scale: editor.user.getIsDynamicResizeMode() ? 1 / editor.getZoomLevel() : 1
        }
    });
    const shape = editor.getShape(id);
    if (!shape) return;
    editor.select(id);
    const bounds = editor.getShapeGeometry(shape).bounds;
    const newPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeSnapToGrid"])(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](shape.x - bounds.width / 2, shape.y - bounds.height / 2), editor);
    editor.updateShapes([
        {
            id,
            type: "note",
            x: newPoint.x,
            y: newPoint.y
        }
    ]);
    return editor.getShape(id);
}
;
 //# sourceMappingURL=Pointing.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/note/NoteShapeTool.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "NoteShapeTool": (()=>NoteShapeTool)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$toolStates$2f$Idle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/note/toolStates/Idle.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$toolStates$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/note/toolStates/Pointing.mjs [app-ssr] (ecmascript)");
;
;
;
class NoteShapeTool extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "note";
    static initial = "idle";
    static children() {
        return [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$toolStates$2f$Idle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Idle"],
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$toolStates$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Pointing"]
        ];
    }
    shapeType = "note";
}
;
 //# sourceMappingURL=NoteShapeTool.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/text/toolStates/Idle.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Idle": (()=>Idle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$tools$2f$selection$2d$logic$2f$updateHoveredShapeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/tools/selection-logic/updateHoveredShapeId.mjs [app-ssr] (ecmascript)");
;
;
class Idle extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "idle";
    onPointerMove(info) {
        switch(info.target){
            case "shape":
            case "canvas":
                {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$tools$2f$selection$2d$logic$2f$updateHoveredShapeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["updateHoveredShapeId"])(this.editor);
                }
        }
    }
    onPointerDown(info) {
        this.parent.transition("pointing", info);
    }
    onEnter() {
        this.editor.setCursor({
            type: "cross",
            rotation: 0
        });
    }
    onExit() {
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$tools$2f$selection$2d$logic$2f$updateHoveredShapeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["updateHoveredShapeId"].cancel();
    }
    onKeyDown(info) {
        if (info.key === "Enter") {
            if (this.editor.getIsReadonly()) return null;
            const onlySelectedShape = this.editor.getOnlySelectedShape();
            if (onlySelectedShape && this.editor.getShapeUtil(onlySelectedShape).canEdit(onlySelectedShape)) {
                this.editor.setCurrentTool("select");
                this.editor.setEditingShape(onlySelectedShape.id);
                this.editor.root.getCurrent()?.transition("editing_shape", {
                    ...info,
                    target: "shape",
                    shape: onlySelectedShape
                });
            }
        }
    }
    onCancel() {
        this.editor.setCurrentTool("select");
    }
}
;
 //# sourceMappingURL=Idle.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/text/toolStates/Pointing.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "Pointing": (()=>Pointing)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/records/TLShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/BaseBoxShapeTool/children/Pointing.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$misc$2f$TLRichText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/misc/TLRichText.mjs [app-ssr] (ecmascript)");
;
class Pointing extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "pointing";
    shape;
    markId = "";
    enterTime = 0;
    onEnter() {
        this.enterTime = Date.now();
    }
    onExit() {
        this.editor.setHintingShapes([]);
    }
    onPointerMove(info) {
        if (Date.now() - this.enterTime < 150) return;
        const { editor } = this;
        const { isPointing } = editor.inputs;
        if (!isPointing) return;
        const { originPagePoint, currentPagePoint } = editor.inputs;
        const currentDragDist = Math.abs(originPagePoint.x - currentPagePoint.x);
        const baseMinDragDistForFixedWidth = Math.sqrt(editor.getInstanceState().isCoarsePointer ? editor.options.coarseDragDistanceSquared : editor.options.dragDistanceSquared);
        const minSquaredDragDist = baseMinDragDistForFixedWidth * 6 / editor.getZoomLevel();
        if (currentDragDist > minSquaredDragDist) {
            const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createShapeId"])();
            this.markId = editor.markHistoryStoppingPoint(`creating_text:${id}`);
            const shape = this.createTextShape(id, originPagePoint, false, currentDragDist);
            if (!shape) {
                this.cancel();
                return;
            }
            this.shape = editor.getShape(shape);
            editor.select(id);
            const scale = this.editor.user.getIsDynamicResizeMode() ? 1 / this.editor.getZoomLevel() : 1;
            editor.setCurrentTool("select.resizing", {
                ...info,
                target: "selection",
                handle: "right",
                isCreating: true,
                creatingMarkId: this.markId,
                // Make sure the cursor offset takes into account how far we've already dragged
                creationCursorOffset: {
                    x: currentDragDist * scale,
                    y: 1
                },
                onInteractionEnd: "text",
                onCreate: ()=>{
                    editor.setEditingShape(shape.id);
                }
            });
        }
    }
    onPointerUp() {
        this.complete();
    }
    onComplete() {
        this.cancel();
    }
    onCancel() {
        this.cancel();
    }
    onInterrupt() {
        this.cancel();
    }
    complete() {
        this.editor.markHistoryStoppingPoint("creating text shape");
        const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createShapeId"])();
        const { originPagePoint } = this.editor.inputs;
        const shape = this.createTextShape(id, originPagePoint, true, 20);
        if (!shape) return;
        this.editor.select(id);
        this.editor.setEditingShape(id);
    }
    cancel() {
        this.parent.transition("idle");
        this.editor.bailToMark(this.markId);
    }
    createTextShape(id, point, autoSize, width) {
        this.editor.createShape({
            id,
            type: "text",
            x: point.x,
            y: point.y,
            props: {
                richText: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$misc$2f$TLRichText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toRichText"])(""),
                autoSize,
                w: width,
                scale: this.editor.user.getIsDynamicResizeMode() ? 1 / this.editor.getZoomLevel() : 1
            }
        });
        const shape = this.editor.getShape(id);
        if (!shape) {
            this.cancel();
            return;
        }
        const bounds = this.editor.getShapePageBounds(shape);
        const delta = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"]();
        if (autoSize) {
            switch(shape.props.textAlign){
                case "start":
                    {
                        delta.x = 0;
                        break;
                    }
                case "middle":
                    {
                        delta.x = -bounds.width / 2;
                        break;
                    }
                case "end":
                    {
                        delta.x = -bounds.width;
                        break;
                    }
            }
        } else {
            delta.x = 0;
        }
        delta.y = -bounds.height / 2;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isShapeId"])(shape.parentId)) {
            const transform = this.editor.getShapeParentTransform(shape);
            delta.rot(-transform.rotation());
        }
        const shapeX = shape.x + delta.x;
        const shapeY = shape.y + delta.y;
        if (this.editor.getInstanceState().isGridMode) {
            const topLeft = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](shapeX, shapeY);
            const gridSnappedPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeSnapToGrid"])(topLeft, this.editor);
            const gridDelta = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(topLeft, gridSnappedPoint);
            this.editor.updateShape({
                ...shape,
                x: shapeX - gridDelta.x,
                y: shapeY - gridDelta.y
            });
        } else {
            this.editor.updateShape({
                ...shape,
                x: shapeX,
                y: shapeY
            });
        }
        return shape;
    }
}
;
 //# sourceMappingURL=Pointing.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/text/TextShapeTool.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "TextShapeTool": (()=>TextShapeTool)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/StateNode.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$text$2f$toolStates$2f$Idle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/text/toolStates/Idle.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$text$2f$toolStates$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/text/toolStates/Pointing.mjs [app-ssr] (ecmascript)");
;
;
;
class TextShapeTool extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$StateNode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["StateNode"] {
    static id = "text";
    static initial = "idle";
    static children() {
        return [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$text$2f$toolStates$2f$Idle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Idle"],
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$text$2f$toolStates$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Pointing"]
        ];
    }
    shapeType = "text";
}
;
 //# sourceMappingURL=TextShapeTool.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/text/PlainTextArea.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "PlainTextArea": (()=>PlainTextArea)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/utils/dom.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
;
;
const PlainTextArea = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].forwardRef(function TextArea({ isEditing, text, handleFocus, handleChange, handleKeyDown, handlePaste, handleBlur, handleInputPointerDown, handleDoubleClick }, ref) {
    const onChange = (e)=>{
        handleChange({
            plaintext: e.target.value
        });
    };
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("textarea", {
        ref,
        className: "tl-text tl-text-input",
        name: "text",
        tabIndex: -1,
        disabled: !isEditing,
        readOnly: !isEditing,
        autoComplete: "off",
        autoCapitalize: "off",
        autoCorrect: "off",
        autoSave: "off",
        placeholder: "",
        spellCheck: "true",
        wrap: "off",
        dir: "auto",
        defaultValue: text,
        onFocus: handleFocus,
        onChange,
        onKeyDown: (e)=>handleKeyDown(e.nativeEvent),
        onBlur: handleBlur,
        onTouchEnd: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stopEventPropagation"],
        onContextMenu: isEditing ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stopEventPropagation"] : void 0,
        onPointerDown: handleInputPointerDown,
        onPaste: handlePaste,
        onDoubleClick: handleDoubleClick,
        onDragStart: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["preventDefault"]
    });
});
;
 //# sourceMappingURL=PlainTextArea.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/legacyProps.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getLegacyOffsetX": (()=>getLegacyOffsetX),
    "isLegacyAlign": (()=>isLegacyAlign)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Box.mjs [app-ssr] (ecmascript)");
;
function getLegacyOffsetX(align, padding, spans, totalWidth) {
    if ((align === "start-legacy" || align === "end-legacy") && spans.length !== 0) {
        const spansBounds = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"].From(spans[0].box);
        for (const { box } of spans){
            spansBounds.union(box);
        }
        if (align === "start-legacy") {
            return (totalWidth - 2 * padding - spansBounds.width) / 2;
        } else if (align === "end-legacy") {
            return -(totalWidth - 2 * padding - spansBounds.width) / 2;
        }
    }
}
function isLegacyAlign(align) {
    return align === "start-legacy" || align === "middle-legacy" || align === "end-legacy";
}
;
 //# sourceMappingURL=legacyProps.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useEditablePlainText.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useEditablePlainText": (()=>useEditablePlainText),
    "useEditableText": (()=>useEditableText),
    "useEditableTextCommon": (()=>useEditableTextCommon),
    "useIsReadyForEditing": (()=>useIsReadyForEditing)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$getPointerInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/utils/getPointerInfo.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$function$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/function.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/utils/dom.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$globals$2f$environment$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/globals/environment.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$TextHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/TextHelpers.mjs [app-ssr] (ecmascript)");
;
;
;
function useEditablePlainText(shapeId, type, text) {
    const commonUseEditableTextHandlers = useEditableTextCommon(shapeId);
    const isEditing = commonUseEditableTextHandlers.isEditing;
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const rInput = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    const isEmpty = (text || "").trim().length === 0;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        function selectAllIfEditing(event) {
            if (event.shapeId === shapeId) {
                rInput.current?.select?.();
            }
        }
        editor.on("select-all-text", selectAllIfEditing);
        return ()=>{
            editor.off("select-all-text", selectAllIfEditing);
        };
    }, [
        editor,
        shapeId,
        isEditing
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (!isEditing) return;
        if (document.activeElement !== rInput.current) {
            rInput.current?.focus();
        }
        if (editor.getInstanceState().isCoarsePointer) {
            rInput.current?.select();
        }
        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$globals$2f$environment$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tlenv"].isSafari) {
            rInput.current?.blur();
            rInput.current?.focus();
        }
    }, [
        editor,
        isEditing
    ]);
    const handleKeyDown = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((e)=>{
        if (editor.getEditingShapeId() !== shapeId) return;
        switch(e.key){
            case "Enter":
                {
                    if (e.ctrlKey || e.metaKey) {
                        editor.complete();
                    }
                    break;
                }
        }
    }, [
        editor,
        shapeId
    ]);
    const handleChange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(({ plaintext })=>{
        if (editor.getEditingShapeId() !== shapeId) return;
        const normalizedPlaintext = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$TextHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TextHelpers"].normalizeText(plaintext || "");
        editor.updateShape({
            id: shapeId,
            type,
            props: {
                text: normalizedPlaintext
            }
        });
    }, [
        editor,
        shapeId,
        type
    ]);
    return {
        rInput,
        handleKeyDown,
        handleChange,
        isEmpty,
        ...commonUseEditableTextHandlers
    };
}
function useIsReadyForEditing(editor, shapeId) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("isReadyForEditing", ()=>{
        const editingShapeId = editor.getEditingShapeId();
        return editingShapeId !== null && (editingShapeId === shapeId || editor.getHoveredShapeId() === shapeId);
    }, [
        editor,
        shapeId
    ]);
}
function useEditableTextCommon(shapeId) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const isEditing = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("isEditing", ()=>editor.getEditingShapeId() === shapeId, [
        editor
    ]);
    const isReadyForEditing = useIsReadyForEditing(editor, shapeId);
    const handleInputPointerDown = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((e)=>{
        editor.dispatch({
            ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$getPointerInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPointerInfo"])(e),
            type: "pointer",
            name: "pointer_down",
            target: "shape",
            shape: editor.getShape(shapeId)
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stopEventPropagation"])(e);
    }, [
        editor,
        shapeId
    ]);
    const handlePaste = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((e)=>{
        if (editor.getEditingShapeId() !== shapeId) return;
        if (e.clipboardData) {
            const html = e.clipboardData.getData("text/html");
            if (html) {
                if (html.includes("<div data-tldraw")) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["preventDefault"])(e);
                }
            }
        }
    }, [
        editor,
        shapeId
    ]);
    return {
        handleFocus: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$function$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["noop"],
        handleBlur: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$function$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["noop"],
        handleInputPointerDown,
        handleDoubleClick: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stopEventPropagation"],
        handlePaste,
        isEditing,
        isReadyForEditing
    };
}
const useEditableText = useEditablePlainText;
;
 //# sourceMappingURL=useEditablePlainText.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/PlainTextLabel.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "PlainTextLabel": (()=>PlainTextLabel),
    "TextLabel": (()=>TextLabel)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$text$2f$PlainTextArea$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/text/PlainTextArea.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$TextHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/TextHelpers.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$legacyProps$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/legacyProps.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useEditablePlainText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useEditablePlainText.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
;
const PlainTextLabel = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].memo(function PlainTextLabel2({ shapeId, type, text: plaintext, labelColor, font, fontSize, lineHeight, align, verticalAlign, wrap, isSelected, padding = 0, onKeyDown: handleKeyDownCustom, classNamePrefix, style, textWidth, textHeight }) {
    const { rInput, isEmpty, isEditing, isReadyForEditing, ...editableTextRest } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useEditablePlainText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditablePlainText"])(shapeId, type, plaintext);
    const finalPlainText = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$TextHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TextHelpers"].normalizeTextForDom(plaintext || "");
    const hasText = finalPlainText.length > 0;
    const legacyAlign = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$legacyProps$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isLegacyAlign"])(align);
    if (!isEditing && !hasText) {
        return null;
    }
    const cssPrefix = classNamePrefix || "tl-text";
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
        className: `${cssPrefix}-label tl-text-wrapper tl-plain-text-wrapper`,
        "aria-hidden": !isEditing,
        "data-font": font,
        "data-align": align,
        "data-hastext": !isEmpty,
        "data-isediting": isEditing,
        "data-is-ready-for-editing": isReadyForEditing,
        "data-textwrap": !!wrap,
        "data-isselected": isSelected,
        style: {
            justifyContent: align === "middle" || legacyAlign ? "center" : align,
            alignItems: verticalAlign === "middle" ? "center" : verticalAlign,
            padding,
            ...style
        },
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("div", {
            className: `${cssPrefix}-label__inner tl-text-content__wrapper`,
            style: {
                fontSize,
                lineHeight: lineHeight.toString(),
                minHeight: Math.floor(fontSize * lineHeight) + "px",
                minWidth: Math.ceil(textWidth || 0),
                color: labelColor,
                width: textWidth ? Math.ceil(textWidth) : void 0,
                height: textHeight ? Math.ceil(textHeight) : void 0
            },
            children: [
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
                    className: `${cssPrefix} tl-text tl-text-content`,
                    dir: "auto",
                    children: finalPlainText.split("\n").map((lineOfText, index)=>/* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
                            dir: "auto",
                            children: lineOfText
                        }, index))
                }),
                (isReadyForEditing || isSelected) && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$text$2f$PlainTextArea$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PlainTextArea"], {
                    ref: rInput,
                    text: plaintext,
                    isEditing,
                    shapeId,
                    ...editableTextRest,
                    handleKeyDown: handleKeyDownCustom ?? editableTextRest.handleKeyDown
                })
            ]
        })
    });
});
const TextLabel = PlainTextLabel;
;
 //# sourceMappingURL=PlainTextLabel.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useDefaultColorTheme.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useDefaultColorTheme": (()=>useDefaultColorTheme)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/styles/TLColorStyle.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useIsDarkMode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useIsDarkMode.mjs [app-ssr] (ecmascript)");
;
function useDefaultColorTheme() {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getDefaultColorTheme"])({
        isDarkMode: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useIsDarkMode$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useIsDarkMode"])()
    });
}
;
 //# sourceMappingURL=useDefaultColorTheme.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/defaultStyleDefs.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getFillDefForCanvas": (()=>getFillDefForCanvas),
    "getFillDefForExport": (()=>getFillDefForExport),
    "useGetHashPatternZoomName": (()=>useGetHashPatternZoomName)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/styles/TLColorStyle.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLFontStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/styles/TLFontStyle.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$debug$2d$flags$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/utils/debug-flags.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/array.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useSafeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useSafeId.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$globals$2f$environment$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/globals/environment.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useDefaultColorTheme.mjs [app-ssr] (ecmascript)");
;
;
;
;
function getFillDefForExport(fill) {
    return {
        key: `${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLFontStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DefaultFontStyle"].id}:${fill}`,
        async getElement () {
            if (fill !== "pattern") return null;
            return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(HashPatternForExport, {});
        }
    };
}
function HashPatternForExport() {
    const getHashPatternZoomName = useGetHashPatternZoomName();
    const maskId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useSafeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useUniqueSafeId"])();
    const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultColorTheme"])();
    const t = 8 / 12;
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("mask", {
                id: maskId,
                children: [
                    /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
                        x: "0",
                        y: "0",
                        width: "8",
                        height: "8",
                        fill: "white"
                    }),
                    /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("g", {
                        strokeLinecap: "round",
                        stroke: "black",
                        children: [
                            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("line", {
                                x1: t * 1,
                                y1: t * 3,
                                x2: t * 3,
                                y2: t * 1
                            }),
                            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("line", {
                                x1: t * 5,
                                y1: t * 7,
                                x2: t * 7,
                                y2: t * 5
                            }),
                            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("line", {
                                x1: t * 9,
                                y1: t * 11,
                                x2: t * 11,
                                y2: t * 9
                            })
                        ]
                    })
                ]
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("pattern", {
                id: getHashPatternZoomName(1, theme.id),
                width: "8",
                height: "8",
                patternUnits: "userSpaceOnUse",
                children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
                    x: "0",
                    y: "0",
                    width: "8",
                    height: "8",
                    fill: theme.solid,
                    mask: `url(#${maskId})`
                })
            })
        ]
    });
}
function getFillDefForCanvas() {
    return {
        key: `${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLFontStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DefaultFontStyle"].id}:pattern`,
        component: PatternFillDefForCanvas
    };
}
const TILE_PATTERN_SIZE = 8;
const generateImage = (dpr, currentZoom, darkMode)=>{
    return new Promise((resolve, reject)=>{
        const size = TILE_PATTERN_SIZE * currentZoom * dpr;
        const canvasEl = document.createElement("canvas");
        canvasEl.width = size;
        canvasEl.height = size;
        const ctx = canvasEl.getContext("2d");
        if (!ctx) return;
        ctx.fillStyle = darkMode ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DefaultColorThemePalette"].darkMode.solid : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DefaultColorThemePalette"].lightMode.solid;
        ctx.fillRect(0, 0, size, size);
        ctx.globalCompositeOperation = "destination-out";
        ctx.lineCap = "round";
        ctx.lineWidth = 1.25 * currentZoom * dpr;
        const t = 8 / 12;
        const s = (v)=>v * currentZoom * dpr;
        ctx.beginPath();
        ctx.moveTo(s(t * 1), s(t * 3));
        ctx.lineTo(s(t * 3), s(t * 1));
        ctx.moveTo(s(t * 5), s(t * 7));
        ctx.lineTo(s(t * 7), s(t * 5));
        ctx.moveTo(s(t * 9), s(t * 11));
        ctx.lineTo(s(t * 11), s(t * 9));
        ctx.stroke();
        canvasEl.toBlob((blob)=>{
            if (!blob || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$debug$2d$flags$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["debugFlags"].throwToBlob.get()) {
                reject();
            } else {
                resolve(blob);
            }
        });
    });
};
const canvasBlob = (size, fn)=>{
    const canvas = document.createElement("canvas");
    canvas.width = size[0];
    canvas.height = size[1];
    const ctx = canvas.getContext("2d");
    if (!ctx) return "";
    fn(ctx);
    return canvas.toDataURL();
};
let defaultPixels = null;
function getDefaultPixels() {
    if (!defaultPixels) {
        defaultPixels = {
            white: canvasBlob([
                1,
                1
            ], (ctx)=>{
                ctx.fillStyle = "#f8f9fa";
                ctx.fillRect(0, 0, 1, 1);
            }),
            black: canvasBlob([
                1,
                1
            ], (ctx)=>{
                ctx.fillStyle = "#212529";
                ctx.fillRect(0, 0, 1, 1);
            })
        };
    }
    return defaultPixels;
}
function getPatternLodForZoomLevel(zoom) {
    return Math.ceil(Math.log2(Math.max(1, zoom)));
}
function useGetHashPatternZoomName() {
    const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useSafeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSharedSafeId"])("hash_pattern");
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((zoom, theme)=>{
        const lod = getPatternLodForZoomLevel(zoom);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useSafeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["suffixSafeId"])(id, `${theme}_${lod}`);
    }, [
        id
    ]);
}
function getPatternLodsToGenerate(maxZoom) {
    const levels = [];
    const minLod = 0;
    const maxLod = getPatternLodForZoomLevel(maxZoom);
    for(let i = minLod; i <= maxLod; i++){
        levels.push(Math.pow(2, i));
    }
    return levels;
}
function getDefaultPatterns(maxZoom) {
    const defaultPixels2 = getDefaultPixels();
    return getPatternLodsToGenerate(maxZoom).flatMap((zoom)=>[
            {
                zoom,
                url: defaultPixels2.white,
                theme: "light"
            },
            {
                zoom,
                url: defaultPixels2.black,
                theme: "dark"
            }
        ]);
}
function usePattern() {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const dpr = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("devicePixelRatio", ()=>editor.getInstanceState().devicePixelRatio, [
        editor
    ]);
    const maxZoom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("maxZoom", ()=>Math.ceil((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["last"])(editor.getCameraOptions().zoomSteps)), [
        editor
    ]);
    const [isReady, setIsReady] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(false);
    const [backgroundUrls, setBackgroundUrls] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(()=>getDefaultPatterns(maxZoom));
    const getHashPatternZoomName = useGetHashPatternZoomName();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if ("TURBOPACK compile-time falsy", 0) {
            "TURBOPACK unreachable";
        }
        const promise = Promise.all(getPatternLodsToGenerate(maxZoom).flatMap((zoom)=>[
                generateImage(dpr, zoom, false).then((blob)=>({
                        zoom,
                        theme: "light",
                        url: URL.createObjectURL(blob)
                    })),
                generateImage(dpr, zoom, true).then((blob)=>({
                        zoom,
                        theme: "dark",
                        url: URL.createObjectURL(blob)
                    }))
            ]));
        let isCancelled = false;
        promise.then((urls)=>{
            if (isCancelled) return;
            setBackgroundUrls(urls);
            setIsReady(true);
        });
        return ()=>{
            isCancelled = true;
            setIsReady(false);
            promise.then((patterns)=>{
                for (const { url } of patterns){
                    URL.revokeObjectURL(url);
                }
            });
        };
    }, [
        dpr,
        maxZoom
    ]);
    const defs = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
        children: backgroundUrls.map((item)=>{
            const id = getHashPatternZoomName(item.zoom, item.theme);
            return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("pattern", {
                id,
                width: TILE_PATTERN_SIZE,
                height: TILE_PATTERN_SIZE,
                patternUnits: "userSpaceOnUse",
                children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("image", {
                    href: item.url,
                    width: TILE_PATTERN_SIZE,
                    height: TILE_PATTERN_SIZE
                })
            }, id);
        })
    });
    return {
        defs,
        isReady
    };
}
function PatternFillDefForCanvas() {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const containerRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    const { defs, isReady } = usePattern();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (isReady && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$globals$2f$environment$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tlenv"].isSafari) {
            const htmlLayer = findHtmlLayerParent(containerRef.current);
            if (htmlLayer) {
                editor.timers.requestAnimationFrame(()=>{
                    htmlLayer.style.display = "none";
                    editor.timers.requestAnimationFrame(()=>{
                        htmlLayer.style.display = "";
                    });
                });
            }
        }
    }, [
        editor,
        isReady
    ]);
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("g", {
        ref: containerRef,
        "data-testid": isReady ? "ready-pattern-fill-defs" : void 0,
        children: defs
    });
}
function findHtmlLayerParent(element) {
    if (element.classList.contains("tl-html-layer")) return element;
    if (element.parentElement) return findHtmlLayerParent(element.parentElement);
    return null;
}
;
 //# sourceMappingURL=defaultStyleDefs.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/ShapeFill.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "PatternFill": (()=>PatternFill),
    "ShapeFill": (()=>ShapeFill)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$types$2f$SvgExportContext$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/types/SvgExportContext.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$defaultStyleDefs$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/defaultStyleDefs.mjs [app-ssr] (ecmascript)");
;
;
;
;
const ShapeFill = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].memo(function ShapeFill2({ theme, d, color, fill, scale }) {
    switch(fill){
        case "none":
            {
                return null;
            }
        case "solid":
            {
                return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
                    fill: theme[color].semi,
                    d
                });
            }
        case "semi":
            {
                return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
                    fill: theme.solid,
                    d
                });
            }
        case "fill":
            {
                return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
                    fill: theme[color].fill,
                    d
                });
            }
        case "pattern":
            {
                return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(PatternFill, {
                    theme,
                    color,
                    fill,
                    d,
                    scale
                });
            }
    }
});
function PatternFill({ d, color, theme }) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const svgExport = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$types$2f$SvgExportContext$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSvgExportContext"])();
    const zoomLevel = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("zoomLevel", ()=>editor.getZoomLevel(), [
        editor
    ]);
    const getHashPatternZoomName = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$defaultStyleDefs$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useGetHashPatternZoomName"])();
    const teenyTiny = editor.getZoomLevel() <= 0.18;
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
                fill: theme[color].pattern,
                d
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
                fill: svgExport ? `url(#${getHashPatternZoomName(1, theme.id)})` : teenyTiny ? theme[color].semi : `url(#${getHashPatternZoomName(zoomLevel, theme.id)})`,
                d
            })
        ]
    });
}
;
 //# sourceMappingURL=ShapeFill.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/createTextJsxFromSpans.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createTextJsxFromSpans": (()=>createTextJsxFromSpans)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Box.mjs [app-ssr] (ecmascript)");
;
;
function correctSpacesToNbsp(input) {
    return input.replace(/\s/g, "\xA0");
}
function createTextJsxFromSpans(editor, spans, opts) {
    const { padding = 0 } = opts;
    if (spans.length === 0) return null;
    const bounds = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"].From(spans[0].box);
    for (const { box } of spans){
        bounds.union(box);
    }
    const offsetX = padding + (opts.offsetX ?? 0);
    const offsetY = (opts.offsetY ?? 0) + opts.fontSize / 2 + (opts.verticalTextAlign === "start" ? padding : opts.verticalTextAlign === "end" ? opts.height - padding - bounds.height : (Math.ceil(opts.height) - bounds.height) / 2);
    let currentLineTop = null;
    const children = [];
    for (const { text, box } of spans){
        const didBreakLine = currentLineTop !== null && box.y > currentLineTop;
        if (didBreakLine) {
            children.push(/* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("tspan", {
                alignmentBaseline: "mathematical",
                x: offsetX,
                y: box.y + offsetY,
                children: "\n"
            }, children.length));
        }
        children.push(/* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("tspan", {
            alignmentBaseline: "mathematical",
            x: box.x + offsetX,
            y: box.y + offsetY,
            unicodeBidi: "plaintext",
            children: correctSpacesToNbsp(text)
        }, children.length));
        currentLineTop = box.y;
    }
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("text", {
        fontSize: opts.fontSize,
        fontFamily: opts.fontFamily,
        fontStyle: opts.fontStyle,
        fontWeight: opts.fontWeight,
        dominantBaseline: "mathematical",
        alignmentBaseline: "mathematical",
        stroke: opts.stroke,
        strokeWidth: opts.strokeWidth,
        fill: opts.fill,
        children
    });
}
;
 //# sourceMappingURL=createTextJsxFromSpans.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/SvgTextLabel.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "SvgTextLabel": (()=>SvgTextLabel)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLFontStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/styles/TLFontStyle.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$createTextJsxFromSpans$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/createTextJsxFromSpans.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/default-shape-constants.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$legacyProps$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/legacyProps.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useDefaultColorTheme.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
;
function SvgTextLabel({ fontSize, font, align, verticalAlign, text, labelColor, bounds, padding = 16, stroke = true, showTextOutline = true }) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultColorTheme"])();
    const opts = {
        fontSize,
        fontFamily: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLFontStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DefaultFontFamilies"][font],
        textAlign: align,
        verticalTextAlign: verticalAlign,
        width: Math.ceil(bounds.width),
        height: Math.ceil(bounds.height),
        padding,
        lineHeight: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TEXT_PROPS"].lineHeight,
        fontStyle: "normal",
        fontWeight: "normal",
        overflow: "wrap",
        offsetX: 0,
        offsetY: 0,
        fill: labelColor,
        stroke: void 0,
        strokeWidth: void 0
    };
    const spans = editor.textMeasure.measureTextSpans(text, opts);
    const offsetX = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$legacyProps$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getLegacyOffsetX"])(align, padding, spans, bounds.width);
    if (offsetX) {
        opts.offsetX = offsetX;
    }
    opts.offsetX += bounds.x;
    opts.offsetY += bounds.y;
    const mainSpans = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$createTextJsxFromSpans$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createTextJsxFromSpans"])(editor, spans, opts);
    let outlineSpans = null;
    if (showTextOutline && stroke) {
        opts.fill = theme.background;
        opts.stroke = theme.background;
        opts.strokeWidth = 3;
        outlineSpans = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$createTextJsxFromSpans$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createTextJsxFromSpans"])(editor, spans, opts);
    }
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            outlineSpans,
            mainSpans
        ]
    });
}
;
 //# sourceMappingURL=SvgTextLabel.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/ArrowPath.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getArrowBodyPath": (()=>getArrowBodyPath),
    "getArrowHandlePath": (()=>getArrowHandlePath)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/PathBuilder.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$getElbowArrowInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/getElbowArrowInfo.mjs [app-ssr] (ecmascript)");
;
;
;
function getArrowBodyPath(shape, info, opts) {
    switch(info.type){
        case "straight":
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(info.start.point.x, info.start.point.y, {
                offset: 0,
                roundness: 0
            }).lineTo(info.end.point.x, info.end.point.y, {
                offset: 0,
                roundness: 0
            }).toSvg(opts);
        case "arc":
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(info.start.point.x, info.start.point.y, {
                offset: 0,
                roundness: 0
            }).circularArcTo(info.bodyArc.radius, !!info.bodyArc.largeArcFlag, !!info.bodyArc.sweepFlag, info.end.point.x, info.end.point.y, {
                offset: 0,
                roundness: 0
            }).toSvg(opts);
        case "elbow":
            {
                const path = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]();
                path.moveTo(info.start.point.x, info.start.point.y, {
                    offset: 0
                });
                for(let i = 1; i < info.route.points.length; i++){
                    const point = info.route.points[i];
                    if (info.route.skipPointsWhenDrawing.has(point)) {
                        continue;
                    }
                    path.lineTo(point.x, point.y, {
                        offset: i === info.route.points.length - 1 ? 0 : void 0
                    });
                }
                return path.toSvg(opts);
            }
        default:
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(info, "type");
    }
}
function getArrowHandlePath(info, opts) {
    switch(info.type){
        case "straight":
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(info.start.handle.x, info.start.handle.y).lineTo(info.end.handle.x, info.end.handle.y).toSvg(opts);
        case "arc":
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(info.start.handle.x, info.start.handle.y).circularArcTo(info.handleArc.radius, !!info.handleArc.largeArcFlag, !!info.handleArc.sweepFlag, info.end.handle.x, info.end.handle.y).toSvg(opts);
        case "elbow":
            {
                const handleRoute = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$getElbowArrowInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getRouteHandlePath"])(info.elbow, info.route);
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"].lineThroughPoints(handleRoute.points).toSvg(opts);
            }
        default:
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(info, "type");
    }
}
;
 //# sourceMappingURL=ArrowPath.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/arrowLabel.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getArrowBodyGeometry": (()=>getArrowBodyGeometry),
    "getArrowLabelDefaultPosition": (()=>getArrowLabelDefaultPosition),
    "getArrowLabelFontSize": (()=>getArrowLabelFontSize),
    "getArrowLabelPosition": (()=>getArrowLabelPosition)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Arc2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Arc2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Box.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Circle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Circle2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Edge2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Edge2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Group2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Group2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Polygon2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Polygon2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Polyline2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Polyline2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$store$2f$dist$2d$esm$2f$lib$2f$Store$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/store/dist-esm/lib/Store.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/object.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/default-shape-constants.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/shared.mjs [app-ssr] (ecmascript)");
;
;
;
function getArrowBodyGeometry(editor, shape) {
    const info = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowInfo"])(editor, shape);
    switch(info.type){
        case "straight":
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Edge2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Edge2d"]({
                start: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(info.start.point),
                end: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(info.end.point)
            });
        case "arc":
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Arc2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Arc2d"]({
                center: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Cast(info.handleArc.center),
                start: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Cast(info.start.point),
                end: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Cast(info.end.point),
                sweepFlag: info.bodyArc.sweepFlag,
                largeArcFlag: info.bodyArc.largeArcFlag
            });
        case "elbow":
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Polyline2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Polyline2d"]({
                points: info.route.points
            });
        default:
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(info, "type");
    }
}
const labelSizeCache = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$store$2f$dist$2d$esm$2f$lib$2f$Store$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createComputedCache"])("arrow label size", (editor, shape)=>{
    editor.fonts.trackFontsForShape(shape);
    let width = 0;
    let height = 0;
    const bodyGeom = getArrowBodyGeometry(editor, shape);
    const text = shape.props.text || "i";
    const bodyBounds = bodyGeom.bounds;
    const fontSize = getArrowLabelFontSize(shape);
    const { w, h } = editor.textMeasure.measureText(text, {
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TEXT_PROPS"],
        fontFamily: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FONT_FAMILIES"][shape.props.font],
        fontSize,
        maxWidth: null
    });
    width = w;
    height = h;
    let shouldSquish = false;
    const info = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowInfo"])(editor, shape);
    const labelToArrowPadding = getLabelToArrowPadding(shape);
    const margin = info.type === "elbow" ? Math.max(info.elbow.A.arrowheadOffset + labelToArrowPadding, 32) + Math.max(info.elbow.B.arrowheadOffset + labelToArrowPadding, 32) : 64;
    if (bodyBounds.width > bodyBounds.height) {
        width = Math.max(Math.min(w, margin), Math.min(bodyBounds.width - margin, w));
        shouldSquish = true;
    } else if (width > 16 * fontSize) {
        width = 16 * fontSize;
        shouldSquish = true;
    }
    if (shouldSquish) {
        const { w: squishedWidth, h: squishedHeight } = editor.textMeasure.measureText(text, {
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TEXT_PROPS"],
            fontFamily: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FONT_FAMILIES"][shape.props.font],
            fontSize,
            maxWidth: width
        });
        width = squishedWidth;
        height = squishedHeight;
    }
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](width, height).addScalar(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ARROW_LABEL_PADDING"] * 2 * shape.props.scale);
}, {
    areRecordsEqual: (a, b)=>{
        if (a.props === b.props) return true;
        const changedKeys = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getChangedKeys"])(a.props, b.props);
        return changedKeys.length === 1 && changedKeys[0] === "labelPosition";
    }
});
function getArrowLabelSize(editor, shape) {
    return labelSizeCache.get(editor, shape.id) ?? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](0, 0);
}
function getLabelToArrowPadding(shape) {
    const strokeWidth = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape.props.size];
    const labelToArrowPadding = (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_TO_ARROW_PADDING"] + (strokeWidth - __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"].s) * 2 + (strokeWidth === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"].xl ? 20 : 0)) * shape.props.scale;
    return labelToArrowPadding;
}
function getArrowLabelRange(editor, shape, info) {
    const bodyGeom = getArrowBodyGeometry(editor, shape);
    const dbgPoints = [];
    const dbg = [
        new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Group2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Group2d"]({
            children: [
                bodyGeom
            ],
            debugColor: "lime"
        })
    ];
    const labelSize = getArrowLabelSize(editor, shape);
    const labelToArrowPadding = getLabelToArrowPadding(shape);
    const paddingRelative = labelToArrowPadding / bodyGeom.length;
    let startBox, endBox;
    if (info.type === "elbow") {
        dbgPoints.push(info.start.point, info.end.point);
        startBox = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"].FromCenter(info.start.point, labelSize).expandBy(labelToArrowPadding);
        endBox = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"].FromCenter(info.end.point, labelSize).expandBy(labelToArrowPadding);
    } else {
        const startPoint = bodyGeom.interpolateAlongEdge(paddingRelative);
        const endPoint = bodyGeom.interpolateAlongEdge(1 - paddingRelative);
        dbgPoints.push(startPoint, endPoint);
        startBox = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"].FromCenter(startPoint, labelSize);
        endBox = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"].FromCenter(endPoint, labelSize);
    }
    const startIntersections = bodyGeom.intersectPolygon(startBox.corners);
    const endIntersections = bodyGeom.intersectPolygon(endBox.corners);
    const startConstrained = furthest(info.start.point, startIntersections);
    const endConstrained = furthest(info.end.point, endIntersections);
    let startRelative = startConstrained ? bodyGeom.uninterpolateAlongEdge(startConstrained) : 0.5;
    let endRelative = endConstrained ? bodyGeom.uninterpolateAlongEdge(endConstrained) : 0.5;
    if (startRelative > endRelative) {
        startRelative = 0.5;
        endRelative = 0.5;
    }
    for (const pt of [
        ...startIntersections,
        ...endIntersections,
        ...dbgPoints
    ]){
        dbg.push(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Circle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Circle2d"]({
            x: pt.x - 3,
            y: pt.y - 3,
            radius: 3,
            isFilled: false,
            debugColor: "magenta",
            ignore: true
        }));
    }
    dbg.push(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Polygon2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Polygon2d"]({
        points: startBox.corners,
        debugColor: "lime",
        isFilled: false,
        ignore: true
    }), new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Polygon2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Polygon2d"]({
        points: endBox.corners,
        debugColor: "lime",
        isFilled: false,
        ignore: true
    }));
    return {
        start: startRelative,
        end: endRelative,
        dbg
    };
}
function getArrowLabelPosition(editor, shape) {
    const debugGeom = [];
    const info = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowInfo"])(editor, shape);
    const arrowheadInfo = {
        hasStartBinding: !!info.bindings.start,
        hasEndBinding: !!info.bindings.end,
        hasStartArrowhead: info.start.arrowhead !== "none",
        hasEndArrowhead: info.end.arrowhead !== "none"
    };
    const range = getArrowLabelRange(editor, shape, info);
    if (range.dbg) debugGeom.push(...range.dbg);
    const clampedPosition = getClampedPosition(shape, range, arrowheadInfo);
    const bodyGeom = getArrowBodyGeometry(editor, shape);
    const labelCenter = bodyGeom.interpolateAlongEdge(clampedPosition);
    const labelSize = getArrowLabelSize(editor, shape);
    return {
        box: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"].FromCenter(labelCenter, labelSize),
        debugGeom
    };
}
function getClampedPosition(shape, range, arrowheadInfo) {
    const { hasEndArrowhead, hasEndBinding, hasStartBinding, hasStartArrowhead } = arrowheadInfo;
    const clampedPosition = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(shape.props.labelPosition, hasStartArrowhead || hasStartBinding ? range.start : 0, hasEndArrowhead || hasEndBinding ? range.end : 1);
    return clampedPosition;
}
function furthest(from, candidates) {
    let furthest2 = null;
    let furthestDist = -Infinity;
    for (const candidate of candidates){
        const dist = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(from, candidate);
        if (dist > furthestDist) {
            furthest2 = candidate;
            furthestDist = dist;
        }
    }
    return furthest2;
}
function getArrowLabelFontSize(shape) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ARROW_LABEL_FONT_SIZES"][shape.props.size] * shape.props.scale;
}
function getArrowLabelDefaultPosition(editor, shape) {
    const info = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowInfo"])(editor, shape);
    switch(info.type){
        case "straight":
        case "arc":
            return 0.5;
        case "elbow":
            {
                const midpointHandle = info.route.midpointHandle;
                const bodyGeom = getArrowBodyGeometry(editor, shape);
                if (midpointHandle && bodyGeom) {
                    return bodyGeom.uninterpolateAlongEdge(midpointHandle.point);
                }
                return 0.5;
            }
        default:
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(info, "type");
    }
}
;
 //# sourceMappingURL=arrowLabel.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/arrowheads.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getArrowheadPathForType": (()=>getArrowheadPathForType)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$intersect$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/intersect.mjs [app-ssr] (ecmascript)");
;
function getArrowPoints(info, side, strokeWidth) {
    const point = side === "end" ? info.end.point : info.start.point;
    let int;
    switch(info.type){
        case "straight":
            {
                const opposite = side === "end" ? info.start.point : info.end.point;
                const compareLength = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(opposite, point);
                const length = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(compareLength / 5, strokeWidth, strokeWidth * 3);
                int = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Nudge(point, opposite, length);
                break;
            }
        case "arc":
            {
                const compareLength = Math.abs(info.bodyArc.length);
                const length = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(compareLength / 5, strokeWidth, strokeWidth * 3);
                const intersections = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$intersect$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["intersectCircleCircle"])(point, length, info.handleArc.center, info.handleArc.radius);
                int = side === "end" ? info.handleArc.sweepFlag ? intersections[0] : intersections[1] : info.handleArc.sweepFlag ? intersections[1] : intersections[0];
                break;
            }
        case "elbow":
            {
                const previousPoint = side === "end" ? info.route.points[info.route.points.length - 2] : info.route.points[1];
                const previousSegmentLength = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].ManhattanDist(previousPoint, point);
                const length = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(previousSegmentLength / 2, strokeWidth, strokeWidth * 3);
                int = previousPoint ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Nudge(point, previousPoint, length) : point;
                break;
            }
        default:
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(info, "type");
    }
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].IsNaN(int)) {
        int = point;
    }
    return {
        point,
        int
    };
}
function getArrowhead({ point, int }) {
    const PL = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].RotWith(int, point, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"] / 6);
    const PR = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].RotWith(int, point, -__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"] / 6);
    return `M ${PL.x} ${PL.y} L ${point.x} ${point.y} L ${PR.x} ${PR.y}`;
}
function getTriangleHead({ point, int }) {
    const PL = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].RotWith(int, point, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"] / 6);
    const PR = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].RotWith(int, point, -__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"] / 6);
    return `M ${PL.x} ${PL.y} L ${PR.x} ${PR.y} L ${point.x} ${point.y} Z`;
}
function getInvertedTriangleHead({ point, int }) {
    const d = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(int, point).div(2);
    const PL = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(point, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Rot(d, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HALF_PI"]));
    const PR = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(point, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Rot(d, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HALF_PI"]));
    return `M ${PL.x} ${PL.y} L ${int.x} ${int.y} L ${PR.x} ${PR.y} Z`;
}
function getDotHead({ point, int }) {
    const A = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Lrp(point, int, 0.45);
    const r = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(A, point);
    return `M ${A.x - r},${A.y}
  a ${r},${r} 0 1,0 ${r * 2},0
  a ${r},${r} 0 1,0 -${r * 2},0 `;
}
function getDiamondHead({ point, int }) {
    const PB = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Lrp(point, int, 0.75);
    const PL = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].RotWith(PB, point, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"] / 4);
    const PR = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].RotWith(PB, point, -__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"] / 4);
    const PQ = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Lrp(PL, PR, 0.5);
    PQ.add(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(PQ, point));
    return `M ${PQ.x} ${PQ.y} L ${PR.x} ${PR.y} ${point.x} ${point.y} L ${PL.x} ${PL.y} Z`;
}
function getSquareHead({ int, point }) {
    const PB = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Lrp(point, int, 0.85);
    const d = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(PB, point).div(2);
    const PL1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(point, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Rot(d, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HALF_PI"]));
    const PR1 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(point, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Rot(d, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HALF_PI"]));
    const PL2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(PB, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Rot(d, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HALF_PI"]));
    const PR2 = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(PB, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Rot(d, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HALF_PI"]));
    return `M ${PL1.x} ${PL1.y} L ${PL2.x} ${PL2.y} L ${PR2.x} ${PR2.y} L ${PR1.x} ${PR1.y} Z`;
}
function getBarHead({ int, point }) {
    const d = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(int, point).div(2);
    const PL = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(point, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Rot(d, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HALF_PI"]));
    const PR = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(point, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Rot(d, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HALF_PI"]));
    return `M ${PL.x} ${PL.y} L ${PR.x} ${PR.y}`;
}
function getArrowheadPathForType(info, side, strokeWidth) {
    const type = side === "end" ? info.end.arrowhead : info.start.arrowhead;
    if (type === "none") return;
    const points = getArrowPoints(info, side, strokeWidth);
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    switch(type){
        case "bar":
            return getBarHead(points);
        case "square":
            return getSquareHead(points);
        case "diamond":
            return getDiamondHead(points);
        case "dot":
            return getDotHead(points);
        case "inverted":
            return getInvertedTriangleHead(points);
        case "arrow":
            return getArrowhead(points);
        case "triangle":
            return getTriangleHead(points);
    }
    return "";
}
;
 //# sourceMappingURL=arrowheads.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/ElbowArrowDebug.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ElbowArrowDebug": (()=>ElbowArrowDebug)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Box.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/shared.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$getElbowArrowInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/getElbowArrowInfo.mjs [app-ssr] (ecmascript)");
;
;
;
;
function ElbowArrowDebug({ arrow }) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const info = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("elbow arrow grid", ()=>{
        try {
            const info2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$getElbowArrowInfo$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getElbowArrowInfo"])(editor, editor.getShape(arrow.id), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowBindings"])(editor, arrow));
            return info2;
        } catch (err) {
            console.error(err);
            return void 0;
        }
    }, [
        editor,
        arrow.id
    ]);
    if (!info) return null;
    const fullBox = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"].Common([
        info.A.original,
        info.B.original
    ]).expandBy(50);
    const label = info.route?.name ?? "";
    const midPoint = info.route?.midpointHandle;
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            info.midX !== null && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugLine, {
                a: {
                    x: info.midX,
                    y: fullBox.minY
                },
                b: {
                    x: info.midX,
                    y: fullBox.maxY
                },
                stroke: "red"
            }),
            info.midY !== null && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugLine, {
                a: {
                    x: fullBox.minX,
                    y: info.midY
                },
                b: {
                    x: fullBox.maxX,
                    y: info.midY
                },
                stroke: "blue"
            }),
            midPoint?.axis === "x" && info.midXRange && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugLine, {
                a: {
                    x: info.midXRange.lo,
                    y: midPoint.point.y
                },
                b: {
                    x: info.midXRange.hi,
                    y: midPoint.point.y
                },
                stroke: "red",
                strokeDasharray: "0 2"
            }),
            midPoint?.axis === "y" && info.midYRange && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugLine, {
                a: {
                    x: midPoint.point.x,
                    y: info.midYRange.lo
                },
                b: {
                    x: midPoint.point.x,
                    y: info.midYRange.hi
                },
                stroke: "blue",
                strokeDasharray: "0 2"
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugBox, {
                box: info.A.original,
                stroke: "orange"
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugBox, {
                box: info.A.expanded,
                stroke: "orange",
                strokeWidth: 0.5
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugBox, {
                box: info.A.original.clone().expandBy(info.options.minElbowLegLength),
                stroke: "orange",
                strokeWidth: 0.5
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugBox, {
                box: info.B.original,
                stroke: "lightskyblue"
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugBox, {
                box: info.B.expanded,
                stroke: "lightskyblue",
                strokeWidth: 0.5
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugBox, {
                box: info.B.original.clone().expandBy(info.options.minElbowLegLength),
                stroke: "lightskyblue",
                strokeWidth: 0.5
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugEdge, {
                edge: info.A.edges.top,
                axis: "x",
                stroke: "orange"
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugEdge, {
                edge: info.B.edges.top,
                axis: "x",
                stroke: "lightskyblue"
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugEdge, {
                edge: info.A.edges.right,
                axis: "y",
                stroke: "orange"
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugEdge, {
                edge: info.B.edges.right,
                axis: "y",
                stroke: "lightskyblue"
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugEdge, {
                edge: info.A.edges.bottom,
                axis: "x",
                stroke: "orange"
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugEdge, {
                edge: info.B.edges.bottom,
                axis: "x",
                stroke: "lightskyblue"
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugEdge, {
                edge: info.A.edges.left,
                axis: "y",
                stroke: "orange"
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugEdge, {
                edge: info.B.edges.left,
                axis: "y",
                stroke: "lightskyblue"
            }),
            info.route && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugRoute, {
                route: info.route.points,
                strokeWidth: 10
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("text", {
                x: fullBox.minX + 5,
                y: fullBox.minY - 3,
                fontSize: 10,
                fill: "black",
                stroke: "var(--color-background)",
                strokeWidth: 2,
                paintOrder: "stroke",
                children: label
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("text", {
                x: info.A.expanded.x,
                y: info.A.expanded.y,
                fontSize: 10,
                fill: "black",
                stroke: "var(--color-background)",
                strokeWidth: 2,
                paintOrder: "stroke",
                children: [
                    "A",
                    info.route && `, ${info.route.aEdgePicking}`,
                    info.A.isPoint && `, point`
                ]
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("text", {
                x: info.B.expanded.x,
                y: info.B.expanded.y,
                fontSize: 10,
                fill: "black",
                stroke: "var(--color-background)",
                strokeWidth: 2,
                paintOrder: "stroke",
                children: [
                    "B",
                    info.route && `, ${info.route.bEdgePicking}`,
                    info.B.isPoint && `, point`
                ]
            })
        ]
    });
}
function DebugLine({ a, b, ...props }) {
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("line", {
        fill: "none",
        strokeWidth: 1,
        strokeDasharray: "4,4",
        stroke: "green",
        x1: a.x,
        y1: a.y,
        x2: b.x,
        y2: b.y,
        ...props
    });
}
function DebugRoute({ route, ...props }) {
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("polyline", {
        fill: "none",
        stroke: "darkorchid",
        strokeWidth: 3,
        opacity: 0.5,
        points: route.map((r)=>`${r.x},${r.y}`).join(" "),
        ...props
    });
}
function DebugEdge({ edge, axis, ...props }) {
    if (!edge || edge.expanded === null) return null;
    const vec = (vec2)=>axis === "x" ? {
            x: vec2.y,
            y: vec2.x
        } : vec2;
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("g", {
        children: [
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugLine, {
                a: vec({
                    x: edge.expanded,
                    y: edge.cross.min
                }),
                b: vec({
                    x: edge.expanded,
                    y: edge.cross.max
                }),
                strokeDasharray: "0",
                strokeWidth: 1.5,
                ...props
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugLine, {
                a: vec({
                    x: edge.expanded - 4,
                    y: edge.cross.min
                }),
                b: vec({
                    x: edge.expanded + 4,
                    y: edge.cross.min
                }),
                strokeDasharray: "0",
                strokeWidth: 1.5,
                ...props
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DebugLine, {
                a: vec({
                    x: edge.expanded - 4,
                    y: edge.cross.max
                }),
                b: vec({
                    x: edge.expanded + 4,
                    y: edge.cross.max
                }),
                strokeDasharray: "0",
                strokeWidth: 1.5,
                ...props
            })
        ]
    });
}
function DebugBox({ box, ...props }) {
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
        x: box.minX,
        y: box.minY,
        width: box.width,
        height: box.height,
        strokeDasharray: "4,4",
        strokeWidth: 1,
        fill: "none",
        ...props
    });
}
;
 //# sourceMappingURL=ElbowArrowDebug.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/elbowArrowSnapLines.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getElbowArrowSnapLines": (()=>getElbowArrowSnapLines),
    "perpDistanceToLine": (()=>perpDistanceToLine),
    "perpDistanceToLineAngle": (()=>perpDistanceToLineAngle)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Computed$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/Computed.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/cache.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/shared.mjs [app-ssr] (ecmascript)");
;
;
const snapLinesStore = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WeakCache"]();
function getElbowArrowSnapLines(editor) {
    return snapLinesStore.get(editor, (editor2)=>{
        const currentSelectedArrowShape = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Computed$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["computed"])("current selected arrow shape", ()=>{
            const shape = editor2.getOnlySelectedShape();
            if (!shape || !editor2.isShapeOfType(shape, "arrow")) return null;
            return shape.id;
        });
        const unselectedArrowShapeIds = editor2.store.query.ids("shape", ()=>{
            const activeArrowShapeId = currentSelectedArrowShape.get();
            if (!activeArrowShapeId) return {
                type: {
                    eq: "arrow"
                }
            };
            return {
                type: {
                    eq: "arrow"
                },
                id: {
                    neq: activeArrowShapeId
                }
            };
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$Computed$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["computed"])("elbow arrow snap lines", ()=>{
            const result = /* @__PURE__ */ new Map();
            const currentPageShapeIds = editor2.getCurrentPageShapeIds();
            const viewportBounds = editor2.getViewportPageBounds();
            for (const id of unselectedArrowShapeIds.get()){
                if (!currentPageShapeIds.has(id)) continue;
                const shape = editor2.getShape(id);
                if (shape?.type !== "arrow") continue;
                const shapeBounds = editor2.getShapePageBounds(id);
                if (!shapeBounds || !viewportBounds.includes(shapeBounds)) continue;
                const bindings = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowBindings"])(editor2, shape);
                const pageTransform = editor2.getShapePageTransform(id);
                if (!pageTransform) continue;
                const geometry = editor2.getShapeGeometry(id);
                const pageVertices = pageTransform.applyToPoints(geometry.vertices);
                for(let i = 1; i < pageVertices.length; i++){
                    const prev = pageVertices[i - 1];
                    const curr = pageVertices[i];
                    let angle = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Angle(prev, curr);
                    if (angle < 0) angle += Math.PI;
                    let set = result.get(angle);
                    if (!set) {
                        set = /* @__PURE__ */ new Set();
                        result.set(angle, set);
                    }
                    const perpDistance = perpDistanceToLineAngle(prev, angle);
                    set.add({
                        perpDistance,
                        startBoundShapeId: bindings.start?.toId,
                        endBoundShapeId: bindings.end?.toId
                    });
                }
            }
            return result;
        });
    }).get();
}
function perpDistanceToLineAngle(pointOnLine, lineAngle) {
    const perpDir = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].FromAngle(lineAngle).per();
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dpr(pointOnLine, perpDir);
}
function perpDistanceToLine(A, B) {
    return perpDistanceToLineAngle(A, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Angle(A, B));
}
;
 //# sourceMappingURL=elbowArrowSnapLines.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/ArrowShapeUtil.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ArrowShapeUtil": (()=>ArrowShapeUtil),
    "getArrowLength": (()=>getArrowLength)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Arc2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Arc2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Box.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/helpers.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Edge2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Edge2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Group2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Group2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Polyline2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Polyline2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Rectangle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Rectangle2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$SVGContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/components/SVGContainer.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$ShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/ShapeUtil.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/cache.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLArrowShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/shapes/TLArrowShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$debug$2d$flags$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/utils/debug-flags.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/styles/TLColorStyle.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/object.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/BaseBoxShapeTool/children/Pointing.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$value$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/value.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$track$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/track.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useIsEditing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useIsEditing.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useSafeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useSafeId.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$bindings$2f$arrow$2f$ArrowBindingUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/bindings/arrow/ArrowBindingUtil.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/PathBuilder.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PlainTextLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/PlainTextLabel.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$ShapeFill$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/ShapeFill.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$SvgTextLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/SvgTextLabel.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/default-shape-constants.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$defaultFonts$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/defaultFonts.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$defaultStyleDefs$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/defaultStyleDefs.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useDefaultColorTheme.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$ArrowPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/ArrowPath.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/arrowLabel.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowTargetState$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/arrowTargetState.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowheads$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/arrowheads.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$ElbowArrowDebug$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/ElbowArrowDebug.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/definitions.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$elbowArrowSnapLines$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/elbow/elbowArrowSnapLines.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/shared.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
var ArrowHandles = /* @__PURE__ */ ((ArrowHandles2)=>{
    ArrowHandles2["Start"] = "start";
    ArrowHandles2["Middle"] = "middle";
    ArrowHandles2["End"] = "end";
    return ArrowHandles2;
})(ArrowHandles || {});
class ArrowShapeUtil extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$ShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ShapeUtil"] {
    static type = "arrow";
    static props = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLArrowShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["arrowShapeProps"];
    static migrations = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLArrowShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["arrowShapeMigrations"];
    options = {
        expandElbowLegLength: {
            s: 28,
            m: 36,
            l: 44,
            xl: 66
        },
        minElbowLegLength: {
            s: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"].s * 3,
            m: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"].m * 3,
            l: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"].l * 3,
            xl: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"].xl * 3
        },
        minElbowHandleDistance: 16,
        arcArrowCenterSnapDistance: 16,
        elbowArrowCenterSnapDistance: 24,
        elbowArrowEdgeSnapDistance: 20,
        elbowArrowPointSnapDistance: 24,
        elbowArrowAxisSnapDistance: 16,
        labelCenterSnapDistance: 10,
        elbowMidpointSnapDistance: 10,
        elbowMinSegmentLengthToShowMidpointHandle: 20,
        hoverPreciseTimeout: 600,
        pointingPreciseTimeout: 320,
        shouldBeExact: (editor)=>editor.inputs.altKey,
        shouldIgnoreTargets: (editor)=>editor.inputs.ctrlKey
    };
    canEdit() {
        return true;
    }
    canBind({ toShapeType }) {
        return toShapeType !== "arrow";
    }
    canSnap() {
        return false;
    }
    hideResizeHandles() {
        return true;
    }
    hideRotateHandle() {
        return true;
    }
    hideSelectionBoundsBg() {
        return true;
    }
    hideSelectionBoundsFg() {
        return true;
    }
    canBeLaidOut(shape, info) {
        if (info.type === "flip") {
            const bindings = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowBindings"])(this.editor, shape);
            const { start, end } = bindings;
            const { shapes = [] } = info;
            if (start && !shapes.find((s)=>s.id === start.toId)) return false;
            if (end && !shapes.find((s)=>s.id === end.toId)) return false;
        }
        return true;
    }
    getFontFaces(shape) {
        if (!shape.props.text) return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EMPTY_ARRAY"];
        return [
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$defaultFonts$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DefaultFontFaces"][`tldraw_${shape.props.font}`].normal.normal
        ];
    }
    getDefaultProps() {
        return {
            kind: "arc",
            elbowMidPoint: 0.5,
            dash: "draw",
            size: "m",
            fill: "none",
            color: "black",
            labelColor: "black",
            bend: 0,
            start: {
                x: 0,
                y: 0
            },
            end: {
                x: 2,
                y: 0
            },
            arrowheadStart: "none",
            arrowheadEnd: "arrow",
            text: "",
            labelPosition: 0.5,
            font: "draw",
            scale: 1
        };
    }
    getGeometry(shape) {
        const isEditing = this.editor.getEditingShapeId() === shape.id;
        const info = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowInfo"])(this.editor, shape);
        const debugGeom = [];
        const bodyGeom = info.type === "straight" ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Edge2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Edge2d"]({
            start: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(info.start.point),
            end: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(info.end.point)
        }) : info.type === "arc" ? new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Arc2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Arc2d"]({
            center: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Cast(info.handleArc.center),
            start: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Cast(info.start.point),
            end: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Cast(info.end.point),
            sweepFlag: info.bodyArc.sweepFlag,
            largeArcFlag: info.bodyArc.largeArcFlag
        }) : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Polyline2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Polyline2d"]({
            points: info.route.points
        });
        let labelGeom;
        if (isEditing || shape.props.text.trim()) {
            const labelPosition = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowLabelPosition"])(this.editor, shape);
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$debug$2d$flags$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["debugFlags"].debugGeometry.get()) {
                debugGeom.push(...labelPosition.debugGeom);
            }
            labelGeom = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Rectangle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Rectangle2d"]({
                x: labelPosition.box.x,
                y: labelPosition.box.y,
                width: labelPosition.box.w,
                height: labelPosition.box.h,
                isFilled: true,
                isLabel: true
            });
        }
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Group2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Group2d"]({
            children: [
                ...labelGeom ? [
                    bodyGeom,
                    labelGeom
                ] : [
                    bodyGeom
                ],
                ...debugGeom
            ]
        });
    }
    getHandles(shape) {
        const info = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowInfo"])(this.editor, shape);
        const handles = [
            {
                id: "start" /* Start */ ,
                type: "vertex",
                index: "a1",
                x: info.start.handle.x,
                y: info.start.handle.y
            },
            {
                id: "end" /* End */ ,
                type: "vertex",
                index: "a3",
                x: info.end.handle.x,
                y: info.end.handle.y
            }
        ];
        if (shape.props.kind === "arc" && (info.type === "straight" || info.type === "arc")) {
            handles.push({
                id: "middle" /* Middle */ ,
                type: "virtual",
                index: "a2",
                x: info.middle.x,
                y: info.middle.y
            });
        }
        if (shape.props.kind === "elbow" && info.type === "elbow" && info.route.midpointHandle) {
            const shapePageTransform = this.editor.getShapePageTransform(shape.id);
            const segmentStart = shapePageTransform.applyToPoint(info.route.midpointHandle.segmentStart);
            const segmentEnd = shapePageTransform.applyToPoint(info.route.midpointHandle.segmentEnd);
            const segmentLength = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(segmentStart, segmentEnd) * this.editor.getZoomLevel();
            if (segmentLength > this.options.elbowMinSegmentLengthToShowMidpointHandle) {
                handles.push({
                    id: "middle" /* Middle */ ,
                    type: "vertex",
                    index: "a2",
                    x: info.route.midpointHandle.point.x,
                    y: info.route.midpointHandle.point.y
                });
            }
        }
        return handles;
    }
    getText(shape) {
        return shape.props.text;
    }
    onHandleDrag(shape, info) {
        const handleId = info.handle.id;
        switch(handleId){
            case "middle" /* Middle */ :
                switch(shape.props.kind){
                    case "arc":
                        return this.onArcMidpointHandleDrag(shape, info);
                    case "elbow":
                        return this.onElbowMidpointHandleDrag(shape, info);
                    default:
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(shape.props.kind);
                }
            case "start" /* Start */ :
            case "end" /* End */ :
                return this.onTerminalHandleDrag(shape, info, handleId);
            default:
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(handleId);
        }
    }
    onArcMidpointHandleDrag(shape, { handle }) {
        const bindings = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowBindings"])(this.editor, shape);
        const { start, end } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowTerminalsInArrowSpace"])(this.editor, shape, bindings);
        const delta = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(end, start);
        const v = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Per(delta);
        const med = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Med(end, start);
        const A = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(med, v);
        const B = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(med, v);
        const point = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].NearestPointOnLineSegment(A, B, handle, false);
        let bend = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(point, med);
        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Clockwise(point, end, med)) bend *= -1;
        return {
            id: shape.id,
            type: shape.type,
            props: {
                bend
            }
        };
    }
    onElbowMidpointHandleDrag(shape, { handle }) {
        const info = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowInfo"])(this.editor, shape);
        if (info?.type !== "elbow") return;
        const shapeToPageTransform = this.editor.getShapePageTransform(shape.id);
        const handlePagePoint = shapeToPageTransform.applyToPoint(handle);
        const axisName = info.route.midpointHandle?.axis;
        if (!axisName) return;
        const axis = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$definitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowAxes"][axisName];
        const midRange = info.elbow[axis.midRange];
        if (!midRange) return;
        let angle = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Angle(shapeToPageTransform.applyToPoint(axis.v(0, 0)), shapeToPageTransform.applyToPoint(axis.v(0, 1)));
        if (angle < 0) angle += Math.PI;
        const handlePoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$elbowArrowSnapLines$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["perpDistanceToLineAngle"])(handlePagePoint, angle);
        const loPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$elbowArrowSnapLines$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["perpDistanceToLineAngle"])(shapeToPageTransform.applyToPoint(axis.v(midRange.lo, 0)), angle);
        const hiPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$elbowArrowSnapLines$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["perpDistanceToLineAngle"])(shapeToPageTransform.applyToPoint(axis.v(midRange.hi, 0)), angle);
        const maxSnapDistance = this.options.elbowMidpointSnapDistance / this.editor.getZoomLevel();
        const midPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$elbowArrowSnapLines$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["perpDistanceToLineAngle"])(shapeToPageTransform.applyToPoint(axis.v((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(midRange.lo, midRange.hi, 0.5), 0)), angle);
        let snapPoint = midPoint;
        let snapDistance = Math.abs(midPoint - handlePoint);
        for (const [snapAngle, snapLines] of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$elbowArrowSnapLines$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getElbowArrowSnapLines"])(this.editor)){
            const { isParallel, isFlippedParallel } = anglesAreApproximatelyParallel(angle, snapAngle);
            if (isParallel || isFlippedParallel) {
                for (const snapLine of snapLines){
                    const doesShareStartIntersection = snapLine.startBoundShapeId && (snapLine.startBoundShapeId === info.bindings.start?.toId || snapLine.startBoundShapeId === info.bindings.end?.toId);
                    const doesShareEndIntersection = snapLine.endBoundShapeId && (snapLine.endBoundShapeId === info.bindings.start?.toId || snapLine.endBoundShapeId === info.bindings.end?.toId);
                    if (!doesShareStartIntersection && !doesShareEndIntersection) continue;
                    const point = isFlippedParallel ? -snapLine.perpDistance : snapLine.perpDistance;
                    const distance = Math.abs(point - handlePoint);
                    if (distance < snapDistance) {
                        snapPoint = point;
                        snapDistance = distance;
                    }
                }
            }
        }
        if (snapDistance > maxSnapDistance) {
            snapPoint = handlePoint;
        }
        const newMid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["invLerp"])(loPoint, hiPoint, snapPoint), 0, 1);
        return {
            id: shape.id,
            type: shape.type,
            props: {
                elbowMidPoint: newMid
            }
        };
    }
    onTerminalHandleDrag(shape, { handle, isPrecise }, handleId) {
        const bindings = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowBindings"])(this.editor, shape);
        const update = {
            id: shape.id,
            type: "arrow",
            props: {}
        };
        const currentBinding = bindings[handleId];
        const oppositeHandleId = handleId === "start" /* Start */  ? "end" /* End */  : "start" /* Start */ ;
        const oppositeBinding = bindings[oppositeHandleId];
        const targetInfo = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowTargetState$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["updateArrowTargetState"])({
            editor: this.editor,
            pointInPageSpace: this.editor.getShapePageTransform(shape.id).applyToPoint(handle),
            arrow: shape,
            isPrecise,
            currentBinding,
            oppositeBinding
        });
        if (!targetInfo) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["removeArrowBinding"])(this.editor, shape, handleId);
            const newPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeSnapToGrid"])(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](handle.x, handle.y), this.editor);
            update.props[handleId] = {
                x: newPoint.x,
                y: newPoint.y
            };
            return update;
        }
        const bindingProps = {
            terminal: handleId,
            normalizedAnchor: targetInfo.normalizedAnchor,
            isPrecise: targetInfo.isPrecise,
            isExact: targetInfo.isExact,
            snap: targetInfo.snap
        };
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createOrUpdateArrowBinding"])(this.editor, shape, targetInfo.target.id, bindingProps);
        const newBindings = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowBindings"])(this.editor, shape);
        if (newBindings.start && newBindings.end && newBindings.start.toId === newBindings.end.toId) {
            if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Equals(newBindings.start.props.normalizedAnchor, newBindings.end.props.normalizedAnchor)) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createOrUpdateArrowBinding"])(this.editor, shape, newBindings.end.toId, {
                    ...newBindings.end.props,
                    normalizedAnchor: {
                        x: newBindings.end.props.normalizedAnchor.x + 0.05,
                        y: newBindings.end.props.normalizedAnchor.y
                    }
                });
            }
        }
        return update;
    }
    onTranslateStart(shape) {
        const bindings = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowBindings"])(this.editor, shape);
        if (shape.props.kind === "elbow" && this.editor.getOnlySelectedShapeId() === shape.id) {
            const info = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowInfo"])(this.editor, shape);
            if (!info) return;
            const update = {
                id: shape.id,
                type: "arrow",
                props: {}
            };
            if (bindings.start) {
                update.props.start = {
                    x: info.start.point.x,
                    y: info.start.point.y
                };
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["removeArrowBinding"])(this.editor, shape, "start");
            }
            if (bindings.end) {
                update.props.end = {
                    x: info.end.point.x,
                    y: info.end.point.y
                };
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["removeArrowBinding"])(this.editor, shape, "end");
            }
            return update;
        }
        const terminalsInArrowSpace = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowTerminalsInArrowSpace"])(this.editor, shape, bindings);
        const shapePageTransform = this.editor.getShapePageTransform(shape.id);
        const selectedShapeIds = this.editor.getSelectedShapeIds();
        if (bindings.start && (selectedShapeIds.includes(bindings.start.toId) || this.editor.isAncestorSelected(bindings.start.toId)) || bindings.end && (selectedShapeIds.includes(bindings.end.toId) || this.editor.isAncestorSelected(bindings.end.toId))) {
            return;
        }
        shapeAtTranslationStart.set(shape, {
            pagePosition: shapePageTransform.applyToPoint(shape),
            terminalBindings: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mapObjectMapValues"])(terminalsInArrowSpace, (terminalName, point)=>{
                const binding = bindings[terminalName];
                if (!binding) return null;
                return {
                    binding,
                    shapePosition: point,
                    pagePosition: shapePageTransform.applyToPoint(point)
                };
            })
        });
        if (bindings.start) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$bindings$2f$arrow$2f$ArrowBindingUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["updateArrowTerminal"])({
                editor: this.editor,
                arrow: shape,
                terminal: "start",
                useHandle: true
            });
            shape = this.editor.getShape(shape.id);
        }
        if (bindings.end) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$bindings$2f$arrow$2f$ArrowBindingUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["updateArrowTerminal"])({
                editor: this.editor,
                arrow: shape,
                terminal: "end",
                useHandle: true
            });
        }
        for (const handleName of [
            "start" /* Start */ ,
            "end" /* End */ 
        ]){
            const binding = bindings[handleName];
            if (!binding) continue;
            this.editor.updateBinding({
                ...binding,
                props: {
                    ...binding.props,
                    isPrecise: true
                }
            });
        }
        return;
    }
    onTranslate(initialShape, shape) {
        const atTranslationStart = shapeAtTranslationStart.get(initialShape);
        if (!atTranslationStart) return;
        const shapePageTransform = this.editor.getShapePageTransform(shape.id);
        const pageDelta = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(shapePageTransform.applyToPoint(shape), atTranslationStart.pagePosition);
        for (const terminalBinding of Object.values(atTranslationStart.terminalBindings)){
            if (!terminalBinding) continue;
            const newPagePoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(terminalBinding.pagePosition, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(pageDelta, 0.5));
            const newTarget = this.editor.getShapeAtPoint(newPagePoint, {
                hitInside: true,
                hitFrameInside: true,
                margin: 0,
                filter: (targetShape)=>{
                    return !targetShape.isLocked && this.editor.canBindShapes({
                        fromShape: shape,
                        toShape: targetShape,
                        binding: "arrow"
                    });
                }
            });
            if (newTarget?.id === terminalBinding.binding.toId) {
                const targetBounds = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"].ZeroFix(this.editor.getShapeGeometry(newTarget).bounds);
                const pointInTargetSpace = this.editor.getPointInShapeSpace(newTarget, newPagePoint);
                const normalizedAnchor = {
                    x: (pointInTargetSpace.x - targetBounds.minX) / targetBounds.width,
                    y: (pointInTargetSpace.y - targetBounds.minY) / targetBounds.height
                };
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createOrUpdateArrowBinding"])(this.editor, shape, newTarget.id, {
                    ...terminalBinding.binding.props,
                    normalizedAnchor,
                    isPrecise: true
                });
            } else {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["removeArrowBinding"])(this.editor, shape, terminalBinding.binding.props.terminal);
            }
        }
    }
    _resizeInitialBindings = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WeakCache"]();
    onResize(shape, info) {
        const { scaleX, scaleY } = info;
        const bindings = this._resizeInitialBindings.get(shape, ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowBindings"])(this.editor, shape));
        const terminals = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowTerminalsInArrowSpace"])(this.editor, shape, bindings);
        const { start, end } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$value$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["structuredClone"])(shape.props);
        let { bend } = shape.props;
        if (!bindings.start) {
            start.x = terminals.start.x * scaleX;
            start.y = terminals.start.y * scaleY;
        }
        if (!bindings.end) {
            end.x = terminals.end.x * scaleX;
            end.y = terminals.end.y * scaleY;
        }
        const mx = Math.abs(scaleX);
        const my = Math.abs(scaleY);
        const startNormalizedAnchor = bindings?.start ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(bindings.start.props.normalizedAnchor) : null;
        const endNormalizedAnchor = bindings?.end ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From(bindings.end.props.normalizedAnchor) : null;
        if (scaleX < 0 && scaleY >= 0) {
            if (bend !== 0) {
                bend *= -1;
                bend *= Math.max(mx, my);
            }
            if (startNormalizedAnchor) {
                startNormalizedAnchor.x = 1 - startNormalizedAnchor.x;
            }
            if (endNormalizedAnchor) {
                endNormalizedAnchor.x = 1 - endNormalizedAnchor.x;
            }
        } else if (scaleX >= 0 && scaleY < 0) {
            if (bend !== 0) {
                bend *= -1;
                bend *= Math.max(mx, my);
            }
            if (startNormalizedAnchor) {
                startNormalizedAnchor.y = 1 - startNormalizedAnchor.y;
            }
            if (endNormalizedAnchor) {
                endNormalizedAnchor.y = 1 - endNormalizedAnchor.y;
            }
        } else if (scaleX >= 0 && scaleY >= 0) {
            if (bend !== 0) {
                bend *= Math.max(mx, my);
            }
        } else if (scaleX < 0 && scaleY < 0) {
            if (bend !== 0) {
                bend *= Math.max(mx, my);
            }
            if (startNormalizedAnchor) {
                startNormalizedAnchor.x = 1 - startNormalizedAnchor.x;
                startNormalizedAnchor.y = 1 - startNormalizedAnchor.y;
            }
            if (endNormalizedAnchor) {
                endNormalizedAnchor.x = 1 - endNormalizedAnchor.x;
                endNormalizedAnchor.y = 1 - endNormalizedAnchor.y;
            }
        }
        if (bindings.start && startNormalizedAnchor) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createOrUpdateArrowBinding"])(this.editor, shape, bindings.start.toId, {
                ...bindings.start.props,
                normalizedAnchor: startNormalizedAnchor.toJson()
            });
        }
        if (bindings.end && endNormalizedAnchor) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createOrUpdateArrowBinding"])(this.editor, shape, bindings.end.toId, {
                ...bindings.end.props,
                normalizedAnchor: endNormalizedAnchor.toJson()
            });
        }
        const next = {
            props: {
                start,
                end,
                bend
            }
        };
        return next;
    }
    onDoubleClickHandle(shape, handle) {
        switch(handle.id){
            case "start" /* Start */ :
                {
                    return {
                        id: shape.id,
                        type: shape.type,
                        props: {
                            ...shape.props,
                            arrowheadStart: shape.props.arrowheadStart === "none" ? "arrow" : "none"
                        }
                    };
                }
            case "end" /* End */ :
                {
                    return {
                        id: shape.id,
                        type: shape.type,
                        props: {
                            ...shape.props,
                            arrowheadEnd: shape.props.arrowheadEnd === "none" ? "arrow" : "none"
                        }
                    };
                }
        }
    }
    component(shape) {
        const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultColorTheme"])();
        const onlySelectedShape = this.editor.getOnlySelectedShape();
        const shouldDisplayHandles = this.editor.isInAny("select.idle", "select.pointing_handle", "select.dragging_handle", "select.translating", "arrow.dragging") && !this.editor.getIsReadonly();
        const info = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowInfo"])(this.editor, shape);
        if (!info?.isValid) return null;
        const labelPosition = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowLabelPosition"])(this.editor, shape);
        const isSelected = shape.id === this.editor.getOnlySelectedShapeId();
        const isEditing = this.editor.getEditingShapeId() === shape.id;
        const showArrowLabel = isEditing || shape.props.text;
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
            children: [
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$SVGContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SVGContainer"], {
                    style: {
                        minWidth: 50,
                        minHeight: 50
                    },
                    children: [
                        /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(ArrowSvg, {
                            shape,
                            shouldDisplayHandles: shouldDisplayHandles && onlySelectedShape?.id === shape.id
                        }),
                        shape.props.kind === "elbow" && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$debug$2d$flags$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["debugFlags"].debugElbowArrows.get() && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$elbow$2f$ElbowArrowDebug$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ElbowArrowDebug"], {
                            arrow: shape
                        })
                    ]
                }),
                showArrowLabel && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PlainTextLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PlainTextLabel"], {
                    shapeId: shape.id,
                    classNamePrefix: "tl-arrow",
                    type: "arrow",
                    font: shape.props.font,
                    fontSize: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowLabelFontSize"])(shape),
                    lineHeight: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TEXT_PROPS"].lineHeight,
                    align: "middle",
                    verticalAlign: "middle",
                    text: shape.props.text,
                    labelColor: theme[shape.props.labelColor].solid,
                    textWidth: labelPosition.box.w - __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ARROW_LABEL_PADDING"] * 2 * shape.props.scale,
                    isSelected,
                    padding: 0,
                    style: {
                        transform: `translate(${labelPosition.box.center.x}px, ${labelPosition.box.center.y}px)`
                    }
                })
            ]
        });
    }
    indicator(shape) {
        const isEditing = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useIsEditing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useIsEditing"])(shape.id);
        const clipPathId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useSafeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSharedSafeId"])(shape.id + "_clip");
        const info = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowInfo"])(this.editor, shape);
        if (!info) return null;
        const { start, end } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowTerminalsInArrowSpace"])(this.editor, shape, info?.bindings);
        const geometry = this.editor.getShapeGeometry(shape);
        const bounds = geometry.bounds;
        const labelGeometry = isEditing || shape.props.text.trim() ? geometry.children[1] : null;
        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Equals(start, end)) return null;
        const strokeWidth = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape.props.size] * shape.props.scale;
        const as = info.start.arrowhead && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowheads$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowheadPathForType"])(info, "start", strokeWidth);
        const ae = info.end.arrowhead && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowheads$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowheadPathForType"])(info, "end", strokeWidth);
        const includeClipPath = as && info.start.arrowhead !== "arrow" || ae && info.end.arrowhead !== "arrow" || !!labelGeometry;
        const labelBounds = labelGeometry ? labelGeometry.getBounds() : new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"](0, 0, 0, 0);
        if (isEditing && labelGeometry) {
            return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
                x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(labelBounds.x),
                y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(labelBounds.y),
                width: labelBounds.w,
                height: labelBounds.h,
                rx: 3.5 * shape.props.scale,
                ry: 3.5 * shape.props.scale
            });
        }
        const clipStartArrowhead = !(info.start.arrowhead === "none" || info.start.arrowhead === "arrow");
        const clipEndArrowhead = !(info.end.arrowhead === "none" || info.end.arrowhead === "arrow");
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("g", {
            children: [
                includeClipPath && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("defs", {
                    children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(ArrowClipPath, {
                        radius: 3.5 * shape.props.scale,
                        hasText: shape.props.text.trim().length > 0,
                        bounds,
                        labelBounds,
                        as: clipStartArrowhead && as ? as : "",
                        ae: clipEndArrowhead && ae ? ae : ""
                    })
                }),
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("g", {
                    style: {
                        clipPath: includeClipPath ? `url(#${clipPathId})` : void 0,
                        WebkitClipPath: includeClipPath ? `url(#${clipPathId})` : void 0
                    },
                    children: [
                        includeClipPath && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
                            x: bounds.minX - 100,
                            y: bounds.minY - 100,
                            width: bounds.width + 200,
                            height: bounds.height + 200,
                            opacity: 0
                        }),
                        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$ArrowPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowBodyPath"])(shape, info, shape.props.dash === "draw" ? {
                            style: "draw",
                            randomSeed: shape.id,
                            strokeWidth: 1,
                            passes: 1,
                            offset: 0,
                            roundness: strokeWidth * 2,
                            props: {
                                strokeWidth: void 0
                            }
                        } : {
                            style: "solid",
                            strokeWidth: 1,
                            props: {
                                strokeWidth: void 0
                            }
                        })
                    ]
                }),
                as && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
                    d: as
                }),
                ae && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
                    d: ae
                }),
                labelGeometry && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
                    x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(labelBounds.x),
                    y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(labelBounds.y),
                    width: labelBounds.w,
                    height: labelBounds.h,
                    rx: 3.5,
                    ry: 3.5
                })
            ]
        });
    }
    onEditStart(shape) {
        if (shape.props.text.trim() === "") {
            const labelPosition = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowLabelDefaultPosition"])(this.editor, shape);
            this.editor.updateShape({
                id: shape.id,
                type: shape.type,
                props: {
                    labelPosition
                }
            });
        }
    }
    onEditEnd(shape) {
        const { id, type, props: { text } } = shape;
        if (text.trimEnd() !== shape.props.text) {
            this.editor.updateShapes([
                {
                    id,
                    type,
                    props: {
                        text: text.trimEnd()
                    }
                }
            ]);
        }
    }
    toSvg(shape, ctx) {
        ctx.addExportDef((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$defaultStyleDefs$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFillDefForExport"])(shape.props.fill));
        const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getDefaultColorTheme"])(ctx);
        const scaleFactor = 1 / shape.props.scale;
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("g", {
            transform: `scale(${scaleFactor})`,
            children: [
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(ArrowSvg, {
                    shape,
                    shouldDisplayHandles: false
                }),
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$SvgTextLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SvgTextLabel"], {
                    fontSize: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowLabelFontSize"])(shape),
                    font: shape.props.font,
                    align: "middle",
                    verticalAlign: "middle",
                    text: shape.props.text,
                    labelColor: theme[shape.props.labelColor].solid,
                    bounds: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowLabelPosition"])(this.editor, shape).box.clone().expandBy(-__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ARROW_LABEL_PADDING"] * shape.props.scale),
                    padding: 0,
                    showTextOutline: true
                })
            ]
        });
    }
    getCanvasSvgDefs() {
        return [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$defaultStyleDefs$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFillDefForCanvas"])(),
            {
                key: `arrow:dot`,
                component: ArrowheadDotDef
            },
            {
                key: `arrow:cross`,
                component: ArrowheadCrossDef
            }
        ];
    }
    getInterpolatedProps(startShape, endShape, progress) {
        return {
            ...progress > 0.5 ? endShape.props : startShape.props,
            scale: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.scale, endShape.props.scale, progress),
            start: {
                x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.start.x, endShape.props.start.x, progress),
                y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.start.y, endShape.props.start.y, progress)
            },
            end: {
                x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.end.x, endShape.props.end.x, progress),
                y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.end.y, endShape.props.end.y, progress)
            },
            bend: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.bend, endShape.props.bend, progress),
            labelPosition: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.labelPosition, endShape.props.labelPosition, progress)
        };
    }
}
function getArrowLength(editor, shape) {
    const info = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowInfo"])(editor, shape);
    return info.type === "straight" ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(info.start.handle, info.end.handle) : info.type === "arc" ? Math.abs(info.handleArc.length) : info.route.distance;
}
const ArrowSvg = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$track$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["track"])(function ArrowSvg2({ shape, shouldDisplayHandles }) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultColorTheme"])();
    const info = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowInfo"])(editor, shape);
    const isForceSolid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("force solid", ()=>{
        return editor.getZoomLevel() < 0.2;
    }, [
        editor
    ]);
    const clipPathId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useSafeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSharedSafeId"])(shape.id + "_clip");
    const arrowheadDotId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useSafeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSharedSafeId"])("arrowhead-dot");
    const arrowheadCrossId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useSafeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSharedSafeId"])("arrowhead-cross");
    const isEditing = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useIsEditing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useIsEditing"])(shape.id);
    const geometry = editor.getShapeGeometry(shape);
    if (!geometry) return null;
    const bounds = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"].ZeroFix(geometry.bounds);
    const bindings = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowBindings"])(editor, shape);
    if (!info?.isValid) return null;
    const strokeWidth = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape.props.size] * shape.props.scale;
    const as = info.start.arrowhead && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowheads$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowheadPathForType"])(info, "start", strokeWidth);
    const ae = info.end.arrowhead && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowheads$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowheadPathForType"])(info, "end", strokeWidth);
    let handlePath = null;
    if (shouldDisplayHandles && (bindings.start || bindings.end)) {
        handlePath = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$ArrowPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowHandlePath"])(info, {
            style: "dashed",
            start: "skip",
            end: "skip",
            lengthRatio: 2.5,
            strokeWidth: 2 / editor.getZoomLevel(),
            props: {
                className: "tl-arrow-hint",
                markerStart: bindings.start ? bindings.start.props.isExact ? "" : bindings.start.props.isPrecise ? `url(#${arrowheadCrossId})` : `url(#${arrowheadDotId})` : "",
                markerEnd: bindings.end ? bindings.end.props.isExact ? "" : bindings.end.props.isPrecise ? `url(#${arrowheadCrossId})` : `url(#${arrowheadDotId})` : "",
                opacity: 0.16
            }
        });
    }
    const labelPosition = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$arrowLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowLabelPosition"])(editor, shape);
    const clipStartArrowhead = !(info.start.arrowhead === "none" || info.start.arrowhead === "arrow");
    const clipEndArrowhead = !(info.end.arrowhead === "none" || info.end.arrowhead === "arrow");
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("defs", {
                children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("clipPath", {
                    id: clipPathId,
                    children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(ArrowClipPath, {
                        radius: 3.5 * shape.props.scale,
                        hasText: isEditing || shape.props.text.trim().length > 0,
                        bounds,
                        labelBounds: labelPosition.box,
                        as: clipStartArrowhead && as ? as : "",
                        ae: clipEndArrowhead && ae ? ae : ""
                    })
                })
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("g", {
                fill: "none",
                stroke: theme[shape.props.color].solid,
                strokeWidth,
                strokeLinejoin: "round",
                strokeLinecap: "round",
                pointerEvents: "none",
                children: [
                    handlePath,
                    /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("g", {
                        style: {
                            clipPath: `url(#${clipPathId})`,
                            WebkitClipPath: `url(#${clipPathId})`
                        },
                        children: [
                            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
                                x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(bounds.minX - 100),
                                y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(bounds.minY - 100),
                                width: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(bounds.width + 200),
                                height: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(bounds.height + 200),
                                opacity: 0
                            }),
                            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$ArrowPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArrowBodyPath"])(shape, info, {
                                style: shape.props.dash,
                                strokeWidth,
                                forceSolid: isForceSolid,
                                randomSeed: shape.id
                            })
                        ]
                    }),
                    as && clipStartArrowhead && shape.props.fill !== "none" && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$ShapeFill$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ShapeFill"], {
                        theme,
                        d: as,
                        color: shape.props.color,
                        fill: shape.props.fill,
                        scale: shape.props.scale
                    }),
                    ae && clipEndArrowhead && shape.props.fill !== "none" && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$ShapeFill$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ShapeFill"], {
                        theme,
                        d: ae,
                        color: shape.props.color,
                        fill: shape.props.fill,
                        scale: shape.props.scale
                    }),
                    as && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
                        d: as
                    }),
                    ae && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
                        d: ae
                    })
                ]
            })
        ]
    });
});
function ArrowClipPath({ radius, hasText, bounds, labelBounds, as, ae }) {
    const path = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>{
        const path2 = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]();
        path2.moveTo(bounds.left - 100, bounds.top - 100).lineTo(bounds.right + 100, bounds.top - 100).lineTo(bounds.right + 100, bounds.bottom + 100).lineTo(bounds.left - 100, bounds.bottom + 100).close();
        if (hasText) {
            path2.moveTo(labelBounds.left, labelBounds.top + radius).lineTo(labelBounds.left, labelBounds.bottom - radius).circularArcTo(radius, false, false, labelBounds.left + radius, labelBounds.bottom).lineTo(labelBounds.right - radius, labelBounds.bottom).circularArcTo(radius, false, false, labelBounds.right, labelBounds.bottom - radius).lineTo(labelBounds.right, labelBounds.top + radius).circularArcTo(radius, false, false, labelBounds.right - radius, labelBounds.top).lineTo(labelBounds.left + radius, labelBounds.top).circularArcTo(radius, false, false, labelBounds.left, labelBounds.top + radius).close();
        }
        return path2.toD();
    }, [
        radius,
        hasText,
        bounds.bottom,
        bounds.left,
        bounds.right,
        bounds.top,
        labelBounds.bottom,
        labelBounds.left,
        labelBounds.right,
        labelBounds.top
    ]);
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
        d: `${path}${as}${ae}`
    });
}
const shapeAtTranslationStart = /* @__PURE__ */ new WeakMap();
function ArrowheadDotDef() {
    const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useSafeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSharedSafeId"])("arrowhead-dot");
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("marker", {
        id,
        className: "tl-arrow-hint",
        refX: "3.0",
        refY: "3.0",
        orient: "0",
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("circle", {
            cx: "3",
            cy: "3",
            r: "2",
            strokeDasharray: "100%"
        })
    });
}
function ArrowheadCrossDef() {
    const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useSafeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSharedSafeId"])("arrowhead-cross");
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("marker", {
        id,
        className: "tl-arrow-hint",
        refX: "3.0",
        refY: "3.0",
        orient: "auto",
        children: [
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("line", {
                x1: "1.5",
                y1: "1.5",
                x2: "4.5",
                y2: "4.5",
                strokeDasharray: "100%"
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("line", {
                x1: "1.5",
                y1: "4.5",
                x2: "4.5",
                y2: "1.5",
                strokeDasharray: "100%"
            })
        ]
    });
}
function anglesAreApproximatelyParallel(a, b, tolerance = 1e-4) {
    const diff = Math.abs(a - b);
    const isParallel = diff < tolerance;
    const isFlippedParallel = Math.abs(diff - Math.PI) < tolerance;
    const is360Parallel = Math.abs(diff - __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI2"]) < tolerance;
    return {
        isParallel: isParallel || is360Parallel,
        isFlippedParallel
    };
}
;
 //# sourceMappingURL=ArrowShapeUtil.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/HyperlinkButton.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "HyperlinkButton": (()=>HyperlinkButton)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/utils/dom.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$classnames$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/classnames/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
;
;
;
const LINK_ICON = "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' fill='none'%3E%3Cpath stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 5H7a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6M19 5h6m0 0v6m0-6L13 17'/%3E%3C/svg%3E";
function HyperlinkButton({ url }) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const hideButton = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("zoomLevel", ()=>editor.getZoomLevel() < 0.32, [
        editor
    ]);
    const useStopPropagationOnShiftKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((e)=>{
        if (!editor.inputs.shiftKey) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stopEventPropagation"])(e);
    }, [
        editor
    ]);
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("a", {
        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$classnames$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])("tl-hyperlink-button", {
            "tl-hyperlink-button__hidden": hideButton
        }),
        href: url,
        target: "_blank",
        rel: "noopener noreferrer",
        onPointerDown: useStopPropagationOnShiftKey,
        onPointerUp: useStopPropagationOnShiftKey,
        title: url,
        draggable: false,
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
            className: "tl-hyperlink__icon",
            style: {
                mask: `url("${LINK_ICON}") center 100% / 100% no-repeat`,
                WebkitMask: `url("${LINK_ICON}") center 100% / 100% no-repeat`
            }
        })
    });
}
;
 //# sourceMappingURL=HyperlinkButton.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/icons-editor.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "LINK_ICON": (()=>LINK_ICON)
});
const LINK_ICON = "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' fill='none'%3E%3Cpath stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 5H7a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6M19 5h6m0 0v6m0-6L13 17'/%3E%3C/svg%3E";
;
 //# sourceMappingURL=icons-editor.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/rotated-box-shadow.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getRotatedBoxShadow": (()=>getRotatedBoxShadow)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
;
const ROTATING_BOX_SHADOWS = [
    {
        offsetX: 0,
        offsetY: 2,
        blur: 4,
        spread: 0,
        color: "#00000029"
    },
    {
        offsetX: 0,
        offsetY: 3,
        blur: 6,
        spread: 0,
        color: "#0000001f"
    }
];
function getRotatedBoxShadow(rotation) {
    const cssStrings = ROTATING_BOX_SHADOWS.map((shadow)=>{
        const { offsetX, offsetY, blur, spread, color } = shadow;
        const vec = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](offsetX, offsetY);
        const { x, y } = vec.rot(-rotation);
        return `${x}px ${y}px ${blur}px ${spread}px ${color}`;
    });
    return cssStrings.join(", ");
}
;
 //# sourceMappingURL=rotated-box-shadow.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/bookmark/BookmarkShapeUtil.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "BookmarkShapeUtil": (()=>BookmarkShapeUtil),
    "getHumanReadableAddress": (()=>getHumanReadableAddress)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLAsset$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/records/TLAsset.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$BaseBoxShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/BaseBoxShapeUtil.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$HTMLContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/components/HTMLContainer.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$validate$2f$dist$2d$esm$2f$lib$2f$validation$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__$2a$__as__T$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/validate/dist-esm/lib/validation.mjs [app-ssr] (ecmascript) <export * as T>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLBookmarkShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/shapes/TLBookmarkShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$debounce$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/debounce.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$hash$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/hash.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/utils/dom.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$globals$2f$environment$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/globals/environment.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$types$2f$SvgExportContext$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/types/SvgExportContext.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$classnames$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/classnames/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$text$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/utils/text/text.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$HyperlinkButton$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/HyperlinkButton.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$icons$2d$editor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/icons-editor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$rotated$2d$box$2d$shadow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/rotated-box-shadow.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
const BOOKMARK_WIDTH = 300;
const BOOKMARK_HEIGHT = 320;
const BOOKMARK_JUST_URL_HEIGHT = 46;
const SHORT_BOOKMARK_HEIGHT = 101;
class BookmarkShapeUtil extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$BaseBoxShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BaseBoxShapeUtil"] {
    static type = "bookmark";
    static props = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLBookmarkShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bookmarkShapeProps"];
    static migrations = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLBookmarkShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bookmarkShapeMigrations"];
    canResize() {
        return false;
    }
    hideSelectionBoundsFg() {
        return true;
    }
    getText(shape) {
        return shape.props.url;
    }
    getAriaDescriptor(shape) {
        const asset = shape.props.assetId ? this.editor.getAsset(shape.props.assetId) : null;
        if (!asset?.props.title) return void 0;
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$text$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertCommonTitleHTMLEntities"])(asset.props.title) + (asset.props.description ? ", " + asset.props.description : "");
    }
    getDefaultProps() {
        return {
            url: "",
            w: BOOKMARK_WIDTH,
            h: BOOKMARK_HEIGHT,
            assetId: null
        };
    }
    component(shape) {
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(BookmarkShapeComponent, {
            shape
        });
    }
    indicator(shape) {
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
            width: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.w),
            height: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.h),
            rx: "6",
            ry: "6"
        });
    }
    onBeforeCreate(next) {
        return getBookmarkSize(this.editor, next);
    }
    onBeforeUpdate(prev, shape) {
        if (prev.props.url !== shape.props.url) {
            if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$validate$2f$dist$2d$esm$2f$lib$2f$validation$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__$2a$__as__T$3e$__["T"].linkUrl.isValid(shape.props.url)) {
                return {
                    ...shape,
                    props: {
                        ...shape.props,
                        url: prev.props.url
                    }
                };
            } else {
                updateBookmarkAssetOnUrlChange(this.editor, shape);
            }
        }
        if (prev.props.assetId !== shape.props.assetId) {
            return getBookmarkSize(this.editor, shape);
        }
    }
    getInterpolatedProps(startShape, endShape, t) {
        return {
            ...t > 0.5 ? endShape.props : startShape.props,
            w: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.w, endShape.props.w, t),
            h: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.h, endShape.props.h, t)
        };
    }
}
function BookmarkShapeComponent({ shape }) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const asset = shape.props.assetId ? editor.getAsset(shape.props.assetId) : null;
    const isSafariExport = !!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$types$2f$SvgExportContext$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSvgExportContext"])() && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$globals$2f$environment$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["tlenv"].isSafari;
    const pageRotation = editor.getShapePageTransform(shape).rotation();
    const address = getHumanReadableAddress(shape);
    const [isFaviconValid, setIsFaviconValid] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(true);
    const onFaviconError = ()=>setIsFaviconValid(false);
    const useStopPropagationOnShiftKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((e)=>{
        if (!editor.inputs.shiftKey) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stopEventPropagation"])(e);
    }, [
        editor
    ]);
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$HTMLContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HTMLContainer"], {
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("div", {
            className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$classnames$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])("tl-bookmark__container", isSafariExport && "tl-bookmark__container--safariExport"),
            style: {
                boxShadow: isSafariExport ? void 0 : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$rotated$2d$box$2d$shadow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getRotatedBoxShadow"])(pageRotation),
                maxHeight: shape.props.h
            },
            children: [
                (!asset || asset.props.image) && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("div", {
                    className: "tl-bookmark__image_container",
                    children: [
                        asset ? /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("img", {
                            className: "tl-bookmark__image",
                            draggable: false,
                            referrerPolicy: "strict-origin-when-cross-origin",
                            src: asset?.props.image,
                            alt: asset?.props.title || ""
                        }) : /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
                            className: "tl-bookmark__placeholder"
                        }),
                        asset?.props.image && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$HyperlinkButton$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HyperlinkButton"], {
                            url: shape.props.url
                        })
                    ]
                }),
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("div", {
                    className: "tl-bookmark__copy_container",
                    children: [
                        asset?.props.title ? /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("h2", {
                            className: "tl-bookmark__heading",
                            children: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$text$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["convertCommonTitleHTMLEntities"])(asset.props.title)
                        }) : null,
                        asset?.props.description && asset?.props.image ? /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("p", {
                            className: "tl-bookmark__description",
                            children: asset.props.description
                        }) : null,
                        /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("a", {
                            className: "tl-bookmark__link",
                            href: shape.props.url || "",
                            target: "_blank",
                            rel: "noopener noreferrer",
                            draggable: false,
                            onPointerDown: useStopPropagationOnShiftKey,
                            onPointerUp: useStopPropagationOnShiftKey,
                            children: [
                                isFaviconValid && asset?.props.favicon ? /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("img", {
                                    className: "tl-bookmark__favicon",
                                    src: asset?.props.favicon,
                                    referrerPolicy: "strict-origin-when-cross-origin",
                                    onError: onFaviconError,
                                    alt: `favicon of ${address}`
                                }) : /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
                                    className: "tl-hyperlink__icon",
                                    style: {
                                        mask: `url("${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$icons$2d$editor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LINK_ICON"]}") center 100% / 100% no-repeat`,
                                        WebkitMask: `url("${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$icons$2d$editor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LINK_ICON"]}") center 100% / 100% no-repeat`
                                    }
                                }),
                                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("span", {
                                    children: address
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    });
}
function getBookmarkSize(editor, shape) {
    const asset = shape.props.assetId ? editor.getAsset(shape.props.assetId) : null;
    let h = BOOKMARK_HEIGHT;
    if (asset) {
        if (!asset.props.image) {
            if (!asset.props.title) {
                h = BOOKMARK_JUST_URL_HEIGHT;
            } else {
                h = SHORT_BOOKMARK_HEIGHT;
            }
        }
    }
    return {
        ...shape,
        props: {
            ...shape.props,
            h
        }
    };
}
const getHumanReadableAddress = (shape)=>{
    try {
        const url = new URL(shape.props.url);
        return url.hostname.replace(/^www\./, "");
    } catch  {
        return shape.props.url;
    }
};
function updateBookmarkAssetOnUrlChange(editor, shape) {
    const { url } = shape.props;
    const assetId = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$records$2f$TLAsset$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AssetRecordType"].createId((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$hash$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getHashForString"])(url));
    if (editor.getAsset(assetId)) {
        if (shape.props.assetId !== assetId) {
            editor.updateShapes([
                {
                    id: shape.id,
                    type: shape.type,
                    props: {
                        assetId
                    }
                }
            ]);
        }
    } else {
        editor.updateShapes([
            {
                id: shape.id,
                type: shape.type,
                props: {
                    assetId: null
                }
            }
        ]);
        createBookmarkAssetOnUrlChange(editor, shape);
    }
}
const createBookmarkAssetOnUrlChange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$debounce$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["debounce"])(async (editor, shape)=>{
    if (editor.isDisposed) return;
    const { url } = shape.props;
    const asset = await editor.getAssetForExternalContent({
        type: "url",
        url
    });
    if (!asset) {
        return;
    }
    editor.run(()=>{
        editor.createAssets([
            asset
        ]);
        editor.updateShapes([
            {
                id: shape.id,
                type: shape.type,
                props: {
                    assetId: asset.id
                }
            }
        ]);
    });
}, 500);
;
 //# sourceMappingURL=BookmarkShapeUtil.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/svg.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getSvgPathFromStrokePoints": (()=>getSvgPathFromStrokePoints)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
;
function getSvgPathFromStrokePoints(points, closed = false) {
    const len = points.length;
    if (len < 2) {
        return "";
    }
    let a = points[0].point;
    let b = points[1].point;
    if (len === 2) {
        return `M${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["precise"])(a)}L${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["precise"])(b)}`;
    }
    let result = "";
    for(let i = 2, max = len - 1; i < max; i++){
        a = points[i].point;
        b = points[i + 1].point;
        result += (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["average"])(a, b);
    }
    if (closed) {
        return `M${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["average"])(points[0].point, points[1].point)}Q${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["precise"])(points[1].point)}${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["average"])(points[1].point, points[2].point)}T${result}${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["average"])(points[len - 1].point, points[0].point)}${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["average"])(points[0].point, points[1].point)}Z`;
    } else {
        return `M${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["precise"])(points[0].point)}Q${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["precise"])(points[1].point)}${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["average"])(points[1].point, points[2].point)}${points.length > 3 ? "T" : ""}${result}L${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["precise"])(points[len - 1].point)}`;
    }
}
;
 //# sourceMappingURL=svg.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/svgInk.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "svgInk": (()=>svgInk)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokeOutlinePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/getStrokeOutlinePoints.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/getStrokePoints.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$setStrokePointRadii$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/setStrokePointRadii.mjs [app-ssr] (ecmascript)");
;
;
;
;
function svgInk(rawInputPoints, options = {}) {
    const { start = {}, end = {} } = options;
    const { cap: capStart = true } = start;
    const { cap: capEnd = true } = end;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assert"])(!start.taper && !end.taper, "cap taper not supported here");
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assert"])(!start.easing && !end.easing, "cap easing not supported here");
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assert"])(capStart && capEnd, "cap must be true");
    const points = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStrokePoints"])(rawInputPoints, options);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$setStrokePointRadii$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["setStrokePointRadii"])(points, options);
    const partitions = partitionAtElbows(points);
    let svg = "";
    for (const partition of partitions){
        svg += renderPartition(partition, options);
    }
    return svg;
}
function partitionAtElbows(points) {
    if (points.length <= 2) return [
        points
    ];
    const result = [];
    let currentPartition = [
        points[0]
    ];
    let prevV = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(points[1].point, points[0].point).uni();
    let nextV;
    let dpr;
    let prevPoint, thisPoint, nextPoint;
    for(let i = 1, n = points.length; i < n - 1; i++){
        prevPoint = points[i - 1];
        thisPoint = points[i];
        nextPoint = points[i + 1];
        nextV = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(nextPoint.point, thisPoint.point).uni();
        dpr = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dpr(prevV, nextV);
        prevV = nextV;
        if (dpr < -0.8) {
            const elbowPoint = {
                ...thisPoint,
                point: thisPoint.input
            };
            currentPartition.push(elbowPoint);
            result.push(cleanUpPartition(currentPartition));
            currentPartition = [
                elbowPoint
            ];
            continue;
        }
        currentPartition.push(thisPoint);
        if (dpr > 0.7) {
            continue;
        }
        if ((__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(prevPoint.point, thisPoint.point) + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(thisPoint.point, nextPoint.point)) / ((prevPoint.radius + thisPoint.radius + nextPoint.radius) / 3) ** 2 < 1.5) {
            currentPartition.push(thisPoint);
            result.push(cleanUpPartition(currentPartition));
            currentPartition = [
                thisPoint
            ];
            continue;
        }
    }
    currentPartition.push(points[points.length - 1]);
    result.push(cleanUpPartition(currentPartition));
    return result;
}
function cleanUpPartition(partition) {
    const startPoint = partition[0];
    let nextPoint;
    while(partition.length > 2){
        nextPoint = partition[1];
        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(startPoint.point, nextPoint.point) < ((startPoint.radius + nextPoint.radius) / 2 * 0.5) ** 2) {
            partition.splice(1, 1);
        } else {
            break;
        }
    }
    const endPoint = partition[partition.length - 1];
    let prevPoint;
    while(partition.length > 2){
        prevPoint = partition[partition.length - 2];
        if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist2(endPoint.point, prevPoint.point) < ((endPoint.radius + prevPoint.radius) / 2 * 0.5) ** 2) {
            partition.splice(partition.length - 2, 1);
        } else {
            break;
        }
    }
    if (partition.length > 1) {
        partition[0] = {
            ...partition[0],
            vector: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(partition[0].point, partition[1].point).uni()
        };
        partition[partition.length - 1] = {
            ...partition[partition.length - 1],
            vector: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(partition[partition.length - 2].point, partition[partition.length - 1].point).uni()
        };
    }
    return partition;
}
function circlePath(cx, cy, r) {
    return "M " + cx + " " + cy + " m -" + r + ", 0 a " + r + "," + r + " 0 1,1 " + r * 2 + ",0 a " + r + "," + r + " 0 1,1 -" + r * 2 + ",0";
}
function renderPartition(strokePoints, options = {}) {
    if (strokePoints.length === 0) return "";
    if (strokePoints.length === 1) {
        return circlePath(strokePoints[0].point.x, strokePoints[0].point.y, strokePoints[0].radius);
    }
    const { left, right } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokeOutlinePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStrokeOutlineTracks"])(strokePoints, options);
    right.reverse();
    let svg = `M${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["precise"])(left[0])}T`;
    for(let i = 1; i < left.length; i++){
        svg += (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["average"])(left[i - 1], left[i]);
    }
    {
        const point = strokePoints[strokePoints.length - 1];
        const radius = point.radius;
        const direction = point.vector.clone().per().neg();
        const arcStart = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(point.point, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(direction, radius));
        const arcEnd = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(point.point, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(direction, -radius));
        svg += `${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["precise"])(arcStart)}A${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(radius)},${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(radius)} 0 0 1 ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["precise"])(arcEnd)}T`;
    }
    for(let i = 1; i < right.length; i++){
        svg += (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["average"])(right[i - 1], right[i]);
    }
    {
        const point = strokePoints[0];
        const radius = point.radius;
        const direction = point.vector.clone().per();
        const arcStart = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(point.point, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(direction, radius));
        const arcEnd = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(point.point, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(direction, -radius));
        svg += `${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["precise"])(arcStart)}A${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(radius)},${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(radius)} 0 0 1 ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["precise"])(arcEnd)}Z`;
    }
    return svg;
}
;
 //# sourceMappingURL=svgInk.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/interpolate-props.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "interpolateSegments": (()=>interpolateSegments)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
;
const interpolateSegments = (startSegments, endSegments, progress)=>{
    const startPoints = [];
    const endPoints = [];
    startSegments.forEach((segment)=>startPoints.push(...segment.points));
    endSegments.forEach((segment)=>endPoints.push(...segment.points));
    const maxLength = Math.max(startPoints.length, endPoints.length);
    const pointsToUseStart = [];
    const pointsToUseEnd = [];
    for(let i = 0; i < maxLength; i++){
        pointsToUseStart.push(startPoints[i] || startPoints[startPoints.length - 1]);
        pointsToUseEnd.push(endPoints[i] || endPoints[endPoints.length - 1]);
    }
    const interpolatedPoints = pointsToUseStart.map((point, k)=>{
        let z = 0.5;
        if (pointsToUseEnd[k].z !== void 0 && point.z !== void 0) {
            z = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(point.z, pointsToUseEnd[k].z, progress);
        }
        return {
            x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(point.x, pointsToUseEnd[k].x, progress),
            y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(point.y, pointsToUseEnd[k].y, progress),
            z
        };
    });
    return [
        {
            type: "free",
            points: interpolatedPoints
        }
    ];
};
;
 //# sourceMappingURL=interpolate-props.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/draw/getPath.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getDrawShapeStrokeDashArray": (()=>getDrawShapeStrokeDashArray),
    "getFreehandOptions": (()=>getFreehandOptions),
    "getHighlightFreehandSettings": (()=>getHighlightFreehandSettings),
    "getPointsFromSegments": (()=>getPointsFromSegments)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$easings$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/easings.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
;
const PEN_EASING = (t)=>t * 0.65 + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SIN"])(t * __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"] / 2) * 0.35;
const simulatePressureSettings = (strokeWidth)=>{
    return {
        size: strokeWidth,
        thinning: 0.5,
        streamline: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["modulate"])(strokeWidth, [
            9,
            16
        ], [
            0.64,
            0.74
        ], true),
        // 0.62 + ((1 + strokeWidth) / 8) * 0.06,
        smoothing: 0.62,
        easing: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$easings$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EASINGS"].easeOutSine,
        simulatePressure: true
    };
};
const realPressureSettings = (strokeWidth)=>{
    return {
        size: 1 + strokeWidth * 1.2,
        thinning: 0.62,
        streamline: 0.62,
        smoothing: 0.62,
        simulatePressure: false,
        easing: PEN_EASING
    };
};
const solidSettings = (strokeWidth)=>{
    return {
        size: strokeWidth,
        thinning: 0,
        streamline: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["modulate"])(strokeWidth, [
            9,
            16
        ], [
            0.64,
            0.74
        ], true),
        // 0.62 + ((1 + strokeWidth) / 8) * 0.06,
        smoothing: 0.62,
        simulatePressure: false,
        easing: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$easings$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EASINGS"].linear
    };
};
const solidRealPressureSettings = (strokeWidth)=>{
    return {
        size: strokeWidth,
        thinning: 0,
        streamline: 0.62,
        smoothing: 0.62,
        simulatePressure: false,
        easing: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$easings$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EASINGS"].linear
    };
};
function getHighlightFreehandSettings({ strokeWidth, showAsComplete }) {
    return {
        size: 1 + strokeWidth,
        thinning: 0,
        streamline: 0.5,
        smoothing: 0.5,
        simulatePressure: false,
        easing: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$easings$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EASINGS"].easeOutSine,
        last: showAsComplete
    };
}
function getFreehandOptions(shapeProps, strokeWidth, forceComplete, forceSolid) {
    const last = shapeProps.isComplete || forceComplete;
    if (forceSolid) {
        if (shapeProps.isPen) {
            return {
                ...solidRealPressureSettings(strokeWidth),
                last
            };
        } else {
            return {
                ...solidSettings(strokeWidth),
                last
            };
        }
    }
    if (shapeProps.dash === "draw") {
        if (shapeProps.isPen) {
            return {
                ...realPressureSettings(strokeWidth),
                last
            };
        } else {
            return {
                ...simulatePressureSettings(strokeWidth),
                last
            };
        }
    }
    return {
        ...solidSettings(strokeWidth),
        last
    };
}
function getPointsFromSegments(segments) {
    const points = [];
    for (const segment of segments){
        if (segment.type === "free" || segment.points.length < 2) {
            points.push(...segment.points.map(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Cast));
        } else {
            const pointsToInterpolate = Math.max(4, Math.floor(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(segment.points[0], segment.points[1]) / 16));
            points.push(...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].PointsBetween(segment.points[0], segment.points[1], pointsToInterpolate));
        }
    }
    return points;
}
function getDrawShapeStrokeDashArray(shape, strokeWidth, dotAdjustment) {
    return ({
        draw: "none",
        solid: `none`,
        dotted: `${dotAdjustment} ${strokeWidth * 2}`,
        dashed: `${strokeWidth * 2} ${strokeWidth * 2}`
    })[shape.props.dash];
}
;
 //# sourceMappingURL=getPath.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/draw/DrawShapeUtil.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "DrawShapeUtil": (()=>DrawShapeUtil)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Box.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Circle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Circle2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Polygon2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Polygon2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Polyline2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Polyline2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$SVGContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/components/SVGContainer.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$ShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/ShapeUtil.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLDrawShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/shapes/TLDrawShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/array.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$ShapeFill$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/ShapeFill.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/default-shape-constants.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$defaultStyleDefs$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/defaultStyleDefs.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/getStrokePoints.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$svg$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/svg.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$svgInk$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/svgInk.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$interpolate$2d$props$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/interpolate-props.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useDefaultColorTheme.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$getPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/draw/getPath.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
class DrawShapeUtil extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$ShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ShapeUtil"] {
    static type = "draw";
    static props = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLDrawShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["drawShapeProps"];
    static migrations = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLDrawShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["drawShapeMigrations"];
    options = {
        maxPointsPerShape: 600
    };
    hideResizeHandles(shape) {
        return getIsDot(shape);
    }
    hideRotateHandle(shape) {
        return getIsDot(shape);
    }
    hideSelectionBoundsFg(shape) {
        return getIsDot(shape);
    }
    getDefaultProps() {
        return {
            segments: [],
            color: "black",
            fill: "none",
            dash: "draw",
            size: "m",
            isComplete: false,
            isClosed: false,
            isPen: false,
            scale: 1
        };
    }
    getGeometry(shape) {
        const points = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$getPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPointsFromSegments"])(shape.props.segments);
        const sw = (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape.props.size] + 1) * shape.props.scale;
        if (shape.props.segments.length === 1) {
            const box = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"].FromPoints(points);
            if (box.width < sw * 2 && box.height < sw * 2) {
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Circle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Circle2d"]({
                    x: -sw,
                    y: -sw,
                    radius: sw,
                    isFilled: true
                });
            }
        }
        const strokePoints = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStrokePoints"])(points, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$getPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFreehandOptions"])(shape.props, sw, shape.props.isPen, true)).map((p)=>p.point);
        if (shape.props.isClosed && strokePoints.length > 2) {
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Polygon2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Polygon2d"]({
                points: strokePoints,
                isFilled: shape.props.fill !== "none"
            });
        }
        if (strokePoints.length === 1) {
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Circle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Circle2d"]({
                x: -sw,
                y: -sw,
                radius: sw,
                isFilled: true
            });
        }
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Polyline2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Polyline2d"]({
            points: strokePoints
        });
    }
    component(shape) {
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$SVGContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SVGContainer"], {
            children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DrawShapeSvg, {
                shape
            })
        });
    }
    indicator(shape) {
        const allPointsFromSegments = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$getPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPointsFromSegments"])(shape.props.segments);
        let sw = (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape.props.size] + 1) * shape.props.scale;
        const forceSolid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("force solid", ()=>{
            const zoomLevel = this.editor.getZoomLevel();
            return zoomLevel < 0.5 && zoomLevel < 1.5 / sw;
        }, [
            this.editor,
            sw
        ]);
        if (!forceSolid && !shape.props.isPen && shape.props.dash === "draw" && allPointsFromSegments.length === 1) {
            sw += (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rng"])(shape.id)() * (sw / 6);
        }
        const showAsComplete = shape.props.isComplete || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["last"])(shape.props.segments)?.type === "straight";
        const options = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$getPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFreehandOptions"])(shape.props, sw, showAsComplete, true);
        const strokePoints = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStrokePoints"])(allPointsFromSegments, options);
        const solidStrokePath = strokePoints.length > 1 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$svg$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSvgPathFromStrokePoints"])(strokePoints, shape.props.isClosed) : getDot(allPointsFromSegments[0], sw);
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
            d: solidStrokePath
        });
    }
    toSvg(shape, ctx) {
        ctx.addExportDef((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$defaultStyleDefs$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFillDefForExport"])(shape.props.fill));
        const scaleFactor = 1 / shape.props.scale;
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("g", {
            transform: `scale(${scaleFactor})`,
            children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(DrawShapeSvg, {
                shape,
                zoomOverride: 1
            })
        });
    }
    getCanvasSvgDefs() {
        return [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$defaultStyleDefs$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFillDefForCanvas"])()
        ];
    }
    onResize(shape, info) {
        const { scaleX, scaleY } = info;
        const newSegments = [];
        for (const segment of shape.props.segments){
            newSegments.push({
                ...segment,
                points: segment.points.map(({ x, y, z })=>{
                    return {
                        x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toFixed"])(scaleX * x),
                        y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toFixed"])(scaleY * y),
                        z
                    };
                })
            });
        }
        return {
            props: {
                segments: newSegments
            }
        };
    }
    expandSelectionOutlinePx(shape) {
        const multiplier = shape.props.dash === "draw" ? 1.6 : 1;
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape.props.size] * multiplier / 2 * shape.props.scale;
    }
    getInterpolatedProps(startShape, endShape, t) {
        return {
            ...t > 0.5 ? endShape.props : startShape.props,
            segments: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$interpolate$2d$props$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["interpolateSegments"])(startShape.props.segments, endShape.props.segments, t),
            scale: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.scale, endShape.props.scale, t)
        };
    }
}
function getDot(point, sw) {
    const r = (sw + 1) * 0.5;
    return `M ${point.x} ${point.y} m -${r}, 0 a ${r},${r} 0 1,0 ${r * 2},0 a ${r},${r} 0 1,0 -${r * 2},0`;
}
function getIsDot(shape) {
    return shape.props.segments.length === 1 && shape.props.segments[0].points.length < 2;
}
function DrawShapeSvg({ shape, zoomOverride }) {
    const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultColorTheme"])();
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const allPointsFromSegments = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$getPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPointsFromSegments"])(shape.props.segments);
    const showAsComplete = shape.props.isComplete || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["last"])(shape.props.segments)?.type === "straight";
    let sw = (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape.props.size] + 1) * shape.props.scale;
    const forceSolid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("force solid", ()=>{
        const zoomLevel = zoomOverride ?? editor.getZoomLevel();
        return zoomLevel < 0.5 && zoomLevel < 1.5 / sw;
    }, [
        editor,
        sw,
        zoomOverride
    ]);
    const dotAdjustment = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("dot adjustment", ()=>{
        const zoomLevel = zoomOverride ?? editor.getZoomLevel();
        return zoomLevel < 0.2 ? 0 : 0.1;
    }, [
        editor,
        zoomOverride
    ]);
    if (!forceSolid && !shape.props.isPen && shape.props.dash === "draw" && allPointsFromSegments.length === 1) {
        sw += (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rng"])(shape.id)() * (sw / 6);
    }
    const options = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$getPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFreehandOptions"])(shape.props, sw, showAsComplete, forceSolid);
    if (!forceSolid && shape.props.dash === "draw") {
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
            children: [
                shape.props.isClosed && shape.props.fill && allPointsFromSegments.length > 1 ? /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$ShapeFill$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ShapeFill"], {
                    d: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$svg$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSvgPathFromStrokePoints"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStrokePoints"])(allPointsFromSegments, options), shape.props.isClosed),
                    theme,
                    color: shape.props.color,
                    fill: shape.props.isClosed ? shape.props.fill : "none",
                    scale: shape.props.scale
                }) : null,
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
                    d: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$svgInk$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["svgInk"])(allPointsFromSegments, options),
                    strokeLinecap: "round",
                    fill: theme[shape.props.color].solid
                })
            ]
        });
    }
    const strokePoints = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStrokePoints"])(allPointsFromSegments, options);
    const isDot = strokePoints.length < 2;
    const solidStrokePath = isDot ? getDot(allPointsFromSegments[0], 0) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$svg$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSvgPathFromStrokePoints"])(strokePoints, shape.props.isClosed);
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$ShapeFill$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ShapeFill"], {
                d: solidStrokePath,
                theme,
                color: shape.props.color,
                fill: isDot || shape.props.isClosed ? shape.props.fill : "none",
                scale: shape.props.scale
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
                d: solidStrokePath,
                strokeLinecap: "round",
                fill: isDot ? theme[shape.props.color].solid : "none",
                stroke: theme[shape.props.color].solid,
                strokeWidth: sw,
                strokeDasharray: isDot ? "none" : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$getPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getDrawShapeStrokeDashArray"])(shape, sw, dotAdjustment),
                strokeDashoffset: "0"
            })
        ]
    });
}
;
 //# sourceMappingURL=DrawShapeUtil.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/embed/EmbedShapeUtil.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "EmbedShapeUtil": (()=>EmbedShapeUtil)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$BaseBoxShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/BaseBoxShapeUtil.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$HTMLContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/components/HTMLContainer.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLEmbedShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/shapes/TLEmbedShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$shared$2f$resizeBox$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/shared/resizeBox.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useIsEditing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useIsEditing.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$types$2f$SvgExportContext$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/types/SvgExportContext.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$defaultEmbedDefinitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/defaultEmbedDefinitions.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$embeds$2f$embeds$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/utils/embeds/embeds.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$rotated$2d$box$2d$shadow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/rotated-box-shadow.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
const getSandboxPermissions = (permissions)=>{
    return Object.entries(permissions).filter(([_perm, isEnabled])=>isEnabled).map(([perm])=>perm).join(" ");
};
class EmbedShapeUtil extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$BaseBoxShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BaseBoxShapeUtil"] {
    static type = "embed";
    static props = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLEmbedShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["embedShapeProps"];
    static migrations = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLEmbedShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["embedShapeMigrations"];
    static embedDefinitions = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$defaultEmbedDefinitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DEFAULT_EMBED_DEFINITIONS"];
    static setEmbedDefinitions(embedDefinitions) {
        EmbedShapeUtil.embedDefinitions = embedDefinitions;
    }
    getEmbedDefinitions() {
        return EmbedShapeUtil.embedDefinitions;
    }
    getEmbedDefinition(url) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$embeds$2f$embeds$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getEmbedInfo"])(EmbedShapeUtil.embedDefinitions, url);
    }
    getText(shape) {
        return shape.props.url;
    }
    getAriaDescriptor(shape) {
        const embedInfo = this.getEmbedDefinition(shape.props.url);
        return embedInfo?.definition.title;
    }
    hideSelectionBoundsFg(shape) {
        return !this.canResize(shape);
    }
    canEdit() {
        return true;
    }
    canResize(shape) {
        return !!this.getEmbedDefinition(shape.props.url)?.definition?.doesResize;
    }
    canEditInReadonly() {
        return true;
    }
    getDefaultProps() {
        return {
            w: 300,
            h: 300,
            url: ""
        };
    }
    isAspectRatioLocked(shape) {
        const embedInfo = this.getEmbedDefinition(shape.props.url);
        return embedInfo?.definition.isAspectRatioLocked ?? false;
    }
    onResize(shape, info) {
        const isAspectRatioLocked = this.isAspectRatioLocked(shape);
        const embedInfo = this.getEmbedDefinition(shape.props.url);
        let minWidth = embedInfo?.definition.minWidth ?? 200;
        let minHeight = embedInfo?.definition.minHeight ?? 200;
        if (isAspectRatioLocked) {
            const aspectRatio = shape.props.w / shape.props.h;
            if (aspectRatio > 1) {
                minWidth *= aspectRatio;
            } else {
                minHeight /= aspectRatio;
            }
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$shared$2f$resizeBox$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["resizeBox"])(shape, info, {
            minWidth,
            minHeight
        });
    }
    component(shape) {
        const svgExport = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$types$2f$SvgExportContext$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSvgExportContext"])();
        const { w, h, url } = shape.props;
        const isEditing = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useIsEditing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useIsEditing"])(shape.id);
        const embedInfo = this.getEmbedDefinition(url);
        const isHoveringWhileEditingSameShape = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("is hovering", ()=>{
            const { editingShapeId, hoveredShapeId } = this.editor.getCurrentPageState();
            if (editingShapeId && hoveredShapeId !== editingShapeId) {
                const editingShape = this.editor.getShape(editingShapeId);
                if (editingShape && this.editor.isShapeOfType(editingShape, "embed")) {
                    return true;
                }
            }
            return false;
        }, []);
        const pageRotation = this.editor.getShapePageTransform(shape).rotation();
        if (svgExport) {
            return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$HTMLContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HTMLContainer"], {
                className: "tl-embed-container",
                id: shape.id,
                children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
                    className: "tl-embed",
                    style: {
                        border: 0,
                        boxShadow: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$rotated$2d$box$2d$shadow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getRotatedBoxShadow"])(pageRotation),
                        borderRadius: embedInfo?.definition.overrideOutlineRadius ?? 8,
                        background: embedInfo?.definition.backgroundColor ?? "var(--color-background)",
                        width: w,
                        height: h
                    }
                })
            });
        }
        const isInteractive = isEditing || isHoveringWhileEditingSameShape;
        const isIframe = typeof window !== "undefined" && (window !== window.top || window.self !== window.parent);
        if (isIframe && embedInfo?.definition.type === "tldraw") return null;
        if (embedInfo?.definition.type === "github_gist") {
            const idFromGistUrl = embedInfo.url.split("/").pop();
            if (!idFromGistUrl) throw Error("No gist id!");
            return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$HTMLContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HTMLContainer"], {
                className: "tl-embed-container",
                id: shape.id,
                children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(Gist, {
                    id: idFromGistUrl,
                    width: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(w),
                    height: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(h),
                    isInteractive,
                    pageRotation
                })
            });
        }
        const sandbox = getSandboxPermissions({
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$defaultEmbedDefinitions$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["embedShapePermissionDefaults"],
            ...embedInfo?.definition.overridePermissions ?? {}
        });
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$HTMLContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HTMLContainer"], {
            className: "tl-embed-container",
            id: shape.id,
            children: embedInfo?.definition ? /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("iframe", {
                className: "tl-embed",
                sandbox,
                src: embedInfo.embedUrl,
                width: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(w),
                height: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(h),
                draggable: false,
                frameBorder: "0",
                referrerPolicy: "no-referrer-when-downgrade",
                tabIndex: isEditing ? 0 : -1,
                style: {
                    border: 0,
                    pointerEvents: isInteractive ? "auto" : "none",
                    // Fix for safari <https://stackoverflow.com/a/49150908>
                    zIndex: isInteractive ? "" : "-1",
                    boxShadow: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$rotated$2d$box$2d$shadow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getRotatedBoxShadow"])(pageRotation),
                    borderRadius: embedInfo?.definition.overrideOutlineRadius ?? 8,
                    background: embedInfo?.definition.backgroundColor
                }
            }) : null
        });
    }
    indicator(shape) {
        const embedInfo = this.getEmbedDefinition(shape.props.url);
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
            width: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.w),
            height: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.h),
            rx: embedInfo?.definition.overrideOutlineRadius ?? 8,
            ry: embedInfo?.definition.overrideOutlineRadius ?? 8
        });
    }
    getInterpolatedProps(startShape, endShape, t) {
        return {
            ...t > 0.5 ? endShape.props : startShape.props,
            w: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.w, endShape.props.w, t),
            h: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.h, endShape.props.h, t)
        };
    }
}
function Gist({ id, isInteractive, width, height, style, pageRotation }) {
    if (!id.match(/^[0-9a-f]+$/)) throw Error("No gist id!");
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("iframe", {
        className: "tl-embed",
        draggable: false,
        width: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(width),
        height: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(height),
        frameBorder: "0",
        scrolling: "no",
        referrerPolicy: "no-referrer-when-downgrade",
        tabIndex: isInteractive ? 0 : -1,
        style: {
            ...style,
            pointerEvents: isInteractive ? "all" : "none",
            // Fix for safari <https://stackoverflow.com/a/49150908>
            zIndex: isInteractive ? "" : "-1",
            boxShadow: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$rotated$2d$box$2d$shadow$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getRotatedBoxShadow"])(pageRotation)
        },
        srcDoc: `
			<html>
				<head>
					<base target="_blank">
				</head>
				<body>
					<script src=${`https://gist.github.com/${id}.js`}></script>
					<style type="text/css">
						* { margin: 0px; }
						table { height: 100%; background-color: red; }
						.gist { background-color: none; height: 100%;  }
						.gist .gist-file { height: calc(100vh - 2px); padding: 0px; display: grid; grid-template-rows: 1fr auto; }
					</style>
				</body>
			</html>`
    });
}
;
 //# sourceMappingURL=EmbedShapeUtil.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/frame/frameHelpers.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getFrameHeadingOpts": (()=>getFrameHeadingOpts),
    "getFrameHeadingSide": (()=>getFrameHeadingSide),
    "getFrameHeadingSize": (()=>getFrameHeadingSize),
    "getFrameHeadingTranslation": (()=>getFrameHeadingTranslation)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Box.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/array.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$FrameShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/frame/FrameShapeUtil.mjs [app-ssr] (ecmascript)");
;
;
function getFrameHeadingSide(editor, shape) {
    const pageRotation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["canonicalizeRotation"])(editor.getShapePageTransform(shape.id).rotation());
    const offsetRotation = pageRotation + Math.PI / 4;
    const scaledRotation = (offsetRotation * (2 / Math.PI) + 4) % 4;
    return Math.floor(scaledRotation);
}
const measurementWeakmap = /* @__PURE__ */ new WeakMap();
function getFrameHeadingSize(editor, shape, opts) {
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    let width = measurementWeakmap.get(shape.props);
    if (!width) {
        const frameTitle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$FrameShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["defaultEmptyAs"])(shape.props.name, "Frame") + String.fromCharCode(8203);
        const spans = editor.textMeasure.measureTextSpans(frameTitle, opts);
        const firstSpan = spans[0];
        const lastSpan = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["last"])(spans);
        width = lastSpan.box.w + lastSpan.box.x - firstSpan.box.x;
        measurementWeakmap.set(shape.props, width);
    }
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"](0, -opts.height, width, opts.height);
}
function getFrameHeadingOpts(width, isSvg) {
    return {
        fontSize: 12,
        fontFamily: isSvg ? "Arial" : "Inter, sans-serif",
        textAlign: "start",
        width,
        height: 24,
        // --frame-height
        padding: 0,
        lineHeight: 1,
        fontStyle: "normal",
        fontWeight: "normal",
        overflow: "truncate-ellipsis",
        verticalTextAlign: "middle",
        offsetY: -(32 + 2),
        // --frame-minimum-height + (border width * 2)
        offsetX: 0
    };
}
function getFrameHeadingTranslation(shape, side, isSvg) {
    const u = isSvg ? "" : "px";
    const r = isSvg ? "" : "deg";
    let labelTranslate;
    switch(side){
        case 0:
            labelTranslate = ``;
            break;
        case 3:
            labelTranslate = `translate(${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.w)}${u}, 0${u}) rotate(90${r})`;
            break;
        case 2:
            labelTranslate = `translate(${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.w)}${u}, ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.h)}${u}) rotate(180${r})`;
            break;
        case 1:
            labelTranslate = `translate(0${u}, ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.h)}${u}) rotate(270${r})`;
            break;
        default:
            throw Error("labelSide out of bounds");
    }
    return labelTranslate;
}
;
 //# sourceMappingURL=frameHelpers.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/frame/components/FrameLabelInput.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FrameLabelInput": (()=>FrameLabelInput)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/utils/dom.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$FrameShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/frame/FrameShapeUtil.mjs [app-ssr] (ecmascript)");
;
;
;
;
const FrameLabelInput = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["forwardRef"])(({ id, name, isEditing }, ref)=>{
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const handleKeyDown = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((e)=>{
        if (e.key === "Enter" && !e.nativeEvent.isComposing) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stopEventPropagation"])(e);
            e.currentTarget.blur();
            editor.setEditingShape(null);
        }
    }, [
        editor
    ]);
    const handleBlur = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((e)=>{
        const shape = editor.getShape(id);
        if (!shape) return;
        const name2 = shape.props.name;
        const value = e.currentTarget.value.trim();
        if (name2 === value) return;
        editor.updateShapes([
            {
                id,
                type: "frame",
                props: {
                    name: value
                }
            }
        ]);
    }, [
        id,
        editor
    ]);
    const handleChange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((e)=>{
        const shape = editor.getShape(id);
        if (!shape) return;
        const name2 = shape.props.name;
        const value = e.currentTarget.value;
        if (name2 === value) return;
        editor.updateShapes([
            {
                id,
                type: "frame",
                props: {
                    name: value
                }
            }
        ]);
    }, [
        id,
        editor
    ]);
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("div", {
        className: `tl-frame-label ${isEditing ? "tl-frame-label__editing" : ""}`,
        children: [
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("input", {
                className: "tl-frame-name-input",
                ref,
                disabled: !isEditing,
                readOnly: !isEditing,
                style: {
                    display: isEditing ? void 0 : "none"
                },
                value: name,
                autoFocus: true,
                onKeyDown: handleKeyDown,
                onBlur: handleBlur,
                onChange: handleChange,
                onPointerDown: isEditing ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stopEventPropagation"] : void 0,
                draggable: false
            }),
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$FrameShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["defaultEmptyAs"])(name, "Frame") + String.fromCharCode(8203)
        ]
    });
});
;
 //# sourceMappingURL=FrameLabelInput.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/frame/components/FrameHeading.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FrameHeading": (()=>FrameHeading)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useIsEditing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useIsEditing.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$frameHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/frame/frameHelpers.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$components$2f$FrameLabelInput$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/frame/components/FrameLabelInput.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
const FrameHeading = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["memo"])(function FrameHeading2({ id, name, width, height, fill, stroke, color, offsetX, showColors }) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const { side, translation } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("shape rotation", ()=>{
        const shape = editor.getShape(id);
        if (!shape) {
            return {
                side: 0,
                translation: "translate(0, 0)"
            };
        }
        const labelSide = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$frameHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFrameHeadingSide"])(editor, shape);
        return {
            side: labelSide,
            translation: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$frameHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFrameHeadingTranslation"])(shape, labelSide, false)
        };
    }, [
        editor,
        offsetX,
        id
    ]);
    const rInput = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    const isEditing = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useIsEditing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useIsEditing"])(id);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        const el = rInput.current;
        if (el && isEditing) {
            el.focus();
            el.select();
        }
    }, [
        rInput,
        isEditing
    ]);
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
        className: "tl-frame-heading",
        style: {
            overflow: isEditing ? "visible" : "hidden",
            maxWidth: `calc(var(--tl-zoom) * ${side === 0 || side === 2 ? Math.ceil(width) : Math.ceil(height)}px + ${showColors ? "0px" : "var(--frame-offset-width)"})`,
            bottom: "100%",
            transform: `${translation} scale(var(--tl-scale)) translateX(${offsetX}px)`
        },
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
            className: "tl-frame-heading-hit-area",
            style: {
                color,
                backgroundColor: fill,
                boxShadow: `inset 0px 0px 0px 1px ${stroke}`
            },
            children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$components$2f$FrameLabelInput$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FrameLabelInput"], {
                ref: rInput,
                id,
                name,
                isEditing
            })
        })
    });
});
;
 //# sourceMappingURL=FrameHeading.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/frame/FrameShapeUtil.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "FrameShapeUtil": (()=>FrameShapeUtil),
    "defaultEmptyAs": (()=>defaultEmptyAs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$BaseBoxShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/BaseBoxShapeUtil.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/styles/TLColorStyle.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Group2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Group2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Rectangle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Rectangle2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$SVGContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/components/SVGContainer.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/array.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLFrameShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/shapes/TLFrameShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$shared$2f$resizeBox$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/shared/resizeBox.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$classnames$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/classnames/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$frames$2f$frames$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/utils/frames/frames.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$createTextJsxFromSpans$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/createTextJsxFromSpans.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useDefaultColorTheme.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$components$2f$FrameHeading$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/frame/components/FrameHeading.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$frameHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/frame/frameHelpers.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
const FRAME_HEADING_EXTRA_WIDTH = 12;
const FRAME_HEADING_MIN_WIDTH = 32;
const FRAME_HEADING_NOCOLORS_OFFSET_X = -7;
const FRAME_HEADING_OFFSET_Y = 4;
function defaultEmptyAs(str, dflt) {
    if (str.match(/^\s*$/)) {
        return dflt;
    }
    return str;
}
class FrameShapeUtil extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$BaseBoxShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BaseBoxShapeUtil"] {
    static type = "frame";
    static props = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLFrameShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["frameShapeProps"];
    static migrations = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLFrameShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["frameShapeMigrations"];
    options = {
        showColors: false
    };
    // evil crimes :)
    // By default, showColors is off. Because they use style props, which are picked up
    // automatically, we don't have DefaultColorStyle in the props in the schema by default.
    // Instead, when someone calls .configure to turn the option on, we manually add in the color
    // style here so it plays nicely with the other editor APIs.
    static configure(options) {
        const withOptions = super.configure.call(this, options);
        if (options.showColors) {
            ;
            withOptions.props = {
                ...withOptions.props,
                color: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DefaultColorStyle"]
            };
        }
        return withOptions;
    }
    canEdit() {
        return true;
    }
    canResize() {
        return true;
    }
    canResizeChildren() {
        return false;
    }
    getDefaultProps() {
        return {
            w: 160 * 2,
            h: 90 * 2,
            name: "",
            color: "black"
        };
    }
    getAriaDescriptor(shape) {
        return shape.props.name;
    }
    getGeometry(shape) {
        const { editor } = this;
        const z = editor.getZoomLevel();
        const labelSide = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$frameHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFrameHeadingSide"])(editor, shape);
        const isVertical = labelSide % 2 === 1;
        const rotatedTopEdgeWidth = isVertical ? shape.props.h : shape.props.w;
        const opts = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$frameHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFrameHeadingOpts"])(rotatedTopEdgeWidth, false);
        const headingSize = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$frameHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFrameHeadingSize"])(editor, shape, opts);
        const isShowingFrameColors = this.options.showColors;
        const extraWidth = FRAME_HEADING_EXTRA_WIDTH / z;
        const minWidth = FRAME_HEADING_MIN_WIDTH / z;
        const maxWidth = rotatedTopEdgeWidth + (isShowingFrameColors ? 1 : extraWidth);
        const labelWidth = headingSize.w / z;
        const labelHeight = headingSize.h / z;
        const clampedLabelWidth = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(labelWidth + extraWidth, minWidth, maxWidth);
        const offsetX = (isShowingFrameColors ? -1 : FRAME_HEADING_NOCOLORS_OFFSET_X) / z;
        const offsetY = FRAME_HEADING_OFFSET_Y / z;
        const width = isVertical ? labelHeight : clampedLabelWidth;
        const height = isVertical ? clampedLabelWidth : labelHeight;
        let x, y;
        switch(labelSide){
            case 0:
                {
                    x = offsetX;
                    y = -(labelHeight + offsetY);
                    break;
                }
            case 1:
                {
                    x = -(labelHeight + offsetY);
                    y = shape.props.h - (offsetX + clampedLabelWidth);
                    break;
                }
            case 2:
                {
                    x = shape.props.w - (offsetX + clampedLabelWidth);
                    y = shape.props.h + offsetY;
                    break;
                }
            case 3:
                {
                    x = shape.props.w + offsetY;
                    y = offsetX;
                    break;
                }
        }
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Group2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Group2d"]({
            children: [
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Rectangle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Rectangle2d"]({
                    width: shape.props.w,
                    height: shape.props.h,
                    isFilled: false
                }),
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Rectangle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Rectangle2d"]({
                    x,
                    y,
                    width,
                    height,
                    isFilled: true,
                    isLabel: true
                })
            ]
        });
    }
    getText(shape) {
        return shape.props.name;
    }
    component(shape) {
        const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultColorTheme"])();
        const isCreating = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("is creating this shape", ()=>{
            const resizingState = this.editor.getStateDescendant("select.resizing");
            if (!resizingState) return false;
            if (!resizingState.getIsActive()) return false;
            const info = resizingState?.info;
            if (!info) return false;
            return info.isCreating && this.editor.getOnlySelectedShapeId() === shape.id;
        }, [
            shape.id
        ]);
        const showFrameColors = this.options.showColors;
        const color = theme[shape.props.color];
        const frameFill = showFrameColors ? color.frame.fill : theme.black.frame.fill;
        const frameStroke = showFrameColors ? color.frame.stroke : theme.black.frame.stroke;
        const frameHeadingStroke = showFrameColors ? color.frame.headingStroke : theme.background;
        const frameHeadingFill = showFrameColors ? color.frame.headingFill : theme.background;
        const frameHeadingText = showFrameColors ? color.frame.text : theme.text;
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
            children: [
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$SVGContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SVGContainer"], {
                    children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
                        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$classnames$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])("tl-frame__body", {
                            "tl-frame__creating": isCreating
                        }),
                        fill: frameFill,
                        stroke: frameStroke,
                        style: {
                            width: `calc(${shape.props.w}px + 1px / var(--tl-zoom))`,
                            height: `calc(${shape.props.h}px + 1px / var(--tl-zoom))`,
                            transform: `translate(calc(-0.5px / var(--tl-zoom)), calc(-0.5px / var(--tl-zoom)))`
                        }
                    })
                }),
                isCreating ? null : /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$components$2f$FrameHeading$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FrameHeading"], {
                    id: shape.id,
                    name: shape.props.name,
                    fill: frameHeadingFill,
                    stroke: frameHeadingStroke,
                    color: frameHeadingText,
                    width: shape.props.w,
                    height: shape.props.h,
                    offsetX: showFrameColors ? -1 : -7,
                    showColors: this.options.showColors
                })
            ]
        });
    }
    toSvg(shape, ctx) {
        const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getDefaultColorTheme"])({
            isDarkMode: ctx.isDarkMode
        });
        const labelSide = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$frameHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFrameHeadingSide"])(this.editor, shape);
        const isVertical = labelSide % 2 === 1;
        const rotatedTopEdgeWidth = isVertical ? shape.props.h : shape.props.w;
        const labelTranslate = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$frameHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFrameHeadingTranslation"])(shape, labelSide, true);
        const opts = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$frameHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFrameHeadingOpts"])(rotatedTopEdgeWidth - 12, true);
        const frameTitle = defaultEmptyAs(shape.props.name, "Frame") + String.fromCharCode(8203);
        const labelBounds = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$frame$2f$frameHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFrameHeadingSize"])(this.editor, shape, opts);
        const spans = this.editor.textMeasure.measureTextSpans(frameTitle, opts);
        const text = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$createTextJsxFromSpans$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createTextJsxFromSpans"])(this.editor, spans, opts);
        const showFrameColors = this.options.showColors;
        const color = theme[shape.props.color];
        const frameFill = showFrameColors ? color.frame.fill : theme.black.frame.fill;
        const frameStroke = showFrameColors ? color.frame.stroke : theme.black.frame.stroke;
        const frameHeadingStroke = showFrameColors ? color.frame.headingStroke : theme.background;
        const frameHeadingFill = showFrameColors ? color.frame.headingFill : theme.background;
        const frameHeadingText = showFrameColors ? color.frame.text : theme.text;
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
            children: [
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
                    width: shape.props.w,
                    height: shape.props.h,
                    fill: frameFill,
                    stroke: frameStroke,
                    strokeWidth: 1,
                    x: 0,
                    rx: 0,
                    ry: 0
                }),
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("g", {
                    fill: frameHeadingText,
                    transform: labelTranslate,
                    children: [
                        /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
                            x: labelBounds.x - (showFrameColors ? 0 : 6),
                            y: labelBounds.y - 6,
                            width: Math.min(rotatedTopEdgeWidth, labelBounds.width + 12),
                            height: labelBounds.height,
                            fill: frameHeadingFill,
                            stroke: frameHeadingStroke,
                            rx: 4,
                            ry: 4
                        }),
                        /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("g", {
                            transform: `translate(${showFrameColors ? 8 : 0}, 4)`,
                            children: text
                        })
                    ]
                })
            ]
        });
    }
    indicator(shape) {
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
            width: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.w),
            height: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.h),
            className: `tl-frame-indicator`
        });
    }
    providesBackgroundForChildren() {
        return true;
    }
    canReceiveNewChildrenOfType(shape) {
        return !shape.isLocked;
    }
    onResize(shape, info) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$shared$2f$resizeBox$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["resizeBox"])(shape, info);
    }
    getInterpolatedProps(startShape, endShape, t) {
        return {
            ...t > 0.5 ? endShape.props : startShape.props,
            w: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.w, endShape.props.w, t),
            h: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.h, endShape.props.h, t)
        };
    }
    onDoubleClickEdge(shape, info) {
        if (info.target !== "selection") return;
        const { handle } = info;
        if (!handle) return;
        const isHorizontalEdge = handle === "left" || handle === "right";
        const isVerticalEdge = handle === "top" || handle === "bottom";
        const childIds = this.editor.getSortedChildIdsForParent(shape.id);
        const children = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compact"])(childIds.map((id)=>this.editor.getShape(id)));
        if (!children.length) return;
        const { dx, dy, w, h } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$frames$2f$frames$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFrameChildrenBounds"])(children, this.editor, {
            padding: 10
        });
        this.editor.run(()=>{
            const changes = childIds.map((childId)=>{
                const childShape = this.editor.getShape(childId);
                return {
                    id: childShape.id,
                    type: childShape.type,
                    x: isHorizontalEdge ? childShape.x + dx : childShape.x,
                    y: isVerticalEdge ? childShape.y + dy : childShape.y
                };
            });
            this.editor.updateShapes(changes);
        });
        return {
            id: shape.id,
            type: shape.type,
            props: {
                w: isHorizontalEdge ? w : shape.props.w,
                h: isVerticalEdge ? h : shape.props.h
            }
        };
    }
    onDoubleClickCorner(shape) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$frames$2f$frames$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["fitFrameToContent"])(this.editor, shape.id, {
            padding: 10
        });
        return {
            id: shape.id,
            type: shape.type
        };
    }
    onDragShapesIn(shape, draggingShapes, { initialParentIds, initialIndices }) {
        const { editor } = this;
        if (draggingShapes.every((s)=>s.parentId === shape.id)) return;
        let canRestoreOriginalIndices = false;
        const previousChildren = draggingShapes.filter((s)=>shape.id === initialParentIds.get(s.id));
        if (previousChildren.length > 0) {
            const currentChildren = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["compact"])(editor.getSortedChildIdsForParent(shape).map((id)=>editor.getShape(id)));
            if (previousChildren.every((s)=>!currentChildren.find((c)=>c.index === s.index))) {
                canRestoreOriginalIndices = true;
            }
        }
        if (draggingShapes.some((s)=>editor.hasAncestor(shape, s.id))) return;
        editor.reparentShapes(draggingShapes, shape.id);
        if (canRestoreOriginalIndices) {
            for (const shape2 of previousChildren){
                editor.updateShape({
                    id: shape2.id,
                    type: shape2.type,
                    index: initialIndices.get(shape2.id)
                });
            }
        }
    }
    onDragShapesOut(shape, draggingShapes, info) {
        const { editor } = this;
        if (!info.nextDraggingOverShapeId) {
            editor.reparentShapes(draggingShapes.filter((s)=>s.parentId === shape.id && this.canReceiveNewChildrenOfType(s)), editor.getCurrentPageId());
        }
    }
}
;
 //# sourceMappingURL=FrameShapeUtil.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/text/RichTextArea.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "RichTextArea": (()=>RichTextArea)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tiptap$2f$core$2f$dist$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tiptap/core/dist/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/utils/dom.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEvent$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEvent.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useSafeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useSafeId.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
;
;
;
const RichTextArea = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].forwardRef(function RichTextArea2({ shapeId, isEditing, richText, handleFocus, handleChange, handleBlur, handleKeyDown, handleDoubleClick, hasCustomTabBehavior, handlePaste }, ref) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const tipTapId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useSafeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useUniqueSafeId"])("tip-tap-editor");
    const tipTapConfig = editor.getTextOptions().tipTapConfig;
    const rInitialRichText = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(richText);
    const rTextEditor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    const rTextEditorEl = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useLayoutEffect"])(()=>{
        if (!rTextEditor.current) {
            rInitialRichText.current = richText;
        } else if (rInitialRichText.current !== richText) {
            rTextEditor.current.commands.setContent(richText);
        }
    }, [
        richText
    ]);
    const rCreateInfo = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])({
        selectAll: false,
        caretPosition: null
    });
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useLayoutEffect"])(()=>{
        function selectAllIfEditing(event) {
            if (event.shapeId === editor.getEditingShapeId()) {
                rCreateInfo.current.selectAll = true;
            }
        }
        function placeCaret(event) {
            if (event.shapeId === editor.getEditingShapeId()) {
                rCreateInfo.current.caretPosition = event.point;
            }
        }
        editor.on("select-all-text", selectAllIfEditing);
        editor.on("place-caret", placeCaret);
        return ()=>{
            editor.off("select-all-text", selectAllIfEditing);
            editor.off("place-caret", placeCaret);
        };
    }, [
        editor,
        isEditing
    ]);
    const onChange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEvent$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEvent"])(handleChange);
    const onKeyDown = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEvent$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEvent"])(handleKeyDown);
    const onFocus = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEvent$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEvent"])(handleFocus);
    const onBlur = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEvent$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEvent"])(handleBlur);
    const onDoubleClick = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEvent$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEvent"])(handleDoubleClick);
    const onPaste = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEvent$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEvent"])(handlePaste);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useLayoutEffect"])(()=>{
        if (!isEditing || !tipTapConfig || !rTextEditorEl.current) return;
        const { editorProps, ...restOfTipTapConfig } = tipTapConfig;
        const textEditorInstance = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tiptap$2f$core$2f$dist$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Editor"]({
            element: rTextEditorEl.current,
            autofocus: true,
            editable: isEditing,
            onUpdate: (props)=>{
                const content = props.editor.state.doc.toJSON();
                rInitialRichText.current = content;
                onChange({
                    richText: content
                });
            },
            onFocus,
            onBlur,
            // onCreate is called after a `setTimeout(0)`
            onCreate: (props)=>{
                if (editor.getEditingShapeId() !== shapeId) return;
                const textEditor = props.editor;
                editor.setRichTextEditor(textEditor);
                const { selectAll, caretPosition } = rCreateInfo.current;
                if (selectAll) {
                    textEditor.chain().focus().selectAll().run();
                } else if (caretPosition) {
                    const pos = textEditor.view.posAtCoords({
                        left: caretPosition.x,
                        top: caretPosition.y
                    })?.pos;
                    if (pos) {
                        textEditor.chain().focus().setTextSelection(pos).run();
                    } else {
                        textEditor.chain().focus().selectAll().run();
                    }
                }
            },
            editorProps: {
                handleKeyDown: (view, event)=>{
                    if (!hasCustomTabBehavior && event.key === "Tab") {
                        handleTab(editor, view, event);
                    }
                    onKeyDown(event);
                },
                handlePaste: (view, event)=>{
                    onPaste(event);
                    if (event.defaultPrevented) return true;
                },
                handleDoubleClick: (_view, _pos, event)=>onDoubleClick(event),
                ...editorProps
            },
            coreExtensionOptions: {
                clipboardTextSerializer: {
                    blockSeparator: "\n"
                }
            },
            ...restOfTipTapConfig,
            content: rInitialRichText.current
        });
        const timeout = editor.timers.setTimeout(()=>{
            if (rCreateInfo.current.caretPosition || rCreateInfo.current.selectAll) {
                textEditorInstance.commands.focus();
            } else {
                textEditorInstance.commands.focus("end");
            }
            rCreateInfo.current.selectAll = false;
            rCreateInfo.current.caretPosition = null;
        }, 100);
        rTextEditor.current = textEditorInstance;
        return ()=>{
            rTextEditor.current = null;
            clearTimeout(timeout);
            textEditorInstance.destroy();
        };
    }, [
        isEditing,
        tipTapConfig,
        onFocus,
        onBlur,
        onDoubleClick,
        onChange,
        onPaste,
        onKeyDown,
        editor,
        shapeId,
        hasCustomTabBehavior
    ]);
    if (!isEditing || !tipTapConfig) {
        return null;
    }
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
        id: tipTapId,
        ref,
        tabIndex: -1,
        "data-testid": "rich-text-area",
        className: "tl-rich-text tl-text tl-text-input",
        onContextMenu: isEditing ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stopEventPropagation"] : void 0,
        onPointerDownCapture: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stopEventPropagation"],
        onTouchEnd: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stopEventPropagation"],
        onDragStart: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["preventDefault"],
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
            className: "tl-rich-text",
            ref: rTextEditorEl
        })
    });
});
function handleTab(editor, view, event) {
    event.preventDefault();
    const textEditor = editor.getRichTextEditor();
    if (textEditor?.isActive("bulletList") || textEditor?.isActive("orderedList")) return;
    const { state, dispatch } = view;
    const { $from, $to } = state.selection;
    const isShift = event.shiftKey;
    let tr = state.tr;
    let pos = $to.end();
    while(pos >= $from.start()){
        const line = state.doc.resolve(pos).blockRange();
        if (!line) break;
        const lineStart = line.start;
        const lineEnd = line.end;
        const lineText = state.doc.textBetween(lineStart, lineEnd, "\n");
        let isInList = false;
        state.doc.nodesBetween(lineStart, lineEnd, (node)=>{
            if (node.type.name === "bulletList" || node.type.name === "orderedList") {
                isInList = true;
                return false;
            }
        });
        if (!isInList) {
            if (!isShift) {
                tr = tr.insertText("	", lineStart + 1);
            } else {
                if (lineText.startsWith("	")) {
                    tr = tr.delete(lineStart + 1, lineStart + 2);
                }
            }
        }
        pos = lineStart - 1;
    }
    const mappedSelection = state.selection.map(tr.doc, tr.mapping);
    tr.setSelection(mappedSelection);
    if (tr.docChanged) {
        dispatch(tr);
    }
}
;
 //# sourceMappingURL=RichTextArea.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useEditableRichText.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useEditableRichText": (()=>useEditableRichText)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$keyboard$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/utils/keyboard.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/utils/text/richText.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useEditablePlainText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useEditablePlainText.mjs [app-ssr] (ecmascript)");
;
;
;
;
function useEditableRichText(shapeId, type, richText) {
    const commonUseEditableTextHandlers = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useEditablePlainText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditableTextCommon"])(shapeId);
    const isEditing = commonUseEditableTextHandlers.isEditing;
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const rInput = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    const isEmpty = richText && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEmptyRichText"])(richText);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (!isEditing) return;
        const contentEditable = rInput.current?.querySelector("[contenteditable]");
        if (contentEditable && document.activeElement !== rInput.current) {
            ;
            contentEditable.focus();
        }
    }, [
        editor,
        isEditing
    ]);
    const handleKeyDown = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((e)=>{
        if (editor.getEditingShapeId() !== shapeId) return;
        if (e.key === "Enter" && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$keyboard$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isAccelKey"])(e)) editor.complete();
    }, [
        editor,
        shapeId
    ]);
    const handleChange = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])(({ richText: richText2 })=>{
        if (editor.getEditingShapeId() !== shapeId) return;
        editor.updateShape({
            id: shapeId,
            type,
            props: {
                richText: richText2
            }
        });
    }, [
        editor,
        shapeId,
        type
    ]);
    return {
        rInput,
        handleKeyDown,
        handleChange,
        isEmpty,
        ...commonUseEditableTextHandlers
    };
}
;
 //# sourceMappingURL=useEditableRichText.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/RichTextLabel.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "RichTextLabel": (()=>RichTextLabel),
    "RichTextSVG": (()=>RichTextSVG)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLFontStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/styles/TLFontStyle.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/utils/dom.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useReactor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useReactor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/utils/text/richText.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$text$2f$RichTextArea$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/text/RichTextArea.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/default-shape-constants.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$legacyProps$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/legacyProps.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useEditableRichText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useEditableRichText.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
const RichTextLabel = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].memo(function RichTextLabel2({ shapeId, type, richText, labelColor, font, fontSize, lineHeight, align, verticalAlign, wrap, isSelected, padding = 0, onKeyDown: handleKeyDownCustom, classNamePrefix, style, textWidth, textHeight, hasCustomTabBehavior }) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const isDragging = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].useRef(false);
    const { rInput, isEmpty, isEditing, isReadyForEditing, ...editableTextRest } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useEditableRichText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditableRichText"])(shapeId, type, richText);
    const html = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useMemo"])(()=>{
        if (richText) {
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["renderHtmlFromRichText"])(editor, richText);
        }
    }, [
        editor,
        richText
    ]);
    const selectToolActive = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("isSelectToolActive", ()=>editor.getCurrentToolId() === "select", [
        editor
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useReactor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useReactor"])("isDragging", ()=>{
        editor.getInstanceState();
        isDragging.current = editor.inputs.isDragging;
    }, [
        editor
    ]);
    const legacyAlign = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$legacyProps$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isLegacyAlign"])(align);
    const handlePointerDown = (e)=>{
        if (e.target instanceof HTMLElement && (e.target.tagName === "A" || e.target.closest("a"))) {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$dom$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["preventDefault"])(e);
            if (!selectToolActive) return;
            const link = e.target.closest("a")?.getAttribute("href") ?? "";
            const handlePointerUp = (e2)=>{
                if (e2.name !== "pointer_up") return;
                if (!isDragging.current) {
                    window.open(link, "_blank", "noopener, noreferrer");
                }
                editor.off("event", handlePointerUp);
            };
            editor.on("event", handlePointerUp);
        }
    };
    if (!isEditing && isEmpty) return null;
    const cssPrefix = classNamePrefix || "tl-text";
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
        className: `${cssPrefix}-label tl-text-wrapper tl-rich-text-wrapper`,
        "aria-hidden": !isEditing,
        "data-font": font,
        "data-align": align,
        "data-hastext": !isEmpty,
        "data-isediting": isEditing,
        "data-textwrap": !!wrap,
        "data-isselected": isSelected,
        style: {
            justifyContent: align === "middle" || legacyAlign ? "center" : align,
            alignItems: verticalAlign === "middle" ? "center" : verticalAlign,
            padding,
            ...style
        },
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("div", {
            className: `${cssPrefix}-label__inner tl-text-content__wrapper`,
            style: {
                fontSize,
                lineHeight: lineHeight.toString(),
                minHeight: Math.floor(fontSize * lineHeight) + "px",
                minWidth: Math.ceil(textWidth || 0),
                color: labelColor,
                width: textWidth ? Math.ceil(textWidth) : void 0,
                height: textHeight ? Math.ceil(textHeight) : void 0
            },
            children: [
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
                    className: `${cssPrefix} tl-text tl-text-content`,
                    dir: "auto",
                    children: richText && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
                        className: "tl-rich-text",
                        "data-is-select-tool-active": selectToolActive,
                        dangerouslySetInnerHTML: {
                            __html: html || ""
                        },
                        onPointerDown: handlePointerDown,
                        "data-is-ready-for-editing": isReadyForEditing
                    })
                }),
                (isReadyForEditing || isSelected) && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$text$2f$RichTextArea$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["RichTextArea"], {
                    ref: rInput,
                    richText,
                    isEditing,
                    shapeId,
                    ...editableTextRest,
                    hasCustomTabBehavior,
                    handleKeyDown: handleKeyDownCustom ?? editableTextRest.handleKeyDown
                })
            ]
        })
    });
});
function RichTextSVG({ bounds, richText, fontSize, font, align, verticalAlign, wrap, labelColor, padding, showTextOutline = true }) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const html = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["renderHtmlFromRichText"])(editor, richText);
    const textAlign = align === "middle" ? "center" : align === "start" ? "start" : "end";
    const justifyContent = align === "middle" ? "center" : align === "start" ? "flex-start" : "flex-end";
    const alignItems = verticalAlign === "middle" ? "center" : verticalAlign === "start" ? "flex-start" : "flex-end";
    const wrapperStyle = {
        display: "flex",
        fontFamily: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLFontStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DefaultFontFamilies"][font],
        height: `100%`,
        justifyContent,
        alignItems,
        padding: `${padding}px`
    };
    const style = {
        fontSize: `${fontSize}px`,
        wrap: wrap ? "wrap" : "nowrap",
        color: labelColor,
        lineHeight: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TEXT_PROPS"].lineHeight,
        textAlign,
        width: "100%",
        wordWrap: "break-word",
        overflowWrap: "break-word",
        whiteSpace: "pre-wrap",
        textShadow: showTextOutline ? "var(--tl-text-outline)" : "none"
    };
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("foreignObject", {
        x: bounds.minX,
        y: bounds.minY,
        width: bounds.w,
        height: bounds.h,
        className: "tl-export-embed-styles tl-rich-text tl-rich-text-svg",
        children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
            style: wrapperStyle,
            children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
                dangerouslySetInnerHTML: {
                    __html: html
                },
                style
            })
        })
    });
}
;
 //# sourceMappingURL=RichTextLabel.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/geo/getGeoShapePath.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "getGeoShapePath": (()=>getGeoShapePath)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/cache.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/shared.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/PathBuilder.mjs [app-ssr] (ecmascript)");
;
;
;
const pathCache = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WeakCache"]();
function getGeoShapePath(shape) {
    return pathCache.get(shape, _getGeoPath);
}
function _getGeoPath(shape) {
    const w = Math.max(1, shape.props.w);
    const h = Math.max(1, shape.props.h + shape.props.growY);
    const cx = w / 2;
    const cy = h / 2;
    const sw = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape.props.size] * shape.props.scale;
    const isFilled = shape.props.fill !== "none";
    switch(shape.props.geo){
        case "arrow-down":
            {
                const ox = w * 0.16;
                const oy = Math.min(w, h) * 0.38;
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(ox, 0, {
                    geometry: {
                        isFilled
                    }
                }).lineTo(w - ox, 0).lineTo(w - ox, h - oy).lineTo(w, h - oy).lineTo(w / 2, h).lineTo(0, h - oy).lineTo(ox, h - oy).close();
            }
        case "arrow-left":
            {
                const ox = Math.min(w, h) * 0.38;
                const oy = h * 0.16;
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(ox, 0, {
                    geometry: {
                        isFilled
                    }
                }).lineTo(ox, oy).lineTo(w, oy).lineTo(w, h - oy).lineTo(ox, h - oy).lineTo(ox, h).lineTo(0, h / 2).close();
            }
        case "arrow-right":
            {
                const ox = Math.min(w, h) * 0.38;
                const oy = h * 0.16;
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(0, oy, {
                    geometry: {
                        isFilled
                    }
                }).lineTo(w - ox, oy).lineTo(w - ox, 0).lineTo(w, h / 2).lineTo(w - ox, h).lineTo(w - ox, h - oy).lineTo(0, h - oy).close();
            }
        case "arrow-up":
            {
                const ox = w * 0.16;
                const oy = Math.min(w, h) * 0.38;
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(w / 2, 0, {
                    geometry: {
                        isFilled
                    }
                }).lineTo(w, oy).lineTo(w - ox, oy).lineTo(w - ox, h).lineTo(ox, h).lineTo(ox, oy).lineTo(0, oy).close();
            }
        case "check-box":
            {
                const size = Math.min(w, h) * 0.82;
                const ox = (w - size) / 2;
                const oy = (h - size) / 2;
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(0, 0, {
                    geometry: {
                        isFilled
                    }
                }).lineTo(w, 0).lineTo(w, h).lineTo(0, h).close().moveTo((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(ox + size * 0.25, 0, w), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(oy + size * 0.52, 0, h), {
                    geometry: {
                        isInternal: true,
                        isFilled: false
                    },
                    offset: 0
                }).lineTo((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(ox + size * 0.45, 0, w), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(oy + size * 0.82, 0, h)).lineTo((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(ox + size * 0.82, 0, w), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(oy + size * 0.22, 0, h), {
                    offset: 0
                });
            }
        case "diamond":
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(cx, 0, {
                geometry: {
                    isFilled
                }
            }).lineTo(w, cy).lineTo(cx, h).lineTo(0, cy).close();
        case "ellipse":
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(0, cy, {
                geometry: {
                    isFilled
                }
            }).arcTo(cx, cy, false, true, 0, w, cy).arcTo(cx, cy, false, true, 0, 0, cy).close();
        case "heart":
            {
                const o = w / 4;
                const k = h / 4;
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(cx, h, {
                    geometry: {
                        isFilled
                    }
                }).cubicBezierTo(0, k * 1.2, o * 1.5, k * 3, 0, k * 2.5).cubicBezierTo(cx, k * 0.9, 0, -k * 0.32, o * 1.85, -k * 0.32).cubicBezierTo(w, k * 1.2, o * 2.15, -k * 0.32, w, -k * 0.32).cubicBezierTo(cx, h, w, k * 2.5, o * 2.5, k * 3).close();
            }
        case "hexagon":
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"].lineThroughPoints((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPolygonVertices"])(w, h, 6), {
                geometry: {
                    isFilled
                }
            }).close();
        case "octagon":
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"].lineThroughPoints((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPolygonVertices"])(w, h, 8), {
                geometry: {
                    isFilled
                }
            }).close();
        case "oval":
            return getStadiumPath(w, h, isFilled);
        case "pentagon":
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"].lineThroughPoints((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPolygonVertices"])(w, h, 5), {
                geometry: {
                    isFilled
                }
            }).close();
        case "rectangle":
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(0, 0, {
                geometry: {
                    isFilled
                }
            }).lineTo(w, 0).lineTo(w, h).lineTo(0, h).close();
        case "rhombus":
            {
                const offset = Math.min(w * 0.38, h * 0.38);
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(offset, 0, {
                    geometry: {
                        isFilled
                    }
                }).lineTo(w, 0).lineTo(w - offset, h).lineTo(0, h).close();
            }
        case "rhombus-2":
            {
                const offset = Math.min(w * 0.38, h * 0.38);
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(0, 0, {
                    geometry: {
                        isFilled
                    }
                }).lineTo(w - offset, 0).lineTo(w, h).lineTo(offset, h).close();
            }
        case "star":
            return getStarPath(w, h, isFilled);
        case "trapezoid":
            {
                const offset = Math.min(w * 0.38, h * 0.38);
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(offset, 0, {
                    geometry: {
                        isFilled
                    }
                }).lineTo(w - offset, 0).lineTo(w, h).lineTo(0, h).close();
            }
        case "triangle":
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(cx, 0, {
                geometry: {
                    isFilled
                }
            }).lineTo(w, h).lineTo(0, h).close();
        case "x-box":
            return getXBoxPath(w, h, sw, shape.props.dash, isFilled);
        case "cloud":
            return getCloudPath(w, h, shape.id, shape.props.size, shape.props.scale, isFilled);
        default:
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(shape.props.geo);
    }
}
function getXBoxPath(w, h, sw, dash, isFilled) {
    const cx = w / 2;
    const cy = h / 2;
    const path = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(0, 0, {
        geometry: {
            isFilled
        }
    }).lineTo(w, 0).lineTo(w, h).lineTo(0, h).close();
    if (dash === "dashed" || dash === "dotted") {
        return path.moveTo(0, 0, {
            geometry: {
                isInternal: true,
                isFilled: false
            },
            dashStart: "skip",
            dashEnd: "outset"
        }).lineTo(cx, cy).moveTo(w, h, {
            geometry: {
                isInternal: true,
                isFilled: false
            },
            dashStart: "skip",
            dashEnd: "outset"
        }).lineTo(cx, cy).moveTo(0, h, {
            geometry: {
                isInternal: true,
                isFilled: false
            },
            dashStart: "skip",
            dashEnd: "outset"
        }).lineTo(cx, cy).moveTo(w, 0, {
            geometry: {
                isInternal: true,
                isFilled: false
            },
            dashStart: "skip",
            dashEnd: "outset"
        }).lineTo(cx, cy);
    }
    const inset = dash === "draw" ? 0.62 : 0;
    path.moveTo((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(sw * inset, 0, w), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(sw * inset, 0, h), {
        geometry: {
            isInternal: true,
            isFilled: false
        }
    }).lineTo((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(w - sw * inset, 0, w), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(h - sw * inset, 0, h)).moveTo((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(w - sw * inset, 0, w), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(sw * inset, 0, h)).lineTo((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(sw * inset, 0, w), (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["clamp"])(h - sw * inset, 0, h));
    return path;
}
function getStadiumPath(w, h, isFilled) {
    if (h > w) {
        const r2 = w / 2;
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(0, r2, {
            geometry: {
                isFilled
            }
        }).arcTo(r2, r2, false, true, 0, w, r2).lineTo(w, h - r2).arcTo(r2, r2, false, true, 0, 0, h - r2).close();
    }
    const r = h / 2;
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]().moveTo(r, h, {
        geometry: {
            isFilled
        }
    }).arcTo(r, r, false, true, 0, r, 0).lineTo(w - r, 0).arcTo(r, r, false, true, 0, w - r, h).close();
}
function getStarPath(w, h, isFilled) {
    const sides = 5;
    const step = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI2"] / sides / 2;
    const rightMostIndex = Math.floor(sides / 4) * 2;
    const leftMostIndex = sides * 2 - rightMostIndex;
    const topMostIndex = 0;
    const bottomMostIndex = Math.floor(sides / 2) * 2;
    const maxX = Math.cos(-__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HALF_PI"] + rightMostIndex * step) * w / 2;
    const minX = Math.cos(-__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HALF_PI"] + leftMostIndex * step) * w / 2;
    const minY = Math.sin(-__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HALF_PI"] + topMostIndex * step) * h / 2;
    const maxY = Math.sin(-__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HALF_PI"] + bottomMostIndex * step) * h / 2;
    const diffX = w - Math.abs(maxX - minX);
    const diffY = h - Math.abs(maxY - minY);
    const offsetX = w / 2 + minX - (w / 2 - maxX);
    const offsetY = h / 2 + minY - (h / 2 - maxY);
    const ratio = 1;
    const cx = (w - offsetX) / 2;
    const cy = (h - offsetY) / 2;
    const ox = (w + diffX) / 2;
    const oy = (h + diffY) / 2;
    const ix = ox * ratio / 2;
    const iy = oy * ratio / 2;
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"].lineThroughPoints(Array.from(Array(sides * 2), (_, i)=>{
        const theta = -__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HALF_PI"] + i * step;
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](cx + (i % 2 ? ix : ox) * Math.cos(theta), cy + (i % 2 ? iy : oy) * Math.sin(theta));
    }), {
        geometry: {
            isFilled
        }
    }).close();
}
function getOvalPerimeter(h, w) {
    if (h > w) return (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"] * (w / 2) + (h - w)) * 2;
    else return (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"] * (h / 2) + (w - h)) * 2;
}
function getPillPoints(width, height, numPoints) {
    const radius = Math.min(width, height) / 2;
    const longSide = Math.max(width, height) - radius * 2;
    const circumference = Math.PI * (radius * 2) + 2 * longSide;
    const spacing = circumference / numPoints;
    const sections = width > height ? [
        {
            type: "straight",
            start: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](radius, 0),
            delta: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](1, 0)
        },
        {
            type: "arc",
            center: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](width - radius, radius),
            startAngle: -__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"] / 2
        },
        {
            type: "straight",
            start: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](width - radius, height),
            delta: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](-1, 0)
        },
        {
            type: "arc",
            center: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](radius, radius),
            startAngle: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"] / 2
        }
    ] : [
        {
            type: "straight",
            start: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](width, radius),
            delta: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](0, 1)
        },
        {
            type: "arc",
            center: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](radius, height - radius),
            startAngle: 0
        },
        {
            type: "straight",
            start: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](0, height - radius),
            delta: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](0, -1)
        },
        {
            type: "arc",
            center: new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](radius, radius),
            startAngle: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"]
        }
    ];
    let sectionOffset = 0;
    const points = [];
    for(let i = 0; i < numPoints; i++){
        const section = sections[0];
        if (section.type === "straight") {
            points.push(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Add(section.start, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Mul(section.delta, sectionOffset)));
        } else {
            points.push((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPointOnCircle"])(section.center, radius, section.startAngle + sectionOffset / radius));
        }
        sectionOffset += spacing;
        let sectionLength = section.type === "straight" ? longSide : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"] * radius;
        while(sectionOffset > sectionLength){
            sectionOffset -= sectionLength;
            sections.push(sections.shift());
            sectionLength = sections[0].type === "straight" ? longSide : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PI"] * radius;
        }
    }
    return points;
}
const SIZES = {
    s: 50,
    m: 70,
    l: 100,
    xl: 130
};
const BUMP_PROTRUSION = 0.2;
function getCloudPath(width, height, seed, size, scale, isFilled) {
    const path = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"]();
    const getRandom = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rng"])(seed);
    const pillCircumference = getOvalPerimeter(width, height);
    const numBumps = Math.max(Math.ceil(pillCircumference / SIZES[size]), 6, Math.ceil(pillCircumference / Math.min(width, height)));
    const targetBumpProtrusion = pillCircumference / numBumps * BUMP_PROTRUSION;
    const innerWidth = Math.max(width - targetBumpProtrusion * 2, 1);
    const innerHeight = Math.max(height - targetBumpProtrusion * 2, 1);
    const innerCircumference = getOvalPerimeter(innerWidth, innerHeight);
    const distanceBetweenPointsOnPerimeter = innerCircumference / numBumps;
    const paddingX = (width - innerWidth) / 2;
    const paddingY = (height - innerHeight) / 2;
    const bumpPoints = getPillPoints(innerWidth, innerHeight, numBumps).map((p)=>{
        return p.addXY(paddingX, paddingY);
    });
    const maxWiggleX = width < 20 ? 0 : targetBumpProtrusion * 0.3;
    const maxWiggleY = height < 20 ? 0 : targetBumpProtrusion * 0.3;
    const wiggledPoints = bumpPoints.slice(0);
    for(let i = 0; i < Math.floor(numBumps / 2); i++){
        wiggledPoints[i] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].AddXY(wiggledPoints[i], getRandom() * maxWiggleX * scale, getRandom() * maxWiggleY * scale);
        wiggledPoints[numBumps - i - 1] = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].AddXY(wiggledPoints[numBumps - i - 1], getRandom() * maxWiggleX * scale, getRandom() * maxWiggleY * scale);
    }
    for(let i = 0; i < wiggledPoints.length; i++){
        const j = i === wiggledPoints.length - 1 ? 0 : i + 1;
        const leftWigglePoint = wiggledPoints[i];
        const rightWigglePoint = wiggledPoints[j];
        const leftPoint = bumpPoints[i];
        const rightPoint = bumpPoints[j];
        const distanceBetweenOriginalPoints = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(leftPoint, rightPoint);
        const curvatureOffset = distanceBetweenPointsOnPerimeter - distanceBetweenOriginalPoints;
        const distanceBetweenWigglePoints = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(leftWigglePoint, rightWigglePoint);
        const relativeSize = distanceBetweenWigglePoints / distanceBetweenOriginalPoints;
        const finalDistance = (Math.max(paddingX, paddingY) + curvatureOffset) * relativeSize;
        const arcPoint = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Lrp(leftPoint, rightPoint, 0.5).add(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(rightPoint, leftPoint).uni().per().mul(finalDistance));
        if (arcPoint.x < 0) {
            arcPoint.x = 0;
        } else if (arcPoint.x > width) {
            arcPoint.x = width;
        }
        if (arcPoint.y < 0) {
            arcPoint.y = 0;
        } else if (arcPoint.y > height) {
            arcPoint.y = height;
        }
        const center = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["centerOfCircleFromThreePoints"])(leftWigglePoint, rightWigglePoint, arcPoint);
        const radius = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Dist(center ? center : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Average([
            leftWigglePoint,
            rightWigglePoint
        ]), leftWigglePoint);
        if (i === 0) {
            path.moveTo(leftWigglePoint.x, leftWigglePoint.y, {
                geometry: {
                    isFilled
                }
            });
        }
        path.circularArcTo(radius, false, true, rightWigglePoint.x, rightWigglePoint.y);
    }
    return path.close();
}
;
 //# sourceMappingURL=getGeoShapePath.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/geo/components/GeoShapeBody.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "GeoShapeBody": (()=>GeoShapeBody)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$ShapeFill$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/ShapeFill.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/default-shape-constants.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useDefaultColorTheme.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$geo$2f$getGeoShapePath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/geo/getGeoShapePath.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
function GeoShapeBody({ shape, shouldScale, forceSolid }) {
    const scaleToUse = shouldScale ? shape.props.scale : 1;
    const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultColorTheme"])();
    const { props } = shape;
    const { color, fill, dash, size } = props;
    const strokeWidth = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][size] * scaleToUse;
    const path = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$geo$2f$getGeoShapePath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getGeoShapePath"])(shape);
    const fillPath = dash === "draw" && !forceSolid ? path.toDrawD({
        strokeWidth,
        randomSeed: shape.id,
        passes: 1,
        offset: 0,
        onlyFilled: true
    }) : path.toD({
        onlyFilled: true
    });
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$ShapeFill$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ShapeFill"], {
                theme,
                d: fillPath,
                color,
                fill,
                scale: scaleToUse
            }),
            path.toSvg({
                style: dash,
                strokeWidth,
                forceSolid,
                randomSeed: shape.id,
                props: {
                    fill: "none",
                    stroke: theme[color].solid
                }
            })
        ]
    });
}
;
 //# sourceMappingURL=GeoShapeBody.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/geo/GeoShapeUtil.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "GeoShapeUtil": (()=>GeoShapeUtil)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$BaseBoxShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/BaseBoxShapeUtil.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Box.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/helpers.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Group2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Group2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$HTMLContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/components/HTMLContainer.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Rectangle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Rectangle2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$SVGContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/components/SVGContainer.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLGeoShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/shapes/TLGeoShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/styles/TLColorStyle.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/utils/richText.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$isequal$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__isEqual$3e$__ = __turbopack_context__.i("[project]/node_modules/lodash.isequal/index.js [app-ssr] (ecmascript) <export default as isEqual>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$misc$2f$TLRichText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/misc/TLRichText.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/utils/text/richText.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$HyperlinkButton$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/HyperlinkButton.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$RichTextLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/RichTextLabel.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/default-shape-constants.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$defaultStyleDefs$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/defaultStyleDefs.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useDefaultColorTheme.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useEditablePlainText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useEditablePlainText.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$geo$2f$components$2f$GeoShapeBody$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/geo/components/GeoShapeBody.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$geo$2f$getGeoShapePath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/geo/getGeoShapePath.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
const MIN_SIZE_WITH_LABEL = 17 * 3;
class GeoShapeUtil extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$BaseBoxShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BaseBoxShapeUtil"] {
    static type = "geo";
    static props = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLGeoShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["geoShapeProps"];
    static migrations = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLGeoShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["geoShapeMigrations"];
    canEdit() {
        return true;
    }
    getDefaultProps() {
        return {
            w: 100,
            h: 100,
            geo: "rectangle",
            dash: "draw",
            growY: 0,
            url: "",
            scale: 1,
            // Text properties
            color: "black",
            labelColor: "black",
            fill: "none",
            size: "m",
            font: "draw",
            align: "middle",
            verticalAlign: "middle",
            richText: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$misc$2f$TLRichText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toRichText"])("")
        };
    }
    getGeometry(shape) {
        const w = Math.max(1, shape.props.w);
        const h = Math.max(1, shape.props.h + shape.props.growY);
        const path = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$geo$2f$getGeoShapePath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getGeoShapePath"])(shape);
        const unscaledlabelSize = getUnscaledLabelSize(this.editor, shape);
        const unscaledW = w / shape.props.scale;
        const unscaledH = h / shape.props.scale;
        const unscaledminWidth = Math.min(100, unscaledW / 2);
        const unscaledMinHeight = Math.min(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_FONT_SIZES"][shape.props.size] * __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TEXT_PROPS"].lineHeight + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_PADDING"] * 2, unscaledH / 2);
        const unscaledLabelWidth = Math.min(unscaledW, Math.max(unscaledlabelSize.w, Math.min(unscaledminWidth, Math.max(1, unscaledW - 8))));
        const unscaledLabelHeight = Math.min(unscaledH, Math.max(unscaledlabelSize.h, Math.min(unscaledMinHeight, Math.max(1, unscaledH - 8))));
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Group2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Group2d"]({
            children: [
                path.toGeometry(),
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Rectangle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Rectangle2d"]({
                    x: shape.props.align === "start" ? 0 : shape.props.align === "end" ? (unscaledW - unscaledLabelWidth) * shape.props.scale : (unscaledW - unscaledLabelWidth) / 2 * shape.props.scale,
                    y: shape.props.verticalAlign === "start" ? 0 : shape.props.verticalAlign === "end" ? (unscaledH - unscaledLabelHeight) * shape.props.scale : (unscaledH - unscaledLabelHeight) / 2 * shape.props.scale,
                    width: unscaledLabelWidth * shape.props.scale,
                    height: unscaledLabelHeight * shape.props.scale,
                    isFilled: true,
                    isLabel: true,
                    isEmptyLabel: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEmptyRichText"])(shape.props.richText)
                })
            ]
        });
    }
    getHandleSnapGeometry(shape) {
        const geometry = this.getGeometry(shape);
        const outline = geometry.children[0];
        switch(shape.props.geo){
            case "arrow-down":
            case "arrow-left":
            case "arrow-right":
            case "arrow-up":
            case "check-box":
            case "diamond":
            case "hexagon":
            case "octagon":
            case "pentagon":
            case "rectangle":
            case "rhombus":
            case "rhombus-2":
            case "star":
            case "trapezoid":
            case "triangle":
            case "x-box":
                return {
                    outline,
                    points: [
                        ...outline.vertices,
                        geometry.bounds.center
                    ]
                };
            case "cloud":
            case "ellipse":
            case "heart":
            case "oval":
                return {
                    outline,
                    points: [
                        geometry.bounds.center
                    ]
                };
            default:
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(shape.props.geo);
        }
    }
    getText(shape) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["renderPlaintextFromRichText"])(this.editor, shape.props.richText);
    }
    getFontFaces(shape) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEmptyRichText"])(shape.props.richText)) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EMPTY_ARRAY"];
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFontsFromRichText"])(this.editor, shape.props.richText, {
            family: `tldraw_${shape.props.font}`,
            weight: "normal",
            style: "normal"
        });
    }
    component(shape) {
        const { id, type, props } = shape;
        const { fill, font, align, verticalAlign, size, richText } = props;
        const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultColorTheme"])();
        const { editor } = this;
        const isOnlySelected = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("isGeoOnlySelected", ()=>shape.id === editor.getOnlySelectedShapeId(), [
            editor
        ]);
        const isReadyForEditing = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useEditablePlainText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useIsReadyForEditing"])(editor, shape.id);
        const isEmpty = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEmptyRichText"])(shape.props.richText);
        const showHtmlContainer = isReadyForEditing || !isEmpty;
        const isForceSolid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("force solid", ()=>editor.getZoomLevel() < 0.2, [
            editor
        ]);
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
            children: [
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$SVGContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SVGContainer"], {
                    children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$geo$2f$components$2f$GeoShapeBody$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GeoShapeBody"], {
                        shape,
                        shouldScale: true,
                        forceSolid: isForceSolid
                    })
                }),
                showHtmlContainer && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$HTMLContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HTMLContainer"], {
                    style: {
                        overflow: "hidden",
                        width: shape.props.w,
                        height: shape.props.h + props.growY
                    },
                    children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$RichTextLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["RichTextLabel"], {
                        shapeId: id,
                        type,
                        font,
                        fontSize: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_FONT_SIZES"][size] * shape.props.scale,
                        lineHeight: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TEXT_PROPS"].lineHeight,
                        padding: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_PADDING"] * shape.props.scale,
                        fill,
                        align,
                        verticalAlign,
                        richText,
                        isSelected: isOnlySelected,
                        labelColor: theme[props.labelColor].solid,
                        wrap: true
                    })
                }),
                shape.props.url && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$HyperlinkButton$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HyperlinkButton"], {
                    url: shape.props.url
                })
            ]
        });
    }
    indicator(shape) {
        const isZoomedOut = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("isZoomedOut", ()=>this.editor.getZoomLevel() < 0.25, [
            this.editor
        ]);
        const { size, dash, scale } = shape.props;
        const strokeWidth = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][size];
        const path = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$geo$2f$getGeoShapePath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getGeoShapePath"])(shape);
        return path.toSvg({
            style: dash === "draw" ? "draw" : "solid",
            strokeWidth: 1,
            passes: 1,
            randomSeed: shape.id,
            offset: 0,
            roundness: strokeWidth * 2 * scale,
            props: {
                strokeWidth: void 0
            },
            forceSolid: isZoomedOut
        });
    }
    toSvg(shape, ctx) {
        const scale = shape.props.scale;
        const newShape = {
            ...shape,
            props: {
                ...shape.props,
                w: shape.props.w / scale,
                h: (shape.props.h + shape.props.growY) / scale,
                growY: 0
            }
        };
        const props = newShape.props;
        ctx.addExportDef((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$defaultStyleDefs$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFillDefForExport"])(props.fill));
        let textEl;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEmptyRichText"])(props.richText)) {
            const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getDefaultColorTheme"])(ctx);
            const bounds = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"](0, 0, props.w, (shape.props.h + shape.props.growY) / scale);
            textEl = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$RichTextLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["RichTextSVG"], {
                fontSize: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_FONT_SIZES"][props.size],
                font: props.font,
                align: props.align,
                verticalAlign: props.verticalAlign,
                richText: props.richText,
                labelColor: theme[props.labelColor].solid,
                bounds,
                padding: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_PADDING"]
            });
        }
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
            children: [
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$geo$2f$components$2f$GeoShapeBody$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GeoShapeBody"], {
                    shouldScale: false,
                    shape: newShape,
                    forceSolid: false
                }),
                textEl
            ]
        });
    }
    getCanvasSvgDefs() {
        return [
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$defaultStyleDefs$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFillDefForCanvas"])()
        ];
    }
    onResize(shape, { handle, newPoint, scaleX, scaleY, initialShape }) {
        const unscaledInitialW = initialShape.props.w / initialShape.props.scale;
        const unscaledInitialH = initialShape.props.h / initialShape.props.scale;
        const unscaledGrowY = initialShape.props.growY / initialShape.props.scale;
        let unscaledW = unscaledInitialW * scaleX;
        let unscaledH = (unscaledInitialH + unscaledGrowY) * scaleY;
        let overShrinkX = 0;
        let overShrinkY = 0;
        const min = MIN_SIZE_WITH_LABEL;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEmptyRichText"])(shape.props.richText)) {
            let newW = Math.max(Math.abs(unscaledW), min);
            let newH = Math.max(Math.abs(unscaledH), min);
            if (newW < min && newH === min) newW = min;
            if (newW === min && newH < min) newH = min;
            const unscaledLabelSize = getUnscaledLabelSize(this.editor, {
                ...shape,
                props: {
                    ...shape.props,
                    w: newW * shape.props.scale,
                    h: newH * shape.props.scale
                }
            });
            const nextW = Math.max(Math.abs(unscaledW), unscaledLabelSize.w) * Math.sign(unscaledW);
            const nextH = Math.max(Math.abs(unscaledH), unscaledLabelSize.h) * Math.sign(unscaledH);
            overShrinkX = Math.abs(nextW) - Math.abs(unscaledW);
            overShrinkY = Math.abs(nextH) - Math.abs(unscaledH);
            unscaledW = nextW;
            unscaledH = nextH;
        }
        const scaledW = unscaledW * shape.props.scale;
        const scaledH = unscaledH * shape.props.scale;
        const offset = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](0, 0);
        if (scaleX < 0) {
            offset.x += scaledW;
        }
        if (handle === "left" || handle === "top_left" || handle === "bottom_left") {
            offset.x += scaleX < 0 ? overShrinkX : -overShrinkX;
        }
        if (scaleY < 0) {
            offset.y += scaledH;
        }
        if (handle === "top" || handle === "top_left" || handle === "top_right") {
            offset.y += scaleY < 0 ? overShrinkY : -overShrinkY;
        }
        const { x, y } = offset.rot(shape.rotation).add(newPoint);
        return {
            x,
            y,
            props: {
                w: Math.max(Math.abs(scaledW), 1),
                h: Math.max(Math.abs(scaledH), 1),
                growY: 0
            }
        };
    }
    onBeforeCreate(shape) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEmptyRichText"])(shape.props.richText)) {
            if (shape.props.growY) {
                return {
                    ...shape,
                    props: {
                        ...shape.props,
                        growY: 0
                    }
                };
            } else {
                return;
            }
        }
        const unscaledPrevHeight = shape.props.h / shape.props.scale;
        const unscaledNextHeight = getUnscaledLabelSize(this.editor, shape).h;
        let growY = null;
        if (unscaledNextHeight > unscaledPrevHeight) {
            growY = unscaledNextHeight - unscaledPrevHeight;
        } else {
            if (shape.props.growY) {
                growY = 0;
            }
        }
        if (growY !== null) {
            return {
                ...shape,
                props: {
                    ...shape.props,
                    // scale the growY
                    growY: growY * shape.props.scale
                }
            };
        }
    }
    onBeforeUpdate(prev, next) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$isequal$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__isEqual$3e$__["isEqual"])(prev.props.richText, next.props.richText) && prev.props.font === next.props.font && prev.props.size === next.props.size) {
            return;
        }
        const wasEmpty = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEmptyRichText"])(prev.props.richText);
        const isEmpty = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEmptyRichText"])(next.props.richText);
        if (!wasEmpty && isEmpty) {
            return {
                ...next,
                props: {
                    ...next.props,
                    growY: 0
                }
            };
        }
        const unscaledPrevWidth = prev.props.w / prev.props.scale;
        const unscaledPrevHeight = prev.props.h / prev.props.scale;
        const unscaledPrevGrowY = prev.props.growY / prev.props.scale;
        const unscaledNextLabelSize = getUnscaledLabelSize(this.editor, next);
        if (wasEmpty && !isEmpty && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["renderPlaintextFromRichText"])(this.editor, next.props.richText)) {
            let unscaledW = Math.max(unscaledPrevWidth, unscaledNextLabelSize.w);
            let unscaledH = Math.max(unscaledPrevHeight, unscaledNextLabelSize.h);
            const min = MIN_SIZE_WITH_LABEL;
            if (unscaledPrevWidth < min && unscaledPrevHeight < min) {
                unscaledW = Math.max(unscaledW, min);
                unscaledH = Math.max(unscaledH, min);
                unscaledW = Math.max(unscaledW, unscaledH);
                unscaledH = Math.max(unscaledW, unscaledH);
            }
            return {
                ...next,
                props: {
                    ...next.props,
                    // Scale the results
                    w: unscaledW * next.props.scale,
                    h: unscaledH * next.props.scale,
                    growY: 0
                }
            };
        }
        let growY = null;
        if (unscaledNextLabelSize.h > unscaledPrevHeight) {
            growY = unscaledNextLabelSize.h - unscaledPrevHeight;
        } else {
            if (unscaledPrevGrowY) {
                growY = 0;
            }
        }
        if (growY !== null) {
            const unscaledNextWidth = next.props.w / next.props.scale;
            return {
                ...next,
                props: {
                    ...next.props,
                    // Scale the results
                    growY: growY * next.props.scale,
                    w: Math.max(unscaledNextWidth, unscaledNextLabelSize.w) * next.props.scale
                }
            };
        }
        if (unscaledNextLabelSize.w > unscaledPrevWidth) {
            return {
                ...next,
                props: {
                    ...next.props,
                    // Scale the results
                    w: unscaledNextLabelSize.w * next.props.scale
                }
            };
        }
    }
    onDoubleClick(shape) {
        if (this.editor.inputs.altKey) {
            switch(shape.props.geo){
                case "rectangle":
                    {
                        return {
                            ...shape,
                            props: {
                                geo: "check-box"
                            }
                        };
                    }
                case "check-box":
                    {
                        return {
                            ...shape,
                            props: {
                                geo: "rectangle"
                            }
                        };
                    }
            }
        }
        return;
    }
    getInterpolatedProps(startShape, endShape, t) {
        return {
            ...t > 0.5 ? endShape.props : startShape.props,
            w: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.w, endShape.props.w, t),
            h: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.h, endShape.props.h, t),
            scale: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.scale, endShape.props.scale, t)
        };
    }
}
const minWidths = {
    s: 12,
    m: 14,
    l: 16,
    xl: 20
};
const extraPaddings = {
    s: 2,
    m: 3.5,
    l: 5,
    xl: 10
};
function getUnscaledLabelSize(editor, shape) {
    const { richText, font, size, w } = shape.props;
    if (!richText || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEmptyRichText"])(richText)) {
        return {
            w: 0,
            h: 0
        };
    }
    const minWidth = minWidths[size];
    const html = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["renderHtmlFromRichTextForMeasurement"])(editor, richText);
    const textSize = editor.textMeasure.measureHtml(html, {
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TEXT_PROPS"],
        fontFamily: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FONT_FAMILIES"][font],
        fontSize: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_FONT_SIZES"][size],
        minWidth,
        maxWidth: Math.max(// Guard because a DOM nodes can't be less 0
        0, // A 'w' width that we're setting as the min-width
        Math.ceil(minWidth + extraPaddings[size]), // The actual text size
        Math.ceil(w / shape.props.scale - __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_PADDING"] * 2))
    });
    return {
        w: textSize.w + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_PADDING"] * 2,
        h: textSize.h + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_PADDING"] * 2
    };
}
;
 //# sourceMappingURL=GeoShapeUtil.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useColorSpace.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useColorSpace": (()=>useColorSpace)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$debug$2d$flags$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/utils/debug-flags.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
;
function useColorSpace() {
    const [supportsP3, setSupportsP3] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(false);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        const supportsSyntax = CSS.supports("color", "color(display-p3 1 1 1)");
        const query = matchMedia("(color-gamut: p3)");
        setSupportsP3(supportsSyntax && query.matches);
        const onChange = ()=>setSupportsP3(supportsSyntax && query.matches);
        query.addEventListener("change", onChange);
        return ()=>query.removeEventListener("change", onChange);
    }, []);
    const forceSrgb = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$debug$2d$flags$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["debugFlags"].forceSrgb);
    return forceSrgb || !supportsP3 ? "srgb" : "p3";
}
;
 //# sourceMappingURL=useColorSpace.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/highlight/HighlightShapeUtil.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "HighlightShapeUtil": (()=>HighlightShapeUtil)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Circle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Circle2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Polygon2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Polygon2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$SVGContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/components/SVGContainer.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$ShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/ShapeUtil.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLHighlightShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/shapes/TLHighlightShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/array.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$getPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/draw/getPath.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/default-shape-constants.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokeOutlinePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/getStrokeOutlinePoints.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/getStrokePoints.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$setStrokePointRadii$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/setStrokePointRadii.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$svg$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/freehand/svg.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$interpolate$2d$props$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/interpolate-props.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useColorSpace$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useColorSpace.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useDefaultColorTheme.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
class HighlightShapeUtil extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$ShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ShapeUtil"] {
    static type = "highlight";
    static props = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLHighlightShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["highlightShapeProps"];
    static migrations = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLHighlightShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["highlightShapeMigrations"];
    options = {
        maxPointsPerShape: 600,
        underlayOpacity: 0.82,
        overlayOpacity: 0.35
    };
    hideResizeHandles(shape) {
        return getIsDot(shape);
    }
    hideRotateHandle(shape) {
        return getIsDot(shape);
    }
    hideSelectionBoundsFg(shape) {
        return getIsDot(shape);
    }
    getDefaultProps() {
        return {
            segments: [],
            color: "black",
            size: "m",
            isComplete: false,
            isPen: false,
            scale: 1
        };
    }
    getGeometry(shape) {
        const strokeWidth = getStrokeWidth(shape);
        if (getIsDot(shape)) {
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Circle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Circle2d"]({
                x: -strokeWidth / 2,
                y: -strokeWidth / 2,
                radius: strokeWidth / 2,
                isFilled: true
            });
        }
        const { strokePoints, sw } = getHighlightStrokePoints(shape, strokeWidth, true);
        const opts = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$getPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getHighlightFreehandSettings"])({
            strokeWidth: sw,
            showAsComplete: true
        });
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$setStrokePointRadii$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["setStrokePointRadii"])(strokePoints, opts);
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Polygon2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Polygon2d"]({
            points: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokeOutlinePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStrokeOutlinePoints"])(strokePoints, opts),
            isFilled: true
        });
    }
    component(shape) {
        const forceSolid = useHighlightForceSolid(this.editor, shape);
        const strokeWidth = getStrokeWidth(shape);
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$SVGContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SVGContainer"], {
            children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(HighlightRenderer, {
                shape,
                forceSolid,
                strokeWidth,
                opacity: this.options.overlayOpacity
            })
        });
    }
    backgroundComponent(shape) {
        const forceSolid = useHighlightForceSolid(this.editor, shape);
        const strokeWidth = getStrokeWidth(shape);
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$SVGContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SVGContainer"], {
            children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(HighlightRenderer, {
                shape,
                forceSolid,
                strokeWidth,
                opacity: this.options.underlayOpacity
            })
        });
    }
    indicator(shape) {
        const forceSolid = useHighlightForceSolid(this.editor, shape);
        const strokeWidth = getStrokeWidth(shape);
        const { strokePoints, sw } = getHighlightStrokePoints(shape, strokeWidth, forceSolid);
        const allPointsFromSegments = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$getPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPointsFromSegments"])(shape.props.segments);
        let strokePath;
        if (strokePoints.length < 2) {
            strokePath = getIndicatorDot(allPointsFromSegments[0], sw);
        } else {
            strokePath = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$svg$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSvgPathFromStrokePoints"])(strokePoints, false);
        }
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
            d: strokePath
        });
    }
    toSvg(shape) {
        const strokeWidth = getStrokeWidth(shape);
        const forceSolid = strokeWidth < 1.5;
        const scaleFactor = 1 / shape.props.scale;
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("g", {
            transform: `scale(${scaleFactor})`,
            children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(HighlightRenderer, {
                forceSolid,
                strokeWidth,
                shape,
                opacity: this.options.overlayOpacity
            })
        });
    }
    toBackgroundSvg(shape) {
        const strokeWidth = getStrokeWidth(shape);
        const forceSolid = strokeWidth < 1.5;
        const scaleFactor = 1 / shape.props.scale;
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("g", {
            transform: `scale(${scaleFactor})`,
            children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(HighlightRenderer, {
                forceSolid,
                strokeWidth,
                shape,
                opacity: this.options.underlayOpacity
            })
        });
    }
    onResize(shape, info) {
        const { scaleX, scaleY } = info;
        const newSegments = [];
        for (const segment of shape.props.segments){
            newSegments.push({
                ...segment,
                points: segment.points.map(({ x, y, z })=>{
                    return {
                        x: scaleX * x,
                        y: scaleY * y,
                        z
                    };
                })
            });
        }
        return {
            props: {
                segments: newSegments
            }
        };
    }
    getInterpolatedProps(startShape, endShape, t) {
        return {
            ...t > 0.5 ? endShape.props : startShape.props,
            ...endShape.props,
            segments: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$interpolate$2d$props$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["interpolateSegments"])(startShape.props.segments, endShape.props.segments, t),
            scale: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.scale, endShape.props.scale, t)
        };
    }
}
function getShapeDot(point) {
    const r = 0.1;
    return `M ${point.x} ${point.y} m -${r}, 0 a ${r},${r} 0 1,0 ${r * 2},0 a ${r},${r} 0 1,0 -${r * 2},0`;
}
function getIndicatorDot(point, sw) {
    const r = sw / 2;
    return `M ${point.x} ${point.y} m -${r}, 0 a ${r},${r} 0 1,0 ${r * 2},0 a ${r},${r} 0 1,0 -${r * 2},0`;
}
function getHighlightStrokePoints(shape, strokeWidth, forceSolid) {
    const allPointsFromSegments = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$getPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPointsFromSegments"])(shape.props.segments);
    const showAsComplete = shape.props.isComplete || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["last"])(shape.props.segments)?.type === "straight";
    let sw = strokeWidth;
    if (!forceSolid && !shape.props.isPen && allPointsFromSegments.length === 1) {
        sw += (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rng"])(shape.id)() * (strokeWidth / 6);
    }
    const options = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$getPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getHighlightFreehandSettings"])({
        strokeWidth: sw,
        showAsComplete
    });
    const strokePoints = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStrokePoints"])(allPointsFromSegments, options);
    return {
        strokePoints,
        sw
    };
}
function getStrokeWidth(shape) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FONT_SIZES"][shape.props.size] * 1.12 * shape.props.scale;
}
function getIsDot(shape) {
    return shape.props.segments.length === 1 && shape.props.segments[0].points.length < 2;
}
function HighlightRenderer({ strokeWidth, forceSolid, shape, opacity }) {
    const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultColorTheme"])();
    const allPointsFromSegments = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$getPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPointsFromSegments"])(shape.props.segments);
    let sw = strokeWidth;
    if (!forceSolid && !shape.props.isPen && allPointsFromSegments.length === 1) {
        sw += (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rng"])(shape.id)() * (sw / 6);
    }
    const options = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$draw$2f$getPath$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getHighlightFreehandSettings"])({
        strokeWidth: sw,
        showAsComplete: shape.props.isComplete || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$array$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["last"])(shape.props.segments)?.type === "straight"
    });
    const strokePoints = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$getStrokePoints$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getStrokePoints"])(allPointsFromSegments, options);
    const solidStrokePath = strokePoints.length > 1 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$freehand$2f$svg$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getSvgPathFromStrokePoints"])(strokePoints, false) : getShapeDot(shape.props.segments[0].points[0]);
    const colorSpace = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useColorSpace$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useColorSpace"])();
    const color = theme[shape.props.color].highlight[colorSpace];
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
        d: solidStrokePath,
        strokeLinecap: "round",
        fill: "none",
        pointerEvents: "all",
        stroke: color,
        strokeWidth: sw,
        opacity
    });
}
function useHighlightForceSolid(editor, shape) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("forceSolid", ()=>{
        const sw = getStrokeWidth(shape);
        const zoomLevel = editor.getZoomLevel();
        if (sw / zoomLevel < 1.5) {
            return true;
        }
        return false;
    }, [
        editor
    ]);
}
;
 //# sourceMappingURL=HighlightShapeUtil.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/BrokenAssetIcon.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "BrokenAssetIcon": (()=>BrokenAssetIcon)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
;
function BrokenAssetIcon() {
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("svg", {
        width: "15",
        height: "15",
        viewBox: "0 0 30 30",
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        stroke: "currentColor",
        strokeLinecap: "round",
        strokeLinejoin: "round",
        children: [
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
                d: "M3,11 L3,3 11,3",
                strokeWidth: "2"
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
                d: "M19,27 L27,27 L27,19",
                strokeWidth: "2"
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("path", {
                d: "M27,3 L3,27",
                strokeWidth: "2"
            })
        ]
    });
}
;
 //# sourceMappingURL=BrokenAssetIcon.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useImageOrVideoAsset.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "useAsset": (()=>useAsset),
    "useImageOrVideoAsset": (()=>useImageOrVideoAsset)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$EffectScheduler$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/EffectScheduler.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$types$2f$SvgExportContext$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/types/SvgExportContext.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
;
;
function useImageOrVideoAsset({ shapeId, assetId, width }) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const exportInfo = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$types$2f$SvgExportContext$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useSvgExportContext"])();
    const exportIsReady = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$types$2f$SvgExportContext$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDelaySvgExport"])();
    const [result, setResult] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(()=>({
            asset: assetId ? editor.getAsset(assetId) ?? null : null,
            url: null
        }));
    const didAlreadyResolve = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(false);
    const previousUrl = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (!assetId) return;
        let isCancelled = false;
        let cancelDebounceFn;
        const cleanupEffectScheduler = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$EffectScheduler$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["react"])("update state", ()=>{
            if (!exportInfo && shapeId && editor.getCulledShapes().has(shapeId)) return;
            const asset = editor.getAsset(assetId);
            if (!asset) {
                setResult((prev)=>({
                        ...prev,
                        asset: null,
                        url: null
                    }));
                return;
            }
            if (!asset.props.src) {
                const preview = editor.getTemporaryAssetPreview(asset.id);
                if (preview) {
                    if (previousUrl.current !== preview) {
                        previousUrl.current = preview;
                        setResult((prev)=>({
                                ...prev,
                                isPlaceholder: true,
                                url: preview
                            }));
                        exportIsReady();
                    }
                    return;
                }
            }
            const screenScale = exportInfo ? exportInfo.scale * (width / asset.props.w) : editor.getZoomLevel() * (width / asset.props.w);
            function resolve(asset2, url) {
                if (isCancelled) return;
                if (previousUrl.current === url) return;
                didAlreadyResolve.current = true;
                previousUrl.current = url;
                setResult({
                    asset: asset2,
                    url
                });
                exportIsReady();
            }
            if (didAlreadyResolve.current) {
                let tick = 0;
                const resolveAssetAfterAWhile = ()=>{
                    tick++;
                    if (tick > 500 / 16) {
                        resolveAssetUrl(editor, assetId, screenScale, exportInfo, (url)=>resolve(asset, url));
                        cancelDebounceFn?.();
                    }
                };
                cancelDebounceFn?.();
                editor.on("tick", resolveAssetAfterAWhile);
                cancelDebounceFn = ()=>editor.off("tick", resolveAssetAfterAWhile);
            } else {
                resolveAssetUrl(editor, assetId, screenScale, exportInfo, (url)=>resolve(asset, url));
            }
        });
        return ()=>{
            cleanupEffectScheduler();
            cancelDebounceFn?.();
            isCancelled = true;
        };
    }, [
        editor,
        assetId,
        exportInfo,
        exportIsReady,
        shapeId,
        width
    ]);
    return result;
}
function resolveAssetUrl(editor, assetId, screenScale, exportInfo, callback) {
    editor.resolveAssetUrl(assetId, {
        screenScale,
        shouldResolveToOriginal: exportInfo ? exportInfo.pixelRatio === null : false,
        dpr: exportInfo?.pixelRatio ?? void 0
    }).then((url)=>{
        callback(url);
    });
}
const useAsset = useImageOrVideoAsset;
;
 //# sourceMappingURL=useImageOrVideoAsset.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/image/ImageShapeUtil.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "ImageShapeUtil": (()=>ImageShapeUtil)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$BaseBoxShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/BaseBoxShapeUtil.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Ellipse2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Ellipse2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$file$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/file.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$HTMLContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/components/HTMLContainer.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$network$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/network.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$media$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/media/media.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Rectangle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Rectangle2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/cache.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLImageShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/shapes/TLImageShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$shared$2f$resizeBox$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/shared/resizeBox.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$value$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/value.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useSafeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useSafeId.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$classnames$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/classnames/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$BrokenAssetIcon$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/BrokenAssetIcon.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$HyperlinkButton$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/HyperlinkButton.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$crop$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/crop.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useImageOrVideoAsset$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useImageOrVideoAsset.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$usePrefersReducedMotion$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/usePrefersReducedMotion.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
;
async function getDataURIFromURL(url) {
    const response = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$network$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["fetch"])(url);
    const blob = await response.blob();
    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$file$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FileHelpers"].blobToDataUrl(blob);
}
const imageSvgExportCache = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WeakCache"]();
class ImageShapeUtil extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$BaseBoxShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BaseBoxShapeUtil"] {
    static type = "image";
    static props = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLImageShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["imageShapeProps"];
    static migrations = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLImageShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["imageShapeMigrations"];
    isAspectRatioLocked() {
        return true;
    }
    canCrop() {
        return true;
    }
    getDefaultProps() {
        return {
            w: 100,
            h: 100,
            assetId: null,
            playing: true,
            url: "",
            crop: null,
            flipX: false,
            flipY: false,
            altText: ""
        };
    }
    getGeometry(shape) {
        if (shape.props.crop?.isCircle) {
            return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Ellipse2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Ellipse2d"]({
                width: shape.props.w,
                height: shape.props.h,
                isFilled: true
            });
        }
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Rectangle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Rectangle2d"]({
            width: shape.props.w,
            height: shape.props.h,
            isFilled: true
        });
    }
    getAriaDescriptor(shape) {
        return shape.props.altText;
    }
    onResize(shape, info) {
        let resized = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$shared$2f$resizeBox$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["resizeBox"])(shape, info);
        const { flipX, flipY } = info.initialShape.props;
        const { scaleX, scaleY, mode } = info;
        resized = {
            ...resized,
            props: {
                ...resized.props,
                flipX: scaleX < 0 !== flipX,
                flipY: scaleY < 0 !== flipY
            }
        };
        if (!shape.props.crop) return resized;
        const flipCropHorizontally = mode === "scale_shape" && scaleX === -1 || mode === "resize_bounds" && flipX !== resized.props.flipX;
        const flipCropVertically = mode === "scale_shape" && scaleY === -1 || mode === "resize_bounds" && flipY !== resized.props.flipY;
        const { topLeft, bottomRight } = shape.props.crop;
        resized.props.crop = {
            topLeft: {
                x: flipCropHorizontally ? 1 - bottomRight.x : topLeft.x,
                y: flipCropVertically ? 1 - bottomRight.y : topLeft.y
            },
            bottomRight: {
                x: flipCropHorizontally ? 1 - topLeft.x : bottomRight.x,
                y: flipCropVertically ? 1 - topLeft.y : bottomRight.y
            },
            isCircle: shape.props.crop.isCircle
        };
        return resized;
    }
    component(shape) {
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(ImageShape, {
            shape
        });
    }
    indicator(shape) {
        const isCropping = this.editor.getCroppingShapeId() === shape.id;
        if (isCropping) return null;
        if (shape.props.crop?.isCircle) {
            return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("ellipse", {
                cx: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.w / 2),
                cy: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.h / 2),
                rx: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.w / 2),
                ry: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.h / 2)
            });
        }
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
            width: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.w),
            height: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.h)
        });
    }
    async toSvg(shape, ctx) {
        const props = shape.props;
        if (!props.assetId) return null;
        const asset = this.editor.getAsset(props.assetId);
        if (!asset) return null;
        const { w } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$crop$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getUncroppedSize"])(shape.props, props.crop);
        const src = await imageSvgExportCache.get(asset, async ()=>{
            let src2 = await ctx.resolveAssetUrl(asset.id, w);
            if (!src2) return null;
            if (src2.startsWith("blob:") || src2.startsWith("http") || src2.startsWith("/") || src2.startsWith("./")) {
                src2 = await getDataURIFromURL(src2) || "";
            }
            if (getIsAnimated(this.editor, asset.id)) {
                const { promise } = getFirstFrameOfAnimatedImage(src2);
                src2 = await promise;
            }
            return src2;
        });
        if (!src) return null;
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(SvgImage, {
            shape,
            src
        });
    }
    onDoubleClickEdge(shape) {
        const props = shape.props;
        if (!props) return;
        if (this.editor.getCroppingShapeId() !== shape.id) {
            return;
        }
        const crop = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$value$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["structuredClone"])(props.crop) || {
            topLeft: {
                x: 0,
                y: 0
            },
            bottomRight: {
                x: 1,
                y: 1
            }
        };
        const { w, h } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$crop$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getUncroppedSize"])(shape.props, crop);
        const pointDelta = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](crop.topLeft.x * w, crop.topLeft.y * h).rot(shape.rotation);
        const partial = {
            id: shape.id,
            type: shape.type,
            x: shape.x - pointDelta.x,
            y: shape.y - pointDelta.y,
            props: {
                crop: {
                    topLeft: {
                        x: 0,
                        y: 0
                    },
                    bottomRight: {
                        x: 1,
                        y: 1
                    }
                },
                w,
                h
            }
        };
        this.editor.updateShapes([
            partial
        ]);
    }
    getInterpolatedProps(startShape, endShape, t) {
        function interpolateCrop(startShape2, endShape2) {
            if (startShape2.props.crop === null && endShape2.props.crop === null) return null;
            const startTL = startShape2.props.crop?.topLeft || {
                x: 0,
                y: 0
            };
            const startBR = startShape2.props.crop?.bottomRight || {
                x: 1,
                y: 1
            };
            const endTL = endShape2.props.crop?.topLeft || {
                x: 0,
                y: 0
            };
            const endBR = endShape2.props.crop?.bottomRight || {
                x: 1,
                y: 1
            };
            return {
                topLeft: {
                    x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startTL.x, endTL.x, t),
                    y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startTL.y, endTL.y, t)
                },
                bottomRight: {
                    x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startBR.x, endBR.x, t),
                    y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startBR.y, endBR.y, t)
                }
            };
        }
        return {
            ...t > 0.5 ? endShape.props : startShape.props,
            w: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.w, endShape.props.w, t),
            h: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.h, endShape.props.h, t),
            crop: interpolateCrop(startShape, endShape)
        };
    }
}
const ImageShape = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["memo"])(function ImageShape2({ shape }) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const { w } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$crop$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getUncroppedSize"])(shape.props, shape.props.crop);
    const { asset, url } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useImageOrVideoAsset$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useImageOrVideoAsset"])({
        shapeId: shape.id,
        assetId: shape.props.assetId,
        width: w
    });
    const prefersReducedMotion = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$usePrefersReducedMotion$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["usePrefersReducedMotion"])();
    const [staticFrameSrc, setStaticFrameSrc] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])("");
    const [loadedUrl, setLoadedUrl] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(null);
    const isAnimated = asset && getIsAnimated(editor, asset.id);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        if (url && isAnimated) {
            const { promise, cancel } = getFirstFrameOfAnimatedImage(url);
            promise.then((dataUrl)=>{
                setStaticFrameSrc(dataUrl);
                setLoadedUrl(url);
            });
            return ()=>{
                cancel();
            };
        }
    }, [
        editor,
        isAnimated,
        prefersReducedMotion,
        url
    ]);
    const showCropPreview = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("show crop preview", ()=>shape.id === editor.getOnlySelectedShapeId() && editor.getCroppingShapeId() === shape.id && editor.isIn("select.crop"), [
        editor,
        shape.id
    ]);
    const reduceMotion = prefersReducedMotion && (asset?.props.mimeType?.includes("video") || isAnimated);
    const containerStyle = getCroppedContainerStyle(shape);
    const nextSrc = url === loadedUrl ? null : url;
    const loadedSrc = reduceMotion ? staticFrameSrc : loadedUrl;
    if (!url && !asset?.props.src) {
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$HTMLContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HTMLContainer"], {
            id: shape.id,
            style: {
                overflow: "hidden",
                width: shape.props.w,
                height: shape.props.h,
                color: "var(--color-text-3)",
                backgroundColor: "var(--color-low)",
                border: "1px solid var(--color-low-border)"
            },
            children: [
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
                    className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$classnames$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])("tl-image-container", asset && "tl-image-container-loading"),
                    style: containerStyle,
                    children: asset ? null : /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$BrokenAssetIcon$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BrokenAssetIcon"], {})
                }),
                "url" in shape.props && shape.props.url && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$HyperlinkButton$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HyperlinkButton"], {
                    url: shape.props.url
                })
            ]
        });
    }
    const crossOrigin = isAnimated ? "anonymous" : void 0;
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            showCropPreview && loadedSrc && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
                style: containerStyle,
                children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("img", {
                    className: "tl-image",
                    style: {
                        ...getFlipStyle(shape),
                        opacity: 0.1
                    },
                    crossOrigin,
                    src: loadedSrc,
                    referrerPolicy: "strict-origin-when-cross-origin",
                    draggable: false,
                    alt: ""
                })
            }),
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$HTMLContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HTMLContainer"], {
                id: shape.id,
                style: {
                    overflow: "hidden",
                    width: shape.props.w,
                    height: shape.props.h,
                    borderRadius: shape.props.crop?.isCircle ? "50%" : void 0
                },
                children: [
                    /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])("div", {
                        className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$classnames$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])("tl-image-container"),
                        style: containerStyle,
                        children: [
                            loadedSrc && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("img", {
                                className: "tl-image",
                                style: getFlipStyle(shape),
                                crossOrigin,
                                src: loadedSrc,
                                referrerPolicy: "strict-origin-when-cross-origin",
                                draggable: false,
                                alt: ""
                            }, loadedSrc),
                            nextSrc && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("img", {
                                className: "tl-image",
                                style: getFlipStyle(shape),
                                crossOrigin,
                                src: nextSrc,
                                referrerPolicy: "strict-origin-when-cross-origin",
                                draggable: false,
                                alt: shape.props.altText,
                                onLoad: ()=>setLoadedUrl(nextSrc)
                            }, nextSrc)
                        ]
                    }),
                    shape.props.url && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$HyperlinkButton$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HyperlinkButton"], {
                        url: shape.props.url
                    })
                ]
            })
        ]
    });
});
function getIsAnimated(editor, assetId) {
    const asset = assetId ? editor.getAsset(assetId) : void 0;
    if (!asset) return false;
    return "mimeType" in asset.props && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$media$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MediaHelpers"].isAnimatedImageType(asset?.props.mimeType) || "isAnimated" in asset.props && asset.props.isAnimated;
}
function getCroppedContainerStyle(shape) {
    const crop = shape.props.crop;
    const topLeft = crop?.topLeft;
    if (!topLeft) {
        return {
            width: shape.props.w,
            height: shape.props.h
        };
    }
    const { w, h } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$crop$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getUncroppedSize"])(shape.props, crop);
    const offsetX = -topLeft.x * w;
    const offsetY = -topLeft.y * h;
    return {
        transform: `translate(${offsetX}px, ${offsetY}px)`,
        width: w,
        height: h
    };
}
function getFlipStyle(shape, size) {
    const { flipX, flipY, crop } = shape.props;
    if (!flipX && !flipY) return void 0;
    let cropOffsetX;
    let cropOffsetY;
    if (crop) {
        const { w, h } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$crop$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getUncroppedSize"])(shape.props, crop);
        const cropWidth = crop.bottomRight.x - crop.topLeft.x;
        const cropHeight = crop.bottomRight.y - crop.topLeft.y;
        cropOffsetX = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["modulate"])(crop.topLeft.x, [
            0,
            1 - cropWidth
        ], [
            0,
            w - shape.props.w
        ]);
        cropOffsetY = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["modulate"])(crop.topLeft.y, [
            0,
            1 - cropHeight
        ], [
            0,
            h - shape.props.h
        ]);
    }
    const scale = `scale(${flipX ? -1 : 1}, ${flipY ? -1 : 1})`;
    const translate = size ? `translate(${(flipX ? size.width : 0) - (cropOffsetX ? cropOffsetX : 0)}px,
		             ${(flipY ? size.height : 0) - (cropOffsetY ? cropOffsetY : 0)}px)` : "";
    return {
        transform: `${translate} ${scale}`,
        // in SVG, flipping around the center doesn't work so we use explicit width/height
        transformOrigin: size ? "0 0" : "center center"
    };
}
function SvgImage({ shape, src }) {
    const cropClipId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useSafeId$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useUniqueSafeId"])();
    const containerStyle = getCroppedContainerStyle(shape);
    const crop = shape.props.crop;
    if (containerStyle.transform && crop) {
        const { transform: cropTransform, width, height } = containerStyle;
        const croppedWidth = (crop.bottomRight.x - crop.topLeft.x) * width;
        const croppedHeight = (crop.bottomRight.y - crop.topLeft.y) * height;
        const points = [
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](0, 0),
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](croppedWidth, 0),
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](croppedWidth, croppedHeight),
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](0, croppedHeight)
        ];
        const flip = getFlipStyle(shape, {
            width,
            height
        });
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
            children: [
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("defs", {
                    children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("clipPath", {
                        id: cropClipId,
                        children: crop.isCircle ? /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("ellipse", {
                            cx: croppedWidth / 2,
                            cy: croppedHeight / 2,
                            rx: croppedWidth / 2,
                            ry: croppedHeight / 2
                        }) : /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("polygon", {
                            points: points.map((p)=>`${p.x},${p.y}`).join(" ")
                        })
                    })
                }),
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("g", {
                    clipPath: `url(#${cropClipId})`,
                    children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("image", {
                        href: src,
                        width,
                        height,
                        "aria-label": shape.props.altText,
                        style: flip ? {
                            ...flip
                        } : {
                            transform: cropTransform
                        }
                    })
                })
            ]
        });
    } else {
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("image", {
            href: src,
            width: shape.props.w,
            height: shape.props.h,
            "aria-label": shape.props.altText,
            style: getFlipStyle(shape, {
                width: shape.props.w,
                height: shape.props.h
            })
        });
    }
}
function getFirstFrameOfAnimatedImage(url) {
    let cancelled = false;
    const promise = new Promise((resolve)=>{
        const image = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$network$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Image"])();
        image.onload = ()=>{
            if (cancelled) return;
            const canvas = document.createElement("canvas");
            canvas.width = image.width;
            canvas.height = image.height;
            const ctx = canvas.getContext("2d");
            if (!ctx) return;
            ctx.drawImage(image, 0, 0);
            resolve(canvas.toDataURL());
        };
        image.crossOrigin = "anonymous";
        image.src = url;
    });
    return {
        promise,
        cancel: ()=>cancelled = true
    };
}
;
 //# sourceMappingURL=ImageShapeUtil.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/line/LineShapeUtil.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "LineShapeUtil": (()=>LineShapeUtil)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Group2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Group2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$SVGContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/components/SVGContainer.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$ShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/ShapeUtil.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/cache.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$reordering$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/reordering.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLLineShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/shapes/TLLineShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/object.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/tools/BaseBoxShapeTool/children/Pointing.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/arrow/shared.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/PathBuilder.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useDefaultColorTheme.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
const handlesCache = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WeakCache"]();
class LineShapeUtil extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$ShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ShapeUtil"] {
    static type = "line";
    static props = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLLineShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lineShapeProps"];
    static migrations = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLLineShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lineShapeMigrations"];
    hideResizeHandles() {
        return true;
    }
    hideRotateHandle() {
        return true;
    }
    hideSelectionBoundsFg() {
        return true;
    }
    hideSelectionBoundsBg() {
        return true;
    }
    getDefaultProps() {
        const [start, end] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$reordering$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getIndices"])(2);
        return {
            dash: "draw",
            size: "m",
            color: "black",
            spline: "line",
            points: {
                [start]: {
                    id: start,
                    index: start,
                    x: 0,
                    y: 0
                },
                [end]: {
                    id: end,
                    index: end,
                    x: 0.1,
                    y: 0.1
                }
            },
            scale: 1
        };
    }
    getGeometry(shape) {
        const geometry = getPathForLineShape(shape).toGeometry();
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["assert"])(geometry instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilderGeometry2d"]);
        return geometry;
    }
    getHandles(shape) {
        return handlesCache.get(shape.props, ()=>{
            const spline = this.getGeometry(shape);
            const points = linePointsToArray(shape);
            const results = points.map((point)=>({
                    ...point,
                    id: point.index,
                    type: "vertex",
                    canSnap: true
                }));
            for(let i = 0; i < points.length - 1; i++){
                const index = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$reordering$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getIndexBetween"])(points[i].index, points[i + 1].index);
                const segment = spline.getSegments()[i];
                const point = segment.interpolateAlongEdge(0.5);
                results.push({
                    id: index,
                    type: "create",
                    index,
                    x: point.x,
                    y: point.y,
                    canSnap: true
                });
            }
            return results.sort(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$reordering$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sortByIndex"]);
        });
    }
    //   Events
    onResize(shape, info) {
        const { scaleX, scaleY } = info;
        return {
            props: {
                points: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$object$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["mapObjectMapValues"])(shape.props.points, (_, { id, index, x, y })=>({
                        id,
                        index,
                        x: x * scaleX,
                        y: y * scaleY
                    }))
            }
        };
    }
    onBeforeCreate(next) {
        const { props: { points } } = next;
        const pointKeys = Object.keys(points);
        if (pointKeys.length < 2) {
            return;
        }
        const firstPoint = points[pointKeys[0]];
        const allSame = pointKeys.every((key)=>{
            const point = points[key];
            return point.x === firstPoint.x && point.y === firstPoint.y;
        });
        if (allSame) {
            const lastKey = pointKeys[pointKeys.length - 1];
            points[lastKey] = {
                ...points[lastKey],
                x: points[lastKey].x + 0.1,
                y: points[lastKey].y + 0.1
            };
            return next;
        }
        return;
    }
    onHandleDrag(shape, { handle }) {
        const newPoint = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$tools$2f$BaseBoxShapeTool$2f$children$2f$Pointing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["maybeSnapToGrid"])(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](handle.x, handle.y), this.editor);
        return {
            ...shape,
            props: {
                ...shape.props,
                points: {
                    ...shape.props.points,
                    [handle.id]: {
                        id: handle.id,
                        index: handle.index,
                        x: newPoint.x,
                        y: newPoint.y
                    }
                }
            }
        };
    }
    onHandleDragStart(shape, { handle }) {
        if (handle.type === "create") {
            return {
                ...shape,
                props: {
                    ...shape.props,
                    points: {
                        ...shape.props.points,
                        [handle.index]: {
                            id: handle.index,
                            index: handle.index,
                            x: handle.x,
                            y: handle.y
                        }
                    }
                }
            };
        }
        return;
    }
    component(shape) {
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$SVGContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SVGContainer"], {
            style: {
                minWidth: 50,
                minHeight: 50
            },
            children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(LineShapeSvg, {
                shape
            })
        });
    }
    indicator(shape) {
        const strokeWidth = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][shape.props.size] * shape.props.scale;
        const path = getPathForLineShape(shape);
        const { dash } = shape.props;
        return path.toSvg({
            style: dash === "draw" ? "draw" : "solid",
            strokeWidth: 1,
            passes: 1,
            randomSeed: shape.id,
            offset: 0,
            roundness: strokeWidth * 2,
            props: {
                strokeWidth: void 0
            }
        });
    }
    toSvg(shape) {
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(LineShapeSvg, {
            shouldScale: true,
            shape
        });
    }
    getHandleSnapGeometry(shape) {
        const points = linePointsToArray(shape);
        return {
            points,
            getSelfSnapPoints: (handle)=>{
                const index = this.getHandles(shape).filter((h)=>h.type === "vertex").findIndex((h)=>h.id === handle.id);
                return points.filter((_, i)=>Math.abs(i - index) > 1).map(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From);
            },
            getSelfSnapOutline: (handle)=>{
                const index = this.getHandles(shape).filter((h)=>h.type === "vertex").findIndex((h)=>h.id === handle.id);
                const segments = this.getGeometry(shape).getSegments().filter((_, i)=>i !== index - 1 && i !== index);
                if (!segments.length) return null;
                return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Group2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Group2d"]({
                    children: segments
                });
            }
        };
    }
    getInterpolatedProps(startShape, endShape, t) {
        const startPoints = linePointsToArray(startShape);
        const endPoints = linePointsToArray(endShape);
        const pointsToUseStart = [];
        const pointsToUseEnd = [];
        let index = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$reordering$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ZERO_INDEX_KEY"];
        if (startPoints.length > endPoints.length) {
            for(let i = 0; i < startPoints.length; i++){
                pointsToUseStart[i] = {
                    ...startPoints[i]
                };
                if (endPoints[i] === void 0) {
                    pointsToUseEnd[i] = {
                        ...endPoints[endPoints.length - 1],
                        id: index
                    };
                } else {
                    pointsToUseEnd[i] = {
                        ...endPoints[i],
                        id: index
                    };
                }
                index = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$reordering$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getIndexAbove"])(index);
            }
        } else if (endPoints.length > startPoints.length) {
            for(let i = 0; i < endPoints.length; i++){
                pointsToUseEnd[i] = {
                    ...endPoints[i]
                };
                if (startPoints[i] === void 0) {
                    pointsToUseStart[i] = {
                        ...startPoints[startPoints.length - 1],
                        id: index
                    };
                } else {
                    pointsToUseStart[i] = {
                        ...startPoints[i],
                        id: index
                    };
                }
                index = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$reordering$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getIndexAbove"])(index);
            }
        } else {
            for(let i = 0; i < endPoints.length; i++){
                pointsToUseStart[i] = startPoints[i];
                pointsToUseEnd[i] = endPoints[i];
            }
        }
        return {
            ...t > 0.5 ? endShape.props : startShape.props,
            points: Object.fromEntries(pointsToUseStart.map((point, i)=>{
                const endPoint = pointsToUseEnd[i];
                return [
                    point.id,
                    {
                        ...point,
                        x: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(point.x, endPoint.x, t),
                        y: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(point.y, endPoint.y, t)
                    }
                ];
            })),
            scale: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.scale, endShape.props.scale, t)
        };
    }
}
function linePointsToArray(shape) {
    return Object.values(shape.props.points).sort(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$reordering$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sortByIndex"]);
}
const pathCache = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WeakCache"]();
function getPathForLineShape(shape) {
    return pathCache.get(shape, ()=>{
        const points = linePointsToArray(shape).map(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].From);
        switch(shape.props.spline){
            case "cubic":
                {
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"].cubicSplineThroughPoints(points, {
                        endOffsets: 0
                    });
                }
            case "line":
                {
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$PathBuilder$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PathBuilder"].lineThroughPoints(points, {
                        endOffsets: 0
                    });
                }
        }
    });
}
function LineShapeSvg({ shape, shouldScale = false, forceSolid = false }) {
    const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultColorTheme"])();
    const path = getPathForLineShape(shape);
    const { dash, color, size } = shape.props;
    const scaleFactor = 1 / shape.props.scale;
    const scale = shouldScale ? scaleFactor : 1;
    const strokeWidth = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$arrow$2f$shared$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["STROKE_SIZES"][size] * shape.props.scale;
    return path.toSvg({
        style: dash,
        strokeWidth,
        forceSolid,
        randomSeed: shape.id,
        props: {
            transform: `scale(${scale})`,
            stroke: theme[color].solid,
            fill: "none"
        }
    });
}
;
 //# sourceMappingURL=LineShapeUtil.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/note/NoteShapeUtil.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "NoteShapeUtil": (()=>NoteShapeUtil)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Box.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state/dist-esm/lib/helpers.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Group2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Group2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Rectangle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Rectangle2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$ShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/ShapeUtil.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/cache.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/control.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/styles/TLColorStyle.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/utils/richText.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$isequal$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__isEqual$3e$__ = __turbopack_context__.i("[project]/node_modules/lodash.isequal/index.js [app-ssr] (ecmascript) <export default as isEqual>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/number.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLNoteShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/shapes/TLNoteShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$shared$2f$resizeScaled$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/shared/resizeScaled.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$misc$2f$TLRichText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/misc/TLRichText.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/state-react/dist-esm/lib/useValue.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$tools$2f$SelectTool$2f$selectHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/tools/SelectTool/selectHelpers.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$ui$2f$hooks$2f$useTranslation$2f$useTranslation$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/ui/hooks/useTranslation/useTranslation.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/utils/text/richText.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$text$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/utils/text/text.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$HyperlinkButton$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/HyperlinkButton.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$RichTextLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/RichTextLabel.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/default-shape-constants.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useDefaultColorTheme.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useEditablePlainText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useEditablePlainText.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/note/noteHelpers.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
class NoteShapeUtil extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$ShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ShapeUtil"] {
    static type = "note";
    static props = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLNoteShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["noteShapeProps"];
    static migrations = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLNoteShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["noteShapeMigrations"];
    options = {
        resizeMode: "none"
    };
    canEdit() {
        return true;
    }
    hideResizeHandles() {
        const { resizeMode } = this.options;
        switch(resizeMode){
            case "none":
                {
                    return true;
                }
            case "scale":
                {
                    return false;
                }
            default:
                {
                    throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(resizeMode);
                }
        }
    }
    isAspectRatioLocked() {
        return this.options.resizeMode === "scale";
    }
    hideSelectionBoundsFg() {
        return false;
    }
    getDefaultProps() {
        return {
            color: "black",
            richText: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$misc$2f$TLRichText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toRichText"])(""),
            size: "m",
            font: "draw",
            align: "middle",
            verticalAlign: "middle",
            labelColor: "black",
            growY: 0,
            fontSizeAdjustment: 0,
            url: "",
            scale: 1
        };
    }
    getGeometry(shape) {
        const { labelHeight, labelWidth } = getLabelSize(this.editor, shape);
        const { scale } = shape.props;
        const lh = labelHeight * scale;
        const lw = labelWidth * scale;
        const nw = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_SIZE"] * scale;
        const nh = getNoteHeight(shape);
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Group2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Group2d"]({
            children: [
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Rectangle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Rectangle2d"]({
                    width: nw,
                    height: nh,
                    isFilled: true
                }),
                new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Rectangle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Rectangle2d"]({
                    x: shape.props.align === "start" ? 0 : shape.props.align === "end" ? nw - lw : (nw - lw) / 2,
                    y: shape.props.verticalAlign === "start" ? 0 : shape.props.verticalAlign === "end" ? nh - lh : (nh - lh) / 2,
                    width: lw,
                    height: lh,
                    isFilled: true,
                    isLabel: true
                })
            ]
        });
    }
    getHandles(shape) {
        const { scale } = shape.props;
        const isCoarsePointer = this.editor.getInstanceState().isCoarsePointer;
        if (isCoarsePointer) return [];
        const zoom = this.editor.getZoomLevel();
        if (zoom * scale < 0.25) return [];
        const nh = getNoteHeight(shape);
        const nw = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_SIZE"] * scale;
        const offset = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CLONE_HANDLE_MARGIN"] / zoom * scale;
        if (zoom * scale < 0.5) {
            return [
                {
                    id: "bottom",
                    index: "a3",
                    type: "clone",
                    x: nw / 2,
                    y: nh + offset
                }
            ];
        }
        return [
            {
                id: "top",
                index: "a1",
                type: "clone",
                x: nw / 2,
                y: -offset
            },
            {
                id: "right",
                index: "a2",
                type: "clone",
                x: nw + offset,
                y: nh / 2
            },
            {
                id: "bottom",
                index: "a3",
                type: "clone",
                x: nw / 2,
                y: nh + offset
            },
            {
                id: "left",
                index: "a4",
                type: "clone",
                x: -offset,
                y: nh / 2
            }
        ];
    }
    onResize(shape, info) {
        const { resizeMode } = this.options;
        switch(resizeMode){
            case "none":
                {
                    return void 0;
                }
            case "scale":
                {
                    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$shared$2f$resizeScaled$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["resizeScaled"])(shape, info);
                }
            default:
                {
                    throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$control$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["exhaustiveSwitchError"])(resizeMode);
                }
        }
    }
    getText(shape) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["renderPlaintextFromRichText"])(this.editor, shape.props.richText);
    }
    getFontFaces(shape) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEmptyRichText"])(shape.props.richText)) {
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2f$dist$2d$esm$2f$lib$2f$helpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EMPTY_ARRAY"];
        }
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFontsFromRichText"])(this.editor, shape.props.richText, {
            family: `tldraw_${shape.props.font}`,
            weight: "normal",
            style: "normal"
        });
    }
    component(shape) {
        const { id, type, props: { labelColor, scale, color, font, size, align, richText, verticalAlign, fontSizeAdjustment } } = shape;
        const handleKeyDown = useNoteKeydownHandler(id);
        const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultColorTheme"])();
        const nw = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_SIZE"] * scale;
        const nh = getNoteHeight(shape);
        const rotation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("shape rotation", ()=>this.editor.getShapePageTransform(id)?.rotation() ?? 0, [
            this.editor
        ]);
        const hideShadows = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("zoom", ()=>this.editor.getZoomLevel() < 0.35 / scale, [
            scale,
            this.editor
        ]);
        const isDarkMode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$state$2d$react$2f$dist$2d$esm$2f$lib$2f$useValue$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useValue"])("dark mode", ()=>this.editor.user.getIsDarkMode(), [
            this.editor
        ]);
        const isSelected = shape.id === this.editor.getOnlySelectedShapeId();
        const isReadyForEditing = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useEditablePlainText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useIsReadyForEditing"])(this.editor, shape.id);
        const isEmpty = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEmptyRichText"])(richText);
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
            children: [
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
                    id,
                    className: "tl-note__container",
                    style: {
                        width: nw,
                        height: nh,
                        backgroundColor: theme[color].note.fill,
                        borderBottom: hideShadows ? isDarkMode ? `${2 * scale}px solid rgb(20, 20, 20)` : `${2 * scale}px solid rgb(144, 144, 144)` : "none",
                        boxShadow: hideShadows ? "none" : getNoteShadow(shape.id, rotation, scale)
                    },
                    children: (isSelected || isReadyForEditing || !isEmpty) && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$RichTextLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["RichTextLabel"], {
                        shapeId: id,
                        type,
                        font,
                        fontSize: (fontSizeAdjustment || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_FONT_SIZES"][size]) * scale,
                        lineHeight: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TEXT_PROPS"].lineHeight,
                        align,
                        verticalAlign,
                        richText,
                        isSelected,
                        labelColor: labelColor === "black" ? theme[color].note.text : theme[labelColor].fill,
                        wrap: true,
                        padding: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_PADDING"] * scale,
                        hasCustomTabBehavior: true,
                        onKeyDown: handleKeyDown
                    })
                }),
                "url" in shape.props && shape.props.url && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$HyperlinkButton$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HyperlinkButton"], {
                    url: shape.props.url
                })
            ]
        });
    }
    indicator(shape) {
        const { scale } = shape.props;
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
            rx: scale,
            width: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_SIZE"] * scale),
            height: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(getNoteHeight(shape))
        });
    }
    toSvg(shape, ctx) {
        const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getDefaultColorTheme"])({
            isDarkMode: ctx.isDarkMode
        });
        const bounds = getBoundsForSVG(shape);
        const textLabel = /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$RichTextLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["RichTextSVG"], {
            fontSize: shape.props.fontSizeAdjustment || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_FONT_SIZES"][shape.props.size],
            font: shape.props.font,
            align: shape.props.align,
            verticalAlign: shape.props.verticalAlign,
            richText: shape.props.richText,
            labelColor: theme[shape.props.color].note.text,
            bounds,
            padding: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_PADDING"],
            showTextOutline: false
        });
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
            children: [
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
                    x: 5,
                    y: 5,
                    rx: 1,
                    width: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_SIZE"] - 10,
                    height: bounds.h,
                    fill: "rgba(0,0,0,.1)"
                }),
                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
                    rx: 1,
                    width: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_SIZE"],
                    height: bounds.h,
                    fill: theme[shape.props.color].note.fill
                }),
                textLabel
            ]
        });
    }
    onBeforeCreate(next) {
        return getNoteSizeAdjustments(this.editor, next);
    }
    onBeforeUpdate(prev, next) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$isequal$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__isEqual$3e$__["isEqual"])(prev.props.richText, next.props.richText) && prev.props.font === next.props.font && prev.props.size === next.props.size) {
            return;
        }
        return getNoteSizeAdjustments(this.editor, next);
    }
    getInterpolatedProps(startShape, endShape, t) {
        return {
            ...t > 0.5 ? endShape.props : startShape.props,
            scale: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lerp"])(startShape.props.scale, endShape.props.scale, t)
        };
    }
}
function getNoteSizeAdjustments(editor, shape) {
    const { labelHeight, fontSizeAdjustment } = getLabelSize(editor, shape);
    const growY = Math.max(0, labelHeight - __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_SIZE"]);
    if (growY !== shape.props.growY || fontSizeAdjustment !== shape.props.fontSizeAdjustment) {
        return {
            ...shape,
            props: {
                ...shape.props,
                growY,
                fontSizeAdjustment
            }
        };
    }
}
function getNoteLabelSize(editor, shape) {
    const { richText } = shape.props;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEmptyRichText"])(richText)) {
        const minHeight = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_FONT_SIZES"][shape.props.size] * __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TEXT_PROPS"].lineHeight + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_PADDING"] * 2;
        return {
            labelHeight: minHeight,
            labelWidth: 100,
            fontSizeAdjustment: 0
        };
    }
    const unadjustedFontSize = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_FONT_SIZES"][shape.props.size];
    let fontSizeAdjustment = 0;
    let iterations = 0;
    let labelHeight = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_SIZE"];
    let labelWidth = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_SIZE"];
    const FUZZ = 1;
    do {
        fontSizeAdjustment = Math.min(unadjustedFontSize, unadjustedFontSize - iterations);
        const html = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["renderHtmlFromRichTextForMeasurement"])(editor, richText);
        const nextTextSize = editor.textMeasure.measureHtml(html, {
            ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TEXT_PROPS"],
            fontFamily: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FONT_FAMILIES"][shape.props.font],
            fontSize: fontSizeAdjustment,
            maxWidth: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_SIZE"] - __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_PADDING"] * 2 - FUZZ,
            disableOverflowWrapBreaking: true,
            measureScrollWidth: true
        });
        labelHeight = nextTextSize.h + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_PADDING"] * 2;
        labelWidth = nextTextSize.w + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_PADDING"] * 2;
        if (fontSizeAdjustment <= 14) {
            const html2 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["renderHtmlFromRichTextForMeasurement"])(editor, richText);
            const nextTextSizeWithOverflowBreak = editor.textMeasure.measureHtml(html2, {
                ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TEXT_PROPS"],
                fontFamily: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FONT_FAMILIES"][shape.props.font],
                fontSize: fontSizeAdjustment,
                maxWidth: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_SIZE"] - __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_PADDING"] * 2 - FUZZ
            });
            labelHeight = nextTextSizeWithOverflowBreak.h + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_PADDING"] * 2;
            labelWidth = nextTextSizeWithOverflowBreak.w + __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["LABEL_PADDING"] * 2;
            break;
        }
        if (nextTextSize.scrollWidth.toFixed(0) === nextTextSize.w.toFixed(0)) {
            break;
        }
    }while (iterations++ < 50)
    return {
        labelHeight,
        labelWidth,
        fontSizeAdjustment
    };
}
const labelSizesForNote = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WeakCache"]();
function getLabelSize(editor, shape) {
    return labelSizesForNote.get(shape, ()=>getNoteLabelSize(editor, shape));
}
function useNoteKeydownHandler(id) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const translation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$ui$2f$hooks$2f$useTranslation$2f$useTranslation$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCurrentTranslation"])();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((e)=>{
        const shape = editor.getShape(id);
        if (!shape) return;
        const isTab = e.key === "Tab";
        const isCmdEnter = (e.metaKey || e.ctrlKey) && e.key === "Enter";
        if (isTab || isCmdEnter) {
            e.preventDefault();
            const pageTransform = editor.getShapePageTransform(id);
            const pageRotation = pageTransform.rotation();
            const isRTL = !!(translation.dir === "rtl" || // todo: can we check a partial of the text, so that we don't have to render the whole thing?
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$text$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isRightToLeftLanguage"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["renderPlaintextFromRichText"])(editor, shape.props.richText)));
            const offsetLength = (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_SIZE"] + editor.options.adjacentShapeMargin + // If we're growing down, we need to account for the current shape's growY
            (isCmdEnter && !e.shiftKey ? shape.props.growY : 0)) * shape.props.scale;
            const adjacentCenter = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](isTab ? e.shiftKey != isRTL ? -1 : 1 : 0, isCmdEnter ? e.shiftKey ? -1 : 1 : 0).mul(offsetLength).add(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_CENTER_OFFSET"].clone().mul(shape.props.scale)).rot(pageRotation).add(pageTransform.point());
            const newNote = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getNoteShapeForAdjacentPosition"])(editor, shape, adjacentCenter, pageRotation);
            if (newNote) {
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$tools$2f$SelectTool$2f$selectHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["startEditingShapeWithLabel"])(editor, newNote, true);
            }
        }
    }, [
        id,
        editor,
        translation.dir
    ]);
}
function getNoteHeight(shape) {
    return (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_SIZE"] + shape.props.growY) * shape.props.scale;
}
function getNoteShadow(id, rotation, scale) {
    const random = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$number$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["rng"])(id);
    const lift = Math.abs(random()) + 0.5;
    const oy = Math.cos(rotation);
    const a = 5 * scale;
    const b = 4 * scale;
    const c = 6 * scale;
    const d = 7 * scale;
    return `0px ${a - lift}px ${a}px -${a}px rgba(15, 23, 31, .6),
	0px ${(b + lift * d) * Math.max(0, oy)}px ${c + lift * d}px -${b + lift * c}px rgba(15, 23, 31, ${(0.3 + lift * 0.1).toFixed(2)}), 
	0px ${48 * scale}px ${10 * scale}px -${10 * scale}px inset rgba(15, 23, 44, ${((0.022 + random() * 5e-3) * ((1 + oy) / 2)).toFixed(2)})`;
}
function getBoundsForSVG(shape) {
    return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"](0, 0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_SIZE"], __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$note$2f$noteHelpers$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NOTE_SIZE"] + shape.props.growY);
}
;
 //# sourceMappingURL=NoteShapeUtil.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/text/TextShapeUtil.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "TextShapeUtil": (()=>TextShapeUtil)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Box.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Rectangle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/geometry/Rectangle2d.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$ShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/ShapeUtil.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/Vec.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$store$2f$dist$2d$esm$2f$lib$2f$Store$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/store/dist-esm/lib/Store.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/styles/TLColorStyle.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/utils/richText.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$isequal$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__isEqual$3e$__ = __turbopack_context__.i("[project]/node_modules/lodash.isequal/index.js [app-ssr] (ecmascript) <export default as isEqual>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$shared$2f$resizeScaled$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/shared/resizeScaled.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLTextShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/shapes/TLTextShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$misc$2f$TLRichText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/misc/TLRichText.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/utils/text/richText.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$RichTextLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/RichTextLabel.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/default-shape-constants.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useDefaultColorTheme.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
const sizeCache = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$store$2f$dist$2d$esm$2f$lib$2f$Store$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createComputedCache"])("text size", (editor, shape)=>{
    editor.fonts.trackFontsForShape(shape);
    return getTextSize(editor, shape.props);
}, {
    areRecordsEqual: (a, b)=>a.props === b.props
});
class TextShapeUtil extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$ShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ShapeUtil"] {
    static type = "text";
    static props = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLTextShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["textShapeProps"];
    static migrations = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLTextShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["textShapeMigrations"];
    options = {
        extraArrowHorizontalPadding: 10
    };
    getDefaultProps() {
        return {
            color: "black",
            size: "m",
            w: 8,
            font: "draw",
            textAlign: "start",
            autoSize: true,
            scale: 1,
            richText: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$misc$2f$TLRichText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toRichText"])("")
        };
    }
    getMinDimensions(shape) {
        return sizeCache.get(this.editor, shape.id);
    }
    getGeometry(shape, opts) {
        const { scale } = shape.props;
        const { width, height } = this.getMinDimensions(shape);
        const context = opts?.context ?? "none";
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$geometry$2f$Rectangle2d$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Rectangle2d"]({
            x: (context === "@tldraw/arrow-without-arrowhead" ? -this.options.extraArrowHorizontalPadding : 0) * scale,
            width: (width + (context === "@tldraw/arrow-without-arrowhead" ? this.options.extraArrowHorizontalPadding * 2 : 0)) * scale,
            height: height * scale,
            isFilled: true,
            isLabel: true
        });
    }
    getFontFaces(shape) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$utils$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getFontsFromRichText"])(this.editor, shape.props.richText, {
            family: `tldraw_${shape.props.font}`,
            weight: "normal",
            style: "normal"
        });
    }
    getText(shape) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["renderPlaintextFromRichText"])(this.editor, shape.props.richText);
    }
    canEdit() {
        return true;
    }
    isAspectRatioLocked() {
        return true;
    }
    // WAIT NO THIS IS HARD CODED IN THE RESIZE HANDLER
    component(shape) {
        const { id, props: { font, size, richText, color, scale, textAlign } } = shape;
        const { width, height } = this.getMinDimensions(shape);
        const isSelected = shape.id === this.editor.getOnlySelectedShapeId();
        const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useDefaultColorTheme$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultColorTheme"])();
        const handleKeyDown = useTextShapeKeydownHandler(id);
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$RichTextLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["RichTextLabel"], {
            shapeId: id,
            classNamePrefix: "tl-text-shape",
            type: "text",
            font,
            fontSize: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FONT_SIZES"][size],
            lineHeight: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TEXT_PROPS"].lineHeight,
            align: textAlign,
            verticalAlign: "middle",
            richText,
            labelColor: theme[color].solid,
            isSelected,
            textWidth: width,
            textHeight: height,
            style: {
                transform: `scale(${scale})`,
                transformOrigin: "top left"
            },
            wrap: true,
            onKeyDown: handleKeyDown
        });
    }
    indicator(shape) {
        const bounds = this.editor.getShapeGeometry(shape).bounds;
        const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
        if (shape.props.autoSize && editor.getEditingShapeId() === shape.id) return null;
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
            width: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(bounds.width),
            height: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(bounds.height)
        });
    }
    toSvg(shape, ctx) {
        const bounds = this.editor.getShapeGeometry(shape).bounds;
        const width = bounds.width / (shape.props.scale ?? 1);
        const height = bounds.height / (shape.props.scale ?? 1);
        const theme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$styles$2f$TLColorStyle$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getDefaultColorTheme"])(ctx);
        const exportBounds = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Box$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Box"](0, 0, width, height);
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$RichTextLabel$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["RichTextSVG"], {
            fontSize: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FONT_SIZES"][shape.props.size],
            font: shape.props.font,
            align: shape.props.textAlign,
            verticalAlign: "middle",
            richText: shape.props.richText,
            labelColor: theme[shape.props.color].solid,
            bounds: exportBounds,
            padding: 0
        });
    }
    onResize(shape, info) {
        const { newPoint, initialBounds, initialShape, scaleX, handle } = info;
        if (info.mode === "scale_shape" || handle !== "right" && handle !== "left") {
            return {
                id: shape.id,
                type: shape.type,
                ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$shared$2f$resizeScaled$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["resizeScaled"])(shape, info)
            };
        } else {
            const nextWidth = Math.max(1, Math.abs(initialBounds.width * scaleX));
            const { x, y } = scaleX < 0 ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].Sub(newPoint, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"].FromAngle(shape.rotation).mul(nextWidth)) : newPoint;
            return {
                id: shape.id,
                type: shape.type,
                x,
                y,
                props: {
                    w: nextWidth / initialShape.props.scale,
                    autoSize: false
                }
            };
        }
    }
    onEditEnd(shape) {
        const trimmedText = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["renderPlaintextFromRichText"])(this.editor, shape.props.richText).trimEnd();
        if (trimmedText.length === 0) {
            this.editor.deleteShapes([
                shape.id
            ]);
        }
    }
    onBeforeUpdate(prev, next) {
        if (!next.props.autoSize) return;
        const styleDidChange = prev.props.size !== next.props.size || prev.props.textAlign !== next.props.textAlign || prev.props.font !== next.props.font || prev.props.scale !== 1 && next.props.scale === 1;
        const textDidChange = !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lodash$2e$isequal$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__isEqual$3e$__["isEqual"])(prev.props.richText, next.props.richText);
        if (!styleDidChange && !textDidChange) return;
        const boundsA = this.getMinDimensions(prev);
        const boundsB = getTextSize(this.editor, next.props);
        const wA = boundsA.width * prev.props.scale;
        const hA = boundsA.height * prev.props.scale;
        const wB = boundsB.width * next.props.scale;
        const hB = boundsB.height * next.props.scale;
        let delta;
        switch(next.props.textAlign){
            case "middle":
                {
                    delta = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"]((wB - wA) / 2, textDidChange ? 0 : (hB - hA) / 2);
                    break;
                }
            case "end":
                {
                    delta = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](wB - wA, textDidChange ? 0 : (hB - hA) / 2);
                    break;
                }
            default:
                {
                    if (textDidChange) break;
                    delta = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$Vec$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Vec"](0, (hB - hA) / 2);
                    break;
                }
        }
        if (delta) {
            delta.rot(next.rotation);
            const { x, y } = next;
            return {
                ...next,
                x: x - delta.x,
                y: y - delta.y,
                props: {
                    ...next.props,
                    w: wB
                }
            };
        } else {
            return {
                ...next,
                props: {
                    ...next.props,
                    w: wB
                }
            };
        }
    }
}
function getTextSize(editor, props) {
    const { font, richText, size, w } = props;
    const minWidth = 16;
    const fontSize = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FONT_SIZES"][size];
    const maybeFixedWidth = props.autoSize ? null : Math.max(minWidth, Math.floor(w));
    const html = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$utils$2f$text$2f$richText$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["renderHtmlFromRichTextForMeasurement"])(editor, richText);
    const result = editor.textMeasure.measureHtml(html, {
        ...__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TEXT_PROPS"],
        fontFamily: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$default$2d$shape$2d$constants$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FONT_FAMILIES"][font],
        fontSize,
        maxWidth: maybeFixedWidth
    });
    return {
        width: maybeFixedWidth ?? Math.max(minWidth, result.w + 1),
        height: Math.max(fontSize, result.h)
    };
}
function useTextShapeKeydownHandler(id) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((e)=>{
        if (editor.getEditingShapeId() !== id) return;
        switch(e.key){
            case "Enter":
                {
                    if (e.ctrlKey || e.metaKey) {
                        editor.complete();
                    }
                    break;
                }
        }
    }, [
        editor,
        id
    ]);
}
;
 //# sourceMappingURL=TextShapeUtil.mjs.map
}}),
"[project]/node_modules/tldraw/dist-esm/lib/shapes/video/VideoShapeUtil.mjs [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "VideoShapeUtil": (()=>VideoShapeUtil)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$BaseBoxShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/editor/shapes/BaseBoxShapeUtil.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$HTMLContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/components/HTMLContainer.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$media$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/media/media.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/utils/dist-esm/lib/cache.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/primitives/utils.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditor.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditorComponents$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useEditorComponents.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useIsEditing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/editor/dist-esm/lib/hooks/useIsEditing.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLVideoShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@tldraw/tlschema/dist-esm/shapes/TLVideoShape.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$classnames$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/classnames/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$BrokenAssetIcon$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/BrokenAssetIcon.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$HyperlinkButton$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/HyperlinkButton.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useImageOrVideoAsset$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/useImageOrVideoAsset.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$usePrefersReducedMotion$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/tldraw/dist-esm/lib/shapes/shared/usePrefersReducedMotion.mjs [app-ssr] (ecmascript)");
;
;
;
;
;
;
;
;
const videoSvgExportCache = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$cache$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WeakCache"]();
class VideoShapeUtil extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$editor$2f$shapes$2f$BaseBoxShapeUtil$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BaseBoxShapeUtil"] {
    static type = "video";
    static props = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLVideoShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["videoShapeProps"];
    static migrations = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$tlschema$2f$dist$2d$esm$2f$shapes$2f$TLVideoShape$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["videoShapeMigrations"];
    options = {
        autoplay: true
    };
    canEdit() {
        return true;
    }
    isAspectRatioLocked() {
        return true;
    }
    getDefaultProps() {
        return {
            w: 100,
            h: 100,
            assetId: null,
            autoplay: this.options.autoplay,
            url: "",
            altText: "",
            // Not used, but once upon a time were used to sync video state between users
            time: 0,
            playing: true
        };
    }
    getAriaDescriptor(shape) {
        return shape.props.altText;
    }
    component(shape) {
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(VideoShape, {
            shape
        });
    }
    indicator(shape) {
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("rect", {
            width: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.w),
            height: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$primitives$2f$utils$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toDomPrecision"])(shape.props.h)
        });
    }
    async toSvg(shape, ctx) {
        const props = shape.props;
        if (!props.assetId) return null;
        const asset = this.editor.getAsset(props.assetId);
        if (!asset) return null;
        const src = await videoSvgExportCache.get(asset, async ()=>{
            const assetUrl = await ctx.resolveAssetUrl(asset.id, props.w);
            if (!assetUrl) return null;
            const video = await __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$media$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MediaHelpers"].loadVideo(assetUrl);
            return await __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$utils$2f$dist$2d$esm$2f$lib$2f$media$2f$media$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MediaHelpers"].getVideoFrameAsDataUrl(video, 0);
        });
        if (!src) return null;
        return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("image", {
            href: src,
            width: props.w,
            height: props.h,
            "aria-label": shape.props.altText
        });
    }
}
const VideoShape = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["memo"])(function VideoShape2({ shape }) {
    const editor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditor$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditor"])();
    const showControls = editor.getShapeGeometry(shape).bounds.w * editor.getZoomLevel() >= 110;
    const isEditing = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useIsEditing$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useIsEditing"])(shape.id);
    const prefersReducedMotion = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$usePrefersReducedMotion$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["usePrefersReducedMotion"])();
    const { Spinner } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$hooks$2f$useEditorComponents$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEditorComponents"])();
    const { asset, url } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$useImageOrVideoAsset$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useImageOrVideoAsset"])({
        shapeId: shape.id,
        assetId: shape.props.assetId,
        width: shape.props.w
    });
    const rVideo = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useRef"])(null);
    const [isLoaded, setIsLoaded] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(false);
    const handleLoadedData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useCallback"])((e)=>{
        const video = e.currentTarget;
        if (!video) return;
        setIsLoaded(true);
    }, []);
    const [isFullscreen, setIsFullscreen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useState"])(false);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        const fullscreenChange = ()=>setIsFullscreen(document.fullscreenElement === rVideo.current);
        document.addEventListener("fullscreenchange", fullscreenChange);
        return ()=>document.removeEventListener("fullscreenchange", fullscreenChange);
    });
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useEffect"])(()=>{
        const video = rVideo.current;
        if (!video) return;
        if (isEditing) {
            if (document.activeElement !== video) {
                video.focus();
            }
        }
    }, [
        isEditing,
        isLoaded
    ]);
    return /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tldraw$2f$editor$2f$dist$2d$esm$2f$lib$2f$components$2f$HTMLContainer$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HTMLContainer"], {
                id: shape.id,
                style: {
                    color: "var(--color-text-3)",
                    backgroundColor: asset ? "transparent" : "var(--color-low)",
                    border: asset ? "none" : "1px solid var(--color-low-border)"
                },
                children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
                    className: "tl-counter-scaled",
                    children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("div", {
                        className: "tl-video-container",
                        children: !asset ? /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$BrokenAssetIcon$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BrokenAssetIcon"], {}) : Spinner && !asset.props.src ? /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(Spinner, {}) : url ? /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Fragment"], {
                            children: [
                                /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("video", {
                                    ref: rVideo,
                                    style: isEditing ? {
                                        pointerEvents: "all"
                                    } : !isLoaded ? {
                                        display: "none"
                                    } : void 0,
                                    className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$classnames$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])("tl-video", `tl-video-shape-${shape.id.split(":")[1]}`, {
                                        "tl-video-is-fullscreen": isFullscreen
                                    }),
                                    width: "100%",
                                    height: "100%",
                                    draggable: false,
                                    playsInline: true,
                                    autoPlay: shape.props.autoplay && !prefersReducedMotion,
                                    muted: true,
                                    loop: true,
                                    disableRemotePlayback: true,
                                    disablePictureInPicture: true,
                                    controls: isEditing && showControls,
                                    onLoadedData: handleLoadedData,
                                    hidden: !isLoaded,
                                    "aria-label": shape.props.altText,
                                    children: /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])("source", {
                                        src: url
                                    })
                                }, url),
                                !isLoaded && Spinner && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(Spinner, {})
                            ]
                        }) : null
                    })
                })
            }),
            "url" in shape.props && shape.props.url && /* @__PURE__ */ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$tldraw$2f$dist$2d$esm$2f$lib$2f$shapes$2f$shared$2f$HyperlinkButton$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["HyperlinkButton"], {
                url: shape.props.url
            })
        ]
    });
});
;
 //# sourceMappingURL=VideoShapeUtil.mjs.map
}}),

};

//# sourceMappingURL=node_modules_tldraw_dist-esm_lib_shapes_6c4efb8e._.js.map