{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/defaultEmbedDefinitions.ts"],"sourcesContent":["import { safeParseUrl } from '@tldraw/editor'\n\n// Only allow multiplayer embeds. If we add additional routes later for example '/help' this won't match\nconst TLDRAW_APP_RE = /(^\\/[f|p|r|ro|s|v]\\/[^/]+\\/?$)/\n\n/** @public */\nexport const DEFAULT_EMBED_DEFINITIONS = [\n\t{\n\t\ttype: 'tldraw',\n\t\ttitle: 'tldraw',\n\t\thostnames: ['beta.tldraw.com', 'tldraw.com', 'localhost:3000'],\n\t\tminWidth: 300,\n\t\tminHeight: 300,\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\toverridePermissions: {\n\t\t\t'allow-top-navigation': true,\n\t\t},\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(TLDRAW_APP_RE)) {\n\t\t\t\t// Add the \"clean=true\" search param to the URL to hide the sidebar\n\t\t\t\turlObj.searchParams.append('embed', 'true')\n\t\t\t\treturn url\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(TLDRAW_APP_RE)) {\n\t\t\t\t// Add the \"clean=true\" search param to the URL to hide the sidebar\n\t\t\t\turlObj.searchParams.delete('embed')\n\t\t\t\treturn url\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'figma',\n\t\ttitle: 'Figma',\n\t\thostnames: ['figma.com'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tif (\n\t\t\t\t!!url.match(\n\t\t\t\t\t// eslint-disable-next-line no-useless-escape\n\t\t\t\t\t/https:\\/\\/([\\w\\.-]+\\.)?figma.com\\/(file|proto|design)\\/([0-9a-zA-Z]{22,128})(?:\\/.*)?$/\n\t\t\t\t) &&\n\t\t\t\t!url.includes('figma.com/embed')\n\t\t\t) {\n\t\t\t\treturn `https://www.figma.com/embed?embed_host=share&url=${url}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/embed\\/?$/)) {\n\t\t\t\tconst outUrl = urlObj.searchParams.get('url')\n\t\t\t\tif (outUrl) {\n\t\t\t\t\treturn outUrl\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'google_maps',\n\t\ttitle: 'Google Maps',\n\t\thostnames: ['google.*'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\toverridePermissions: {\n\t\t\t'allow-presentation': true,\n\t\t},\n\t\ttoEmbedUrl: (url) => {\n\t\t\tif (url.includes('/maps/embed?')) {\n\t\t\t\treturn url\n\t\t\t} else if (url.includes('/maps/')) {\n\t\t\t\tconst match = url.match(/@(.*?),(.*?),(.*?)(z|m)/)\n\t\t\t\tlet result: string\n\t\t\t\tif (match) {\n\t\t\t\t\tconst [, lat, lng, zoomOrMeters, mapTypeSymbol] = match\n\t\t\t\t\tconst mapType = mapTypeSymbol === 'z' ? 'roadmap' : 'satellite'\n\t\t\t\t\t// Note: This meters to zoom equation is a rough approximation and not canonical.\n\t\t\t\t\tconst z =\n\t\t\t\t\t\tmapType === 'roadmap'\n\t\t\t\t\t\t\t? zoomOrMeters\n\t\t\t\t\t\t\t: -Math.log2(parseInt(zoomOrMeters) / 14772321) / 0.8\n\t\t\t\t\tconst host = new URL(url).host.replace('www.', '')\n\t\t\t\t\tresult = `https://${host}/maps/embed/v1/view?key=${process.env.NEXT_PUBLIC_GC_API_KEY}&center=${lat},${lng}&zoom=${z}&maptype=${mapType}`\n\t\t\t\t} else {\n\t\t\t\t\tresult = ''\n\t\t\t\t}\n\n\t\t\t\treturn result\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (!urlObj) return\n\n\t\t\tconst matches = urlObj.pathname.match(/^\\/maps\\/embed\\/v1\\/view\\/?$/)\n\t\t\tif (matches && urlObj.searchParams.has('center') && urlObj.searchParams.get('zoom')) {\n\t\t\t\tconst zoom = urlObj.searchParams.get('zoom') ?? '12'\n\t\t\t\tconst mapType = urlObj.searchParams.get('maptype') ?? 'roadmap'\n\t\t\t\t// Note: This zoom to meters equation is a rough approximation and not canonical.\n\t\t\t\tconst zoomOrMeters =\n\t\t\t\t\tmapType === 'roadmap' ? zoom : 14772321 * Math.pow(2, parseInt(zoom) * -0.8)\n\t\t\t\tconst [lat, lon] = urlObj.searchParams.get('center')!.split(',')\n\t\t\t\treturn `https://www.google.com/maps/@${lat},${lon},${zoomOrMeters}${mapType === 'roadmap' ? 'z' : 'm'}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'val_town',\n\t\ttitle: 'Val Town',\n\t\thostnames: ['val.town'],\n\t\tminWidth: 260,\n\t\tminHeight: 100,\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\t// e.g. extract \"steveruizok/mathFact\" from https://www.val.town/v/steveruizok/mathFact\n\t\t\tconst matches = urlObj && urlObj.pathname.match(/\\/v\\/(.+)\\/?/)\n\t\t\tif (matches) {\n\t\t\t\treturn `https://www.val.town/embed/${matches[1]}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\t// e.g. extract \"steveruizok/mathFact\" from https://www.val.town/v/steveruizok/mathFact\n\t\t\tconst matches = urlObj && urlObj.pathname.match(/\\/embed\\/(.+)\\/?/)\n\t\t\tif (matches) {\n\t\t\t\treturn `https://www.val.town/v/${matches[1]}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'codesandbox',\n\t\ttitle: 'CodeSandbox',\n\t\thostnames: ['codesandbox.io'],\n\t\tminWidth: 300,\n\t\tminHeight: 300,\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tconst matches = urlObj && urlObj.pathname.match(/\\/s\\/([^/]+)\\/?/)\n\t\t\tif (matches) {\n\t\t\t\treturn `https://codesandbox.io/embed/${matches[1]}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tconst matches = urlObj && urlObj.pathname.match(/\\/embed\\/([^/]+)\\/?/)\n\t\t\tif (matches) {\n\t\t\t\treturn `https://codesandbox.io/s/${matches[1]}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'codepen',\n\t\ttitle: 'Codepen',\n\t\thostnames: ['codepen.io'],\n\t\tminWidth: 300,\n\t\tminHeight: 300,\n\t\twidth: 520,\n\t\theight: 400,\n\t\tdoesResize: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst CODEPEN_URL_REGEXP = /https:\\/\\/codepen.io\\/([^/]+)\\/pen\\/([^/]+)/\n\t\t\tconst matches = url.match(CODEPEN_URL_REGEXP)\n\t\t\tif (matches) {\n\t\t\t\tconst [_, user, id] = matches\n\t\t\t\treturn `https://codepen.io/${user}/embed/${id}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst CODEPEN_EMBED_REGEXP = /https:\\/\\/codepen.io\\/([^/]+)\\/embed\\/([^/]+)/\n\t\t\tconst matches = url.match(CODEPEN_EMBED_REGEXP)\n\t\t\tif (matches) {\n\t\t\t\tconst [_, user, id] = matches\n\t\t\t\treturn `https://codepen.io/${user}/pen/${id}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'scratch',\n\t\ttitle: 'Scratch',\n\t\thostnames: ['scratch.mit.edu'],\n\t\twidth: 520,\n\t\theight: 400,\n\t\tdoesResize: false,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst SCRATCH_URL_REGEXP = /https?:\\/\\/scratch.mit.edu\\/projects\\/([^/]+)/\n\t\t\tconst matches = url.match(SCRATCH_URL_REGEXP)\n\t\t\tif (matches) {\n\t\t\t\tconst [_, id] = matches\n\t\t\t\treturn `https://scratch.mit.edu/projects/embed/${id}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst SCRATCH_EMBED_REGEXP = /https:\\/\\/scratch.mit.edu\\/projects\\/embed\\/([^/]+)/\n\t\t\tconst matches = url.match(SCRATCH_EMBED_REGEXP)\n\t\t\tif (matches) {\n\t\t\t\tconst [_, id] = matches\n\t\t\t\treturn `https://scratch.mit.edu/projects/${id}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'youtube',\n\t\ttitle: 'YouTube',\n\t\thostnames: ['*.youtube.com', 'youtube.com', 'youtu.be'],\n\t\twidth: 800,\n\t\theight: 450,\n\t\tdoesResize: true,\n\t\toverridePermissions: {\n\t\t\t'allow-presentation': true,\n\t\t\t'allow-popups-to-escape-sandbox': true,\n\t\t},\n\t\tisAspectRatioLocked: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (!urlObj) return\n\n\t\t\tconst hostname = urlObj.hostname.replace(/^www./, '')\n\t\t\tif (hostname === 'youtu.be') {\n\t\t\t\tconst videoId = urlObj.pathname.split('/').filter(Boolean)[0]\n\t\t\t\tconst searchParams = new URLSearchParams(urlObj.search)\n\t\t\t\tconst timeStart = searchParams.get('t')\n\t\t\t\tif (timeStart) {\n\t\t\t\t\tsearchParams.set('start', timeStart)\n\t\t\t\t\tsearchParams.delete('t')\n\t\t\t\t}\n\t\t\t\tconst search = searchParams.toString() ? '?' + searchParams.toString() : ''\n\t\t\t\treturn `https://www.youtube.com/embed/${videoId}${search}`\n\t\t\t} else if (\n\t\t\t\t(hostname === 'youtube.com' || hostname === 'm.youtube.com') &&\n\t\t\t\turlObj.pathname.match(/^\\/watch/)\n\t\t\t) {\n\t\t\t\tconst videoId = urlObj.searchParams.get('v')\n\t\t\t\tconst searchParams = new URLSearchParams(urlObj.search)\n\t\t\t\tsearchParams.delete('v')\n\t\t\t\tconst timeStart = searchParams.get('t')\n\t\t\t\tif (timeStart) {\n\t\t\t\t\tsearchParams.set('start', timeStart)\n\t\t\t\t\tsearchParams.delete('t')\n\t\t\t\t}\n\t\t\t\tconst search = searchParams.toString() ? '?' + searchParams.toString() : ''\n\t\t\t\treturn `https://www.youtube.com/embed/${videoId}${search}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (!urlObj) return\n\n\t\t\tconst hostname = urlObj.hostname.replace(/^www./, '')\n\t\t\tif (hostname === 'youtube.com') {\n\t\t\t\tconst matches = urlObj.pathname.match(/^\\/embed\\/([^/]+)\\/?/)\n\t\t\t\tif (matches) {\n\t\t\t\t\tconst params = new URLSearchParams(urlObj.search)\n\t\t\t\t\tparams.set('v', matches?.[1] ?? '')\n\t\t\t\t\tconst timeStart = params.get('start')\n\t\t\t\t\tif (timeStart) {\n\t\t\t\t\t\tparams.set('t', timeStart)\n\t\t\t\t\t\tparams.delete('start')\n\t\t\t\t\t}\n\t\t\t\t\treturn `https://www.youtube.com/watch?${params.toString()}`\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'google_calendar',\n\t\ttitle: 'Google Calendar',\n\t\thostnames: ['calendar.google.*'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tminWidth: 460,\n\t\tminHeight: 360,\n\t\tdoesResize: true,\n\t\tinstructionLink: 'https://support.google.com/calendar/answer/41207?hl=en',\n\t\toverridePermissions: {\n\t\t\t'allow-popups-to-escape-sandbox': true,\n\t\t},\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tconst cidQs = urlObj?.searchParams.get('cid')\n\n\t\t\tif (urlObj?.pathname.match(/\\/calendar\\/u\\/0/) && cidQs) {\n\t\t\t\turlObj.pathname = '/calendar/embed'\n\n\t\t\t\tconst keys = Array.from(urlObj.searchParams.keys())\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\turlObj.searchParams.delete(key)\n\t\t\t\t}\n\t\t\t\turlObj.searchParams.set('src', cidQs)\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tconst srcQs = urlObj?.searchParams.get('src')\n\n\t\t\tif (urlObj?.pathname.match(/\\/calendar\\/embed/) && srcQs) {\n\t\t\t\turlObj.pathname = '/calendar/u/0'\n\t\t\t\tconst keys = Array.from(urlObj.searchParams.keys())\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\turlObj.searchParams.delete(key)\n\t\t\t\t}\n\t\t\t\turlObj.searchParams.set('cid', srcQs)\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'google_slides',\n\t\ttitle: 'Google Slides',\n\t\thostnames: ['docs.google.*'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tminWidth: 460,\n\t\tminHeight: 360,\n\t\tdoesResize: true,\n\t\toverridePermissions: {\n\t\t\t'allow-popups-to-escape-sandbox': true,\n\t\t},\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\n\t\t\tif (urlObj?.pathname.match(/^\\/presentation/) && urlObj?.pathname.match(/\\/pub\\/?$/)) {\n\t\t\t\turlObj.pathname = urlObj.pathname.replace(/\\/pub$/, '/embed')\n\t\t\t\tconst keys = Array.from(urlObj.searchParams.keys())\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\turlObj.searchParams.delete(key)\n\t\t\t\t}\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\n\t\t\tif (urlObj?.pathname.match(/^\\/presentation/) && urlObj?.pathname.match(/\\/embed\\/?$/)) {\n\t\t\t\turlObj.pathname = urlObj.pathname.replace(/\\/embed$/, '/pub')\n\t\t\t\tconst keys = Array.from(urlObj.searchParams.keys())\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\turlObj.searchParams.delete(key)\n\t\t\t\t}\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'github_gist',\n\t\ttitle: 'GitHub Gist',\n\t\thostnames: ['gist.github.com'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\t// Security warning:\n\t\t// Gists allow adding .json extensions to the URL which return JSONP.\n\t\t// Furthermore, the JSONP can include callbacks that execute arbitrary JavaScript.\n\t\t// It _is_ sandboxed by the iframe but we still want to disable it nonetheless.\n\t\t// We restrict the id to only allow hexdecimal characters to prevent this.\n\t\t// Read more:\n\t\t//   https://github.com/bhaveshk90/Content-Security-Policy-CSP-Bypass-Techniques\n\t\t//   https://github.com/renniepak/CSPBypass\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/\\/([^/]+)\\/([0-9a-f]+)$/)) {\n\t\t\t\tif (!url.split('/').pop()) return\n\t\t\t\treturn url\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/\\/([^/]+)\\/([0-9a-f]+)$/)) {\n\t\t\t\tif (!url.split('/').pop()) return\n\t\t\t\treturn url\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'replit',\n\t\ttitle: 'Replit',\n\t\thostnames: ['replit.com'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/\\/@([^/]+)\\/([^/]+)/)) {\n\t\t\t\treturn `${url}?embed=true`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (\n\t\t\t\turlObj &&\n\t\t\t\turlObj.pathname.match(/\\/@([^/]+)\\/([^/]+)/) &&\n\t\t\t\turlObj.searchParams.has('embed')\n\t\t\t) {\n\t\t\t\turlObj.searchParams.delete('embed')\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'felt',\n\t\ttitle: 'Felt',\n\t\thostnames: ['felt.com'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/map\\//)) {\n\t\t\t\treturn urlObj.origin + '/embed' + urlObj.pathname\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/embed\\/map\\//)) {\n\t\t\t\turlObj.pathname = urlObj.pathname.replace(/^\\/embed/, '')\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'spotify',\n\t\ttitle: 'Spotify',\n\t\thostnames: ['open.spotify.com'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tminHeight: 500,\n\t\toverrideOutlineRadius: 12,\n\t\tdoesResize: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/(artist|album)\\//)) {\n\t\t\t\treturn urlObj.origin + '/embed' + urlObj.pathname\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/embed\\/(artist|album)\\//)) {\n\t\t\t\treturn urlObj.origin + urlObj.pathname.replace(/^\\/embed/, '')\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'vimeo',\n\t\ttitle: 'Vimeo',\n\t\thostnames: ['vimeo.com', 'player.vimeo.com'],\n\t\twidth: 640,\n\t\theight: 360,\n\t\tdoesResize: true,\n\t\tisAspectRatioLocked: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.hostname === 'vimeo.com') {\n\t\t\t\tif (urlObj.pathname.match(/^\\/[0-9]+/)) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t'https://player.vimeo.com/video/' + urlObj.pathname.split('/')[1] + '?title=0&byline=0'\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.hostname === 'player.vimeo.com') {\n\t\t\t\tconst matches = urlObj.pathname.match(/^\\/video\\/([^/]+)\\/?$/)\n\t\t\t\tif (matches) {\n\t\t\t\t\treturn 'https://vimeo.com/' + matches[1]\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'excalidraw',\n\t\ttitle: 'Excalidraw',\n\t\thostnames: ['excalidraw.com'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\tisAspectRatioLocked: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.hash.match(/#room=/)) {\n\t\t\t\treturn url\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.hash.match(/#room=/)) {\n\t\t\t\treturn url\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'observable',\n\t\ttitle: 'Observable',\n\t\thostnames: ['observablehq.com'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\tisAspectRatioLocked: false,\n\t\tbackgroundColor: '#fff',\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/@([^/]+)\\/([^/]+)\\/?$/)) {\n\t\t\t\treturn `${urlObj.origin}/embed${urlObj.pathname}?cell=*`\n\t\t\t}\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/d\\/([^/]+)\\/?$/)) {\n\t\t\t\tconst pathName = urlObj.pathname.replace(/^\\/d/, '')\n\t\t\t\treturn `${urlObj.origin}/embed${pathName}?cell=*`\n\t\t\t}\n\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/embed\\/@([^/]+)\\/([^/]+)\\/?$/)) {\n\t\t\t\treturn `${urlObj.origin}${urlObj.pathname.replace('/embed', '')}#cell-*`\n\t\t\t}\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/embed\\/([^/]+)\\/?$/)) {\n\t\t\t\treturn `${urlObj.origin}${urlObj.pathname.replace('/embed', '/d')}#cell-*`\n\t\t\t}\n\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'desmos',\n\t\ttitle: 'Desmos',\n\t\thostnames: ['desmos.com'],\n\t\twidth: 700,\n\t\theight: 450,\n\t\tdoesResize: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (\n\t\t\t\turlObj &&\n\t\t\t\turlObj.hostname === 'www.desmos.com' &&\n\t\t\t\turlObj.pathname.match(/^\\/calculator\\/([^/]+)\\/?$/) &&\n\t\t\t\turlObj.search === '' &&\n\t\t\t\turlObj.hash === ''\n\t\t\t) {\n\t\t\t\treturn `${url}?embed`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (\n\t\t\t\turlObj &&\n\t\t\t\turlObj.hostname === 'www.desmos.com' &&\n\t\t\t\turlObj.pathname.match(/^\\/calculator\\/([^/]+)\\/?$/) &&\n\t\t\t\turlObj.search === '?embed' &&\n\t\t\t\turlObj.hash === ''\n\t\t\t) {\n\t\t\t\treturn url.replace('?embed', '')\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n] as const satisfies readonly EmbedDefinition[]\n\n/**\n * Permissions with note inline from\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox\n *\n * @public\n */\nexport const embedShapePermissionDefaults = {\n\t// ========================================================================================\n\t// Disabled permissions\n\t// ========================================================================================\n\t// [MDN] Experimental: Allows for downloads to occur without a gesture from the user.\n\t// [REASON] Disabled because otherwise the <iframe/> can trick the user on behalf of us to perform an action.\n\t'allow-downloads-without-user-activation': false,\n\t// [MDN] Allows for downloads to occur with a gesture from the user.\n\t// [REASON] Disabled because otherwise the <iframe/> can trick the user on behalf of us to perform an action.\n\t'allow-downloads': false,\n\t// [MDN] Lets the resource open modal windows.\n\t// [REASON] The <iframe/> could 'window.prompt(\"Enter your tldraw password\")'.\n\t'allow-modals': false,\n\t// [MDN] Lets the resource lock the screen orientation.\n\t// [REASON] Would interfere with the tldraw interface.\n\t'allow-orientation-lock': false,\n\t// [MDN] Lets the resource use the Pointer Lock API.\n\t// [REASON] Maybe we should allow this for games embeds (scratch/codepen/codesandbox).\n\t'allow-pointer-lock': false,\n\t// [MDN] Allows popups (such as window.open(), target=\"_blank\", or showModalDialog()). If this keyword is not used, the popup will silently fail to open.\n\t// [REASON] We want to allow embeds to link back to their original sites (e.g. YouTube).\n\t'allow-popups': true,\n\t// [MDN] Lets the sandboxed document open new windows without those windows inheriting the sandboxing. For example, this can safely sandbox an advertisement without forcing the same restrictions upon the page the ad links to.\n\t// [REASON] We shouldn't allow popups as a embed could pretend to be us by opening a mocked version of tldraw. This is very unobvious when it is performed as an action within our app.\n\t'allow-popups-to-escape-sandbox': false,\n\t// [MDN] Lets the resource start a presentation session.\n\t// [REASON] Prevents embed from navigating away from tldraw and pretending to be us.\n\t'allow-presentation': false,\n\t// [MDN] Experimental: Lets the resource request access to the parent's storage capabilities with the Storage Access API.\n\t// [REASON] We don't want anyone else to access our storage.\n\t'allow-storage-access-by-user-activation': false,\n\t// [MDN] Lets the resource navigate the top-level browsing context (the one named _top).\n\t// [REASON] Prevents embed from navigating away from tldraw and pretending to be us.\n\t'allow-top-navigation': false,\n\t// [MDN] Lets the resource navigate the top-level browsing context, but only if initiated by a user gesture.\n\t// [REASON] Prevents embed from navigating away from tldraw and pretending to be us.\n\t'allow-top-navigation-by-user-activation': false,\n\t// ========================================================================================\n\t// Enabled permissions\n\t// ========================================================================================\n\t// [MDN] Lets the resource run scripts (but not create popup windows).\n\t'allow-scripts': true,\n\t// [MDN] If this token is not used, the resource is treated as being from a special origin that always fails the same-origin policy (potentially preventing access to data storage/cookies and some JavaScript APIs).\n\t'allow-same-origin': true,\n\t// [MDN] Allows the resource to submit forms. If this keyword is not used, form submission is blocked.\n\t'allow-forms': true,\n} as const\n\n/** @public */\nexport type TLEmbedShapePermissions = { [K in keyof typeof embedShapePermissionDefaults]?: boolean }\n\n/** @public */\nexport interface EmbedDefinition {\n\treadonly type: string\n\treadonly title: string\n\treadonly hostnames: readonly string[]\n\treadonly minWidth?: number\n\treadonly minHeight?: number\n\treadonly width: number\n\treadonly height: number\n\treadonly doesResize: boolean\n\treadonly isAspectRatioLocked?: boolean\n\treadonly overridePermissions?: TLEmbedShapePermissions\n\treadonly instructionLink?: string\n\treadonly backgroundColor?: string\n\t// TODO: FIXME this is ugly be required because some embeds have their own border radius for example spotify embeds\n\treadonly overrideOutlineRadius?: number\n\t// eslint-disable-next-line @typescript-eslint/method-signature-style\n\treadonly toEmbedUrl: (url: string) => string | undefined\n\t// eslint-disable-next-line @typescript-eslint/method-signature-style\n\treadonly fromEmbedUrl: (url: string) => string | undefined\n}\n\n/** @public */\nexport interface CustomEmbedDefinition extends EmbedDefinition {\n\treadonly icon: string\n}\n\n/** @public */\nexport type TLEmbedDefinition = EmbedDefinition | CustomEmbedDefinition\n\n/** @public */\nexport type DefaultEmbedDefinitionType = (typeof DEFAULT_EMBED_DEFINITIONS)[number]['type']\n\nconst DEFAULT_EMBED_DEFINITION_TYPES = DEFAULT_EMBED_DEFINITIONS.map(\n\t(def) => def.type\n) as DefaultEmbedDefinitionType[]\n\n/** @public */\nexport function isDefaultEmbedDefinitionType(type: string): type is DefaultEmbedDefinitionType {\n\treturn DEFAULT_EMBED_DEFINITION_TYPES.includes(type as DefaultEmbedDefinitionType)\n}\n\n/** @public */\nexport function isCustomEmbedDefinition(\n\tdef: EmbedDefinition | CustomEmbedDefinition\n): def is CustomEmbedDefinition {\n\treturn 'icon' in def\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 670, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/bindings/arrow/ArrowBindingUtil.ts"],"sourcesContent":["import {\n\tBindingOnChangeOptions,\n\tBindingOnCreateOptions,\n\tBindingOnShapeChangeOptions,\n\tBindingOnShapeIsolateOptions,\n\tBindingUtil,\n\tEditor,\n\tIndexKey,\n\tTLArrowBinding,\n\tTLArrowBindingProps,\n\tTLArrowShape,\n\tTLParentId,\n\tTLShape,\n\tTLShapeId,\n\tTLShapePartial,\n\tVec,\n\tapproximately,\n\tarrowBindingMigrations,\n\tarrowBindingProps,\n\tassert,\n\tgetIndexAbove,\n\tgetIndexBetween,\n\tintersectLineSegmentCircle,\n} from '@tldraw/editor'\nimport { getArrowBindings, getArrowInfo, removeArrowBinding } from '../../shapes/arrow/shared'\n\n/**\n * @public\n */\nexport class ArrowBindingUtil extends BindingUtil<TLArrowBinding> {\n\tstatic override type = 'arrow'\n\n\tstatic override props = arrowBindingProps\n\tstatic override migrations = arrowBindingMigrations\n\n\toverride getDefaultProps(): Partial<TLArrowBindingProps> {\n\t\treturn {\n\t\t\tisPrecise: false,\n\t\t\tisExact: false,\n\t\t\tnormalizedAnchor: { x: 0.5, y: 0.5 },\n\t\t\tsnap: 'none',\n\t\t}\n\t}\n\n\t// when the binding itself changes\n\toverride onAfterCreate({ binding }: BindingOnCreateOptions<TLArrowBinding>): void {\n\t\tconst arrow = this.editor.getShape(binding.fromId) as TLArrowShape | undefined\n\t\tif (!arrow) return\n\t\tarrowDidUpdate(this.editor, arrow)\n\t}\n\n\t// when the binding itself changes\n\toverride onAfterChange({ bindingAfter }: BindingOnChangeOptions<TLArrowBinding>): void {\n\t\tconst arrow = this.editor.getShape(bindingAfter.fromId) as TLArrowShape | undefined\n\t\tif (!arrow) return\n\t\tarrowDidUpdate(this.editor, arrow)\n\t}\n\n\t// when the arrow itself changes\n\toverride onAfterChangeFromShape({\n\t\tshapeAfter,\n\t}: BindingOnShapeChangeOptions<TLArrowBinding>): void {\n\t\tarrowDidUpdate(this.editor, shapeAfter as TLArrowShape)\n\t}\n\n\t// when the shape an arrow is bound to changes\n\toverride onAfterChangeToShape({\n\t\tbinding,\n\t\tshapeBefore,\n\t\tshapeAfter,\n\t\treason,\n\t}: BindingOnShapeChangeOptions<TLArrowBinding>): void {\n\t\tif (\n\t\t\treason !== 'ancestry' &&\n\t\t\tshapeBefore.parentId === shapeAfter.parentId &&\n\t\t\tshapeBefore.index === shapeAfter.index\n\t\t) {\n\t\t\treturn\n\t\t}\n\t\treparentArrow(this.editor, binding.fromId)\n\t}\n\n\t// when the arrow is isolated we need to update it's x,y positions\n\toverride onBeforeIsolateFromShape({\n\t\tbinding,\n\t}: BindingOnShapeIsolateOptions<TLArrowBinding>): void {\n\t\tconst arrow = this.editor.getShape<TLArrowShape>(binding.fromId)\n\t\tif (!arrow) return\n\t\tupdateArrowTerminal({\n\t\t\teditor: this.editor,\n\t\t\tarrow,\n\t\t\tterminal: binding.props.terminal,\n\t\t})\n\t}\n}\n\nfunction reparentArrow(editor: Editor, arrowId: TLShapeId) {\n\tconst arrow = editor.getShape<TLArrowShape>(arrowId)\n\tif (!arrow) return\n\tconst bindings = getArrowBindings(editor, arrow)\n\tconst { start, end } = bindings\n\tconst startShape = start ? editor.getShape(start.toId) : undefined\n\tconst endShape = end ? editor.getShape(end.toId) : undefined\n\n\tconst parentPageId = editor.getAncestorPageId(arrow)\n\tif (!parentPageId) return\n\n\tlet nextParentId: TLParentId\n\tif (startShape && endShape) {\n\t\t// if arrow has two bindings, always parent arrow to closest common ancestor of the bindings\n\t\tnextParentId = editor.findCommonAncestor([startShape, endShape]) ?? parentPageId\n\t} else if (startShape || endShape) {\n\t\tconst bindingParentId = (startShape || endShape)?.parentId\n\t\t// If the arrow and the shape that it is bound to have the same parent, then keep that parent\n\t\tif (bindingParentId && bindingParentId === arrow.parentId) {\n\t\t\tnextParentId = arrow.parentId\n\t\t} else {\n\t\t\t// if arrow has one binding, keep arrow on its own page\n\t\t\tnextParentId = parentPageId\n\t\t}\n\t} else {\n\t\treturn\n\t}\n\n\tif (nextParentId && nextParentId !== arrow.parentId) {\n\t\teditor.reparentShapes([arrowId], nextParentId)\n\t}\n\n\tconst reparentedArrow = editor.getShape<TLArrowShape>(arrowId)\n\tif (!reparentedArrow) throw Error('no reparented arrow')\n\n\tconst startSibling = editor.getShapeNearestSibling(reparentedArrow, startShape)\n\tconst endSibling = editor.getShapeNearestSibling(reparentedArrow, endShape)\n\n\tlet highestSibling: TLShape | undefined\n\n\tif (startSibling && endSibling) {\n\t\thighestSibling = startSibling.index > endSibling.index ? startSibling : endSibling\n\t} else if (startSibling && !endSibling) {\n\t\thighestSibling = startSibling\n\t} else if (endSibling && !startSibling) {\n\t\thighestSibling = endSibling\n\t} else {\n\t\treturn\n\t}\n\n\tlet finalIndex: IndexKey\n\n\tconst higherSiblings = editor\n\t\t.getSortedChildIdsForParent(highestSibling.parentId)\n\t\t.map((id) => editor.getShape(id)!)\n\t\t.filter((sibling) => sibling.index > highestSibling!.index)\n\n\tif (higherSiblings.length) {\n\t\t// there are siblings above the highest bound sibling, we need to\n\t\t// insert between them.\n\n\t\t// if the next sibling is also a bound arrow though, we can end up\n\t\t// all fighting for the same indexes. so lets find the next\n\t\t// non-arrow sibling...\n\t\tconst nextHighestNonArrowSibling = higherSiblings.find((sibling) => sibling.type !== 'arrow')\n\n\t\tif (\n\t\t\t// ...then, if we're above the last shape we want to be above...\n\t\t\treparentedArrow.index > highestSibling.index &&\n\t\t\t// ...but below the next non-arrow sibling...\n\t\t\t(!nextHighestNonArrowSibling || reparentedArrow.index < nextHighestNonArrowSibling.index)\n\t\t) {\n\t\t\t// ...then we're already in the right place. no need to update!\n\t\t\treturn\n\t\t}\n\n\t\t// otherwise, we need to find the index between the highest sibling\n\t\t// we want to be above, and the next highest sibling we want to be\n\t\t// below:\n\t\tfinalIndex = getIndexBetween(highestSibling.index, higherSiblings[0].index)\n\t} else {\n\t\t// if there are no siblings above us, we can just get the next index:\n\t\tfinalIndex = getIndexAbove(highestSibling.index)\n\t}\n\n\tif (finalIndex !== reparentedArrow.index) {\n\t\teditor.updateShapes<TLArrowShape>([{ id: arrowId, type: 'arrow', index: finalIndex }])\n\t}\n}\n\nfunction arrowDidUpdate(editor: Editor, arrow: TLArrowShape) {\n\tconst bindings = getArrowBindings(editor, arrow)\n\t// if the shape is an arrow and its bound shape is on another page\n\t// or was deleted, unbind it\n\tfor (const handle of ['start', 'end'] as const) {\n\t\tconst binding = bindings[handle]\n\t\tif (!binding) continue\n\t\tconst boundShape = editor.getShape(binding.toId)\n\t\tconst isShapeInSamePageAsArrow =\n\t\t\teditor.getAncestorPageId(arrow) === editor.getAncestorPageId(boundShape)\n\t\tif (!boundShape || !isShapeInSamePageAsArrow) {\n\t\t\tupdateArrowTerminal({ editor, arrow, terminal: handle, unbind: true })\n\t\t}\n\t}\n\n\t// always check the arrow parents\n\treparentArrow(editor, arrow.id)\n}\n\n/** @internal */\nexport function updateArrowTerminal({\n\teditor,\n\tarrow,\n\tterminal,\n\tunbind = false,\n\tuseHandle = false,\n}: {\n\teditor: Editor\n\tarrow: TLArrowShape\n\tterminal: 'start' | 'end'\n\tunbind?: boolean\n\tuseHandle?: boolean\n}) {\n\tconst info = getArrowInfo(editor, arrow)\n\tif (!info) {\n\t\tthrow new Error('expected arrow info')\n\t}\n\n\tconst startPoint = useHandle ? info.start.handle : info.start.point\n\tconst endPoint = useHandle ? info.end.handle : info.end.point\n\tconst point = terminal === 'start' ? startPoint : endPoint\n\n\tconst update = {\n\t\tid: arrow.id,\n\t\ttype: 'arrow',\n\t\tprops: {\n\t\t\t[terminal]: { x: point.x, y: point.y },\n\t\t\tbend: arrow.props.bend,\n\t\t},\n\t} satisfies TLShapePartial<TLArrowShape>\n\n\t// fix up the bend:\n\tif (info.type === 'arc') {\n\t\t// find the new start/end points of the resulting arrow\n\t\tconst newStart = terminal === 'start' ? startPoint : info.start.handle\n\t\tconst newEnd = terminal === 'end' ? endPoint : info.end.handle\n\t\tconst newMidPoint = Vec.Med(newStart, newEnd)\n\n\t\t// intersect a line segment perpendicular to the new arrow with the old arrow arc to\n\t\t// find the new mid-point\n\t\tconst lineSegment = Vec.Sub(newStart, newEnd)\n\t\t\t.per()\n\t\t\t.uni()\n\t\t\t.mul(info.handleArc.radius * 2 * Math.sign(arrow.props.bend))\n\n\t\t// find the intersections with the old arrow arc:\n\t\tconst intersections = intersectLineSegmentCircle(\n\t\t\tinfo.handleArc.center,\n\t\t\tVec.Add(newMidPoint, lineSegment),\n\t\t\tinfo.handleArc.center,\n\t\t\tinfo.handleArc.radius\n\t\t)\n\n\t\tassert(intersections?.length === 1)\n\t\tconst bend = Vec.Dist(newMidPoint, intersections[0]) * Math.sign(arrow.props.bend)\n\t\t// use `approximately` to avoid endless update loops\n\t\tif (!approximately(bend, update.props.bend)) {\n\t\t\tupdate.props.bend = bend\n\t\t}\n\t}\n\n\teditor.updateShape(update)\n\tif (unbind) {\n\t\tremoveArrowBinding(editor, arrow, terminal)\n\t}\n}\n"],"names":[],"mappings":";;;;AAAA;;;;;;;;AAwBA,SAAS,kBAAkB,cAAc,0BAA0B;;;AAK5D,MAAM,wNAAyB,cAAA,CAA4B;IACjE,OAAgB,OAAO,QAAA;IAEvB,OAAgB,2LAAQ,oBAAA,CAAA;IACxB,OAAgB,gMAAa,yBAAA,CAAA;IAEpB,kBAAgD;QACxD,OAAO;YACN,WAAW;YACX,SAAS;YACT,kBAAkB;gBAAE,GAAG;gBAAK,GAAG;YAAI;YACnC,MAAM;QACP;IACD;IAAA,kCAAA;IAGS,cAAc,EAAE,OAAA,CAAQ,CAAA,EAAiD;QACjF,MAAM,QAAQ,IAAA,CAAK,MAAA,CAAO,QAAA,CAAS,QAAQ,MAAM;QACjD,IAAI,CAAC,MAAO,CAAA;QACZ,eAAe,IAAA,CAAK,MAAA,EAAQ,KAAK;IAClC;IAAA,kCAAA;IAGS,cAAc,EAAE,YAAA,CAAa,CAAA,EAAiD;QACtF,MAAM,QAAQ,IAAA,CAAK,MAAA,CAAO,QAAA,CAAS,aAAa,MAAM;QACtD,IAAI,CAAC,MAAO,CAAA;QACZ,eAAe,IAAA,CAAK,MAAA,EAAQ,KAAK;IAClC;IAAA,gCAAA;IAGS,uBAAuB,EAC/B,UAAA,EACD,EAAsD;QACrD,eAAe,IAAA,CAAK,MAAA,EAAQ,UAA0B;IACvD;IAAA,8CAAA;IAGS,qBAAqB,EAC7B,OAAA,EACA,WAAA,EACA,UAAA,EACA,MAAA,EACD,EAAsD;QACrD,IACC,WAAW,cACX,YAAY,QAAA,KAAa,WAAW,QAAA,IACpC,YAAY,KAAA,KAAU,WAAW,KAAA,EAChC;YACD;QACD;QACA,cAAc,IAAA,CAAK,MAAA,EAAQ,QAAQ,MAAM;IAC1C;IAAA,kEAAA;IAGS,yBAAyB,EACjC,OAAA,EACD,EAAuD;QACtD,MAAM,QAAQ,IAAA,CAAK,MAAA,CAAO,QAAA,CAAuB,QAAQ,MAAM;QAC/D,IAAI,CAAC,MAAO,CAAA;QACZ,oBAAoB;YACnB,QAAQ,IAAA,CAAK,MAAA;YACb;YACA,UAAU,QAAQ,KAAA,CAAM,QAAA;QACzB,CAAC;IACF;AACD;AAEA,SAAS,cAAc,MAAA,EAAgB,OAAA,EAAoB;IAC1D,MAAM,QAAQ,OAAO,QAAA,CAAuB,OAAO;IACnD,IAAI,CAAC,MAAO,CAAA;IACZ,MAAM,0LAAW,mBAAA,EAAiB,QAAQ,KAAK;IAC/C,MAAM,EAAE,KAAA,EAAO,GAAA,CAAI,CAAA,GAAI;IACvB,MAAM,aAAa,QAAQ,OAAO,QAAA,CAAS,MAAM,IAAI,IAAI,KAAA;IACzD,MAAM,WAAW,MAAM,OAAO,QAAA,CAAS,IAAI,IAAI,IAAI,KAAA;IAEnD,MAAM,eAAe,OAAO,iBAAA,CAAkB,KAAK;IACnD,IAAI,CAAC,aAAc,CAAA;IAEnB,IAAI;IACJ,IAAI,cAAc,UAAU;QAE3B,eAAe,OAAO,kBAAA,CAAmB;YAAC;YAAY,QAAQ;SAAC,KAAK;IACrE,OAAA,IAAW,cAAc,UAAU;QAClC,MAAM,kBAAA,CAAmB,cAAc,QAAA,GAAW;QAElD,IAAI,mBAAmB,oBAAoB,MAAM,QAAA,EAAU;YAC1D,eAAe,MAAM,QAAA;QACtB,OAAO;YAEN,eAAe;QAChB;IACD,OAAO;QACN;IACD;IAEA,IAAI,gBAAgB,iBAAiB,MAAM,QAAA,EAAU;QACpD,OAAO,cAAA,CAAe;YAAC,OAAO;SAAA,EAAG,YAAY;IAC9C;IAEA,MAAM,kBAAkB,OAAO,QAAA,CAAuB,OAAO;IAC7D,IAAI,CAAC,gBAAiB,CAAA,MAAM,MAAM,qBAAqB;IAEvD,MAAM,eAAe,OAAO,sBAAA,CAAuB,iBAAiB,UAAU;IAC9E,MAAM,aAAa,OAAO,sBAAA,CAAuB,iBAAiB,QAAQ;IAE1E,IAAI;IAEJ,IAAI,gBAAgB,YAAY;QAC/B,iBAAiB,aAAa,KAAA,GAAQ,WAAW,KAAA,GAAQ,eAAe;IACzE,OAAA,IAAW,gBAAgB,CAAC,YAAY;QACvC,iBAAiB;IAClB,OAAA,IAAW,cAAc,CAAC,cAAc;QACvC,iBAAiB;IAClB,OAAO;QACN;IACD;IAEA,IAAI;IAEJ,MAAM,iBAAiB,OACrB,0BAAA,CAA2B,eAAe,QAAQ,EAClD,GAAA,CAAI,CAAC,KAAO,OAAO,QAAA,CAAS,EAAE,CAAE,EAChC,MAAA,CAAO,CAAC,UAAY,QAAQ,KAAA,GAAQ,eAAgB,KAAK;IAE3D,IAAI,eAAe,MAAA,EAAQ;QAO1B,MAAM,6BAA6B,eAAe,IAAA,CAAK,CAAC,UAAY,QAAQ,IAAA,KAAS,OAAO;QAE5F,IAAA,gEAAA;QAEC,gBAAgB,KAAA,GAAQ,eAAe,KAAA,IAAA,6CAAA;QAAA,CAEtC,CAAC,8BAA8B,gBAAgB,KAAA,GAAQ,2BAA2B,KAAA,GAClF;YAED;QACD;QAKA,wLAAa,kBAAA,EAAgB,eAAe,KAAA,EAAO,cAAA,CAAe,CAAC,CAAA,CAAE,KAAK;IAC3E,OAAO;QAEN,cAAa,0LAAA,EAAc,eAAe,KAAK;IAChD;IAEA,IAAI,eAAe,gBAAgB,KAAA,EAAO;QACzC,OAAO,YAAA,CAA2B;YAAC;gBAAE,IAAI;gBAAS,MAAM;gBAAS,OAAO;YAAW,CAAC;SAAC;IACtF;AACD;AAEA,SAAS,eAAe,MAAA,EAAgB,KAAA,EAAqB;IAC5D,MAAM,0LAAW,mBAAA,EAAiB,QAAQ,KAAK;IAG/C,KAAA,MAAW,UAAU;QAAC;QAAS,KAAK;KAAA,CAAY;QAC/C,MAAM,UAAU,QAAA,CAAS,MAAM,CAAA;QAC/B,IAAI,CAAC,QAAS,CAAA;QACd,MAAM,aAAa,OAAO,QAAA,CAAS,QAAQ,IAAI;QAC/C,MAAM,2BACL,OAAO,iBAAA,CAAkB,KAAK,MAAM,OAAO,iBAAA,CAAkB,UAAU;QACxE,IAAI,CAAC,cAAc,CAAC,0BAA0B;YAC7C,oBAAoB;gBAAE;gBAAQ;gBAAO,UAAU;gBAAQ,QAAQ;YAAK,CAAC;QACtE;IACD;IAGA,cAAc,QAAQ,MAAM,EAAE;AAC/B;AAGO,SAAS,oBAAoB,EACnC,MAAA,EACA,KAAA,EACA,QAAA,EACA,SAAS,KAAA,EACT,YAAY,KAAA,EACb,EAMG;IACF,MAAM,sLAAO,eAAA,EAAa,QAAQ,KAAK;IACvC,IAAI,CAAC,MAAM;QACV,MAAM,IAAI,MAAM,qBAAqB;IACtC;IAEA,MAAM,aAAa,YAAY,KAAK,KAAA,CAAM,MAAA,GAAS,KAAK,KAAA,CAAM,KAAA;IAC9D,MAAM,WAAW,YAAY,KAAK,GAAA,CAAI,MAAA,GAAS,KAAK,GAAA,CAAI,KAAA;IACxD,MAAM,QAAQ,aAAa,UAAU,aAAa;IAElD,MAAM,SAAS;QACd,IAAI,MAAM,EAAA;QACV,MAAM;QACN,OAAO;YACN,CAAC,QAAQ,CAAA,EAAG;gBAAE,GAAG,MAAM,CAAA;gBAAG,GAAG,MAAM,CAAA;YAAE;YACrC,MAAM,MAAM,KAAA,CAAM,IAAA;QACnB;IACD;IAGA,IAAI,KAAK,IAAA,KAAS,OAAO;QAExB,MAAM,WAAW,aAAa,UAAU,aAAa,KAAK,KAAA,CAAM,MAAA;QAChE,MAAM,SAAS,aAAa,QAAQ,WAAW,KAAK,GAAA,CAAI,MAAA;QACxD,MAAM,6LAAc,MAAA,CAAI,GAAA,CAAI,UAAU,MAAM;QAI5C,MAAM,6LAAc,MAAA,CAAI,GAAA,CAAI,UAAU,MAAM,EAC1C,GAAA,CAAI,EACJ,GAAA,CAAI,EACJ,GAAA,CAAI,KAAK,SAAA,CAAU,MAAA,GAAS,IAAI,KAAK,IAAA,CAAK,MAAM,KAAA,CAAM,IAAI,CAAC;QAG7D,MAAM,yMAAgB,6BAAA,EACrB,KAAK,SAAA,CAAU,MAAA,iLACf,MAAA,CAAI,GAAA,CAAI,aAAa,WAAW,GAChC,KAAK,SAAA,CAAU,MAAA,EACf,KAAK,SAAA,CAAU,MAAA;QAGhB,CAAA,GAAA,mKAAA,CAAA,SAAA,EAAO,eAAe,WAAW,CAAC;QAClC,MAAM,qLAAO,OAAA,CAAI,IAAA,CAAK,aAAa,aAAA,CAAc,CAAC,CAAC,IAAI,KAAK,IAAA,CAAK,MAAM,KAAA,CAAM,IAAI;QAEjF,IAAI,EAAC,oMAAA,EAAc,MAAM,OAAO,KAAA,CAAM,IAAI,GAAG;YAC5C,OAAO,KAAA,CAAM,IAAA,GAAO;QACrB;IACD;IAEA,OAAO,WAAA,CAAY,MAAM;IACzB,IAAI,QAAQ;QACX,CAAA,GAAA,0KAAA,CAAA,qBAAA,EAAmB,QAAQ,OAAO,QAAQ;IAC3C;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 866, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/canvas/TldrawHandles.tsx"],"sourcesContent":["import { TLHandlesProps, useEditor, useValue } from '@tldraw/editor'\n\n/** @public @react */\nexport function TldrawHandles({ children }: TLHandlesProps) {\n\tconst editor = useEditor()\n\n\t// todo: maybe display note shape handles here?\n\n\tconst shouldDisplayHandles = useValue(\n\t\t'shouldDisplayHandles',\n\t\t() => {\n\t\t\tif (editor.isInAny('select.idle', 'select.pointing_handle', 'select.pointing_shape')) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (editor.isInAny('select.editing_shape')) {\n\t\t\t\tconst onlySelectedShape = editor.getOnlySelectedShape()\n\t\t\t\treturn onlySelectedShape && editor.isShapeOfType(onlySelectedShape, 'note')\n\t\t\t}\n\t\t\treturn false\n\t\t},\n\t\t[editor]\n\t)\n\n\tif (!shouldDisplayHandles) return null\n\n\treturn (\n\t\t<svg className=\"tl-user-handles tl-overlays__item\" aria-hidden=\"true\">\n\t\t\t{children}\n\t\t</svg>\n\t)\n}\n"],"names":[],"mappings":";;;AA0BE;AA1BF,SAAyB,WAAW,gBAAgB;;;;;AAG7C,SAAS,cAAc,EAAE,QAAA,CAAS,CAAA,EAAmB;IAC3D,MAAM,6LAAS,YAAA,CAAU;IAIzB,MAAM,wBAAuB,4LAAA,EAC5B,wBACA,MAAM;QACL,IAAI,OAAO,OAAA,CAAQ,eAAe,0BAA0B,uBAAuB,GAAG;YACrF,OAAO;QACR;QACA,IAAI,OAAO,OAAA,CAAQ,sBAAsB,GAAG;YAC3C,MAAM,oBAAoB,OAAO,oBAAA,CAAqB;YACtD,OAAO,qBAAqB,OAAO,aAAA,CAAc,mBAAmB,MAAM;QAC3E;QACA,OAAO;IACR,GACA;QAAC,MAAM;KAAA;IAGR,IAAI,CAAC,qBAAsB,CAAA,OAAO;IAElC,OACC,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,OAAA;QAAI,WAAU;QAAoC,eAAY;QAC7D;IAAA,CACF;AAEF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 904, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/canvas/TldrawOverlays.tsx"],"sourcesContent":["import { useEditor, useEditorComponents, useValue } from '@tldraw/editor'\nimport { getArrowTargetState } from '../shapes/arrow/arrowTargetState'\nimport { DraggingHandle } from '../tools/SelectTool/childStates/DraggingHandle'\nimport { PointingHandle } from '../tools/SelectTool/childStates/PointingHandle'\n\n/** @public @react */\nexport function TldrawOverlays() {\n\tconst editor = useEditor()\n\n\tconst shouldShowArrowHints = useValue(\n\t\t'should show arrow hints',\n\t\t() => {\n\t\t\tif (editor.isInAny('arrow.idle', 'arrow.pointing')) return true\n\n\t\t\tif (editor.isIn('select.pointing_handle')) {\n\t\t\t\tconst node: PointingHandle = editor.getStateDescendant('select.pointing_handle')!\n\t\t\t\tif (\n\t\t\t\t\tnode.info.shape.type === 'arrow' &&\n\t\t\t\t\t(node.info.handle.id === 'start' || node.info.handle.id === 'end')\n\t\t\t\t) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (editor.isIn('select.dragging_handle')) {\n\t\t\t\tconst node: DraggingHandle = editor.getStateDescendant('select.dragging_handle')!\n\t\t\t\tif (\n\t\t\t\t\tnode.info.shape.type === 'arrow' &&\n\t\t\t\t\t(node.info.handle.id === 'start' || node.info.handle.id === 'end')\n\t\t\t\t) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false\n\t\t},\n\t\t[editor]\n\t)\n\n\tif (!shouldShowArrowHints) return null\n\n\treturn <TldrawArrowHints />\n}\n\n/** @public @react */\nexport function TldrawArrowHints() {\n\tconst editor = useEditor()\n\tconst { ShapeIndicator } = useEditorComponents()\n\n\tconst targetInfo = useValue('arrow target info', () => getArrowTargetState(editor), [editor])\n\n\tif (!targetInfo) return null\n\n\tconst { handlesInPageSpace, snap, anchorInPageSpace, arrowKind, isExact, isPrecise } = targetInfo\n\n\tconst showEdgeHints = !isExact && arrowKind === 'elbow'\n\n\treturn (\n\t\t<>\n\t\t\t{ShapeIndicator && <ShapeIndicator shapeId={targetInfo.target.id} />}\n\n\t\t\t{showEdgeHints && (\n\t\t\t\t<svg className=\"tl-overlays__item\" aria-hidden=\"true\">\n\t\t\t\t\t<circle\n\t\t\t\t\t\tcx={anchorInPageSpace.x}\n\t\t\t\t\t\tcy={anchorInPageSpace.y}\n\t\t\t\t\t\tclassName={`tl-arrow-hint-snap tl-arrow-hint-snap__${isPrecise ? (snap ?? 'none') : 'none'}`}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{Object.entries(handlesInPageSpace).map(([side, handle]) => {\n\t\t\t\t\t\tif (!handle.isEnabled) return null\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<circle\n\t\t\t\t\t\t\t\tkey={side}\n\t\t\t\t\t\t\t\tcx={handle.point.x}\n\t\t\t\t\t\t\t\tcy={handle.point.y}\n\t\t\t\t\t\t\t\tclassName=\"tl-arrow-hint-handle\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</svg>\n\t\t\t)}\n\t\t</>\n\t)\n}\n"],"names":[],"mappings":";;;;AAyCQ,SAiBN,UAjBM,KAqBJ,YArBI;AAzCR,SAAS,WAAW,qBAAqB,gBAAgB;;;;AACzD,SAAS,2BAA2B;;;;AAK7B,SAAS,iBAAiB;IAChC,MAAM,6LAAS,YAAA,CAAU;IAEzB,MAAM,yMAAuB,WAAA,EAC5B,2BACA,MAAM;QACL,IAAI,OAAO,OAAA,CAAQ,cAAc,gBAAgB,EAAG,CAAA,OAAO;QAE3D,IAAI,OAAO,IAAA,CAAK,wBAAwB,GAAG;YAC1C,MAAM,OAAuB,OAAO,kBAAA,CAAmB,wBAAwB;YAC/E,IACC,KAAK,IAAA,CAAK,KAAA,CAAM,IAAA,KAAS,WAAA,CACxB,KAAK,IAAA,CAAK,MAAA,CAAO,EAAA,KAAO,WAAW,KAAK,IAAA,CAAK,MAAA,CAAO,EAAA,KAAO,KAAA,GAC3D;gBACD,OAAO;YACR;QACD;QAEA,IAAI,OAAO,IAAA,CAAK,wBAAwB,GAAG;YAC1C,MAAM,OAAuB,OAAO,kBAAA,CAAmB,wBAAwB;YAC/E,IACC,KAAK,IAAA,CAAK,KAAA,CAAM,IAAA,KAAS,WAAA,CACxB,KAAK,IAAA,CAAK,MAAA,CAAO,EAAA,KAAO,WAAW,KAAK,IAAA,CAAK,MAAA,CAAO,EAAA,KAAO,KAAA,GAC3D;gBACD,OAAO;YACR;QACD;QAEA,OAAO;IACR,GACA;QAAC,MAAM;KAAA;IAGR,IAAI,CAAC,qBAAsB,CAAA,OAAO;IAElC,OAAO,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,kBAAA,CAAA,CAAiB;AAC1B;AAGO,SAAS,mBAAmB;IAClC,MAAM,UAAS,+LAAA,CAAU;IACzB,MAAM,EAAE,cAAA,CAAe,CAAA,iMAAI,sBAAA,CAAoB;IAE/C,MAAM,aAAa,6LAAA,EAAS,qBAAqB,6LAAM,sBAAA,EAAoB,MAAM,GAAG;QAAC,MAAM;KAAC;IAE5F,IAAI,CAAC,WAAY,CAAA,OAAO;IAExB,MAAM,EAAE,kBAAA,EAAoB,IAAA,EAAM,iBAAA,EAAmB,SAAA,EAAW,OAAA,EAAS,SAAA,CAAU,CAAA,GAAI;IAEvF,MAAM,gBAAgB,CAAC,WAAW,cAAc;IAEhD,OACC,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,OAAA,EAAA,uNAAA,CAAA,WAAA,EAAA;QACE,UAAA;YAAA,kBAAkB,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,gBAAA;gBAAe,SAAS,WAAW,MAAA,CAAO,EAAA;YAAA,CAAI;YAEjE,iBACA,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,OAAA,EAAC,OAAA;gBAAI,WAAU;gBAAoB,eAAY;gBAC9C,UAAA;oBAAA,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,UAAA;wBACA,IAAI,kBAAkB,CAAA;wBACtB,IAAI,kBAAkB,CAAA;wBACtB,WAAW,CAAA,uCAAA,EAA0C,YAAa,QAAQ,SAAU,MAAM,EAAA;oBAAA;oBAG1F,OAAO,OAAA,CAAQ,kBAAkB,EAAE,GAAA,CAAI,CAAC,CAAC,MAAM,MAAM,CAAA,KAAM;wBAC3D,IAAI,CAAC,OAAO,SAAA,CAAW,CAAA,OAAO;wBAC9B,OACC,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,UAAA;4BAEA,IAAI,OAAO,KAAA,CAAM,CAAA;4BACjB,IAAI,OAAO,KAAA,CAAM,CAAA;4BACjB,WAAU;wBAAA,GAHL;oBAMR,CAAC;iBAAA;YAAA,CACF;SAAA;IAAA,CAEF;AAEF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 984, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/canvas/TldrawScribble.tsx"],"sourcesContent":["import { EASINGS, TLScribbleProps, getSvgPathFromPoints } from '@tldraw/editor'\nimport classNames from 'classnames'\nimport { getStroke } from '../shapes/shared/freehand/getStroke'\n\n/** @public @react */\nexport function TldrawScribble({ scribble, zoom, color, opacity, className }: TLScribbleProps) {\n\tif (!scribble.points.length) return null\n\n\tconst stroke = getStroke(scribble.points, {\n\t\tsize: scribble.size / zoom,\n\t\tstart: { taper: scribble.taper, easing: EASINGS.linear },\n\t\tlast: scribble.state === 'stopping',\n\t\tsimulatePressure: false,\n\t\tstreamline: 0.32,\n\t})\n\n\tlet d: string\n\n\tif (stroke.length < 4) {\n\t\t// the stroke will be 3 points as a sort of shrugging fail state, so let's draw a dot instead\n\t\tconst r = scribble.size / zoom / 2\n\t\tconst { x, y } = scribble.points[scribble.points.length - 1]\n\t\td = `M ${x - r},${y} a ${r},${r} 0 1,0 ${r * 2},0 a ${r},${r} 0 1,0 ${-r * 2},0`\n\t} else {\n\t\t// If we do have a stroke, then draw the stroke path\n\t\td = getSvgPathFromPoints(stroke)\n\t}\n\n\treturn (\n\t\t<svg className={className ? classNames('tl-overlays__item', className) : className}>\n\t\t\t<path\n\t\t\t\tclassName=\"tl-scribble\"\n\t\t\t\td={d}\n\t\t\t\tfill={color ?? `var(--color-${scribble.color})`}\n\t\t\t\topacity={opacity ?? scribble.opacity}\n\t\t\t/>\n\t\t</svg>\n\t)\n}\n"],"names":[],"mappings":";;;AA8BG;AA9BH,SAAS,SAA0B,4BAA4B;;;AAC/D,OAAO,gBAAgB;AACvB,SAAS,iBAAiB;;;;;AAGnB,SAAS,eAAe,EAAE,QAAA,EAAU,IAAA,EAAM,KAAA,EAAO,OAAA,EAAS,SAAA,CAAU,CAAA,EAAoB;IAC9F,IAAI,CAAC,SAAS,MAAA,CAAO,MAAA,CAAQ,CAAA,OAAO;IAEpC,MAAM,UAAS,0MAAA,EAAU,SAAS,MAAA,EAAQ;QACzC,MAAM,SAAS,IAAA,GAAO;QACtB,OAAO;YAAE,OAAO,SAAS,KAAA;YAAO,2LAAQ,UAAA,CAAQ,MAAA;QAAO;QACvD,MAAM,SAAS,KAAA,KAAU;QACzB,kBAAkB;QAClB,YAAY;IACb,CAAC;IAED,IAAI;IAEJ,IAAI,OAAO,MAAA,GAAS,GAAG;QAEtB,MAAM,IAAI,SAAS,IAAA,GAAO,OAAO;QACjC,MAAM,EAAE,CAAA,EAAG,CAAA,CAAE,CAAA,GAAI,SAAS,MAAA,CAAO,SAAS,MAAA,CAAO,MAAA,GAAS,CAAC,CAAA;QAC3D,IAAI,CAAA,EAAA,EAAK,IAAI,CAAC,CAAA,CAAA,EAAI,CAAC,CAAA,GAAA,EAAM,CAAC,CAAA,CAAA,EAAI,CAAC,CAAA,OAAA,EAAU,IAAI,CAAC,CAAA,KAAA,EAAQ,CAAC,CAAA,CAAA,EAAI,CAAC,CAAA,OAAA,EAAU,CAAC,IAAI,CAAC,CAAA,EAAA,CAAA;IAC7E,OAAO;QAEN,IAAI,sNAAA,EAAqB,MAAM;IAChC;IAEA,OACC,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,OAAA;QAAI,WAAW,aAAY,iJAAA,EAAW,qBAAqB,SAAS,IAAI;QACxE,UAAA,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,QAAA;YACA,WAAU;YACV;YACA,MAAM,SAAS,CAAA,YAAA,EAAe,SAAS,KAAK,CAAA,CAAA,CAAA;YAC5C,SAAS,WAAW,SAAS,OAAA;QAAA;IAC9B,CACD;AAEF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1035, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/canvas/TldrawCropHandles.tsx"],"sourcesContent":["import { toDomPrecision } from '@tldraw/editor'\nimport classNames from 'classnames'\nimport { useTranslation } from '../ui/hooks/useTranslation/useTranslation'\n\nexport interface TldrawCropHandlesProps {\n\tsize: number\n\twidth: number\n\theight: number\n\thideAlternateHandles: boolean\n}\n\nexport function TldrawCropHandles({\n\tsize,\n\twidth,\n\theight,\n\thideAlternateHandles,\n}: TldrawCropHandlesProps) {\n\tconst cropStrokeWidth = toDomPrecision(size / 3)\n\tconst offset = cropStrokeWidth / 2\n\tconst msg = useTranslation()\n\n\treturn (\n\t\t<svg className=\"tl-overlays__item\" aria-hidden=\"true\">\n\t\t\t{/* Top left */}\n\t\t\t<polyline\n\t\t\t\tclassName=\"tl-corner-crop-handle\"\n\t\t\t\tpoints={`\n\t\t\t\t\t\t${toDomPrecision(0 - offset)},${toDomPrecision(size)} \n\t\t\t\t\t\t${toDomPrecision(0 - offset)},${toDomPrecision(0 - offset)} \n\t\t\t\t\t\t${toDomPrecision(size)},${toDomPrecision(0 - offset)}`}\n\t\t\t\tstrokeWidth={cropStrokeWidth}\n\t\t\t\tdata-testid=\"selection.crop.top_left\"\n\t\t\t\trole=\"button\"\n\t\t\t\taria-label={msg('handle.crop.top-left')}\n\t\t\t/>\n\t\t\t{/* Top */}\n\t\t\t<line\n\t\t\t\tclassName={classNames('tl-corner-crop-edge-handle', {\n\t\t\t\t\t'tl-hidden': hideAlternateHandles,\n\t\t\t\t})}\n\t\t\t\tx1={toDomPrecision(width / 2 - size)}\n\t\t\t\ty1={toDomPrecision(0 - offset)}\n\t\t\t\tx2={toDomPrecision(width / 2 + size)}\n\t\t\t\ty2={toDomPrecision(0 - offset)}\n\t\t\t\tstrokeWidth={cropStrokeWidth}\n\t\t\t\tdata-testid=\"selection.crop.top\"\n\t\t\t\trole=\"button\"\n\t\t\t\taria-label={msg('handle.crop.top')}\n\t\t\t/>\n\t\t\t{/* Top right */}\n\t\t\t<polyline\n\t\t\t\tclassName={classNames('tl-corner-crop-handle', {\n\t\t\t\t\t'tl-hidden': hideAlternateHandles,\n\t\t\t\t})}\n\t\t\t\tpoints={`\n\t\t\t\t\t\t${toDomPrecision(width - size)},${toDomPrecision(0 - offset)} \n\t\t\t\t\t\t${toDomPrecision(width + offset)},${toDomPrecision(0 - offset)} \n\t\t\t\t\t\t${toDomPrecision(width + offset)},${toDomPrecision(size)}`}\n\t\t\t\tstrokeWidth={cropStrokeWidth}\n\t\t\t\tdata-testid=\"selection.crop.top_right\"\n\t\t\t\trole=\"button\"\n\t\t\t\taria-label={msg('handle.crop.top-right')}\n\t\t\t/>\n\t\t\t{/* Right */}\n\t\t\t<line\n\t\t\t\tclassName={classNames('tl-corner-crop-edge-handle', {\n\t\t\t\t\t'tl-hidden': hideAlternateHandles,\n\t\t\t\t})}\n\t\t\t\tx1={toDomPrecision(width + offset)}\n\t\t\t\ty1={toDomPrecision(height / 2 - size)}\n\t\t\t\tx2={toDomPrecision(width + offset)}\n\t\t\t\ty2={toDomPrecision(height / 2 + size)}\n\t\t\t\tstrokeWidth={cropStrokeWidth}\n\t\t\t\tdata-testid=\"selection.crop.right\"\n\t\t\t\trole=\"button\"\n\t\t\t\taria-label={msg('handle.crop.right')}\n\t\t\t/>\n\t\t\t{/* Bottom right */}\n\t\t\t<polyline\n\t\t\t\tclassName=\"tl-corner-crop-handle\"\n\t\t\t\tpoints={`\n\t\t\t\t\t\t${toDomPrecision(width + offset)},${toDomPrecision(height - size)} \n\t\t\t\t\t\t${toDomPrecision(width + offset)},${toDomPrecision(height + offset)}\n\t\t\t\t\t\t${toDomPrecision(width - size)},${toDomPrecision(height + offset)}`}\n\t\t\t\tstrokeWidth={cropStrokeWidth}\n\t\t\t\tdata-testid=\"selection.crop.bottom_right\"\n\t\t\t\trole=\"button\"\n\t\t\t\taria-label={msg('handle.crop.bottom-right')}\n\t\t\t/>\n\t\t\t{/* Bottom */}\n\t\t\t<line\n\t\t\t\tclassName={classNames('tl-corner-crop-edge-handle', {\n\t\t\t\t\t'tl-hidden': hideAlternateHandles,\n\t\t\t\t})}\n\t\t\t\tx1={toDomPrecision(width / 2 - size)}\n\t\t\t\ty1={toDomPrecision(height + offset)}\n\t\t\t\tx2={toDomPrecision(width / 2 + size)}\n\t\t\t\ty2={toDomPrecision(height + offset)}\n\t\t\t\tstrokeWidth={cropStrokeWidth}\n\t\t\t\tdata-testid=\"selection.crop.bottom\"\n\t\t\t\trole=\"button\"\n\t\t\t\taria-label={msg('handle.crop.bottom')}\n\t\t\t/>\n\t\t\t{/* Bottom left */}\n\t\t\t<polyline\n\t\t\t\tclassName={classNames('tl-corner-crop-handle', {\n\t\t\t\t\t'tl-hidden': hideAlternateHandles,\n\t\t\t\t})}\n\t\t\t\tpoints={`\n\t\t\t\t\t\t${toDomPrecision(0 + size)},${toDomPrecision(height + offset)} \n\t\t\t\t\t\t${toDomPrecision(0 - offset)},${toDomPrecision(height + offset)}\n\t\t\t\t\t\t${toDomPrecision(0 - offset)},${toDomPrecision(height - size)}`}\n\t\t\t\tstrokeWidth={cropStrokeWidth}\n\t\t\t\tdata-testid=\"selection.crop.bottom_left\"\n\t\t\t\trole=\"button\"\n\t\t\t\taria-label={msg('handle.crop.bottom-left')}\n\t\t\t/>\n\t\t\t{/* Left */}\n\t\t\t<line\n\t\t\t\tclassName={classNames('tl-corner-crop-edge-handle', {\n\t\t\t\t\t'tl-hidden': hideAlternateHandles,\n\t\t\t\t})}\n\t\t\t\tx1={toDomPrecision(0 - offset)}\n\t\t\t\ty1={toDomPrecision(height / 2 - size)}\n\t\t\t\tx2={toDomPrecision(0 - offset)}\n\t\t\t\ty2={toDomPrecision(height / 2 + size)}\n\t\t\t\tstrokeWidth={cropStrokeWidth}\n\t\t\t\tdata-testid=\"selection.crop.left\"\n\t\t\t\trole=\"button\"\n\t\t\t\taria-label={msg('handle.crop.left')}\n\t\t\t/>\n\t\t</svg>\n\t)\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1166, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/canvas/TldrawSelectionForeground.tsx"],"sourcesContent":["import {\n\tBox,\n\tRotateCorner,\n\tTLEmbedShape,\n\tTLSelectionForegroundProps,\n\tTLTextShape,\n\tgetCursor,\n\ttlenv,\n\ttoDomPrecision,\n\ttrack,\n\tuseEditor,\n\tuseSelectionEvents,\n\tuseTransform,\n\tuseValue,\n} from '@tldraw/editor'\nimport classNames from 'classnames'\nimport { PointerEventHandler, useRef } from 'react'\nimport { useReadonly } from '../ui/hooks/useReadonly'\nimport { useTranslation } from '../ui/hooks/useTranslation/useTranslation'\nimport { TldrawCropHandles } from './TldrawCropHandles'\n\n/** @public */\nexport const TldrawSelectionForeground = track(function TldrawSelectionForeground({\n\tbounds,\n\trotation,\n}: TLSelectionForegroundProps) {\n\tconst editor = useEditor()\n\tconst msg = useTranslation()\n\tconst rSvg = useRef<SVGSVGElement>(null)\n\n\tconst isReadonlyMode = useReadonly()\n\tconst topEvents = useSelectionEvents('top')\n\tconst rightEvents = useSelectionEvents('right')\n\tconst bottomEvents = useSelectionEvents('bottom')\n\tconst leftEvents = useSelectionEvents('left')\n\tconst topLeftEvents = useSelectionEvents('top_left')\n\tconst topRightEvents = useSelectionEvents('top_right')\n\tconst bottomRightEvents = useSelectionEvents('bottom_right')\n\tconst bottomLeftEvents = useSelectionEvents('bottom_left')\n\n\tconst isDefaultCursor = editor.getInstanceState().cursor.type === 'default'\n\tconst isCoarsePointer = editor.getInstanceState().isCoarsePointer\n\n\tconst onlyShape = editor.getOnlySelectedShape()\n\tconst isLockedShape = onlyShape && editor.isShapeOrAncestorLocked(onlyShape)\n\n\t// if all shapes have an expandBy for the selection outline, we can expand by the l\n\tconst expandOutlineBy = onlyShape\n\t\t? editor.getShapeUtil(onlyShape).expandSelectionOutlinePx(onlyShape)\n\t\t: 0\n\n\tconst expandedBounds =\n\t\texpandOutlineBy instanceof Box\n\t\t\t? bounds.clone().expand(expandOutlineBy).zeroFix()\n\t\t\t: bounds.clone().expandBy(expandOutlineBy).zeroFix()\n\n\tuseTransform(rSvg, bounds?.x, bounds?.y, 1, editor.getSelectionRotation(), {\n\t\tx: expandedBounds.x - bounds.x,\n\t\ty: expandedBounds.y - bounds.y,\n\t})\n\n\tif (onlyShape && editor.isShapeHidden(onlyShape)) return null\n\n\tconst zoom = editor.getZoomLevel()\n\tconst isChangingStyle = editor.getInstanceState().isChangingStyle\n\n\tconst width = expandedBounds.width\n\tconst height = expandedBounds.height\n\n\tconst size = 8 / zoom\n\tconst isTinyX = width < size * 2\n\tconst isTinyY = height < size * 2\n\n\tconst isSmallX = width < size * 4\n\tconst isSmallY = height < size * 4\n\tconst isSmallCropX = width < size * 5\n\tconst isSmallCropY = height < size * 5\n\n\tconst mobileHandleMultiplier = isCoarsePointer ? 1.75 : 1\n\tconst targetSize = (6 / zoom) * mobileHandleMultiplier\n\n\tconst targetSizeX = (isSmallX ? targetSize / 2 : targetSize) * (mobileHandleMultiplier * 0.75)\n\tconst targetSizeY = (isSmallY ? targetSize / 2 : targetSize) * (mobileHandleMultiplier * 0.75)\n\n\tconst showSelectionBounds =\n\t\t(onlyShape ? !editor.getShapeUtil(onlyShape).hideSelectionBoundsFg(onlyShape) : true) &&\n\t\t!isChangingStyle\n\n\tlet shouldDisplayBox =\n\t\t(showSelectionBounds &&\n\t\t\teditor.isInAny(\n\t\t\t\t'select.idle',\n\t\t\t\t'select.brushing',\n\t\t\t\t'select.scribble_brushing',\n\t\t\t\t'select.pointing_canvas',\n\t\t\t\t'select.pointing_selection',\n\t\t\t\t'select.pointing_shape',\n\t\t\t\t'select.crop.idle',\n\t\t\t\t'select.crop.pointing_crop',\n\t\t\t\t'select.crop.pointing_crop_handle',\n\t\t\t\t'select.pointing_resize_handle'\n\t\t\t)) ||\n\t\t(showSelectionBounds &&\n\t\t\teditor.isIn('select.resizing') &&\n\t\t\tonlyShape &&\n\t\t\teditor.isShapeOfType<TLTextShape>(onlyShape, 'text'))\n\n\tif (onlyShape && shouldDisplayBox) {\n\t\tif (tlenv.isFirefox && editor.isShapeOfType<TLEmbedShape>(onlyShape, 'embed')) {\n\t\t\tshouldDisplayBox = false\n\t\t}\n\t}\n\n\tconst showCropHandles =\n\t\teditor.isInAny(\n\t\t\t'select.crop.idle',\n\t\t\t'select.crop.pointing_crop',\n\t\t\t'select.crop.pointing_crop_handle'\n\t\t) &&\n\t\t!isChangingStyle &&\n\t\t!isReadonlyMode\n\n\tconst shouldDisplayControls =\n\t\teditor.isInAny(\n\t\t\t'select.idle',\n\t\t\t'select.pointing_selection',\n\t\t\t'select.pointing_shape',\n\t\t\t'select.crop.idle'\n\t\t) &&\n\t\t!isChangingStyle &&\n\t\t!isReadonlyMode\n\n\tconst showCornerRotateHandles =\n\t\t!isCoarsePointer &&\n\t\t!(isTinyX || isTinyY) &&\n\t\t(shouldDisplayControls || showCropHandles) &&\n\t\t(onlyShape ? !editor.getShapeUtil(onlyShape).hideRotateHandle(onlyShape) : true) &&\n\t\t!isLockedShape\n\n\tconst showMobileRotateHandle =\n\t\tisCoarsePointer &&\n\t\t(!isSmallX || !isSmallY) &&\n\t\t(shouldDisplayControls || showCropHandles) &&\n\t\t(onlyShape ? !editor.getShapeUtil(onlyShape).hideRotateHandle(onlyShape) : true) &&\n\t\t!isLockedShape\n\n\tconst showResizeHandles =\n\t\tshouldDisplayControls &&\n\t\t(onlyShape\n\t\t\t? editor.getShapeUtil(onlyShape).canResize(onlyShape) &&\n\t\t\t\t!editor.getShapeUtil(onlyShape).hideResizeHandles(onlyShape)\n\t\t\t: true) &&\n\t\t!showCropHandles &&\n\t\t!isLockedShape\n\n\tconst hideAlternateCornerHandles = isTinyX || isTinyY\n\tconst showOnlyOneHandle = isTinyX && isTinyY\n\tconst hideAlternateCropHandles = isSmallCropX || isSmallCropY\n\n\tconst showHandles = showResizeHandles || showCropHandles\n\tconst hideRotateCornerHandles = !showCornerRotateHandles\n\tconst hideMobileRotateHandle = !shouldDisplayControls || !showMobileRotateHandle\n\tconst hideTopLeftCorner = !shouldDisplayControls || !showHandles\n\tconst hideTopRightCorner = !shouldDisplayControls || !showHandles || hideAlternateCornerHandles\n\tconst hideBottomLeftCorner = !shouldDisplayControls || !showHandles || hideAlternateCornerHandles\n\tconst hideBottomRightCorner =\n\t\t!shouldDisplayControls || !showHandles || (showOnlyOneHandle && !showCropHandles)\n\n\t// If we're showing crop handles, then show the edges too.\n\t// If we're showing resize handles, then show the edges only\n\t// if we're not hiding them for some other reason.\n\tlet hideVerticalEdgeTargets = true\n\t// The same logic above applies here, except another nuance is that\n\t// we enable resizing for text on mobile (coarse).\n\tlet hideHorizontalEdgeTargets = true\n\n\tif (showCropHandles) {\n\t\thideVerticalEdgeTargets = hideAlternateCropHandles\n\t\thideHorizontalEdgeTargets = hideAlternateCropHandles\n\t} else if (showResizeHandles) {\n\t\thideVerticalEdgeTargets = hideAlternateCornerHandles || showOnlyOneHandle || isCoarsePointer\n\t\tconst isMobileAndTextShape = isCoarsePointer && onlyShape && onlyShape.type === 'text'\n\t\thideHorizontalEdgeTargets = hideVerticalEdgeTargets && !isMobileAndTextShape\n\t}\n\n\tconst textHandleHeight = Math.min(24 / zoom, height - targetSizeY * 3)\n\tconst showTextResizeHandles =\n\t\tshouldDisplayControls &&\n\t\tisCoarsePointer &&\n\t\tonlyShape &&\n\t\teditor.isShapeOfType<TLTextShape>(onlyShape, 'text') &&\n\t\ttextHandleHeight * zoom >= 4\n\n\treturn (\n\t\t<svg\n\t\t\tclassName=\"tl-overlays__item tl-selection__fg\"\n\t\t\tdata-testid=\"selection-foreground\"\n\t\t\taria-hidden=\"true\"\n\t\t>\n\t\t\t<g ref={rSvg}>\n\t\t\t\t{shouldDisplayBox && (\n\t\t\t\t\t<rect\n\t\t\t\t\t\tclassName=\"tl-selection__fg__outline\"\n\t\t\t\t\t\twidth={toDomPrecision(width)}\n\t\t\t\t\t\theight={toDomPrecision(height)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<RotateCornerHandle\n\t\t\t\t\tdata-testid=\"selection.rotate.top-left\"\n\t\t\t\t\tcx={0}\n\t\t\t\t\tcy={0}\n\t\t\t\t\ttargetSize={targetSize}\n\t\t\t\t\tcorner=\"top_left_rotate\"\n\t\t\t\t\tcursor={isDefaultCursor ? getCursor('nwse-rotate', rotation) : undefined}\n\t\t\t\t\tisHidden={hideRotateCornerHandles}\n\t\t\t\t/>\n\t\t\t\t<RotateCornerHandle\n\t\t\t\t\tdata-testid=\"selection.rotate.top-right\"\n\t\t\t\t\tcx={width + targetSize * 3}\n\t\t\t\t\tcy={0}\n\t\t\t\t\ttargetSize={targetSize}\n\t\t\t\t\tcorner=\"top_right_rotate\"\n\t\t\t\t\tcursor={isDefaultCursor ? getCursor('nesw-rotate', rotation) : undefined}\n\t\t\t\t\tisHidden={hideRotateCornerHandles}\n\t\t\t\t/>\n\t\t\t\t<RotateCornerHandle\n\t\t\t\t\tdata-testid=\"selection.rotate.bottom-left\"\n\t\t\t\t\tcx={0}\n\t\t\t\t\tcy={height + targetSize * 3}\n\t\t\t\t\ttargetSize={targetSize}\n\t\t\t\t\tcorner=\"bottom_left_rotate\"\n\t\t\t\t\tcursor={isDefaultCursor ? getCursor('swne-rotate', rotation) : undefined}\n\t\t\t\t\tisHidden={hideRotateCornerHandles}\n\t\t\t\t/>\n\t\t\t\t<RotateCornerHandle\n\t\t\t\t\tdata-testid=\"selection.rotate.bottom-right\"\n\t\t\t\t\tcx={width + targetSize * 3}\n\t\t\t\t\tcy={height + targetSize * 3}\n\t\t\t\t\ttargetSize={targetSize}\n\t\t\t\t\tcorner=\"bottom_right_rotate\"\n\t\t\t\t\tcursor={isDefaultCursor ? getCursor('senw-rotate', rotation) : undefined}\n\t\t\t\t\tisHidden={hideRotateCornerHandles}\n\t\t\t\t/>\n\t\t\t\t<MobileRotateHandle\n\t\t\t\t\tdata-testid=\"selection.rotate.mobile\"\n\t\t\t\t\tcx={isSmallX ? -targetSize * 1.5 : width / 2}\n\t\t\t\t\tcy={isSmallX ? height / 2 : -targetSize * 1.5}\n\t\t\t\t\tsize={size}\n\t\t\t\t\tisHidden={hideMobileRotateHandle}\n\t\t\t\t/>\n\t\t\t\t{/* Targets */}\n\t\t\t\t<ResizeHandle\n\t\t\t\t\thide={hideVerticalEdgeTargets}\n\t\t\t\t\tdataTestId=\"selection.resize.top\"\n\t\t\t\t\tariaLabel={msg('handle.resize-top')}\n\t\t\t\t\tx={0}\n\t\t\t\t\ty={toDomPrecision(0 - (isSmallY ? targetSizeY * 2 : targetSizeY))}\n\t\t\t\t\twidth={toDomPrecision(width)}\n\t\t\t\t\theight={toDomPrecision(Math.max(1, targetSizeY * 2))}\n\t\t\t\t\tcursor={isDefaultCursor ? getCursor('ns-resize', rotation) : undefined}\n\t\t\t\t\tevents={topEvents}\n\t\t\t\t/>\n\t\t\t\t<ResizeHandle\n\t\t\t\t\thide={hideHorizontalEdgeTargets}\n\t\t\t\t\tdataTestId=\"selection.resize.right\"\n\t\t\t\t\tariaLabel={msg('handle.resize-right')}\n\t\t\t\t\tx={toDomPrecision(width - (isSmallX ? 0 : targetSizeX))}\n\t\t\t\t\ty={0}\n\t\t\t\t\theight={toDomPrecision(height)}\n\t\t\t\t\twidth={toDomPrecision(Math.max(1, targetSizeX * 2))}\n\t\t\t\t\tcursor={isDefaultCursor ? getCursor('ew-resize', rotation) : undefined}\n\t\t\t\t\tevents={rightEvents}\n\t\t\t\t/>\n\t\t\t\t<ResizeHandle\n\t\t\t\t\thide={hideVerticalEdgeTargets}\n\t\t\t\t\tdataTestId=\"selection.resize.bottom\"\n\t\t\t\t\tariaLabel={msg('handle.resize-bottom')}\n\t\t\t\t\tx={0}\n\t\t\t\t\ty={toDomPrecision(height - (isSmallY ? 0 : targetSizeY))}\n\t\t\t\t\twidth={toDomPrecision(width)}\n\t\t\t\t\theight={toDomPrecision(Math.max(1, targetSizeY * 2))}\n\t\t\t\t\tcursor={isDefaultCursor ? getCursor('ns-resize', rotation) : undefined}\n\t\t\t\t\tevents={bottomEvents}\n\t\t\t\t/>\n\t\t\t\t<ResizeHandle\n\t\t\t\t\thide={hideHorizontalEdgeTargets}\n\t\t\t\t\tdataTestId=\"selection.resize.left\"\n\t\t\t\t\tariaLabel={msg('handle.resize-left')}\n\t\t\t\t\tx={toDomPrecision(0 - (isSmallX ? targetSizeX * 2 : targetSizeX))}\n\t\t\t\t\ty={0}\n\t\t\t\t\theight={toDomPrecision(height)}\n\t\t\t\t\twidth={toDomPrecision(Math.max(1, targetSizeX * 2))}\n\t\t\t\t\tcursor={isDefaultCursor ? getCursor('ew-resize', rotation) : undefined}\n\t\t\t\t\tevents={leftEvents}\n\t\t\t\t/>\n\t\t\t\t{/* Corner Targets */}\n\t\t\t\t<ResizeHandle\n\t\t\t\t\thide={hideTopLeftCorner}\n\t\t\t\t\tdataTestId=\"selection.target.top-left\"\n\t\t\t\t\tariaLabel={msg('handle.resize-top-left')}\n\t\t\t\t\tx={toDomPrecision(0 - (isSmallX ? targetSizeX * 2 : targetSizeX * 1.5))}\n\t\t\t\t\ty={toDomPrecision(0 - (isSmallY ? targetSizeY * 2 : targetSizeY * 1.5))}\n\t\t\t\t\twidth={toDomPrecision(targetSizeX * 3)}\n\t\t\t\t\theight={toDomPrecision(targetSizeY * 3)}\n\t\t\t\t\tcursor={isDefaultCursor ? getCursor('nwse-resize', rotation) : undefined}\n\t\t\t\t\tevents={topLeftEvents}\n\t\t\t\t/>\n\t\t\t\t<ResizeHandle\n\t\t\t\t\thide={hideTopRightCorner}\n\t\t\t\t\tdataTestId=\"selection.target.top-right\"\n\t\t\t\t\tariaLabel={msg('handle.resize-top-right')}\n\t\t\t\t\tx={toDomPrecision(width - (isSmallX ? 0 : targetSizeX * 1.5))}\n\t\t\t\t\ty={toDomPrecision(0 - (isSmallY ? targetSizeY * 2 : targetSizeY * 1.5))}\n\t\t\t\t\twidth={toDomPrecision(targetSizeX * 3)}\n\t\t\t\t\theight={toDomPrecision(targetSizeY * 3)}\n\t\t\t\t\tcursor={isDefaultCursor ? getCursor('nesw-resize', rotation) : undefined}\n\t\t\t\t\tevents={topRightEvents}\n\t\t\t\t/>\n\t\t\t\t<ResizeHandle\n\t\t\t\t\thide={hideBottomRightCorner}\n\t\t\t\t\tdataTestId=\"selection.target.bottom-right\"\n\t\t\t\t\tariaLabel={msg('handle.resize-bottom-right')}\n\t\t\t\t\tx={toDomPrecision(width - (isSmallX ? targetSizeX : targetSizeX * 1.5))}\n\t\t\t\t\ty={toDomPrecision(height - (isSmallY ? targetSizeY : targetSizeY * 1.5))}\n\t\t\t\t\twidth={toDomPrecision(targetSizeX * 3)}\n\t\t\t\t\theight={toDomPrecision(targetSizeY * 3)}\n\t\t\t\t\tcursor={isDefaultCursor ? getCursor('nwse-resize', rotation) : undefined}\n\t\t\t\t\tevents={bottomRightEvents}\n\t\t\t\t/>\n\t\t\t\t<ResizeHandle\n\t\t\t\t\thide={hideBottomLeftCorner}\n\t\t\t\t\tdataTestId=\"selection.target.bottom-left\"\n\t\t\t\t\tariaLabel={msg('handle.resize-bottom-left')}\n\t\t\t\t\tx={toDomPrecision(0 - (isSmallX ? targetSizeX * 3 : targetSizeX * 1.5))}\n\t\t\t\t\ty={toDomPrecision(height - (isSmallY ? 0 : targetSizeY * 1.5))}\n\t\t\t\t\twidth={toDomPrecision(targetSizeX * 3)}\n\t\t\t\t\theight={toDomPrecision(targetSizeY * 3)}\n\t\t\t\t\tcursor={isDefaultCursor ? getCursor('nesw-resize', rotation) : undefined}\n\t\t\t\t\tevents={bottomLeftEvents}\n\t\t\t\t/>\n\t\t\t\t{/* Resize Handles */}\n\t\t\t\t{showResizeHandles && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\tdata-testid=\"selection.resize.top-left\"\n\t\t\t\t\t\t\tclassName={classNames('tl-corner-handle', {\n\t\t\t\t\t\t\t\t'tl-hidden': hideTopLeftCorner,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tx={toDomPrecision(0 - size / 2)}\n\t\t\t\t\t\t\ty={toDomPrecision(0 - size / 2)}\n\t\t\t\t\t\t\twidth={toDomPrecision(size)}\n\t\t\t\t\t\t\theight={toDomPrecision(size)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\tdata-testid=\"selection.resize.top-right\"\n\t\t\t\t\t\t\tclassName={classNames('tl-corner-handle', {\n\t\t\t\t\t\t\t\t'tl-hidden': hideTopRightCorner,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tx={toDomPrecision(width - size / 2)}\n\t\t\t\t\t\t\ty={toDomPrecision(0 - size / 2)}\n\t\t\t\t\t\t\twidth={toDomPrecision(size)}\n\t\t\t\t\t\t\theight={toDomPrecision(size)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\tdata-testid=\"selection.resize.bottom-right\"\n\t\t\t\t\t\t\tclassName={classNames('tl-corner-handle', {\n\t\t\t\t\t\t\t\t'tl-hidden': hideBottomRightCorner,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tx={toDomPrecision(width - size / 2)}\n\t\t\t\t\t\t\ty={toDomPrecision(height - size / 2)}\n\t\t\t\t\t\t\twidth={toDomPrecision(size)}\n\t\t\t\t\t\t\theight={toDomPrecision(size)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\tdata-testid=\"selection.resize.bottom-left\"\n\t\t\t\t\t\t\tclassName={classNames('tl-corner-handle', {\n\t\t\t\t\t\t\t\t'tl-hidden': hideBottomLeftCorner,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tx={toDomPrecision(0 - size / 2)}\n\t\t\t\t\t\t\ty={toDomPrecision(height - size / 2)}\n\t\t\t\t\t\t\twidth={toDomPrecision(size)}\n\t\t\t\t\t\t\theight={toDomPrecision(size)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{showTextResizeHandles && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\tdata-testid=\"selection.text-resize.left.handle\"\n\t\t\t\t\t\t\tclassName=\"tl-text-handle\"\n\t\t\t\t\t\t\tx={toDomPrecision(0 - size / 4)}\n\t\t\t\t\t\t\ty={toDomPrecision(height / 2 - textHandleHeight / 2)}\n\t\t\t\t\t\t\trx={size / 4}\n\t\t\t\t\t\t\twidth={toDomPrecision(size / 2)}\n\t\t\t\t\t\t\theight={toDomPrecision(textHandleHeight)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<rect\n\t\t\t\t\t\t\tdata-testid=\"selection.text-resize.right.handle\"\n\t\t\t\t\t\t\tclassName=\"tl-text-handle\"\n\t\t\t\t\t\t\trx={size / 4}\n\t\t\t\t\t\t\tx={toDomPrecision(width - size / 4)}\n\t\t\t\t\t\t\ty={toDomPrecision(height / 2 - textHandleHeight / 2)}\n\t\t\t\t\t\t\twidth={toDomPrecision(size / 2)}\n\t\t\t\t\t\t\theight={toDomPrecision(textHandleHeight)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{/* Crop Handles */}\n\t\t\t\t{showCropHandles && (\n\t\t\t\t\t<TldrawCropHandles\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\tsize,\n\t\t\t\t\t\t\twidth,\n\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t\thideAlternateHandles: hideAlternateCropHandles,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</g>\n\t\t</svg>\n\t)\n})\n\nexport const ResizeHandle = function ResizeHandle({\n\thide,\n\tdataTestId,\n\tariaLabel,\n\tx,\n\ty,\n\twidth,\n\theight,\n\tcursor,\n\tevents,\n}: {\n\thide: boolean\n\tdataTestId: string\n\tariaLabel: string\n\tx: number\n\ty: number\n\twidth: number\n\theight: number\n\tcursor?: string\n\tevents: {\n\t\tonPointerUp: PointerEventHandler<Element>\n\t\tonPointerMove(e: React.PointerEvent<Element>): void\n\t\tonPointerDown: PointerEventHandler<Element>\n\t}\n}) {\n\treturn (\n\t\t<rect\n\t\t\tclassName={classNames('tl-resize-handle', 'tl-transparent', {\n\t\t\t\t'tl-hidden': hide,\n\t\t\t})}\n\t\t\tdata-testid={dataTestId}\n\t\t\trole=\"button\"\n\t\t\taria-label={ariaLabel}\n\t\t\tpointerEvents=\"all\"\n\t\t\tx={x}\n\t\t\ty={y}\n\t\t\twidth={width}\n\t\t\theight={height}\n\t\t\tcursor={cursor}\n\t\t\t{...events}\n\t\t/>\n\t)\n}\n\nexport const RotateCornerHandle = function RotateCornerHandle({\n\tcx,\n\tcy,\n\ttargetSize,\n\tcorner,\n\tcursor,\n\tisHidden,\n\t'data-testid': testId,\n}: {\n\tcx: number\n\tcy: number\n\ttargetSize: number\n\tcorner: RotateCorner\n\tcursor?: string\n\tisHidden: boolean\n\t'data-testid'?: string\n}) {\n\tconst events = useSelectionEvents(corner)\n\tconst msg = useTranslation()\n\tconst label = msg(`handle.rotate.${corner}`)\n\n\treturn (\n\t\t<rect\n\t\t\tclassName={classNames('tl-transparent', 'tl-rotate-corner', { 'tl-hidden': isHidden })}\n\t\t\tdata-testid={testId}\n\t\t\trole=\"button\"\n\t\t\taria-label={label}\n\t\t\tpointerEvents=\"all\"\n\t\t\tx={toDomPrecision(cx - targetSize * 3)}\n\t\t\ty={toDomPrecision(cy - targetSize * 3)}\n\t\t\twidth={toDomPrecision(Math.max(1, targetSize * 3))}\n\t\t\theight={toDomPrecision(Math.max(1, targetSize * 3))}\n\t\t\tcursor={cursor}\n\t\t\t{...events}\n\t\t/>\n\t)\n}\n\nconst SQUARE_ROOT_PI = Math.sqrt(Math.PI)\n\nexport const MobileRotateHandle = function RotateHandle({\n\tcx,\n\tcy,\n\tsize,\n\tisHidden,\n\t'data-testid': testId,\n}: {\n\tcx: number\n\tcy: number\n\tsize: number\n\tisHidden: boolean\n\t'data-testid'?: string\n}) {\n\tconst events = useSelectionEvents('mobile_rotate')\n\n\tconst editor = useEditor()\n\tconst zoom = useValue('zoom level', () => editor.getZoomLevel(), [editor])\n\tconst bgRadius = Math.max(14 * (1 / zoom), 20 / Math.max(1, zoom))\n\tconst msg = useTranslation()\n\treturn (\n\t\t<g role=\"button\" aria-label={msg('handle.rotate.mobile_rotate')}>\n\t\t\t<circle\n\t\t\t\tdata-testid={testId}\n\t\t\t\tpointerEvents=\"all\"\n\t\t\t\tclassName={classNames('tl-transparent', 'tl-mobile-rotate__bg', { 'tl-hidden': isHidden })}\n\t\t\t\tcx={cx}\n\t\t\t\tcy={cy}\n\t\t\t\tr={bgRadius}\n\t\t\t\t{...events}\n\t\t\t/>\n\t\t\t<circle\n\t\t\t\tclassName={classNames('tl-mobile-rotate__fg', { 'tl-hidden': isHidden })}\n\t\t\t\tcx={cx}\n\t\t\t\tcy={cy}\n\t\t\t\tr={size / SQUARE_ROOT_PI}\n\t\t\t/>\n\t\t</g>\n\t)\n}\n"],"names":["TldrawSelectionForeground","ResizeHandle","RotateCornerHandle"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1569, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/canvas/TldrawShapeIndicators.tsx"],"sourcesContent":["import { DefaultShapeIndicators, useEditor, useValue } from '@tldraw/editor'\n\n/** @public @react */\nexport function TldrawShapeIndicators() {\n\tconst editor = useEditor()\n\n\tconst isInSelectState = useValue(\n\t\t'is in a valid select state',\n\t\t() => {\n\t\t\treturn editor.isInAny(\n\t\t\t\t'select.idle',\n\t\t\t\t'select.brushing',\n\t\t\t\t'select.scribble_brushing',\n\t\t\t\t'select.editing_shape',\n\t\t\t\t'select.pointing_shape',\n\t\t\t\t'select.pointing_selection',\n\t\t\t\t'select.pointing_handle'\n\t\t\t)\n\t\t},\n\t\t[editor]\n\t)\n\n\treturn <DefaultShapeIndicators hideAll={!isInSelectState} />\n}\n"],"names":[],"mappings":";;;AAsBQ;AAtBR,SAAS,wBAAwB,WAAW,gBAAgB;;;;;;AAGrD,SAAS,wBAAwB;IACvC,MAAM,6LAAS,YAAA,CAAU;IAEzB,MAAM,kBAAkB,6LAAA,EACvB,8BACA,MAAM;QACL,OAAO,OAAO,OAAA,CACb,eACA,mBACA,4BACA,wBACA,yBACA,6BACA;IAEF,GACA;QAAC,MAAM;KAAA;IAGR,OAAO,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,6NAAC,yBAAA,EAAA;QAAuB,SAAS,CAAC;IAAA,CAAiB;AAC3D","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1598, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/defaultBindingUtils.ts"],"sourcesContent":["import { ArrowBindingUtil } from './bindings/arrow/ArrowBindingUtil'\n\n/** @public */\nexport const defaultBindingUtils = [ArrowBindingUtil] as const\n"],"names":[],"mappings":";;;AAAA,SAAS,wBAAwB;;AAG1B,MAAM,sBAAsB;2LAAC,mBAAgB;CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1614, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/defaultExternalContentHandlers.ts"],"sourcesContent":["import {\n\tAssetRecordType,\n\tDEFAULT_SUPPORTED_IMAGE_TYPES,\n\tDEFAULT_SUPPORT_VIDEO_TYPES,\n\tEditor,\n\tMediaHelpers,\n\tTLAsset,\n\tTLAssetId,\n\tTLBookmarkAsset,\n\tTLBookmarkShape,\n\tTLContent,\n\tTLFileExternalAsset,\n\tTLFileReplaceExternalContent,\n\tTLImageAsset,\n\tTLImageShape,\n\tTLShapeId,\n\tTLShapePartial,\n\tTLTextShape,\n\tTLTextShapeProps,\n\tTLUrlExternalAsset,\n\tTLVideoAsset,\n\tTLVideoShape,\n\tVec,\n\tVecLike,\n\tassert,\n\tcreateShapeId,\n\tfetch,\n\tgetHashForBuffer,\n\tgetHashForString,\n\tmaybeSnapToGrid,\n\ttoRichText,\n} from '@tldraw/editor'\nimport { EmbedDefinition } from './defaultEmbedDefinitions'\nimport { EmbedShapeUtil } from './shapes/embed/EmbedShapeUtil'\nimport { getCroppedImageDataForReplacedImage } from './shapes/shared/crop'\nimport { FONT_FAMILIES, FONT_SIZES, TEXT_PROPS } from './shapes/shared/default-shape-constants'\nimport { TLUiToastsContextType } from './ui/context/toasts'\nimport { useTranslation } from './ui/hooks/useTranslation/useTranslation'\nimport { containBoxSize } from './utils/assets/assets'\nimport { putExcalidrawContent } from './utils/excalidraw/putExcalidrawContent'\nimport { renderRichTextFromHTML } from './utils/text/richText'\nimport { cleanupText, isRightToLeftLanguage } from './utils/text/text'\n\n/**\n * 5000px\n * @public\n */\nexport const DEFAULT_MAX_IMAGE_DIMENSION = 5000\n/**\n * 10mb\n * @public\n */\nexport const DEFAULT_MAX_ASSET_SIZE = 10 * 1024 * 1024\n\n/** @public */\nexport interface TLExternalContentProps {\n\t/**\n\t * The maximum dimension (width or height) of an image. Images larger than this will be rescaled\n\t * to fit. Defaults to infinity.\n\t */\n\tmaxImageDimension?: number\n\t/**\n\t * The maximum size (in bytes) of an asset. Assets larger than this will be rejected. Defaults\n\t * to 10mb (10 * 1024 * 1024).\n\t */\n\tmaxAssetSize?: number\n\t/**\n\t * The mime types of images that are allowed to be handled. Defaults to\n\t * DEFAULT_SUPPORTED_IMAGE_TYPES.\n\t */\n\tacceptedImageMimeTypes?: readonly string[]\n\t/**\n\t * The mime types of videos that are allowed to be handled. Defaults to\n\t * DEFAULT_SUPPORT_VIDEO_TYPES.\n\t */\n\tacceptedVideoMimeTypes?: readonly string[]\n}\n\n/** @public */\nexport interface TLDefaultExternalContentHandlerOpts extends TLExternalContentProps {\n\ttoasts: TLUiToastsContextType\n\tmsg: ReturnType<typeof useTranslation>\n}\n\n/** @public */\nexport function registerDefaultExternalContentHandlers(\n\teditor: Editor,\n\toptions: TLDefaultExternalContentHandlerOpts\n) {\n\t// files -> asset\n\teditor.registerExternalAssetHandler('file', async (externalAsset) => {\n\t\treturn defaultHandleExternalFileAsset(editor, externalAsset, options)\n\t})\n\n\t// urls -> bookmark asset\n\teditor.registerExternalAssetHandler('url', async (externalAsset) => {\n\t\treturn defaultHandleExternalUrlAsset(editor, externalAsset, options)\n\t})\n\n\t// svg text\n\teditor.registerExternalContentHandler('svg-text', async (externalContent) => {\n\t\treturn defaultHandleExternalSvgTextContent(editor, externalContent)\n\t})\n\n\t// embeds\n\teditor.registerExternalContentHandler<'embed', EmbedDefinition>('embed', (externalContent) => {\n\t\treturn defaultHandleExternalEmbedContent(editor, externalContent)\n\t})\n\n\t// files\n\teditor.registerExternalContentHandler('files', async (externalContent) => {\n\t\treturn defaultHandleExternalFileContent(editor, externalContent, options)\n\t})\n\n\t// file-replace -> asset\n\teditor.registerExternalContentHandler('file-replace', async (externalContent) => {\n\t\treturn defaultHandleExternalFileReplaceContent(editor, externalContent, options)\n\t})\n\n\t// text\n\teditor.registerExternalContentHandler('text', async (externalContent) => {\n\t\treturn defaultHandleExternalTextContent(editor, externalContent)\n\t})\n\n\t// url\n\teditor.registerExternalContentHandler('url', async (externalContent) => {\n\t\treturn defaultHandleExternalUrlContent(editor, externalContent, options)\n\t})\n\n\t// tldraw\n\teditor.registerExternalContentHandler('tldraw', async (externalContent) => {\n\t\treturn defaultHandleExternalTldrawContent(editor, externalContent)\n\t})\n\n\t// excalidraw\n\teditor.registerExternalContentHandler('excalidraw', async (externalContent) => {\n\t\treturn defaultHandleExternalExcalidrawContent(editor, externalContent)\n\t})\n}\n\n/** @public */\nexport async function defaultHandleExternalFileAsset(\n\teditor: Editor,\n\t{ file, assetId }: TLFileExternalAsset,\n\toptions: TLDefaultExternalContentHandlerOpts\n) {\n\tconst isSuccess = runFileChecks(file, options)\n\tif (!isSuccess) assert(false, 'File checks failed')\n\n\tconst assetInfo = await getAssetInfo(file, options, assetId)\n\tconst result = await editor.uploadAsset(assetInfo, file)\n\tassetInfo.props.src = result.src\n\tif (result.meta) assetInfo.meta = { ...assetInfo.meta, ...result.meta }\n\n\treturn AssetRecordType.create(assetInfo)\n}\n\n/** @public */\nexport async function defaultHandleExternalFileReplaceContent(\n\teditor: Editor,\n\t{ file, shapeId, isImage }: TLFileReplaceExternalContent,\n\toptions: TLDefaultExternalContentHandlerOpts\n) {\n\tconst isSuccess = runFileChecks(file, options)\n\tif (!isSuccess) assert(false, 'File checks failed')\n\n\tconst shape = editor.getShape(shapeId)\n\tif (!shape) assert(false, 'Shape not found')\n\n\tconst hash = getHashForBuffer(await file.arrayBuffer())\n\tconst assetId = AssetRecordType.createId(hash)\n\teditor.createTemporaryAssetPreview(assetId, file)\n\tconst assetInfoPartial = await getMediaAssetInfoPartial(\n\t\tfile,\n\t\tassetId,\n\t\tisImage /* isImage */,\n\t\t!isImage /* isVideo */\n\t)\n\teditor.createAssets([assetInfoPartial])\n\n\t// And update the shape\n\tif (shape.type === 'image') {\n\t\tconst imageShape = shape as TLImageShape\n\t\tconst currentCrop = imageShape.props.crop\n\n\t\t// Calculate new dimensions that preserve the current visual size of the cropped area\n\t\tlet newWidth = assetInfoPartial.props.w\n\t\tlet newHeight = assetInfoPartial.props.h\n\t\tlet newX = imageShape.x\n\t\tlet newY = imageShape.y\n\t\tlet finalCrop = currentCrop\n\n\t\tif (currentCrop) {\n\t\t\t// Use the dedicated function to calculate the new crop and dimensions\n\t\t\tconst result = getCroppedImageDataForReplacedImage(\n\t\t\t\timageShape,\n\t\t\t\tassetInfoPartial.props.w,\n\t\t\t\tassetInfoPartial.props.h\n\t\t\t)\n\n\t\t\tfinalCrop = result.crop\n\t\t\tnewWidth = result.w\n\t\t\tnewHeight = result.h\n\t\t\tnewX = result.x\n\t\t\tnewY = result.y\n\t\t}\n\n\t\teditor.updateShapes<TLImageShape>([\n\t\t\t{\n\t\t\t\tid: imageShape.id,\n\t\t\t\ttype: imageShape.type,\n\t\t\t\tprops: {\n\t\t\t\t\tassetId: assetId,\n\t\t\t\t\tcrop: finalCrop,\n\t\t\t\t\tw: newWidth,\n\t\t\t\t\th: newHeight,\n\t\t\t\t},\n\t\t\t\tx: newX,\n\t\t\t\ty: newY,\n\t\t\t},\n\t\t])\n\t} else if (shape.type === 'video') {\n\t\teditor.updateShapes<TLVideoShape>([\n\t\t\t{\n\t\t\t\tid: shape.id,\n\t\t\t\ttype: shape.type,\n\t\t\t\tprops: {\n\t\t\t\t\tassetId: assetId,\n\t\t\t\t\tw: assetInfoPartial.props.w,\n\t\t\t\t\th: assetInfoPartial.props.h,\n\t\t\t\t},\n\t\t\t},\n\t\t])\n\t}\n\n\tconst asset = (await editor.getAssetForExternalContent({\n\t\ttype: 'file',\n\t\tfile,\n\t\tassetId,\n\t})) as TLAsset\n\n\teditor.updateAssets([{ ...asset, id: assetId }])\n\n\treturn asset\n}\n\n/** @public */\nexport async function defaultHandleExternalUrlAsset(\n\teditor: Editor,\n\t{ url }: TLUrlExternalAsset,\n\t{ toasts, msg }: TLDefaultExternalContentHandlerOpts\n): Promise<TLBookmarkAsset> {\n\tlet meta: { image: string; favicon: string; title: string; description: string }\n\n\ttry {\n\t\tconst resp = await fetch(url, {\n\t\t\tmethod: 'GET',\n\t\t\tmode: 'no-cors',\n\t\t})\n\t\tconst html = await resp.text()\n\t\tconst doc = new DOMParser().parseFromString(html, 'text/html')\n\t\tmeta = {\n\t\t\timage: doc.head.querySelector('meta[property=\"og:image\"]')?.getAttribute('content') ?? '',\n\t\t\tfavicon:\n\t\t\t\tdoc.head.querySelector('link[rel=\"apple-touch-icon\"]')?.getAttribute('href') ??\n\t\t\t\tdoc.head.querySelector('link[rel=\"icon\"]')?.getAttribute('href') ??\n\t\t\t\t'',\n\t\t\ttitle: doc.head.querySelector('meta[property=\"og:title\"]')?.getAttribute('content') ?? url,\n\t\t\tdescription:\n\t\t\t\tdoc.head.querySelector('meta[property=\"og:description\"]')?.getAttribute('content') ?? '',\n\t\t}\n\t\tif (!meta.image.startsWith('http')) {\n\t\t\tmeta.image = new URL(meta.image, url).href\n\t\t}\n\t\tif (!meta.favicon.startsWith('http')) {\n\t\t\tmeta.favicon = new URL(meta.favicon, url).href\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error)\n\t\ttoasts.addToast({\n\t\t\ttitle: msg('assets.url.failed'),\n\t\t\tseverity: 'error',\n\t\t})\n\t\tmeta = { image: '', favicon: '', title: '', description: '' }\n\t}\n\n\t// Create the bookmark asset from the meta\n\treturn {\n\t\tid: AssetRecordType.createId(getHashForString(url)),\n\t\ttypeName: 'asset',\n\t\ttype: 'bookmark',\n\t\tprops: {\n\t\t\tsrc: url,\n\t\t\tdescription: meta.description,\n\t\t\timage: meta.image,\n\t\t\tfavicon: meta.favicon,\n\t\t\ttitle: meta.title,\n\t\t},\n\t\tmeta: {},\n\t} as TLBookmarkAsset\n}\n\n/** @public */\nexport async function defaultHandleExternalSvgTextContent(\n\teditor: Editor,\n\t{ point, text }: { point?: VecLike; text: string }\n) {\n\tconst position =\n\t\tpoint ??\n\t\t(editor.inputs.shiftKey\n\t\t\t? editor.inputs.currentPagePoint\n\t\t\t: editor.getViewportPageBounds().center)\n\n\tconst svg = new DOMParser().parseFromString(text, 'image/svg+xml').querySelector('svg')\n\tif (!svg) {\n\t\tthrow new Error('No <svg/> element present')\n\t}\n\n\tlet width = parseFloat(svg.getAttribute('width') || '0')\n\tlet height = parseFloat(svg.getAttribute('height') || '0')\n\n\tif (!(width && height)) {\n\t\tdocument.body.appendChild(svg)\n\t\tconst box = svg.getBoundingClientRect()\n\t\tdocument.body.removeChild(svg)\n\n\t\twidth = box.width\n\t\theight = box.height\n\t}\n\n\tconst asset = await editor.getAssetForExternalContent({\n\t\ttype: 'file',\n\t\tfile: new File([text], 'asset.svg', { type: 'image/svg+xml' }),\n\t})\n\n\tif (!asset) throw Error('Could not create an asset')\n\n\tcreateShapesForAssets(editor, [asset], position)\n}\n\n/** @public */\nexport function defaultHandleExternalEmbedContent<T>(\n\teditor: Editor,\n\t{ point, url, embed }: { point?: VecLike; url: string; embed: T }\n) {\n\tconst position =\n\t\tpoint ??\n\t\t(editor.inputs.shiftKey\n\t\t\t? editor.inputs.currentPagePoint\n\t\t\t: editor.getViewportPageBounds().center)\n\n\tconst { width, height } = embed as { width: number; height: number }\n\n\tconst id = createShapeId()\n\n\tconst newPoint = maybeSnapToGrid(\n\t\tnew Vec(position.x - (width || 450) / 2, position.y - (height || 450) / 2),\n\t\teditor\n\t)\n\tconst shapePartial: TLShapePartial = {\n\t\tid,\n\t\ttype: 'embed',\n\t\tx: newPoint.x,\n\t\ty: newPoint.y,\n\t\tprops: {\n\t\t\tw: width,\n\t\t\th: height,\n\t\t\turl,\n\t\t},\n\t}\n\n\tif (editor.canCreateShape(shapePartial)) {\n\t\teditor.createShape(shapePartial).select(id)\n\t}\n}\n\n/** @public */\nexport async function defaultHandleExternalFileContent(\n\teditor: Editor,\n\t{ point, files }: { point?: VecLike; files: File[] },\n\toptions: TLDefaultExternalContentHandlerOpts\n) {\n\tconst { acceptedImageMimeTypes = DEFAULT_SUPPORTED_IMAGE_TYPES, toasts, msg } = options\n\tif (files.length > editor.options.maxFilesAtOnce) {\n\t\ttoasts.addToast({ title: msg('assets.files.amount-too-big'), severity: 'error' })\n\t\treturn\n\t}\n\n\tconst position =\n\t\tpoint ??\n\t\t(editor.inputs.shiftKey\n\t\t\t? editor.inputs.currentPagePoint\n\t\t\t: editor.getViewportPageBounds().center)\n\n\tconst pagePoint = new Vec(position.x, position.y)\n\tconst assetPartials: TLAsset[] = []\n\tconst assetsToUpdate: {\n\t\tasset: TLAsset\n\t\tfile: File\n\t}[] = []\n\tfor (const file of files) {\n\t\tconst isSuccess = runFileChecks(file, options)\n\t\tif (!isSuccess) continue\n\n\t\tconst assetInfo = await getAssetInfo(file, options)\n\t\tif (acceptedImageMimeTypes.includes(file.type)) {\n\t\t\teditor.createTemporaryAssetPreview(assetInfo.id, file)\n\t\t}\n\t\tassetPartials.push(assetInfo)\n\t\tassetsToUpdate.push({ asset: assetInfo, file })\n\t}\n\n\tPromise.allSettled(\n\t\tassetsToUpdate.map(async (assetAndFile) => {\n\t\t\ttry {\n\t\t\t\tconst newAsset = await editor.getAssetForExternalContent({\n\t\t\t\t\ttype: 'file',\n\t\t\t\t\tfile: assetAndFile.file,\n\t\t\t\t})\n\n\t\t\t\tif (!newAsset) {\n\t\t\t\t\tthrow Error('Could not create an asset')\n\t\t\t\t}\n\n\t\t\t\t// Save the new asset under the old asset's id\n\t\t\t\teditor.updateAssets([{ ...newAsset, id: assetAndFile.asset.id }])\n\t\t\t} catch (error) {\n\t\t\t\ttoasts.addToast({\n\t\t\t\t\ttitle: msg('assets.files.upload-failed'),\n\t\t\t\t\tseverity: 'error',\n\t\t\t\t})\n\t\t\t\tconsole.error(error)\n\t\t\t\teditor.deleteAssets([assetAndFile.asset.id])\n\t\t\t\treturn\n\t\t\t}\n\t\t})\n\t)\n\n\tcreateShapesForAssets(editor, assetPartials, pagePoint)\n}\n\n/** @public */\nexport async function defaultHandleExternalTextContent(\n\teditor: Editor,\n\t{ point, text, html }: { point?: VecLike; text: string; html?: string }\n) {\n\tconst p =\n\t\tpoint ??\n\t\t(editor.inputs.shiftKey\n\t\t\t? editor.inputs.currentPagePoint\n\t\t\t: editor.getViewportPageBounds().center)\n\n\tconst defaultProps = editor.getShapeUtil<TLTextShape>('text').getDefaultProps()\n\n\tconst cleanedUpPlaintext = cleanupText(text)\n\tconst richTextToPaste = html\n\t\t? renderRichTextFromHTML(editor, html)\n\t\t: toRichText(cleanedUpPlaintext)\n\n\t// todo: discuss\n\t// If we have one shape with rich text selected, update the shape's text.\n\t// const onlySelectedShape = editor.getOnlySelectedShape()\n\t// if (onlySelectedShape && 'richText' in onlySelectedShape.props) {\n\t// \teditor.updateShapes([\n\t// \t\t{\n\t// \t\t\tid: onlySelectedShape.id,\n\t// \t\t\ttype: onlySelectedShape.type,\n\t// \t\t\tprops: {\n\t// \t\t\t\trichText: richTextToPaste,\n\t// \t\t\t},\n\t// \t\t},\n\t// \t])\n\n\t// \treturn\n\t// }\n\n\t// Measure the text with default values\n\tlet w: number\n\tlet h: number\n\tlet autoSize: boolean\n\tlet align = 'middle' as TLTextShapeProps['textAlign']\n\n\tconst htmlToMeasure = html ?? cleanedUpPlaintext.replace(/\\n/g, '<br>')\n\tconst isMultiLine = html\n\t\t? richTextToPaste.content.length > 1\n\t\t: cleanedUpPlaintext.split('\\n').length > 1\n\n\t// check whether the text contains the most common characters in RTL languages\n\tconst isRtl = isRightToLeftLanguage(cleanedUpPlaintext)\n\n\tif (isMultiLine) {\n\t\talign = isMultiLine ? (isRtl ? 'end' : 'start') : 'middle'\n\t}\n\n\tconst rawSize = editor.textMeasure.measureHtml(htmlToMeasure, {\n\t\t...TEXT_PROPS,\n\t\tfontFamily: FONT_FAMILIES[defaultProps.font],\n\t\tfontSize: FONT_SIZES[defaultProps.size],\n\t\tmaxWidth: null,\n\t})\n\n\tconst minWidth = Math.min(\n\t\tisMultiLine ? editor.getViewportPageBounds().width * 0.9 : 920,\n\t\tMath.max(200, editor.getViewportPageBounds().width * 0.9)\n\t)\n\n\tif (rawSize.w > minWidth) {\n\t\tconst shrunkSize = editor.textMeasure.measureHtml(htmlToMeasure, {\n\t\t\t...TEXT_PROPS,\n\t\t\tfontFamily: FONT_FAMILIES[defaultProps.font],\n\t\t\tfontSize: FONT_SIZES[defaultProps.size],\n\t\t\tmaxWidth: minWidth,\n\t\t})\n\t\tw = shrunkSize.w\n\t\th = shrunkSize.h\n\t\tautoSize = false\n\t\talign = isRtl ? 'end' : 'start'\n\t} else {\n\t\t// autosize is fine\n\t\tw = Math.max(rawSize.w, 10)\n\t\th = Math.max(rawSize.h, 10)\n\t\tautoSize = true\n\t}\n\n\tif (p.y - h / 2 < editor.getViewportPageBounds().minY + 40) {\n\t\tp.y = editor.getViewportPageBounds().minY + 40 + h / 2\n\t}\n\n\tconst newPoint = maybeSnapToGrid(new Vec(p.x - w / 2, p.y - h / 2), editor)\n\tconst shapeId = createShapeId()\n\n\t// Allow this to trigger the max shapes reached alert\n\teditor.createShapes<TLTextShape>([\n\t\t{\n\t\t\tid: shapeId,\n\t\t\ttype: 'text',\n\t\t\tx: newPoint.x,\n\t\t\ty: newPoint.y,\n\t\t\tprops: {\n\t\t\t\trichText: richTextToPaste,\n\t\t\t\t// if the text has more than one line, align it to the left\n\t\t\t\ttextAlign: align,\n\t\t\t\tautoSize,\n\t\t\t\tw,\n\t\t\t},\n\t\t},\n\t])\n}\n\n/** @public */\nexport async function defaultHandleExternalUrlContent(\n\teditor: Editor,\n\t{ point, url }: { point?: VecLike; url: string },\n\t{ toasts, msg }: TLDefaultExternalContentHandlerOpts\n) {\n\t// try to paste as an embed first\n\tconst embedUtil = editor.getShapeUtil('embed') as EmbedShapeUtil | undefined\n\tconst embedInfo = embedUtil?.getEmbedDefinition(url)\n\n\tif (embedInfo) {\n\t\treturn editor.putExternalContent({\n\t\t\ttype: 'embed',\n\t\t\turl: embedInfo.url,\n\t\t\tpoint,\n\t\t\tembed: embedInfo.definition,\n\t\t})\n\t}\n\n\tconst position =\n\t\tpoint ??\n\t\t(editor.inputs.shiftKey\n\t\t\t? editor.inputs.currentPagePoint\n\t\t\t: editor.getViewportPageBounds().center)\n\n\tconst assetId: TLAssetId = AssetRecordType.createId(getHashForString(url))\n\tconst shape = createEmptyBookmarkShape(editor, url, position)\n\n\t// Use an existing asset if we have one, or else else create a new one\n\tlet asset = editor.getAsset(assetId) as TLAsset\n\tlet shouldAlsoCreateAsset = false\n\tif (!asset) {\n\t\tshouldAlsoCreateAsset = true\n\t\ttry {\n\t\t\tconst bookmarkAsset = await editor.getAssetForExternalContent({ type: 'url', url })\n\t\t\tif (!bookmarkAsset) throw Error('Could not create an asset')\n\t\t\tasset = bookmarkAsset\n\t\t} catch {\n\t\t\ttoasts.addToast({\n\t\t\t\ttitle: msg('assets.url.failed'),\n\t\t\t\tseverity: 'error',\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n\n\teditor.run(() => {\n\t\tif (shouldAlsoCreateAsset) {\n\t\t\teditor.createAssets([asset])\n\t\t}\n\n\t\teditor.updateShapes([\n\t\t\t{\n\t\t\t\tid: shape.id,\n\t\t\t\ttype: shape.type,\n\t\t\t\tprops: {\n\t\t\t\t\tassetId: asset.id,\n\t\t\t\t},\n\t\t\t},\n\t\t])\n\t})\n}\n\n/** @public */\nexport async function defaultHandleExternalTldrawContent(\n\teditor: Editor,\n\t{ point, content }: { point?: VecLike; content: TLContent }\n) {\n\teditor.run(() => {\n\t\tconst selectionBoundsBefore = editor.getSelectionPageBounds()\n\t\teditor.markHistoryStoppingPoint('paste')\n\n\t\t// Unlock any locked root shapes on paste\n\t\tfor (const shape of content.shapes) {\n\t\t\tif (content.rootShapeIds.includes(shape.id)) {\n\t\t\t\tshape.isLocked = false\n\t\t\t}\n\t\t}\n\n\t\teditor.putContentOntoCurrentPage(content, {\n\t\t\tpoint: point,\n\t\t\tselect: true,\n\t\t})\n\t\tconst selectedBoundsAfter = editor.getSelectionPageBounds()\n\t\tif (\n\t\t\tselectionBoundsBefore &&\n\t\t\tselectedBoundsAfter &&\n\t\t\tselectionBoundsBefore?.collides(selectedBoundsAfter)\n\t\t) {\n\t\t\t// Creates a 'puff' to show content has been pasted\n\t\t\teditor.updateInstanceState({ isChangingStyle: true })\n\t\t\teditor.timers.setTimeout(() => {\n\t\t\t\teditor.updateInstanceState({ isChangingStyle: false })\n\t\t\t}, 150)\n\t\t}\n\t})\n}\n\n/** @public */\nexport async function defaultHandleExternalExcalidrawContent(\n\teditor: Editor,\n\t{ point, content }: { point?: VecLike; content: any }\n) {\n\teditor.run(() => {\n\t\tputExcalidrawContent(editor, content, point)\n\t})\n}\n\n/** @public */\nexport async function getMediaAssetInfoPartial(\n\tfile: File,\n\tassetId: TLAssetId,\n\tisImageType: boolean,\n\tisVideoType: boolean,\n\tmaxImageDimension?: number\n) {\n\tlet fileType = file.type\n\n\tif (file.type === 'video/quicktime') {\n\t\t// hack to make .mov videos work\n\t\tfileType = 'video/mp4'\n\t}\n\n\tconst size = isImageType\n\t\t? await MediaHelpers.getImageSize(file)\n\t\t: await MediaHelpers.getVideoSize(file)\n\n\tconst isAnimated = (await MediaHelpers.isAnimated(file)) || isVideoType\n\n\tconst assetInfo = {\n\t\tid: assetId,\n\t\ttype: isImageType ? 'image' : 'video',\n\t\ttypeName: 'asset',\n\t\tprops: {\n\t\t\tname: file.name,\n\t\t\tsrc: '',\n\t\t\tw: size.w,\n\t\t\th: size.h,\n\t\t\tfileSize: file.size,\n\t\t\tmimeType: fileType,\n\t\t\tisAnimated,\n\t\t},\n\t\tmeta: {},\n\t} as TLImageAsset | TLVideoAsset\n\n\tif (maxImageDimension && isFinite(maxImageDimension)) {\n\t\tconst size = { w: assetInfo.props.w, h: assetInfo.props.h }\n\t\tconst resizedSize = containBoxSize(size, { w: maxImageDimension, h: maxImageDimension })\n\t\tif (size !== resizedSize && MediaHelpers.isStaticImageType(file.type)) {\n\t\t\tassetInfo.props.w = resizedSize.w\n\t\t\tassetInfo.props.h = resizedSize.h\n\t\t}\n\t}\n\n\treturn assetInfo\n}\n\n/**\n * A helper function for an external content handler. It creates bookmarks,\n * images or video shapes corresponding to the type of assets provided.\n *\n * @param editor - The editor instance\n *\n * @param assets - An array of asset Ids\n *\n * @param position - the position at which to create the shapes\n *\n * @public\n */\nexport async function createShapesForAssets(\n\teditor: Editor,\n\tassets: TLAsset[],\n\tposition: VecLike\n): Promise<TLShapeId[]> {\n\tif (!assets.length) return []\n\n\tconst currentPoint = Vec.From(position)\n\tconst partials: TLShapePartial[] = []\n\n\tfor (let i = 0; i < assets.length; i++) {\n\t\tconst asset = assets[i]\n\t\tswitch (asset.type) {\n\t\t\tcase 'image': {\n\t\t\t\tpartials.push({\n\t\t\t\t\tid: createShapeId(),\n\t\t\t\t\ttype: 'image',\n\t\t\t\t\tx: currentPoint.x,\n\t\t\t\t\ty: currentPoint.y,\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\tassetId: asset.id,\n\t\t\t\t\t\tw: asset.props.w,\n\t\t\t\t\t\th: asset.props.h,\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tcurrentPoint.x += asset.props.w\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'video': {\n\t\t\t\tpartials.push({\n\t\t\t\t\tid: createShapeId(),\n\t\t\t\t\ttype: 'video',\n\t\t\t\t\tx: currentPoint.x,\n\t\t\t\t\ty: currentPoint.y,\n\t\t\t\t\topacity: 1,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\tassetId: asset.id,\n\t\t\t\t\t\tw: asset.props.w,\n\t\t\t\t\t\th: asset.props.h,\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tcurrentPoint.x += asset.props.w\n\t\t\t}\n\t\t}\n\t}\n\n\teditor.run(() => {\n\t\t// Create any assets\n\t\tconst assetsToCreate = assets.filter((asset) => !editor.getAsset(asset.id))\n\n\t\teditor.store.atomic(() => {\n\t\t\tif (editor.canCreateShapes(partials)) {\n\t\t\t\tif (assetsToCreate.length) {\n\t\t\t\t\teditor.createAssets(assetsToCreate)\n\t\t\t\t}\n\n\t\t\t\t// Create the shapes\n\t\t\t\teditor.createShapes(partials).select(...partials.map((p) => p.id))\n\n\t\t\t\t// Re-position shapes so that the center of the group is at the provided point\n\t\t\t\tcenterSelectionAroundPoint(editor, position)\n\t\t\t}\n\t\t})\n\t})\n\n\treturn partials.map((p) => p.id)\n}\n\n/**\n * Repositions selected shapes do that the center of the group is\n * at the provided position\n *\n * @param editor - The editor instance\n *\n * @param position - the point to center the shapes around\n *\n * @public\n */\nexport function centerSelectionAroundPoint(editor: Editor, position: VecLike) {\n\t// Re-position shapes so that the center of the group is at the provided point\n\tconst viewportPageBounds = editor.getViewportPageBounds()\n\tlet selectionPageBounds = editor.getSelectionPageBounds()\n\n\tif (selectionPageBounds) {\n\t\tconst offset = selectionPageBounds!.center.sub(position)\n\n\t\teditor.updateShapes(\n\t\t\teditor.getSelectedShapes().map((shape) => {\n\t\t\t\tconst localRotation = editor.getShapeParentTransform(shape).decompose().rotation\n\t\t\t\tconst localDelta = Vec.Rot(offset, -localRotation)\n\t\t\t\treturn {\n\t\t\t\t\tid: shape.id,\n\t\t\t\t\ttype: shape.type,\n\t\t\t\t\tx: shape.x! - localDelta.x,\n\t\t\t\t\ty: shape.y! - localDelta.y,\n\t\t\t\t}\n\t\t\t})\n\t\t)\n\t}\n\tselectionPageBounds = editor.getSelectionPageBounds()\n\t// align selection with the grid if necessary\n\tif (selectionPageBounds && editor.getInstanceState().isGridMode) {\n\t\tconst gridSize = editor.getDocumentSettings().gridSize\n\t\tconst topLeft = new Vec(selectionPageBounds.minX, selectionPageBounds.minY)\n\t\tconst gridSnappedPoint = topLeft.clone().snapToGrid(gridSize)\n\t\tconst delta = Vec.Sub(topLeft, gridSnappedPoint)\n\t\teditor.updateShapes(\n\t\t\teditor.getSelectedShapes().map((shape) => {\n\t\t\t\tconst newPoint = { x: shape.x! - delta.x, y: shape.y! - delta.y }\n\t\t\t\treturn {\n\t\t\t\t\tid: shape.id,\n\t\t\t\t\ttype: shape.type,\n\t\t\t\t\tx: newPoint.x,\n\t\t\t\t\ty: newPoint.y,\n\t\t\t\t}\n\t\t\t})\n\t\t)\n\t}\n\t// Zoom out to fit the shapes, if necessary\n\tselectionPageBounds = editor.getSelectionPageBounds()\n\tif (selectionPageBounds && !viewportPageBounds.contains(selectionPageBounds)) {\n\t\teditor.zoomToSelection({ animation: { duration: editor.options.animationMediumMs } })\n\t}\n}\n\n/** @public */\nexport function createEmptyBookmarkShape(\n\teditor: Editor,\n\turl: string,\n\tposition: VecLike\n): TLBookmarkShape {\n\tconst partial: TLShapePartial = {\n\t\tid: createShapeId(),\n\t\ttype: 'bookmark',\n\t\tx: position.x - 150,\n\t\ty: position.y - 160,\n\t\topacity: 1,\n\t\tprops: {\n\t\t\tassetId: null,\n\t\t\turl,\n\t\t},\n\t}\n\n\teditor.run(() => {\n\t\t// Allow this to trigger the max shapes reached alert\n\t\teditor.createShape(partial)\n\t\tif (!editor.getShape(partial.id)) return\n\t\teditor.select(partial.id)\n\t\tcenterSelectionAroundPoint(editor, position)\n\t})\n\n\treturn editor.getShape(partial.id) as TLBookmarkShape\n}\n\nfunction runFileChecks(file: File, options: TLDefaultExternalContentHandlerOpts) {\n\tconst {\n\t\tacceptedImageMimeTypes = DEFAULT_SUPPORTED_IMAGE_TYPES,\n\t\tacceptedVideoMimeTypes = DEFAULT_SUPPORT_VIDEO_TYPES,\n\t\tmaxAssetSize = DEFAULT_MAX_ASSET_SIZE,\n\t\ttoasts,\n\t\tmsg,\n\t} = options\n\tconst isImageType = acceptedImageMimeTypes.includes(file.type)\n\tconst isVideoType = acceptedVideoMimeTypes.includes(file.type)\n\n\tif (!isImageType && !isVideoType) {\n\t\ttoasts.addToast({\n\t\t\ttitle: msg('assets.files.type-not-allowed'),\n\t\t\tseverity: 'error',\n\t\t})\n\t\treturn false\n\t}\n\n\tif (file.size > maxAssetSize) {\n\t\ttoasts.addToast({\n\t\t\ttitle: msg('assets.files.size-too-big'),\n\t\t\tseverity: 'error',\n\t\t})\n\t\treturn false\n\t}\n\n\t// Use mime type instead of file ext, this is because\n\t// window.navigator.clipboard does not preserve file names\n\t// of copied files.\n\tif (!file.type) {\n\t\ttoasts.addToast({\n\t\t\ttitle: msg('assets.files.upload-failed'),\n\t\t\tseverity: 'error',\n\t\t})\n\t\tconsole.error('No mime type')\n\t\treturn false\n\t}\n\n\treturn true\n}\n\nasync function getAssetInfo(\n\tfile: File,\n\toptions: TLDefaultExternalContentHandlerOpts,\n\tassetId?: TLAssetId\n) {\n\tconst {\n\t\tacceptedImageMimeTypes = DEFAULT_SUPPORTED_IMAGE_TYPES,\n\t\tacceptedVideoMimeTypes = DEFAULT_SUPPORT_VIDEO_TYPES,\n\t\tmaxImageDimension = DEFAULT_MAX_IMAGE_DIMENSION,\n\t} = options\n\n\tconst isImageType = acceptedImageMimeTypes.includes(file.type)\n\tconst isVideoType = acceptedVideoMimeTypes.includes(file.type)\n\tconst hash = getHashForBuffer(await file.arrayBuffer())\n\tassetId ??= AssetRecordType.createId(hash)\n\tconst assetInfo = await getMediaAssetInfoPartial(\n\t\tfile,\n\t\tassetId,\n\t\tisImageType,\n\t\tisVideoType,\n\t\tmaxImageDimension\n\t)\n\treturn assetInfo\n}\n"],"names":["size"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2264, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/defaultShapeTools.ts"],"sourcesContent":["import { ArrowShapeTool } from './shapes/arrow/ArrowShapeTool'\nimport { DrawShapeTool } from './shapes/draw/DrawShapeTool'\nimport { FrameShapeTool } from './shapes/frame/FrameShapeTool'\nimport { GeoShapeTool } from './shapes/geo/GeoShapeTool'\nimport { HighlightShapeTool } from './shapes/highlight/HighlightShapeTool'\nimport { LineShapeTool } from './shapes/line/LineShapeTool'\nimport { NoteShapeTool } from './shapes/note/NoteShapeTool'\nimport { TextShapeTool } from './shapes/text/TextShapeTool'\n\n/** @public */\nexport const defaultShapeTools = [\n\tTextShapeTool,\n\tDrawShapeTool,\n\tGeoShapeTool,\n\tNoteShapeTool,\n\tLineShapeTool,\n\tFrameShapeTool,\n\tArrowShapeTool,\n\tHighlightShapeTool,\n] as const\n"],"names":[],"mappings":";;;AAAA,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB;AAC9B,SAAS,sBAAsB;AAC/B,SAAS,oBAAoB;AAC7B,SAAS,0BAA0B;AACnC,SAAS,qBAAqB;AAC9B,SAAS,qBAAqB;AAC9B,SAAS,qBAAqB;;;;;;;;;AAGvB,MAAM,oBAAoB;qLAChC,gBAAA;qLACA,gBAAA;mLACA,eAAA;qLACA,gBAAA;qLACA,gBAAA;uLACA,iBAAA;uLACA,iBAAA;+LACA,qBAAA;CACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2301, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/defaultShapeUtils.ts"],"sourcesContent":["import { ArrowShapeUtil } from './shapes/arrow/ArrowShapeUtil'\nimport { BookmarkShapeUtil } from './shapes/bookmark/BookmarkShapeUtil'\nimport { DrawShapeUtil } from './shapes/draw/DrawShapeUtil'\nimport { EmbedShapeUtil } from './shapes/embed/EmbedShapeUtil'\nimport { FrameShapeUtil } from './shapes/frame/FrameShapeUtil'\nimport { GeoShapeUtil } from './shapes/geo/GeoShapeUtil'\nimport { HighlightShapeUtil } from './shapes/highlight/HighlightShapeUtil'\nimport { ImageShapeUtil } from './shapes/image/ImageShapeUtil'\nimport { LineShapeUtil } from './shapes/line/LineShapeUtil'\nimport { NoteShapeUtil } from './shapes/note/NoteShapeUtil'\nimport { TextShapeUtil } from './shapes/text/TextShapeUtil'\nimport { VideoShapeUtil } from './shapes/video/VideoShapeUtil'\n\n/** @public */\nexport const defaultShapeUtils = [\n\tTextShapeUtil,\n\tBookmarkShapeUtil,\n\tDrawShapeUtil,\n\tGeoShapeUtil,\n\tNoteShapeUtil,\n\tLineShapeUtil,\n\tFrameShapeUtil,\n\tArrowShapeUtil,\n\tHighlightShapeUtil,\n\tEmbedShapeUtil,\n\tImageShapeUtil,\n\tVideoShapeUtil,\n] as const\n"],"names":[],"mappings":";;;AAAA,SAAS,sBAAsB;AAC/B,SAAS,yBAAyB;AAClC,SAAS,qBAAqB;AAC9B,SAAS,sBAAsB;AAC/B,SAAS,sBAAsB;AAC/B,SAAS,oBAAoB;AAC7B,SAAS,0BAA0B;AACnC,SAAS,sBAAsB;AAC/B,SAAS,qBAAqB;AAC9B,SAAS,qBAAqB;AAC9B,SAAS,qBAAqB;AAC9B,SAAS,sBAAsB;;;;;;;;;;;;;AAGxB,MAAM,oBAAoB;qLAChC,gBAAA;6LACA,oBAAA;qLACA,gBAAA;mLACA,eAAA;qLACA,gBAAA;qLACA,gBAAA;uLACA,iBAAA;uLACA,iBAAA;+LACA,qBAAA;uLACA,iBAAA;uLACA,iBAAA;uLACA,iBAAA;CACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2350, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/defaultSideEffects.ts"],"sourcesContent":["import { Editor } from '@tldraw/editor'\n\n/** @public */\nexport function registerDefaultSideEffects(editor: Editor) {\n\treturn editor.sideEffects.register({\n\t\tinstance_page_state: {\n\t\t\tafterChange: (prev, next) => {\n\t\t\t\tif (prev.croppingShapeId !== next.croppingShapeId) {\n\t\t\t\t\tconst isInCroppingState = editor.isIn('select.crop')\n\t\t\t\t\tif (!prev.croppingShapeId && next.croppingShapeId) {\n\t\t\t\t\t\tif (!isInCroppingState) {\n\t\t\t\t\t\t\teditor.setCurrentTool('select.crop.idle')\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (prev.croppingShapeId && !next.croppingShapeId) {\n\t\t\t\t\t\tif (isInCroppingState) {\n\t\t\t\t\t\t\teditor.setCurrentTool('select.idle')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (prev.editingShapeId !== next.editingShapeId) {\n\t\t\t\t\tif (!prev.editingShapeId && next.editingShapeId) {\n\t\t\t\t\t\tif (!editor.isIn('select.editing_shape')) {\n\t\t\t\t\t\t\t// Here's where we handle the special tool locking case for text\n\t\t\t\t\t\t\t// If tool lock is enabled, and we just finished editing a text\n\t\t\t\t\t\t\t// shape and are setting that shape as the new editing shape,\n\t\t\t\t\t\t\t// then create the shape with a flag that will let it know to\n\t\t\t\t\t\t\t// go back to the text tool once the edit is complete.\n\t\t\t\t\t\t\tconst shape = editor.getEditingShape()\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tshape &&\n\t\t\t\t\t\t\t\tshape.type === 'text' &&\n\t\t\t\t\t\t\t\teditor.isInAny('text.pointing', 'select.resizing') &&\n\t\t\t\t\t\t\t\teditor.getInstanceState().isToolLocked\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\teditor.setCurrentTool('select.editing_shape', {\n\t\t\t\t\t\t\t\t\tisCreatingTextWhileToolLocked: true,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\teditor.setCurrentTool('select.editing_shape')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (prev.editingShapeId && !next.editingShapeId) {\n\t\t\t\t\t\tif (editor.isIn('select.editing_shape')) {\n\t\t\t\t\t\t\teditor.setCurrentTool('select.idle')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t})\n}\n"],"names":[],"mappings":";;;AAGO,SAAS,2BAA2B,MAAA,EAAgB;IAC1D,OAAO,OAAO,WAAA,CAAY,QAAA,CAAS;QAClC,qBAAqB;YACpB,aAAa,CAAC,MAAM,SAAS;gBAC5B,IAAI,KAAK,eAAA,KAAoB,KAAK,eAAA,EAAiB;oBAClD,MAAM,oBAAoB,OAAO,IAAA,CAAK,aAAa;oBACnD,IAAI,CAAC,KAAK,eAAA,IAAmB,KAAK,eAAA,EAAiB;wBAClD,IAAI,CAAC,mBAAmB;4BACvB,OAAO,cAAA,CAAe,kBAAkB;wBACzC;oBACD,OAAA,IAAW,KAAK,eAAA,IAAmB,CAAC,KAAK,eAAA,EAAiB;wBACzD,IAAI,mBAAmB;4BACtB,OAAO,cAAA,CAAe,aAAa;wBACpC;oBACD;gBACD;gBAEA,IAAI,KAAK,cAAA,KAAmB,KAAK,cAAA,EAAgB;oBAChD,IAAI,CAAC,KAAK,cAAA,IAAkB,KAAK,cAAA,EAAgB;wBAChD,IAAI,CAAC,OAAO,IAAA,CAAK,sBAAsB,GAAG;4BAMzC,MAAM,QAAQ,OAAO,eAAA,CAAgB;4BACrC,IACC,SACA,MAAM,IAAA,KAAS,UACf,OAAO,OAAA,CAAQ,iBAAiB,iBAAiB,KACjD,OAAO,gBAAA,CAAiB,EAAE,YAAA,EACzB;gCACD,OAAO,cAAA,CAAe,wBAAwB;oCAC7C,+BAA+B;gCAChC,CAAC;4BACF,OAAO;gCACN,OAAO,cAAA,CAAe,sBAAsB;4BAC7C;wBACD;oBACD,OAAA,IAAW,KAAK,cAAA,IAAkB,CAAC,KAAK,cAAA,EAAgB;wBACvD,IAAI,OAAO,IAAA,CAAK,sBAAsB,GAAG;4BACxC,OAAO,cAAA,CAAe,aAAa;wBACpC;oBACD;gBACD;YACD;QACD;IACD,CAAC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2399, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/defaultTools.ts"],"sourcesContent":["import { EraserTool } from './tools/EraserTool/EraserTool'\nimport { HandTool } from './tools/HandTool/HandTool'\nimport { LaserTool } from './tools/LaserTool/LaserTool'\nimport { SelectTool } from './tools/SelectTool/SelectTool'\nimport { ZoomTool } from './tools/ZoomTool/ZoomTool'\n\n/** @public */\nexport const defaultTools = [EraserTool, HandTool, LaserTool, ZoomTool, SelectTool] as const\n"],"names":[],"mappings":";;;AAAA,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;AACzB,SAAS,iBAAiB;AAC1B,SAAS,kBAAkB;AAC3B,SAAS,gBAAgB;;;;;;AAGlB,MAAM,eAAe;uLAAC,aAAA;mLAAY,WAAA;qLAAU,YAAA;mLAAW,WAAA;uLAAU,aAAU;CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2427, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/styles.tsx"],"sourcesContent":["import { TLUiIconJsx } from './ui/components/primitives/TldrawUiIcon'\n\n/** @public */\nexport type StyleValuesForUi<T> = readonly {\n\treadonly value: T\n\treadonly icon: string | TLUiIconJsx\n}[]\n\n// todo: default styles prop?\nexport const STYLES = {\n\tcolor: [\n\t\t{ value: 'black', icon: 'color' },\n\t\t{ value: 'grey', icon: 'color' },\n\t\t{ value: 'light-violet', icon: 'color' },\n\t\t{ value: 'violet', icon: 'color' },\n\t\t{ value: 'blue', icon: 'color' },\n\t\t{ value: 'light-blue', icon: 'color' },\n\t\t{ value: 'yellow', icon: 'color' },\n\t\t{ value: 'orange', icon: 'color' },\n\t\t{ value: 'green', icon: 'color' },\n\t\t{ value: 'light-green', icon: 'color' },\n\t\t{ value: 'light-red', icon: 'color' },\n\t\t{ value: 'red', icon: 'color' },\n\t],\n\tfill: [\n\t\t{ value: 'none', icon: 'fill-none' },\n\t\t{ value: 'semi', icon: 'fill-semi' },\n\t\t{ value: 'solid', icon: 'fill-solid' },\n\t\t{ value: 'pattern', icon: 'fill-pattern' },\n\t\t// { value: 'fill', icon: 'fill-fill' },\n\t],\n\tdash: [\n\t\t{ value: 'draw', icon: 'dash-draw' },\n\t\t{ value: 'dashed', icon: 'dash-dashed' },\n\t\t{ value: 'dotted', icon: 'dash-dotted' },\n\t\t{ value: 'solid', icon: 'dash-solid' },\n\t],\n\tsize: [\n\t\t{ value: 's', icon: 'size-small' },\n\t\t{ value: 'm', icon: 'size-medium' },\n\t\t{ value: 'l', icon: 'size-large' },\n\t\t{ value: 'xl', icon: 'size-extra-large' },\n\t],\n\tfont: [\n\t\t{ value: 'draw', icon: 'font-draw' },\n\t\t{ value: 'sans', icon: 'font-sans' },\n\t\t{ value: 'serif', icon: 'font-serif' },\n\t\t{ value: 'mono', icon: 'font-mono' },\n\t],\n\ttextAlign: [\n\t\t{ value: 'start', icon: 'text-align-left' },\n\t\t{ value: 'middle', icon: 'text-align-center' },\n\t\t{ value: 'end', icon: 'text-align-right' },\n\t],\n\thorizontalAlign: [\n\t\t{ value: 'start', icon: 'horizontal-align-start' },\n\t\t{ value: 'middle', icon: 'horizontal-align-middle' },\n\t\t{ value: 'end', icon: 'horizontal-align-end' },\n\t],\n\tverticalAlign: [\n\t\t{ value: 'start', icon: 'vertical-align-start' },\n\t\t{ value: 'middle', icon: 'vertical-align-middle' },\n\t\t{ value: 'end', icon: 'vertical-align-end' },\n\t],\n\tgeo: [\n\t\t{ value: 'rectangle', icon: 'geo-rectangle' },\n\t\t{ value: 'ellipse', icon: 'geo-ellipse' },\n\t\t{ value: 'triangle', icon: 'geo-triangle' },\n\t\t{ value: 'diamond', icon: 'geo-diamond' },\n\t\t{ value: 'star', icon: 'geo-star' },\n\t\t{ value: 'pentagon', icon: 'geo-pentagon' },\n\t\t{ value: 'hexagon', icon: 'geo-hexagon' },\n\t\t{ value: 'octagon', icon: 'geo-octagon' },\n\t\t{ value: 'rhombus', icon: 'geo-rhombus' },\n\t\t{ value: 'rhombus-2', icon: 'geo-rhombus-2' },\n\t\t{ value: 'oval', icon: 'geo-oval' },\n\t\t{ value: 'trapezoid', icon: 'geo-trapezoid' },\n\t\t{ value: 'arrow-left', icon: 'geo-arrow-left' },\n\t\t{ value: 'arrow-up', icon: 'geo-arrow-up' },\n\t\t{ value: 'arrow-down', icon: 'geo-arrow-down' },\n\t\t{ value: 'arrow-right', icon: 'geo-arrow-right' },\n\t\t{ value: 'cloud', icon: 'geo-cloud' },\n\t\t{ value: 'x-box', icon: 'geo-x-box' },\n\t\t{ value: 'check-box', icon: 'geo-check-box' },\n\t\t{ value: 'heart', icon: 'geo-heart' },\n\t],\n\tarrowKind: [\n\t\t{ value: 'arc', icon: 'arrow-arc' },\n\t\t{ value: 'elbow', icon: 'arrow-elbow' },\n\t],\n\tarrowheadStart: [\n\t\t{ value: 'none', icon: 'arrowhead-none' },\n\t\t{ value: 'arrow', icon: 'arrowhead-arrow' },\n\t\t{ value: 'triangle', icon: 'arrowhead-triangle' },\n\t\t{ value: 'square', icon: 'arrowhead-square' },\n\t\t{ value: 'dot', icon: 'arrowhead-dot' },\n\t\t{ value: 'diamond', icon: 'arrowhead-diamond' },\n\t\t{ value: 'inverted', icon: 'arrowhead-triangle-inverted' },\n\t\t{ value: 'bar', icon: 'arrowhead-bar' },\n\t],\n\tarrowheadEnd: [\n\t\t{ value: 'none', icon: 'arrowhead-none' },\n\t\t{ value: 'arrow', icon: 'arrowhead-arrow' },\n\t\t{ value: 'triangle', icon: 'arrowhead-triangle' },\n\t\t{ value: 'square', icon: 'arrowhead-square' },\n\t\t{ value: 'dot', icon: 'arrowhead-dot' },\n\t\t{ value: 'diamond', icon: 'arrowhead-diamond' },\n\t\t{ value: 'inverted', icon: 'arrowhead-triangle-inverted' },\n\t\t{ value: 'bar', icon: 'arrowhead-bar' },\n\t],\n\tspline: [\n\t\t{ value: 'line', icon: 'spline-line' },\n\t\t{ value: 'cubic', icon: 'spline-cubic' },\n\t],\n} as const satisfies Record<string, StyleValuesForUi<string>>\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2774, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/Tldraw.tsx"],"sourcesContent":["import {\n\tDEFAULT_SUPPORTED_IMAGE_TYPES,\n\tDEFAULT_SUPPORT_VIDEO_TYPES,\n\tTLEditorComponents,\n\tTLOnMountHandler,\n\tTLTextOptions,\n\tTldrawEditor,\n\tTldrawEditorBaseProps,\n\tTldrawEditorStoreProps,\n\tdefaultUserPreferences,\n\tmergeArraysAndReplaceDefaults,\n\tuseEditor,\n\tuseEditorComponents,\n\tuseOnMount,\n\tuseShallowArrayIdentity,\n\tuseShallowObjectIdentity,\n} from '@tldraw/editor'\nimport { useMemo } from 'react'\nimport { TldrawHandles } from './canvas/TldrawHandles'\nimport { TldrawOverlays } from './canvas/TldrawOverlays'\nimport { TldrawScribble } from './canvas/TldrawScribble'\nimport { TldrawSelectionForeground } from './canvas/TldrawSelectionForeground'\nimport { TldrawShapeIndicators } from './canvas/TldrawShapeIndicators'\nimport { defaultBindingUtils } from './defaultBindingUtils'\nimport { TLEmbedDefinition } from './defaultEmbedDefinitions'\nimport {\n\tTLExternalContentProps,\n\tregisterDefaultExternalContentHandlers,\n} from './defaultExternalContentHandlers'\nimport { defaultShapeTools } from './defaultShapeTools'\nimport { defaultShapeUtils } from './defaultShapeUtils'\nimport { registerDefaultSideEffects } from './defaultSideEffects'\nimport { defaultTools } from './defaultTools'\nimport { EmbedShapeUtil } from './shapes/embed/EmbedShapeUtil'\nimport { allDefaultFontFaces } from './shapes/shared/defaultFonts'\nimport { TldrawUi, TldrawUiProps } from './ui/TldrawUi'\nimport { TLUiAssetUrlOverrides, useDefaultUiAssetUrlsWithOverrides } from './ui/assetUrls'\nimport { LoadingScreen } from './ui/components/LoadingScreen'\nimport { Spinner } from './ui/components/Spinner'\nimport { AssetUrlsProvider } from './ui/context/asset-urls'\nimport { TLUiComponents, useTldrawUiComponents } from './ui/context/components'\nimport { useUiEvents } from './ui/context/events'\nimport { useToasts } from './ui/context/toasts'\nimport {\n\tTldrawUiTranslationProvider,\n\tuseTranslation,\n} from './ui/hooks/useTranslation/useTranslation'\nimport { useMergedTranslationOverrides } from './ui/overrides'\nimport { useDefaultEditorAssetsWithOverrides } from './utils/static-assets/assetUrls'\nimport { defaultAddFontsFromNode, tipTapDefaultExtensions } from './utils/text/richText'\n\n/**\n * Override the default react components used by the editor and UI. Set components to null to\n * disable them entirely.\n *\n * @example\n * ```tsx\n * import {Tldraw, TLComponents} from 'tldraw'\n *\n * const components: TLComponents = {\n *    Scribble: MyCustomScribble,\n * }\n *\n * export function MyApp() {\n *   return <Tldraw components={components} />\n * }\n * ```\n *\n *\n * @public\n */\nexport interface TLComponents extends TLEditorComponents, TLUiComponents {}\n\n/** @public */\nexport interface TldrawBaseProps\n\textends TldrawUiProps,\n\t\tTldrawEditorBaseProps,\n\t\tTLExternalContentProps {\n\t/** Urls for custom assets.\n\t *\n\t * ⚠︎ Important! This must be memoized (with useMemo) or defined outside of any React component.\n\t */\n\tassetUrls?: TLUiAssetUrlOverrides\n\t/** Overrides for tldraw's components.\n\t *\n\t * ⚠︎ Important! This must be memoized (with useMemo) or defined outside of any React component.\n\t */\n\tcomponents?: TLComponents\n\t/** Custom definitions for tldraw's embeds.\n\t *\n\t * ⚠︎ Important! This must be memoized (with useMemo) or defined outside of any React component.\n\t */\n\tembeds?: TLEmbedDefinition[]\n}\n\n/** @public */\nexport type TldrawProps = TldrawBaseProps & TldrawEditorStoreProps\n\nconst allDefaultTools = [...defaultTools, ...defaultShapeTools]\n\n/** @public @react */\nexport function Tldraw(props: TldrawProps) {\n\tconst {\n\t\tchildren,\n\t\tmaxImageDimension,\n\t\tmaxAssetSize,\n\t\tacceptedImageMimeTypes,\n\t\tacceptedVideoMimeTypes,\n\t\tonMount,\n\t\tcomponents = {},\n\t\tshapeUtils = [],\n\t\tbindingUtils = [],\n\t\ttools = [],\n\t\tembeds,\n\t\ttextOptions,\n\t\t...rest\n\t} = props\n\n\tconst _components = useShallowObjectIdentity(components)\n\n\tconst componentsWithDefault = useMemo(\n\t\t() => ({\n\t\t\tScribble: TldrawScribble,\n\t\t\tShapeIndicators: TldrawShapeIndicators,\n\t\t\tCollaboratorScribble: TldrawScribble,\n\t\t\tSelectionForeground: TldrawSelectionForeground,\n\t\t\tHandles: TldrawHandles,\n\t\t\tOverlays: TldrawOverlays,\n\t\t\tSpinner,\n\t\t\tLoadingScreen,\n\t\t\t..._components,\n\t\t}),\n\t\t[_components]\n\t)\n\n\tconst _shapeUtils = useShallowArrayIdentity(shapeUtils)\n\tconst shapeUtilsWithDefaults = useMemo(\n\t\t() => mergeArraysAndReplaceDefaults('type', _shapeUtils, defaultShapeUtils),\n\t\t[_shapeUtils]\n\t)\n\n\tconst _bindingUtils = useShallowArrayIdentity(bindingUtils)\n\tconst bindingUtilsWithDefaults = useMemo(\n\t\t() => mergeArraysAndReplaceDefaults('type', _bindingUtils, defaultBindingUtils),\n\t\t[_bindingUtils]\n\t)\n\n\tconst _tools = useShallowArrayIdentity(tools)\n\tconst toolsWithDefaults = useMemo(\n\t\t() => mergeArraysAndReplaceDefaults('id', _tools, allDefaultTools),\n\t\t[_tools]\n\t)\n\n\tconst _imageMimeTypes = useShallowArrayIdentity(\n\t\tacceptedImageMimeTypes ?? DEFAULT_SUPPORTED_IMAGE_TYPES\n\t)\n\tconst _videoMimeTypes = useShallowArrayIdentity(\n\t\tacceptedVideoMimeTypes ?? DEFAULT_SUPPORT_VIDEO_TYPES\n\t)\n\n\tconst textOptionsWithDefaults = useMemo((): TLTextOptions => {\n\t\treturn {\n\t\t\taddFontsFromNode: defaultAddFontsFromNode,\n\t\t\t...textOptions,\n\t\t\ttipTapConfig: {\n\t\t\t\textensions: tipTapDefaultExtensions,\n\t\t\t\t...textOptions?.tipTapConfig,\n\t\t\t},\n\t\t}\n\t}, [textOptions])\n\n\tconst mediaMimeTypes = useMemo(\n\t\t() => [..._imageMimeTypes, ..._videoMimeTypes],\n\t\t[_imageMimeTypes, _videoMimeTypes]\n\t)\n\n\tconst assets = useDefaultEditorAssetsWithOverrides(rest.assetUrls)\n\n\tconst embedShapeUtil = shapeUtilsWithDefaults.find((util) => util.type === 'embed')\n\tif (embedShapeUtil && embeds) {\n\t\tEmbedShapeUtil.setEmbedDefinitions(embeds)\n\t}\n\n\treturn (\n\t\t// We provide an extra higher layer of asset+translations providers here so that\n\t\t// loading UI (which is rendered outside of TldrawUi) may be translated.\n\t\t// Ideally we would refactor to hoist all the UI context providers we can up here. Maybe later.\n\t\t<AssetUrlsProvider assetUrls={useDefaultUiAssetUrlsWithOverrides(rest.assetUrls)}>\n\t\t\t<TldrawUiTranslationProvider\n\t\t\t\toverrides={useMergedTranslationOverrides(rest.overrides)}\n\t\t\t\tlocale={rest.user?.userPreferences.get().locale ?? defaultUserPreferences.locale}\n\t\t\t>\n\t\t\t\t<TldrawEditor\n\t\t\t\t\tinitialState=\"select\"\n\t\t\t\t\t{...rest}\n\t\t\t\t\tcomponents={componentsWithDefault}\n\t\t\t\t\tshapeUtils={shapeUtilsWithDefaults}\n\t\t\t\t\tbindingUtils={bindingUtilsWithDefaults}\n\t\t\t\t\ttools={toolsWithDefaults}\n\t\t\t\t\ttextOptions={textOptionsWithDefaults}\n\t\t\t\t\tassetUrls={assets}\n\t\t\t\t>\n\t\t\t\t\t<TldrawUi {...rest} components={componentsWithDefault} mediaMimeTypes={mediaMimeTypes}>\n\t\t\t\t\t\t<InsideOfEditorAndUiContext\n\t\t\t\t\t\t\tmaxImageDimension={maxImageDimension}\n\t\t\t\t\t\t\tmaxAssetSize={maxAssetSize}\n\t\t\t\t\t\t\tacceptedImageMimeTypes={_imageMimeTypes}\n\t\t\t\t\t\t\tacceptedVideoMimeTypes={_videoMimeTypes}\n\t\t\t\t\t\t\tonMount={onMount}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</TldrawUi>\n\t\t\t\t</TldrawEditor>\n\t\t\t</TldrawUiTranslationProvider>\n\t\t</AssetUrlsProvider>\n\t)\n}\n\n// We put these hooks into a component here so that they can run inside of the context provided by TldrawEditor and TldrawUi.\nfunction InsideOfEditorAndUiContext({\n\tmaxImageDimension,\n\tmaxAssetSize,\n\tacceptedImageMimeTypes,\n\tacceptedVideoMimeTypes,\n\tonMount,\n}: TLExternalContentProps & {\n\tonMount?: TLOnMountHandler\n}) {\n\tconst editor = useEditor()\n\tconst toasts = useToasts()\n\tconst msg = useTranslation()\n\tconst trackEvent = useUiEvents()\n\n\tuseOnMount(() => {\n\t\tconst unsubs: (void | (() => void) | undefined)[] = []\n\n\t\tunsubs.push(registerDefaultSideEffects(editor))\n\n\t\t// now that the editor has mounted (and presumably pre-loaded the fonts actually in use in\n\t\t// the document), we want to preload the other default font faces in the background. These\n\t\t// won't be directly used, but mean that when adding text the user can switch between fonts\n\t\t// quickly, without having to wait for them to load in.\n\t\teditor.fonts.requestFonts(allDefaultFontFaces)\n\n\t\teditor.once('edit', () => trackEvent('edit', { source: 'unknown' }))\n\n\t\t// for content handling, first we register the default handlers...\n\t\tregisterDefaultExternalContentHandlers(editor, {\n\t\t\tmaxImageDimension,\n\t\t\tmaxAssetSize,\n\t\t\tacceptedImageMimeTypes,\n\t\t\tacceptedVideoMimeTypes,\n\t\t\ttoasts,\n\t\t\tmsg,\n\t\t})\n\n\t\t// ...then we call the store's on mount which may override them...\n\t\tunsubs.push(editor.store.props.onMount(editor))\n\n\t\t// ...then we run the user's onMount prop, which may override things again.\n\t\tunsubs.push(onMount?.(editor))\n\n\t\treturn () => {\n\t\t\tunsubs.forEach((fn) => fn?.())\n\t\t}\n\t})\n\n\tconst { Canvas } = useEditorComponents()\n\tconst { ContextMenu } = useTldrawUiComponents()\n\n\tif (ContextMenu) {\n\t\t// should wrap canvas\n\t\treturn <ContextMenu />\n\t}\n\n\tif (Canvas) {\n\t\treturn <Canvas />\n\t}\n\n\treturn null\n}\n"],"names":[],"mappings":";;;AA0MK,SACC,KADD;AA1ML;;;;;;;;AAiBA,SAAS,eAAe;AACxB,SAAS,qBAAqB;AAC9B,SAAS,sBAAsB;AAC/B,SAAS,sBAAsB;AAC/B,SAAS,iCAAiC;AAC1C,SAAS,6BAA6B;AACtC,SAAS,2BAA2B;AAEpC;AAIA,SAAS,yBAAyB;AAClC,SAAS,yBAAyB;AAClC,SAAS,kCAAkC;AAC3C,SAAS,oBAAoB;AAC7B,SAAS,sBAAsB;AAC/B,SAAS,2BAA2B;AACpC,SAAS,gBAA+B;AACxC,SAAgC,0CAA0C;AAC1E,SAAS,qBAAqB;AAC9B,SAAS,eAAe;AACxB,SAAS,yBAAyB;AAClC,SAAyB,6BAA6B;AACtD,SAAS,mBAAmB;AAC5B,SAAS,iBAAiB;AAC1B;AAIA,SAAS,qCAAqC;AAC9C,SAAS,2CAA2C;AACpD,SAAS,yBAAyB,+BAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDjE,MAAM,kBAAkB,CAAC;OAAG,6KAAA,EAAc;OAAG,uLAAiB;CAAA;AAGvD,SAAS,OAAO,KAAA,EAAoB;IAC1C,MAAM,EACL,QAAA,EACA,iBAAA,EACA,YAAA,EACA,sBAAA,EACA,sBAAA,EACA,OAAA,EACA,aAAa,CAAC,CAAA,EACd,aAAa,CAAC,CAAA,EACd,eAAe,CAAC,CAAA,EAChB,QAAQ,CAAC,CAAA,EACT,MAAA,EACA,WAAA,EACA,GAAG,MACJ,GAAI;IAEJ,MAAM,oMAAc,2BAAA,EAAyB,UAAU;IAEvD,MAAM,iOAAwB,WAAA,EAC7B,IAAA,CAAO;YACN,oLAAU,iBAAA;YACV,kMAAiB,wBAAA;YACjB,gMAAsB,iBAAA;YACtB,qBAAqB,iNAAA;YACrB,kLAAS,gBAAA;YACT,oLAAU,iBAAA;kMACV,UAAA;8MACA,gBAAA;YACA,GAAG,WAAA;QACJ,CAAA,GACA;QAAC,WAAW;KAAA;IAGb,MAAM,oMAAc,0BAAA,EAAwB,UAAU;IACtD,MAAM,mOAAyB,UAAA,EAC9B,QAAM,kMAAA,EAA8B,QAAQ,gLAAa,oBAAiB,GAC1E;QAAC,WAAW;KAAA;IAGb,MAAM,sMAAgB,0BAAA,EAAwB,YAAY;IAC1D,MAAM,4BAA2B,mNAAA,EAChC,0KAAM,gCAAA,EAA8B,QAAQ,oLAAe,sBAAmB,GAC9E;QAAC,aAAa;KAAA;IAGf,MAAM,+LAAS,0BAAA,EAAwB,KAAK;IAC5C,MAAM,8NAAoB,UAAA,EACzB,0KAAM,gCAAA,EAA8B,MAAM,QAAQ,eAAe,GACjE;QAAC,MAAM;KAAA;IAGR,MAAM,wMAAkB,0BAAA,EACvB,qMAA0B,gCAAA;IAE3B,MAAM,sBAAkB,4MAAA,EACvB,qMAA0B,8BAAA;IAG3B,MAAM,oOAA0B,UAAA,EAAQ,MAAqB;QAC5D,OAAO;YACN,kBAAkB,qMAAA;YAClB,GAAG,WAAA;YACH,cAAc;gBACb,uLAAY,0BAAA;gBACZ,GAAG,aAAa,YAAA;YACjB;QACD;IACD,GAAG;QAAC,WAAW;KAAC;IAEhB,MAAM,2NAAiB,UAAA,EACtB,IAAM,CAAC;eAAG,iBAAiB;eAAG,eAAe;SAAA,EAC7C;QAAC;QAAiB,eAAe;KAAA;IAGlC,MAAM,aAAS,8NAAA,EAAoC,KAAK,SAAS;IAEjE,MAAM,iBAAiB,uBAAuB,IAAA,CAAK,CAAC,OAAS,KAAK,IAAA,KAAS,OAAO;IAClF,IAAI,kBAAkB,QAAQ;QAC7B,kLAAA,CAAA,iBAAA,CAAe,mBAAA,CAAoB,MAAM;IAC1C;IAEA,OAIC,CAAA,GAAA,uNAAA,CAAA,MAAA,AAAC,qBAAkB,WAAW,mCAAmC,KAAK,SAAS,GAC9E,6FAAC,qBAAA,EAAA;QAAA,WAAA,CAAA,GAAA,gKAAA,CAAA,qCAAA,EAAA,KAAA,SAAA;QAAA,UAAA,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EACA,gMAAA,CAAA,SAAW,qBAAA,EACX,MAAQ,IADiC,CAC5B,IADiC,EAC3B,OADoC,SACpB,IAAI,EAAE,UAAU,uBAAuB;YAE1E,WAAA,CAAA,GAAA,gKAAA,CAAA,gCAAA,EAAA,KAAA,SAAA;YAAC,QAAA,KAAA,IAAA,EAAA,gBAAA,MAAA,UAAA,wLAAA,CAAA,yBAAA,CAAA,MAAA;YAAA,UAAA,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EACA,yKAAA,CAAA,eAAa,EACZ,CAAG;gBACJ,QAAY,MAAA;gBACZ,GAAA,IAAA,CAAY;gBACZ,UAAc,EAAA;gBACd,GAAO,SAAA;gBACP,SAAa,KAAA;gBACb,OAAW;gBAEX,aAAA,cAAC,YAAU,GAAG,MAAM,YAAY,uBAAuB,gBACtD;gBAAA,WAAA;gBAAC,UAAA,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,OAAA,EAAA,+JAAA,CAAA,WAAA,EAAA;oBAAA,GAAA,IAAA;oBAAA,YAAA;oBAAA;oBAAA,UAAA;wBAAA,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EACA,4BACA;4BACA,oBAAwB;4BACxB,oBAAwB;4BACxB,wBAAA;4BAAA,wBAAA;4BACD;wBACC;wBACF;qBACD;gBAAA;YAAA;QAEF;IAEF;AAIC,EACA;AAAA,EACA,OAAA,2BAAA,EACA,iBAAA,EACA,YAAA,EACD,CAEG,qBAAA,EACF,MAAM,SAAS,OAAA,EACf,CADyB,KACnB,CAAA,EACN,MADe,CACT,MAAM,GADa,YACE;IAC3B,MAAM,SAAA,CAAA,GAAA,CAAa,8KAAb,CAAA,YAAa,OAAY;IAE/B,MAAA,KAAW,IAAA,CAAA,GAAA,wKAAA,CAAA,EAAM,UAAA;IAChB,MAAA,EAAM,IAAA,CAAA,GAAA,EAA8C,CAAC,6LAA/C,CAAA,iBAA+C;IAErD,MAAA,GAAO,KAAK,KAAA,CAAA,GAAA,wKAAA,CAAA,cAAA,WAA2B,MAAM,CAAC;IAM9C,CAAA,GAAA,yKAAA,CAAA,aAAO,EAAA,IAAM,aAAa,mBAAmB;QAE7C,MAAA,CAAO,KAAK,GAAA,EAAA,GAAQ,MAAM,WAAW,QAAQ,EAAE,QAAQ,UAAU,CAAC,CAAC;QAGnE,OAAA,IAAA,CAAA,CAAA,GAAA,mKAAA,CAAA,6BAAA,EAAuC,QAAQ;QAAA,EAC9C,KAAA,KAAA,CAAA,YAAA,CAAA,iLAAA,CAAA,sBAAA;QAAA,EACA,KAAA,IAAA,CAAA,QAAA,IAAA,WAAA,QAAA;gBAAA,QAAA;YAAA;QAAA,CAAA,EACA,CADA,+KAAA,CAAA,yCACA,EAAA,QAAA;YACA;YACA;YACA;YACA;YAGD,KAAO,KAAK,OAAO,MAAM,MAAM,QAAQ,MAAM,CAAC;YAG9C,KAAO,KAAK,UAAU,MAAM,CAAC;QAE7B,OAAO,MAAM;QACZ,OAAA,EAAO,EAAA,CAAA,KAAQ,CAAC,CAAA,KAAA,CAAO,KAAK,CAAC,OAAA,CAAA;QAC9B,OAAA,IAAA,CAAA,UAAA;QACA,OAAA;YAED,EAAM,EAAE,GAAA,IAAO,GAAA,CAAI,CAAA,KAAA,YAAoB;QACvC,IAAM,EAAE,YAAY,IAAI,sBAAsB;IAE9C,IAAI,aAAa;IAEhB,MAAA,EAAA,CAAO,KAAA,EAAA,GAAA,CAAA,GAAA,yLAAA,CAAA,UAAC,YAAA,MAAY;IACrB,MAAA,EAAA,WAAA,EAAA,GAAA,CAAA,GAAA,4KAAA,CAAA,wBAAA;IAEA,IAAI,QAAQ,KAAA;QACX,OAAO,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,UAAO,GAAA,CAAA;IAChB;IAEA,IAAA,GAAO,KAAA;QACR,OAAA,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAA,QAAA,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2975, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/tldraw/src/lib/TldrawImage.tsx"],"sourcesContent":["import {\n\tEditor,\n\tTLAnyBindingUtilConstructor,\n\tTLAnyShapeUtilConstructor,\n\tTLEditorSnapshot,\n\tTLImageExportOptions,\n\tTLPageId,\n\tTLStoreSnapshot,\n\tTLTextOptions,\n\tmergeArraysAndReplaceDefaults,\n\tuseShallowArrayIdentity,\n\tuseTLStore,\n} from '@tldraw/editor'\nimport { memo, useEffect, useLayoutEffect, useMemo, useState } from 'react'\nimport { defaultBindingUtils } from './defaultBindingUtils'\nimport { defaultShapeUtils } from './defaultShapeUtils'\nimport { TLUiAssetUrlOverrides } from './ui/assetUrls'\nimport { useDefaultEditorAssetsWithOverrides } from './utils/static-assets/assetUrls'\nimport { defaultAddFontsFromNode, tipTapDefaultExtensions } from './utils/text/richText'\n\n/** @public */\nexport interface TldrawImageProps extends TLImageExportOptions {\n\t/**\n\t * The snapshot to display.\n\t */\n\tsnapshot: Partial<TLEditorSnapshot> | TLStoreSnapshot\n\n\t/**\n\t * The image format to use. Defaults to 'svg'.\n\t */\n\tformat?: 'svg' | 'png'\n\n\t/**\n\t * The page to display. Defaults to the first page.\n\t */\n\tpageId?: TLPageId\n\n\t/**\n\t * Additional shape utils to use.\n\t */\n\tshapeUtils?: readonly TLAnyShapeUtilConstructor[]\n\t/**\n\t * Additional binding utils to use.\n\t */\n\tbindingUtils?: readonly TLAnyBindingUtilConstructor[]\n\t/**\n\t * The license key.\n\t */\n\tlicenseKey?: string\n\t/**\n\t * Asset URL overrides.\n\t */\n\tassetUrls?: TLUiAssetUrlOverrides\n\t/**\n\t * Text options for the editor.\n\t */\n\ttextOptions?: TLTextOptions\n}\n\nconst defaultTextOptions = {\n\ttipTapConfig: {\n\t\textensions: tipTapDefaultExtensions,\n\t},\n\taddFontsFromNode: defaultAddFontsFromNode,\n}\n\n/**\n * A rendered SVG image of a Tldraw snapshot.\n *\n * @example\n * ```tsx\n * <TldrawImage\n * \tsnapshot={snapshot}\n * \tpageId={pageId}\n * \tbackground={false}\n *  darkMode={true}\n *  bounds={new Box(0,0,600,400)}\n *  scale={1}\n * />\n * ```\n *\n * @public\n * @react\n */\nexport const TldrawImage = memo(function TldrawImage(props: TldrawImageProps) {\n\tconst [url, setUrl] = useState<string | null>(null)\n\tconst [container, setContainer] = useState<HTMLDivElement | null>(null)\n\n\tconst _shapeUtils = useShallowArrayIdentity(props.shapeUtils ?? [])\n\tconst shapeUtilsWithDefaults = useMemo(\n\t\t() => mergeArraysAndReplaceDefaults('type', _shapeUtils, defaultShapeUtils),\n\t\t[_shapeUtils]\n\t)\n\tconst _bindingUtils = useShallowArrayIdentity(props.bindingUtils ?? [])\n\tconst bindingUtilsWithDefaults = useMemo(\n\t\t() => mergeArraysAndReplaceDefaults('type', _bindingUtils, defaultBindingUtils),\n\t\t[_bindingUtils]\n\t)\n\tconst store = useTLStore({ snapshot: props.snapshot, shapeUtils: shapeUtilsWithDefaults })\n\n\tconst {\n\t\tpageId,\n\t\tbounds,\n\t\tscale,\n\t\tpixelRatio,\n\t\tbackground,\n\t\tpadding,\n\t\tdarkMode,\n\t\tpreserveAspectRatio,\n\t\tformat = 'svg',\n\t\tlicenseKey,\n\t\tassetUrls,\n\t\ttextOptions = defaultTextOptions,\n\t} = props\n\tconst assetUrlsWithOverrides = useDefaultEditorAssetsWithOverrides(assetUrls)\n\n\tuseLayoutEffect(() => {\n\t\tif (!container) return\n\t\tif (!store) return\n\n\t\tlet isCancelled = false\n\n\t\tconst tempElm = document.createElement('div')\n\t\tcontainer.appendChild(tempElm)\n\t\tcontainer.classList.add('tl-container', 'tl-theme__light')\n\n\t\tconst editor = new Editor({\n\t\t\tstore,\n\t\t\tshapeUtils: shapeUtilsWithDefaults,\n\t\t\tbindingUtils: bindingUtilsWithDefaults,\n\t\t\ttools: [],\n\t\t\tgetContainer: () => tempElm,\n\t\t\tlicenseKey,\n\t\t\tfontAssetUrls: assetUrlsWithOverrides.fonts,\n\t\t\ttextOptions,\n\t\t})\n\n\t\tif (pageId) editor.setCurrentPage(pageId)\n\n\t\tconst shapeIds = editor.getCurrentPageShapeIds()\n\n\t\tasync function setSvg() {\n\t\t\t// We have to wait for the fonts to load so that we can correctly measure text sizes\n\t\t\tawait editor.fonts.loadRequiredFontsForCurrentPage(editor.options.maxFontsToLoadBeforeRender)\n\t\t\tconst imageResult = await editor.toImage([...shapeIds], {\n\t\t\t\tbounds,\n\t\t\t\tscale,\n\t\t\t\tbackground,\n\t\t\t\tpadding,\n\t\t\t\tdarkMode,\n\t\t\t\tpreserveAspectRatio,\n\t\t\t\tformat,\n\t\t\t})\n\t\t\tif (!imageResult || isCancelled) return\n\n\t\t\tconst url = URL.createObjectURL(imageResult.blob)\n\t\t\tsetUrl(url)\n\n\t\t\teditor.dispose()\n\t\t}\n\n\t\tsetSvg()\n\n\t\treturn () => {\n\t\t\tisCancelled = true\n\t\t}\n\t}, [\n\t\tformat,\n\t\tcontainer,\n\t\tstore,\n\t\tshapeUtilsWithDefaults,\n\t\tbindingUtilsWithDefaults,\n\t\tpageId,\n\t\tbounds,\n\t\tscale,\n\t\tbackground,\n\t\tpadding,\n\t\tdarkMode,\n\t\tpreserveAspectRatio,\n\t\tlicenseKey,\n\t\tpixelRatio,\n\t\tassetUrlsWithOverrides,\n\t\ttextOptions,\n\t])\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tif (url) URL.revokeObjectURL(url)\n\t\t}\n\t}, [url])\n\n\treturn (\n\t\t<div ref={setContainer} style={{ position: 'relative', width: '100%', height: '100%' }}>\n\t\t\t{url && (\n\t\t\t\t<img\n\t\t\t\t\tsrc={url}\n\t\t\t\t\treferrerPolicy=\"strict-origin-when-cross-origin\"\n\t\t\t\t\tstyle={{ width: '100%', height: '100%' }}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t)\n})\n"],"names":["TldrawImage","url"],"mappings":"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","ignoreList":[0],"debugId":null}}]
}