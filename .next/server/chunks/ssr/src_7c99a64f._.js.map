{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/toaster.tsx <module evaluation>\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,+DACA","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/toaster.tsx\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2CACA","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/theme-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/theme-provider.tsx <module evaluation>\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,mEACA","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/theme-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/theme-provider.tsx\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,+CACA","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/get-dictionary.ts"],"sourcesContent":["\nimport 'server-only'\nimport type { Locale } from '@/i18n-config'\n\nconst dictionaries = {\n  en: () => import('@/dictionaries/en.json').then((module) => module.default),\n  ar: () => import('@/dictionaries/ar.json').then((module) => module.default),\n}\n\nexport const getDictionary = async (locale: Locale) => dictionaries[locale]()\n"],"names":[],"mappings":";;;AACA;;AAGA,MAAM,eAAe;IACnB,IAAI,IAAM,4GAAiC,IAAI,CAAC,CAAC,SAAW,OAAO,OAAO;IAC1E,IAAI,IAAM,4GAAiC,IAAI,CAAC,CAAC,SAAW,OAAO,OAAO;AAC5E;AAEO,MAAM,gBAAgB,OAAO,SAAmB,YAAY,CAAC,OAAO","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%5Blang%5D/layout.tsx"],"sourcesContent":["\nimport type {Metadata} from 'next';\nimport '../globals.css';\nimport { Toaster } from \"@/components/ui/toaster\"\nimport { ThemeProvider } from '@/components/theme-provider';\nimport { getDictionary } from '@/lib/get-dictionary';\nimport type { Locale } from '@/i18n-config';\nimport * as React from 'react';\n\nexport const metadata: Metadata = {\n  title: 'QuizWise',\n  description: 'Save your mistakes, ace your exams.',\n};\n\nexport async function generateStaticParams() {\n  return [{ lang: 'en' }, { lang: 'ar' }]\n}\n\nexport default async function RootLayout(props: {\n  children: React.ReactNode;\n  params: { lang: Locale };\n}) {\n  const { children, params: { lang } } = props;\n  const dictionary = await getDictionary(lang);\n  \n  // Pass dictionary to children\n  const childrenWithProps = React.Children.map(children, child => {\n    if (React.isValidElement(child)) {\n      // @ts-ignore\n      return React.cloneElement(child, { dictionary });\n    }\n    return child;\n  });\n\n  return (\n    <html lang={lang} dir={lang === 'ar' ? 'rtl' : 'ltr'} suppressHydrationWarning>\n      <head>\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"anonymous\" />\n        <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;500;700&display=swap\" rel=\"stylesheet\" />\n        <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\" rel=\"stylesheet\" />\n        <link href=\"https://fonts.googleapis.com/css2?family=Cairo:wght@400;500;600;700&display=swap\" rel=\"stylesheet\" />\n      </head>\n      <body className=\"font-body antialiased\">\n        <ThemeProvider\n          attribute=\"class\"\n          defaultTheme=\"system\"\n          enableSystem\n          disableTransitionOnChange\n        >\n          {childrenWithProps}\n          <Toaster />\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAGA;AACA;AACA;AAEA;;;;;;;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEO,eAAe;IACpB,OAAO;QAAC;YAAE,MAAM;QAAK;QAAG;YAAE,MAAM;QAAK;KAAE;AACzC;AAEe,eAAe,WAAW,KAGxC;IACC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,GAAG;IACvC,MAAM,aAAa,MAAM,CAAA,GAAA,+HAAA,CAAA,gBAAa,AAAD,EAAE;IAEvC,8BAA8B;IAC9B,MAAM,oBAAoB,qMAAA,CAAA,WAAc,CAAC,GAAG,CAAC,UAAU,CAAA;QACrD,kBAAI,CAAA,GAAA,qMAAA,CAAA,iBAAoB,AAAD,EAAE,QAAQ;YAC/B,aAAa;YACb,qBAAO,CAAA,GAAA,qMAAA,CAAA,eAAkB,AAAD,EAAE,OAAO;gBAAE;YAAW;QAChD;QACA,OAAO;IACT;IAEA,qBACE,8OAAC;QAAK,MAAM;QAAM,KAAK,SAAS,OAAO,QAAQ;QAAO,wBAAwB;;0BAC5E,8OAAC;;kCACC,8OAAC;wBAAK,KAAI;wBAAa,MAAK;;;;;;kCAC5B,8OAAC;wBAAK,KAAI;wBAAa,MAAK;wBAA4B,aAAY;;;;;;kCACpE,8OAAC;wBAAK,MAAK;wBAAuF,KAAI;;;;;;kCACtG,8OAAC;wBAAK,MAAK;wBAAmF,KAAI;;;;;;kCAClG,8OAAC;wBAAK,MAAK;wBAAmF,KAAI;;;;;;;;;;;;0BAEpG,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,uIAAA,CAAA,gBAAa;oBACZ,WAAU;oBACV,cAAa;oBACb,YAAY;oBACZ,yBAAyB;;wBAExB;sCACD,8OAAC,mIAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;;;;;;AAKlB","debugId":null}}]
}