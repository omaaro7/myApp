{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useTransform.ts"],"sourcesContent":["import { useLayoutEffect } from 'react'\nimport { VecLike } from '../primitives/Vec'\n\n/** @public */\nexport function useTransform(\n\tref: React.RefObject<HTMLElement | SVGElement>,\n\tx?: number,\n\ty?: number,\n\tscale?: number,\n\trotate?: number,\n\tadditionalOffset?: VecLike\n) {\n\tuseLayoutEffect(() => {\n\t\tconst elm = ref.current\n\t\tif (!elm) return\n\t\tif (x === undefined) return\n\n\t\tlet trans = `translate(${x}px, ${y}px)`\n\t\tif (scale !== undefined) {\n\t\t\ttrans += ` scale(${scale})`\n\t\t}\n\t\tif (rotate !== undefined) {\n\t\t\ttrans += ` rotate(${rotate}rad)`\n\t\t}\n\t\tif (additionalOffset) {\n\t\t\ttrans += ` translate(${additionalOffset.x}px, ${additionalOffset.y}px)`\n\t\t}\n\t\telm.style.transform = trans\n\t})\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,uBAAuB;;AAIzB,SAAS,aACf,GAAA,EACA,CAAA,EACA,CAAA,EACA,KAAA,EACA,MAAA,EACA,gBAAA,EACC;IACD,CAAA,GAAA,qMAAA,CAAA,kBAAA,EAAgB,MAAM;QACrB,MAAM,MAAM,IAAI,OAAA;QAChB,IAAI,CAAC,IAAK,CAAA;QACV,IAAI,MAAM,KAAA,EAAW,CAAA;QAErB,IAAI,QAAQ,CAAA,UAAA,EAAa,CAAC,CAAA,IAAA,EAAO,CAAC,CAAA,GAAA,CAAA;QAClC,IAAI,UAAU,KAAA,GAAW;YACxB,SAAS,CAAA,OAAA,EAAU,KAAK,CAAA,CAAA,CAAA;QACzB;QACA,IAAI,WAAW,KAAA,GAAW;YACzB,SAAS,CAAA,QAAA,EAAW,MAAM,CAAA,IAAA,CAAA;QAC3B;QACA,IAAI,kBAAkB;YACrB,SAAS,CAAA,WAAA,EAAc,iBAAiB,CAAC,CAAA,IAAA,EAAO,iBAAiB,CAAC,CAAA,GAAA,CAAA;QACnE;QACA,IAAI,KAAA,CAAM,SAAA,GAAY;IACvB,CAAC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useSafeId.tsx"],"sourcesContent":["import { assertExists } from '@tldraw/utils'\nimport { createContext, useContext, useId } from 'react'\n\n/**\n * The DOM requires that all IDs are unique. We often use e.g. shape IDs in the dom, but this isn't\n * safe: if tldraw is rendered twice, or an SVG export is taking place, the IDs will clash and the\n * browser will do weird things. This type is used to mark IDs that are unique and safe to use.\n *\n * Use {@link useUniqueSafeId} to generate a unique safe ID. Use {@link useSharedSafeId} to generate\n * the same ID across multiple components, but unique within a single tldraw/editor instance.\n *\n * @public\n */\nexport type SafeId = string & { __brand: 'SafeId' }\n\ndeclare module 'react' {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tinterface HTMLProps<T> {\n\t\tid?: SafeId\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tinterface SVGProps<T> {\n\t\tid?: SafeId\n\t}\n}\n\n/** @public */\nexport function suffixSafeId(id: SafeId, suffix: string): SafeId {\n\treturn sanitizeId(`${id}_${suffix}`) as SafeId\n}\n\n/**\n * React's useId hook returns a unique id for the component. However, it uses a colon in the id,\n * which is not valid for CSS selectors. This hook replaces the colon with an underscore.\n *\n * @public\n */\nexport function useUniqueSafeId(suffix?: string): SafeId {\n\treturn sanitizeId(`${useId()}${suffix ?? ''}`) as SafeId\n}\n\n/**\n * React's useId hook returns a unique id for the component. However, it uses a colon in the id,\n * which is not valid for CSS selectors. This hook replaces the colon with an underscore.\n *\n * @public\n */\nexport function useSharedSafeId(id: string): SafeId {\n\tconst idScope = assertExists(useContext(IdContext))\n\treturn sanitizeId(`${idScope}_${id}`) as SafeId\n}\n\n/** @public */\nexport function sanitizeId(id: string): string {\n\treturn id.replace(/:/g, '_')\n}\n\nconst IdContext = createContext<SafeId | null>(null)\nexport function IdProvider({ children }: { children: React.ReactNode }) {\n\tconst id = useUniqueSafeId()\n\treturn <IdContext.Provider value={id}>{children}</IdContext.Provider>\n}\n"],"names":[],"mappings":";;;;;;;AA4DQ;AA5DR,SAAS,oBAAoB;;AAC7B,SAAS,eAAe,YAAY,aAAa;;;;AA0B1C,SAAS,aAAa,EAAA,EAAY,MAAA,EAAwB;IAChE,OAAO,WAAW,GAAG,EAAE,CAAA,CAAA,EAAI,MAAM,EAAE;AACpC;AAQO,SAAS,gBAAgB,MAAA,EAAyB;IACxD,OAAO,WAAW,IAAG,iNAAA,CAAM,CAAC,IAAG,UAAU,EAAE,EAAE;AAC9C;AAQO,SAAS,gBAAgB,EAAA,EAAoB;IACnD,MAAM,UAAU,uLAAA,4MAAa,aAAA,EAAW,SAAS,CAAC;IAClD,OAAO,WAAW,GAAG,OAAO,CAAA,CAAA,EAAI,EAAE,EAAE;AACrC;AAGO,SAAS,WAAW,EAAA,EAAoB;IAC9C,OAAO,GAAG,OAAA,CAAQ,MAAM,GAAG;AAC5B;AAEA,MAAM,sNAAY,gBAAA,EAA6B,IAAI;AAC5C,SAAS,WAAW,EAAE,QAAA,CAAS,CAAA,EAAkC;IACvE,MAAM,KAAK,gBAAgB;IAC3B,OAAO,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,UAAU,QAAA,EAAV;QAAmB,OAAO;QAAK;IAAA,CAAS;AACjD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useEditor.tsx"],"sourcesContent":["import React, { createContext } from 'react'\nimport { Editor } from '../editor/Editor'\nimport { IdProvider } from './useSafeId'\n\n/** @public */\nexport const EditorContext = createContext<Editor | null>(null)\n\n/** @public */\nexport function useEditor(): Editor {\n\tconst editor = React.useContext(EditorContext)\n\tif (!editor) {\n\t\tthrow new Error(\n\t\t\t'useEditor must be used inside of the <Tldraw /> or <TldrawEditor /> components'\n\t\t)\n\t}\n\treturn editor\n}\n\n/** @public */\nexport function useMaybeEditor(): Editor | null {\n\treturn React.useContext(EditorContext)\n}\n\n/** @public */\nexport interface EditorProviderProps {\n\teditor: Editor\n\tchildren: React.ReactNode\n}\n\n/** @public @react */\nexport function EditorProvider({ editor, children }: EditorProviderProps) {\n\treturn (\n\t\t<EditorContext.Provider value={editor}>\n\t\t\t<IdProvider>{children}</IdProvider>\n\t\t</EditorContext.Provider>\n\t)\n}\n"],"names":[],"mappings":";;;;;;AAiCG;AAjCH,OAAO,SAAS,qBAAqB;AAErC,SAAS,kBAAkB;;;;AAGpB,MAAM,0NAAgB,gBAAA,EAA6B,IAAI;AAGvD,SAAS,YAAoB;IACnC,MAAM,+MAAS,UAAA,CAAM,UAAA,CAAW,aAAa;IAC7C,IAAI,CAAC,QAAQ;QACZ,MAAM,IAAI,MACT;IAEF;IACA,OAAO;AACR;AAGO,SAAS,iBAAgC;IAC/C,6MAAO,UAAA,CAAM,UAAA,CAAW,aAAa;AACtC;AASO,SAAS,eAAe,EAAE,MAAA,EAAQ,QAAA,CAAS,CAAA,EAAwB;IACzE,OACC,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,cAAc,QAAA,EAAd;QAAuB,OAAO;QAC9B,UAAA,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,kLAAC,aAAA,EAAA;YAAY;QAAA,CAAS;IAAA,CACvB;AAEF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useCanvasEvents.ts"],"sourcesContent":["import { useValue } from '@tldraw/state-react'\nimport React, { useMemo } from 'react'\nimport { RIGHT_MOUSE_BUTTON } from '../constants'\nimport {\n\tpreventDefault,\n\treleasePointerCapture,\n\tsetPointerCapture,\n\tstopEventPropagation,\n} from '../utils/dom'\nimport { getPointerInfo } from '../utils/getPointerInfo'\nimport { useEditor } from './useEditor'\n\nexport function useCanvasEvents() {\n\tconst editor = useEditor()\n\tconst currentTool = useValue('current tool', () => editor.getCurrentTool(), [editor])\n\n\tconst events = useMemo(\n\t\tfunction canvasEvents() {\n\t\t\t// Track the last screen point\n\t\t\tlet lastX: number, lastY: number\n\n\t\t\tfunction onPointerDown(e: React.PointerEvent) {\n\t\t\t\tif ((e as any).isKilled) return\n\n\t\t\t\tif (e.button === RIGHT_MOUSE_BUTTON) {\n\t\t\t\t\teditor.dispatch({\n\t\t\t\t\t\ttype: 'pointer',\n\t\t\t\t\t\ttarget: 'canvas',\n\t\t\t\t\t\tname: 'right_click',\n\t\t\t\t\t\t...getPointerInfo(e),\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (e.button !== 0 && e.button !== 1 && e.button !== 5) return\n\n\t\t\t\tsetPointerCapture(e.currentTarget, e)\n\n\t\t\t\teditor.dispatch({\n\t\t\t\t\ttype: 'pointer',\n\t\t\t\t\ttarget: 'canvas',\n\t\t\t\t\tname: 'pointer_down',\n\t\t\t\t\t...getPointerInfo(e),\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction onPointerMove(e: React.PointerEvent) {\n\t\t\t\tif ((e as any).isKilled) return\n\n\t\t\t\tif (e.clientX === lastX && e.clientY === lastY) return\n\t\t\t\tlastX = e.clientX\n\t\t\t\tlastY = e.clientY\n\n\t\t\t\t// For tools that benefit from a higher fidelity of events,\n\t\t\t\t// we dispatch the coalesced events.\n\t\t\t\t// N.B. Sometimes getCoalescedEvents isn't present on iOS, ugh.\n\t\t\t\tconst events =\n\t\t\t\t\tcurrentTool.useCoalescedEvents && e.nativeEvent.getCoalescedEvents\n\t\t\t\t\t\t? e.nativeEvent.getCoalescedEvents()\n\t\t\t\t\t\t: [e]\n\t\t\t\tfor (const singleEvent of events) {\n\t\t\t\t\teditor.dispatch({\n\t\t\t\t\t\ttype: 'pointer',\n\t\t\t\t\t\ttarget: 'canvas',\n\t\t\t\t\t\tname: 'pointer_move',\n\t\t\t\t\t\t...getPointerInfo(singleEvent),\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onPointerUp(e: React.PointerEvent) {\n\t\t\t\tif ((e as any).isKilled) return\n\t\t\t\tif (e.button !== 0 && e.button !== 1 && e.button !== 2 && e.button !== 5) return\n\t\t\t\tlastX = e.clientX\n\t\t\t\tlastY = e.clientY\n\n\t\t\t\treleasePointerCapture(e.currentTarget, e)\n\n\t\t\t\teditor.dispatch({\n\t\t\t\t\ttype: 'pointer',\n\t\t\t\t\ttarget: 'canvas',\n\t\t\t\t\tname: 'pointer_up',\n\t\t\t\t\t...getPointerInfo(e),\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tfunction onPointerEnter(e: React.PointerEvent) {\n\t\t\t\tif ((e as any).isKilled) return\n\t\t\t\tif (editor.getInstanceState().isPenMode && e.pointerType !== 'pen') return\n\t\t\t\tconst canHover = e.pointerType === 'mouse' || e.pointerType === 'pen'\n\t\t\t\teditor.updateInstanceState({ isHoveringCanvas: canHover ? true : null })\n\t\t\t}\n\n\t\t\tfunction onPointerLeave(e: React.PointerEvent) {\n\t\t\t\tif ((e as any).isKilled) return\n\t\t\t\tif (editor.getInstanceState().isPenMode && e.pointerType !== 'pen') return\n\t\t\t\tconst canHover = e.pointerType === 'mouse' || e.pointerType === 'pen'\n\t\t\t\teditor.updateInstanceState({ isHoveringCanvas: canHover ? false : null })\n\t\t\t}\n\n\t\t\tfunction onTouchStart(e: React.TouchEvent) {\n\t\t\t\t;(e as any).isKilled = true\n\t\t\t\tpreventDefault(e)\n\t\t\t}\n\n\t\t\tfunction onTouchEnd(e: React.TouchEvent) {\n\t\t\t\t;(e as any).isKilled = true\n\t\t\t\t// check that e.target is an HTMLElement\n\t\t\t\tif (!(e.target instanceof HTMLElement)) return\n\n\t\t\t\tif (\n\t\t\t\t\te.target.tagName !== 'A' &&\n\t\t\t\t\te.target.tagName !== 'TEXTAREA' &&\n\t\t\t\t\t!e.target.isContentEditable &&\n\t\t\t\t\t// When in EditingShape state, we are actually clicking on a 'DIV'\n\t\t\t\t\t// not A/TEXTAREA/contenteditable element yet. So, to preserve cursor position\n\t\t\t\t\t// for edit mode on mobile we need to not preventDefault.\n\t\t\t\t\t// TODO: Find out if we still need this preventDefault in general though.\n\t\t\t\t\t!(editor.getEditingShape() && e.target.className.includes('tl-text-content'))\n\t\t\t\t) {\n\t\t\t\t\tpreventDefault(e)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onDragOver(e: React.DragEvent<Element>) {\n\t\t\t\tpreventDefault(e)\n\t\t\t}\n\n\t\t\tasync function onDrop(e: React.DragEvent<Element>) {\n\t\t\t\tpreventDefault(e)\n\t\t\t\tstopEventPropagation(e)\n\n\t\t\t\tif (e.dataTransfer?.files?.length) {\n\t\t\t\t\tconst files = Array.from(e.dataTransfer.files)\n\n\t\t\t\t\tawait editor.putExternalContent({\n\t\t\t\t\t\ttype: 'files',\n\t\t\t\t\t\tfiles,\n\t\t\t\t\t\tpoint: editor.screenToPage({ x: e.clientX, y: e.clientY }),\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst url = e.dataTransfer.getData('url')\n\t\t\t\tif (url) {\n\t\t\t\t\tawait editor.putExternalContent({\n\t\t\t\t\t\ttype: 'url',\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tpoint: editor.screenToPage({ x: e.clientX, y: e.clientY }),\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onClick(e: React.MouseEvent) {\n\t\t\t\tstopEventPropagation(e)\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tonPointerDown,\n\t\t\t\tonPointerMove,\n\t\t\t\tonPointerUp,\n\t\t\t\tonPointerEnter,\n\t\t\t\tonPointerLeave,\n\t\t\t\tonDragOver,\n\t\t\t\tonDrop,\n\t\t\t\tonTouchStart,\n\t\t\t\tonTouchEnd,\n\t\t\t\tonClick,\n\t\t\t}\n\t\t},\n\t\t[editor, currentTool]\n\t)\n\n\treturn events\n}\n"],"names":["events"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useCoarsePointer.ts"],"sourcesContent":["import { useEffect } from 'react'\nimport { tlenv } from '../globals/environment'\nimport { useEditor } from './useEditor'\n\n/** @internal */\nexport function useCoarsePointer() {\n\tconst editor = useEditor()\n\n\tuseEffect(() => {\n\t\t// We'll track our own state for the pointer type\n\t\tlet isCoarse = editor.getInstanceState().isCoarsePointer\n\n\t\t// 1.\n\t\t// We'll use pointer events to detect coarse pointer.\n\n\t\tconst handlePointerDown = (e: PointerEvent) => {\n\t\t\t// when the user interacts with a mouse, we assume they have a fine pointer.\n\t\t\t// otherwise, we assume they have a coarse pointer.\n\t\t\tconst isCoarseEvent = e.pointerType !== 'mouse'\n\t\t\tif (isCoarse === isCoarseEvent) return\n\t\t\tisCoarse = isCoarseEvent\n\t\t\teditor.updateInstanceState({ isCoarsePointer: isCoarseEvent })\n\t\t}\n\n\t\t// we need `capture: true` here because the tldraw component itself stops propagation on\n\t\t// pointer events it receives.\n\t\twindow.addEventListener('pointerdown', handlePointerDown, { capture: true })\n\n\t\t// 2.\n\t\t// We can also use the media query to detect / set the initial pointer type\n\t\t// and update the state if the pointer type changes.\n\n\t\t// We want the touch / mouse events to run even if the browser does not\n\t\t// support matchMedia. We'll have to handle the media query changes\n\t\t// conditionally in the code below.\n\t\tconst mql = window.matchMedia && window.matchMedia('(any-pointer: coarse)')\n\n\t\t// This is a workaround for a Firefox bug where we don't correctly\n\t\t// detect coarse VS fine pointer. For now, let's assume that you have a fine\n\t\t// pointer if you're on Firefox on desktop.\n\t\tconst isForcedFinePointer = tlenv.isFirefox && !tlenv.isAndroid && !tlenv.isIos\n\n\t\tconst handleMediaQueryChange = () => {\n\t\t\tconst next = isForcedFinePointer ? false : mql.matches // get the value from the media query\n\t\t\tif (isCoarse !== next) return // bail if the value hasn't changed\n\t\t\tisCoarse = next // update the local value\n\t\t\teditor.updateInstanceState({ isCoarsePointer: next }) // update the value in state\n\t\t}\n\n\t\tif (mql) {\n\t\t\t// set up the listener\n\t\t\tmql.addEventListener('change', handleMediaQueryChange)\n\n\t\t\t// and run the handler once to set the initial value\n\t\t\thandleMediaQueryChange()\n\t\t}\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('pointerdown', handlePointerDown, { capture: true })\n\n\t\t\tif (mql) {\n\t\t\t\tmql.removeEventListener('change', handleMediaQueryChange)\n\t\t\t}\n\t\t}\n\t}, [editor])\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,iBAAiB;AAC1B,SAAS,aAAa;AACtB,SAAS,iBAAiB;;;;AAGnB,SAAS,mBAAmB;IAClC,MAAM,6LAAS,YAAA,CAAU;IAEzB,CAAA,GAAA,qMAAA,CAAA,YAAA,EAAU,MAAM;QAEf,IAAI,WAAW,OAAO,gBAAA,CAAiB,EAAE,eAAA;QAKzC,MAAM,oBAAoB,CAAC,MAAoB;YAG9C,MAAM,gBAAgB,EAAE,WAAA,KAAgB;YACxC,IAAI,aAAa,cAAe,CAAA;YAChC,WAAW;YACX,OAAO,mBAAA,CAAoB;gBAAE,iBAAiB;YAAc,CAAC;QAC9D;QAIA,OAAO,gBAAA,CAAiB,eAAe,mBAAmB;YAAE,SAAS;QAAK,CAAC;QAS3E,MAAM,MAAM,OAAO,UAAA,IAAc,OAAO,UAAA,CAAW,uBAAuB;QAK1E,MAAM,0MAAsB,QAAA,CAAM,SAAA,IAAa,qLAAC,QAAA,CAAM,SAAA,IAAa,qLAAC,QAAA,CAAM,KAAA;QAE1E,MAAM,yBAAyB,MAAM;YACpC,MAAM,OAAO,sBAAsB,QAAQ,IAAI,OAAA;YAC/C,IAAI,aAAa,KAAM,CAAA;YACvB,WAAW;YACX,OAAO,mBAAA,CAAoB;gBAAE,iBAAiB;YAAK,CAAC;QACrD;QAEA,IAAI,KAAK;YAER,IAAI,gBAAA,CAAiB,UAAU,sBAAsB;YAGrD,uBAAuB;QACxB;QAEA,OAAO,MAAM;YACZ,OAAO,mBAAA,CAAoB,eAAe,mBAAmB;gBAAE,SAAS;YAAK,CAAC;YAE9E,IAAI,KAAK;gBACR,IAAI,mBAAA,CAAoB,UAAU,sBAAsB;YACzD;QACD;IACD,GAAG;QAAC,MAAM;KAAC;AACZ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useContainer.tsx"],"sourcesContent":["import { assertExists } from '@tldraw/utils'\nimport { createContext, useContext } from 'react'\n\nconst ContainerContext = createContext<HTMLElement | null>(null)\n\n/** @public */\nexport interface ContainerProviderProps {\n\tcontainer: HTMLElement\n\tchildren: React.ReactNode\n}\n\n/**\n * @public\n * @react\n */\nexport function ContainerProvider({ container, children }: ContainerProviderProps) {\n\treturn <ContainerContext.Provider value={container}>{children}</ContainerContext.Provider>\n}\n\n/** @public */\nexport function useContainer(): HTMLElement {\n\treturn assertExists(useContext(ContainerContext), 'useContainer used outside of <Tldraw />')\n}\n\n/** @public */\nexport function useContainerIfExists(): HTMLElement | null {\n\treturn useContext(ContainerContext)\n}\n"],"names":[],"mappings":";;;;;AAgBQ;AAhBR,SAAS,oBAAoB;;AAC7B,SAAS,eAAe,kBAAkB;;;;AAE1C,MAAM,6NAAmB,gBAAA,EAAkC,IAAI;AAYxD,SAAS,kBAAkB,EAAE,SAAA,EAAW,QAAA,CAAS,CAAA,EAA2B;IAClF,OAAO,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,iBAAiB,QAAA,EAAjB;QAA0B,OAAO;QAAY;IAAA,CAAS;AAC/D;AAGO,SAAS,eAA4B;IAC3C,+KAAO,eAAA,4MAAa,aAAA,EAAW,gBAAgB,GAAG,yCAAyC;AAC5F;AAGO,SAAS,uBAA2C;IAC1D,iNAAO,aAAA,EAAW,gBAAgB;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useDocumentEvents.ts"],"sourcesContent":["import { useValue } from '@tldraw/state-react'\nimport { useEffect } from 'react'\nimport { Editor } from '../editor/Editor'\nimport { TLKeyboardEventInfo } from '../editor/types/event-types'\nimport { activeElementShouldCaptureKeys, preventDefault, stopEventPropagation } from '../utils/dom'\nimport { isAccelKey } from '../utils/keyboard'\nimport { useContainer } from './useContainer'\nimport { useEditor } from './useEditor'\n\nexport function useDocumentEvents() {\n\tconst editor = useEditor()\n\tconst container = useContainer()\n\n\tconst isEditing = useValue('isEditing', () => editor.getEditingShapeId(), [editor])\n\tconst isAppFocused = useValue('isFocused', () => editor.getIsFocused(), [editor])\n\n\t// Prevent the browser's default drag and drop behavior on our container (UI, etc)\n\tuseEffect(() => {\n\t\tif (!container) return\n\n\t\tfunction onDrop(e: DragEvent) {\n\t\t\t// this is tricky: we don't want the event to do anything\n\t\t\t// here, but we do want it to make its way to the canvas,\n\t\t\t// even if the drop is over some other element (like a toolbar),\n\t\t\t// so we're going to flag the event and then dispatch\n\t\t\t// it to the canvas; the canvas will handle it and try to\n\t\t\t// stop it from propagating back, but in case we do see it again,\n\t\t\t// we'll look for the flag so we know to stop it from being\n\t\t\t// re-dispatched, which would lead to an infinite loop.\n\t\t\tif ((e as any).isSpecialRedispatchedEvent) return\n\t\t\tpreventDefault(e)\n\t\t\tstopEventPropagation(e)\n\t\t\tconst cvs = container.querySelector('.tl-canvas')\n\t\t\tif (!cvs) return\n\t\t\tconst newEvent = new DragEvent(e.type, e)\n\t\t\t;(newEvent as any).isSpecialRedispatchedEvent = true\n\t\t\tcvs.dispatchEvent(newEvent)\n\t\t}\n\n\t\tcontainer.addEventListener('dragover', onDrop)\n\t\tcontainer.addEventListener('drop', onDrop)\n\t\treturn () => {\n\t\t\tcontainer.removeEventListener('dragover', onDrop)\n\t\t\tcontainer.removeEventListener('drop', onDrop)\n\t\t}\n\t}, [container])\n\n\tuseEffect(() => {\n\t\tif (typeof window === 'undefined' || !('matchMedia' in window)) return\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio#monitoring_screen_resolution_or_zoom_level_changes\n\t\tlet remove: (() => void) | null = null\n\t\tconst updatePixelRatio = () => {\n\t\t\tif (remove != null) {\n\t\t\t\tremove()\n\t\t\t}\n\t\t\tconst mqString = `(resolution: ${window.devicePixelRatio}dppx)`\n\t\t\tconst media = matchMedia(mqString)\n\t\t\t// Safari only started supporting `addEventListener('change',...) in version 14\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/change_event\n\t\t\tconst safariCb = (ev: any) => {\n\t\t\t\tif (ev.type === 'change') {\n\t\t\t\t\tupdatePixelRatio()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (media.addEventListener) {\n\t\t\t\tmedia.addEventListener('change', updatePixelRatio)\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-deprecated\n\t\t\t} else if (media.addListener) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-deprecated\n\t\t\t\tmedia.addListener(safariCb)\n\t\t\t}\n\t\t\tremove = () => {\n\t\t\t\tif (media.removeEventListener) {\n\t\t\t\t\tmedia.removeEventListener('change', updatePixelRatio)\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-deprecated\n\t\t\t\t} else if (media.removeListener) {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-deprecated\n\t\t\t\t\tmedia.removeListener(safariCb)\n\t\t\t\t}\n\t\t\t}\n\t\t\teditor.updateInstanceState({ devicePixelRatio: window.devicePixelRatio })\n\t\t}\n\t\tupdatePixelRatio()\n\t\treturn () => {\n\t\t\tremove?.()\n\t\t}\n\t}, [editor])\n\n\tuseEffect(() => {\n\t\tif (!isAppFocused) return\n\n\t\tconst handleKeyDown = (e: KeyboardEvent) => {\n\t\t\tif (\n\t\t\t\te.altKey &&\n\t\t\t\t// todo: When should we allow the alt key to be used? Perhaps states should declare which keys matter to them?\n\t\t\t\t(editor.isIn('zoom') || !editor.getPath().endsWith('.idle')) &&\n\t\t\t\t!areShortcutsDisabled(editor)\n\t\t\t) {\n\t\t\t\t// On windows the alt key opens the menu bar.\n\t\t\t\t// We want to prevent that if the user is doing something else,\n\t\t\t\t// e.g. resizing a shape\n\t\t\t\tpreventDefault(e)\n\t\t\t}\n\n\t\t\tif ((e as any).isKilled) return\n\t\t\t;(e as any).isKilled = true\n\t\t\tconst hasSelectedShapes = !!editor.getSelectedShapeIds().length\n\n\t\t\tswitch (e.key) {\n\t\t\t\tcase '=':\n\t\t\t\tcase '-':\n\t\t\t\tcase '0': {\n\t\t\t\t\t// These keys are used for zooming. Technically we only use\n\t\t\t\t\t// the + - and 0 keys, however it's common for them to be\n\t\t\t\t\t// paired with modifier keys (command / control) so we need\n\t\t\t\t\t// to prevent the browser's regular actions (i.e. zooming\n\t\t\t\t\t// the page). A user can zoom by unfocusing the editor.\n\t\t\t\t\tif (e.metaKey || e.ctrlKey) {\n\t\t\t\t\t\tpreventDefault(e)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase 'Tab': {\n\t\t\t\t\tif (areShortcutsDisabled(editor)) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\t// isEditing here sounds like it's about text editing\n\t\t\t\t\t// but more specifically, this is so you can tab into an\n\t\t\t\t\t// embed that's being 'edited'. In our world,\n\t\t\t\t\t// editing an embed, means it's interactive.\n\t\t\t\t\tif (hasSelectedShapes && !isEditing) {\n\t\t\t\t\t\t// This is used in tandem with shape navigation.\n\t\t\t\t\t\tpreventDefault(e)\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase 'ArrowLeft':\n\t\t\t\tcase 'ArrowRight':\n\t\t\t\tcase 'ArrowUp':\n\t\t\t\tcase 'ArrowDown': {\n\t\t\t\t\tif (areShortcutsDisabled(editor)) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (hasSelectedShapes && (e.metaKey || e.ctrlKey)) {\n\t\t\t\t\t\t// This is used in tandem with shape navigation.\n\t\t\t\t\t\tpreventDefault(e)\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase ',': {\n\t\t\t\t\t// this was moved to useKeyBoardShortcuts; it's possible\n\t\t\t\t\t// that the comma key is pressed when the container is not\n\t\t\t\t\t// focused, for example when the user has just interacted\n\t\t\t\t\t// with the toolbar. We need to handle it on the window\n\t\t\t\t\t// (ofc ensuring it's a correct time for a shortcut)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tcase 'Escape': {\n\t\t\t\t\t// In certain browsers, pressing escape while in full screen mode\n\t\t\t\t\t// will exit full screen mode. We want to allow that, but not when\n\t\t\t\t\t// escape is being handled by the editor. When a user has an editing\n\t\t\t\t\t// shape, escape stops editing. When a user is using a tool, escape\n\t\t\t\t\t// returns to the select tool. When the user has selected shapes,\n\t\t\t\t\t// escape de-selects them. Only when the user's selection is empty\n\t\t\t\t\t// should we allow escape to do its normal thing.\n\n\t\t\t\t\tif (editor.getEditingShape() || editor.getSelectedShapeIds().length > 0) {\n\t\t\t\t\t\tpreventDefault(e)\n\t\t\t\t\t}\n\n\t\t\t\t\t// Don't do anything if we open menus open\n\t\t\t\t\tif (editor.menus.getOpenMenus().length > 0) return\n\n\t\t\t\t\tif (editor.inputs.keys.has('Escape')) {\n\t\t\t\t\t\t// noop\n\t\t\t\t\t} else {\n\t\t\t\t\t\teditor.inputs.keys.add('Escape')\n\n\t\t\t\t\t\teditor.cancel()\n\t\t\t\t\t\t// Pressing escape will focus the document.body,\n\t\t\t\t\t\t// which will cause the app to lose focus, which\n\t\t\t\t\t\t// will break additional shortcuts. We need to\n\t\t\t\t\t\t// refocus the container in order to keep these\n\t\t\t\t\t\t// shortcuts working.\n\t\t\t\t\t\tcontainer.focus()\n\t\t\t\t\t}\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\tif (areShortcutsDisabled(editor)) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst info: TLKeyboardEventInfo = {\n\t\t\t\ttype: 'keyboard',\n\t\t\t\tname: e.repeat ? 'key_repeat' : 'key_down',\n\t\t\t\tkey: e.key,\n\t\t\t\tcode: e.code,\n\t\t\t\tshiftKey: e.shiftKey,\n\t\t\t\taltKey: e.altKey,\n\t\t\t\tctrlKey: e.metaKey || e.ctrlKey,\n\t\t\t\tmetaKey: e.metaKey,\n\t\t\t\taccelKey: isAccelKey(e),\n\t\t\t}\n\n\t\t\teditor.dispatch(info)\n\t\t}\n\n\t\tconst handleKeyUp = (e: KeyboardEvent) => {\n\t\t\tif ((e as any).isKilled) return\n\t\t\t;(e as any).isKilled = true\n\n\t\t\tif (areShortcutsDisabled(editor)) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (e.key === ',') {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst info: TLKeyboardEventInfo = {\n\t\t\t\ttype: 'keyboard',\n\t\t\t\tname: 'key_up',\n\t\t\t\tkey: e.key,\n\t\t\t\tcode: e.code,\n\t\t\t\tshiftKey: e.shiftKey,\n\t\t\t\taltKey: e.altKey,\n\t\t\t\tctrlKey: e.metaKey || e.ctrlKey,\n\t\t\t\tmetaKey: e.metaKey,\n\t\t\t\taccelKey: isAccelKey(e),\n\t\t\t}\n\n\t\t\teditor.dispatch(info)\n\t\t}\n\n\t\tfunction handleTouchStart(e: TouchEvent) {\n\t\t\tif (container.contains(e.target as Node)) {\n\t\t\t\t// Center point of the touch area\n\t\t\t\tconst touchXPosition = e.touches[0].pageX\n\t\t\t\t// Size of the touch area\n\t\t\t\tconst touchXRadius = e.touches[0].radiusX || 0\n\n\t\t\t\t// We set a threshold (10px) on both sizes of the screen,\n\t\t\t\t// if the touch area overlaps with the screen edges\n\t\t\t\t// it's likely to trigger the navigation. We prevent the\n\t\t\t\t// touchstart event in that case.\n\t\t\t\t// todo: make this relative to the actual window, not the editor's screen bounds\n\t\t\t\tif (\n\t\t\t\t\ttouchXPosition - touchXRadius < 10 ||\n\t\t\t\t\ttouchXPosition + touchXRadius > editor.getViewportScreenBounds().width - 10\n\t\t\t\t) {\n\t\t\t\t\tif ((e.target as HTMLElement)?.tagName === 'BUTTON') {\n\t\t\t\t\t\t// Force a click before bailing\n\t\t\t\t\t\t;(e.target as HTMLButtonElement)?.click()\n\t\t\t\t\t}\n\n\t\t\t\t\tpreventDefault(e)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Prevent wheel events that occur inside of the container\n\t\tconst handleWheel = (e: WheelEvent) => {\n\t\t\t// Ctrl/Meta key indicates a pinch event (funny, eh?)\n\t\t\tif (container.contains(e.target as Node) && (e.ctrlKey || e.metaKey)) {\n\t\t\t\tpreventDefault(e)\n\t\t\t}\n\t\t}\n\n\t\tcontainer.addEventListener('touchstart', handleTouchStart, { passive: false })\n\n\t\tcontainer.addEventListener('wheel', handleWheel, { passive: false })\n\n\t\tdocument.addEventListener('gesturestart', preventDefault)\n\t\tdocument.addEventListener('gesturechange', preventDefault)\n\t\tdocument.addEventListener('gestureend', preventDefault)\n\n\t\tcontainer.addEventListener('keydown', handleKeyDown)\n\t\tcontainer.addEventListener('keyup', handleKeyUp)\n\n\t\treturn () => {\n\t\t\tcontainer.removeEventListener('touchstart', handleTouchStart)\n\n\t\t\tcontainer.removeEventListener('wheel', handleWheel)\n\n\t\t\tdocument.removeEventListener('gesturestart', preventDefault)\n\t\t\tdocument.removeEventListener('gesturechange', preventDefault)\n\t\t\tdocument.removeEventListener('gestureend', preventDefault)\n\n\t\t\tcontainer.removeEventListener('keydown', handleKeyDown)\n\t\t\tcontainer.removeEventListener('keyup', handleKeyUp)\n\t\t}\n\t}, [editor, container, isAppFocused, isEditing])\n}\n\nfunction areShortcutsDisabled(editor: Editor) {\n\treturn editor.menus.hasOpenMenus() || activeElementShouldCaptureKeys()\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 619, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useIdentity.tsx"],"sourcesContent":["import { areArraysShallowEqual, areObjectsShallowEqual } from '@tldraw/utils'\nimport { useRef } from 'react'\n\nfunction useIdentity<T>(value: T, isEqual: (a: T, b: T) => boolean): T {\n\tconst ref = useRef(value)\n\tif (isEqual(value, ref.current)) {\n\t\treturn ref.current\n\t}\n\tref.current = value\n\treturn value\n}\n\nconst areNullableArraysShallowEqual = (\n\ta: readonly any[] | null | undefined,\n\tb: readonly any[] | null | undefined\n) => {\n\ta ??= null\n\tb ??= null\n\tif (a === b) {\n\t\treturn true\n\t}\n\tif (!a || !b) {\n\t\treturn false\n\t}\n\treturn areArraysShallowEqual(a, b)\n}\n\n/** @internal */\nexport function useShallowArrayIdentity<T extends readonly any[] | null | undefined>(arr: T): T {\n\treturn useIdentity(arr, areNullableArraysShallowEqual)\n}\n\nconst areNullableObjectsShallowEqual = (\n\ta: object | null | undefined,\n\tb: object | null | undefined\n) => {\n\ta ??= null\n\tb ??= null\n\tif (a === b) {\n\t\treturn true\n\t}\n\tif (!a || !b) {\n\t\treturn false\n\t}\n\treturn areObjectsShallowEqual(a, b)\n}\n\n/** @internal */\nexport function useShallowObjectIdentity<T extends object | null | undefined>(obj: T): T {\n\treturn useIdentity(obj, areNullableObjectsShallowEqual)\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,uBAAuB,8BAA8B;;;AAC9D,SAAS,cAAc;;;AAEvB,SAAS,YAAe,KAAA,EAAU,OAAA,EAAqC;IACtE,MAAM,gNAAM,SAAA,EAAO,KAAK;IACxB,IAAI,QAAQ,OAAO,IAAI,OAAO,GAAG;QAChC,OAAO,IAAI,OAAA;IACZ;IACA,IAAI,OAAA,GAAU;IACd,OAAO;AACR;AAEA,MAAM,gCAAgC,CACrC,GACA,MACI;IACJ,MAAM;IACN,MAAM;IACN,IAAI,MAAM,GAAG;QACZ,OAAO;IACR;IACA,IAAI,CAAC,KAAK,CAAC,GAAG;QACb,OAAO;IACR;IACA,6KAAO,wBAAA,EAAsB,GAAG,CAAC;AAClC;AAGO,SAAS,wBAAqE,GAAA,EAAW;IAC/F,OAAO,YAAY,KAAK,6BAA6B;AACtD;AAEA,MAAM,iCAAiC,CACtC,GACA,MACI;IACJ,MAAM;IACN,MAAM;IACN,IAAI,MAAM,GAAG;QACZ,OAAO;IACR;IACA,IAAI,CAAC,KAAK,CAAC,GAAG;QACb,OAAO;IACR;IACA,8KAAO,yBAAA,EAAuB,GAAG,CAAC;AACnC;AAGO,SAAS,yBAA8D,GAAA,EAAW;IACxF,OAAO,YAAY,KAAK,8BAA8B;AACvD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 673, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useEvent.tsx"],"sourcesContent":["import { useAtom } from '@tldraw/state-react'\nimport { assert } from '@tldraw/utils'\nimport { useCallback, useDebugValue, useLayoutEffect, useRef } from 'react'\n\n/**\n * Allows you to define event handlers that can read the latest props/state but has a stable\n * function identity.\n *\n * These event callbacks may not be called in React render functions! An error won't be thrown, but\n * in the real implementation it would be!\n *\n * Uses a modified version of the user-land implementation included in the [`useEvent()` RFC][1].\n * Our version until such a hook is available natively.\n *\n * The RFC was closed on 27 September 2022, the React team plans to come up with a new RFC to\n * provide similar functionality in the future. We will migrate to this functionality when\n * available.\n *\n * IMPORTANT CAVEAT: You should not call event callbacks in layout effects of React component\n * children! Internally this hook uses a layout effect and parent component layout effects run after\n * child component layout effects. Use this hook responsibly.\n *\n * [1]: https://github.com/reactjs/rfcs/pull/220\n *\n * @internal\n */\nexport function useEvent<Args extends Array<unknown>, Result>(\n\thandler: (...args: Args) => Result\n): (...args: Args) => Result {\n\tconst handlerRef = useRef<(...args: Args) => Result>()\n\n\t// In a real implementation, this would run before layout effects\n\tuseLayoutEffect(() => {\n\t\thandlerRef.current = handler\n\t})\n\n\tuseDebugValue(handler)\n\n\treturn useCallback((...args: Args) => {\n\t\t// In a real implementation, this would throw if called during render\n\t\tconst fn = handlerRef.current\n\t\tassert(fn, 'fn does not exist')\n\t\treturn fn(...args)\n\t}, [])\n}\n\n/**\n * like {@link useEvent}, but for use in reactive contexts - when the handler function changes, it\n * will invalidate any reactive contexts that call it.\n * @internal\n */\nexport function useReactiveEvent<Args extends Array<unknown>, Result>(\n\thandler: (...args: Args) => Result\n): (...args: Args) => Result {\n\tconst handlerAtom = useAtom<(...args: Args) => Result>('useReactiveEvent', () => handler)\n\n\t// In a real implementation, this would run before layout effects\n\tuseLayoutEffect(() => {\n\t\thandlerAtom.set(handler)\n\t})\n\n\tuseDebugValue(handler)\n\n\treturn useCallback(\n\t\t(...args: Args) => {\n\t\t\t// In a real implementation, this would throw if called during render\n\t\t\tconst fn = handlerAtom.get()\n\t\t\tassert(fn, 'fn does not exist')\n\t\t\treturn fn(...args)\n\t\t},\n\t\t[handlerAtom]\n\t)\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,eAAe;;AACxB,SAAS,cAAc;;AACvB,SAAS,aAAa,eAAe,iBAAiB,cAAc;;;;AAwB7D,SAAS,SACf,OAAA,EAC4B;IAC5B,MAAM,uNAAa,SAAA,CAAkC;IAGrD,CAAA,GAAA,qMAAA,CAAA,kBAAA,EAAgB,MAAM;QACrB,WAAW,OAAA,GAAU;IACtB,CAAC;IAED,CAAA,GAAA,qMAAA,CAAA,gBAAA,EAAc,OAAO;IAErB,QAAO,uNAAA,EAAY,CAAA,GAAI,SAAe;QAErC,MAAM,KAAK,WAAW,OAAA;QACtB,CAAA,GAAA,mKAAA,CAAA,SAAA,EAAO,IAAI,mBAAmB;QAC9B,OAAO,GAAG,GAAG,IAAI;IAClB,GAAG,CAAC,CAAC;AACN;AAOO,SAAS,iBACf,OAAA,EAC4B;IAC5B,MAAM,cAAc,2LAAA,EAAmC,oBAAoB,IAAM,OAAO;IAGxF,CAAA,GAAA,qMAAA,CAAA,kBAAA,EAAgB,MAAM;QACrB,YAAY,GAAA,CAAI,OAAO;IACxB,CAAC;IAED,CAAA,GAAA,qMAAA,CAAA,gBAAA,EAAc,OAAO;IAErB,QAAO,uNAAA,EACN,CAAA,GAAI,SAAe;QAElB,MAAM,KAAK,YAAY,GAAA,CAAI;QAC3B,CAAA,GAAA,mKAAA,CAAA,SAAA,EAAO,IAAI,mBAAmB;QAC9B,OAAO,GAAG,GAAG,IAAI;IAClB,GACA;QAAC,WAAW;KAAA;AAEd","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 719, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useIsDarkMode.ts"],"sourcesContent":["import { useValue } from '@tldraw/state-react'\nimport { useSvgExportContext } from '../editor/types/SvgExportContext'\nimport { useEditor } from './useEditor'\n\n/** @public */\nexport function useIsDarkMode() {\n\tconst editor = useEditor()\n\tconst exportContext = useSvgExportContext()\n\treturn useValue('isDarkMode', () => exportContext?.isDarkMode ?? editor.user.getIsDarkMode(), [\n\t\texportContext,\n\t\teditor,\n\t])\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,gBAAgB;;AACzB,SAAS,2BAA2B;AACpC,SAAS,iBAAiB;;;;AAGnB,SAAS,gBAAgB;IAC/B,MAAM,6LAAS,YAAA,CAAU;IACzB,MAAM,qNAAgB,sBAAA,CAAoB;IAC1C,yLAAO,WAAA,EAAS,cAAc,IAAM,eAAe,cAAc,OAAO,IAAA,CAAK,aAAA,CAAc,GAAG;QAC7F;QACA;KACA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 745, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useCursor.ts"],"sourcesContent":["import { useQuickReactor } from '@tldraw/state-react'\nimport { TLCursorType } from '@tldraw/tlschema'\nimport { PI, radiansToDegrees } from '../primitives/utils'\nimport { useContainer } from './useContainer'\nimport { useEditor } from './useEditor'\nimport { useIsDarkMode } from './useIsDarkMode'\n\nconst CORNER_SVG = `<path d='m19.7432 17.0869-4.072 4.068 2.829 2.828-8.473-.013-.013-8.47 2.841 2.842 4.075-4.068 1.414-1.415-2.844-2.842h8.486v8.484l-2.83-2.827z' fill='%23fff'/><path d='m18.6826 16.7334-4.427 4.424 1.828 1.828-5.056-.016-.014-5.054 1.842 1.841 4.428-4.422 2.474-2.475-1.844-1.843h5.073v5.071l-1.83-1.828z' fill='%23000'/>`\nconst EDGE_SVG = `<path d='m9 17.9907v.005l5.997 5.996.001-3.999h1.999 2.02v4l5.98-6.001-5.98-5.999.001 4.019-2.021.002h-2l.001-4.022zm1.411.003 3.587-3.588-.001 2.587h3.5 2.521v-2.585l3.565 3.586-3.564 3.585-.001-2.585h-2.521l-3.499-.001-.001 2.586z' fill='%23fff'/><path d='m17.4971 18.9932h2.521v2.586l3.565-3.586-3.565-3.585v2.605h-2.521-3.5v-2.607l-3.586 3.587 3.586 3.586v-2.587z' fill='%23000'/>`\nconst ROTATE_CORNER_SVG = `<path d=\"M22.4789 9.45728L25.9935 12.9942L22.4789 16.5283V14.1032C18.126 14.1502 14.6071 17.6737 14.5675 22.0283H17.05L13.513 25.543L9.97889 22.0283H12.5674C12.6071 16.5691 17.0214 12.1503 22.4789 12.1031L22.4789 9.45728Z\" fill=\"black\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.4789 7.03223L27.4035 12.9945L21.4789 18.9521V15.1868C18.4798 15.6549 16.1113 18.0273 15.649 21.0284H19.475L13.5128 26.953L7.55519 21.0284H11.6189C12.1243 15.8155 16.2679 11.6677 21.4789 11.1559L21.4789 7.03223ZM22.4789 12.1031C17.0214 12.1503 12.6071 16.5691 12.5674 22.0284H9.97889L13.513 25.543L17.05 22.0284H14.5675C14.5705 21.6896 14.5947 21.3558 14.6386 21.0284C15.1157 17.4741 17.9266 14.6592 21.4789 14.1761C21.8063 14.1316 22.1401 14.1069 22.4789 14.1032V16.5284L25.9935 12.9942L22.4789 9.45729L22.4789 12.1031Z\" fill=\"white\"/>`\n\nfunction getCursorCss(\n\tsvg: string,\n\tr: number,\n\ttr: number,\n\tf: boolean,\n\tcolor: string,\n\thotspotX = 16,\n\thotspotY = 16\n) {\n\tconst a = (-tr - r) * (PI / 180)\n\tconst s = Math.sin(a)\n\tconst c = Math.cos(a)\n\tconst dx = 1 * c - 1 * s\n\tconst dy = 1 * s + 1 * c\n\n\treturn (\n\t\t`url(\"data:image/svg+xml,<svg height='32' width='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' style='color: ${color};'><defs><filter id='shadow' y='-40%' x='-40%' width='180px' height='180%' color-interpolation-filters='sRGB'><feDropShadow dx='${dx}' dy='${dy}' stdDeviation='1.2' flood-opacity='.5'/></filter></defs><g fill='none' transform='rotate(${\n\t\t\tr + tr\n\t\t} 16 16)${f ? ` scale(-1,-1) translate(0, -32)` : ''}' filter='url(%23shadow)'>` +\n\t\tsvg.replaceAll(`\"`, `'`) +\n\t\t`</g></svg>\") ${hotspotX} ${hotspotY}, pointer`\n\t)\n}\n\nconst STATIC_CURSORS = [\n\t'default',\n\t'pointer',\n\t'cross',\n\t'move',\n\t'grab',\n\t'grabbing',\n\t'text',\n\t'zoom-in',\n\t'zoom-out',\n]\n\ntype CursorFunction = (rotation: number, flip: boolean, color: string) => string\n\nconst CURSORS: Record<TLCursorType, CursorFunction> = {\n\tnone: () => 'none',\n\t'ew-resize': (r, f, c) => getCursorCss(EDGE_SVG, r, 0, f, c),\n\t'ns-resize': (r, f, c) => getCursorCss(EDGE_SVG, r, 90, f, c),\n\t'nesw-resize': (r, f, c) => getCursorCss(CORNER_SVG, r, 0, f, c),\n\t'nwse-resize': (r, f, c) => getCursorCss(CORNER_SVG, r, 90, f, c),\n\t'nwse-rotate': (r, f, c) => getCursorCss(ROTATE_CORNER_SVG, r, 0, f, c),\n\t'nesw-rotate': (r, f, c) => getCursorCss(ROTATE_CORNER_SVG, r, 90, f, c),\n\t'senw-rotate': (r, f, c) => getCursorCss(ROTATE_CORNER_SVG, r, 180, f, c),\n\t'swne-rotate': (r, f, c) => getCursorCss(ROTATE_CORNER_SVG, r, 270, f, c),\n}\n\n/** @public */\nexport function getCursor(cursor: TLCursorType, rotation = 0, color = 'black') {\n\treturn CURSORS[cursor](radiansToDegrees(rotation), false, color)\n}\n\nexport function useCursor() {\n\tconst editor = useEditor()\n\tconst container = useContainer()\n\tconst isDarkMode = useIsDarkMode()\n\n\tuseQuickReactor(\n\t\t'useCursor',\n\t\t() => {\n\t\t\tconst { type, rotation } = editor.getInstanceState().cursor\n\n\t\t\tif (STATIC_CURSORS.includes(type)) {\n\t\t\t\tcontainer.style.setProperty('--tl-cursor', `var(--tl-cursor-${type})`)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tcontainer.style.setProperty(\n\t\t\t\t'--tl-cursor',\n\t\t\t\tgetCursor(type, rotation, isDarkMode ? 'white' : 'black')\n\t\t\t)\n\t\t},\n\t\t[editor, container, isDarkMode]\n\t)\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,uBAAuB;;AAEhC,SAAS,IAAI,wBAAwB;AACrC,SAAS,oBAAoB;AAC7B,SAAS,iBAAiB;AAC1B,SAAS,qBAAqB;;;;;;AAE9B,MAAM,aAAa,CAAA,iUAAA,CAAA;AACnB,MAAM,WAAW,CAAA,gYAAA,CAAA;AACjB,MAAM,oBAAoB,CAAA,yzBAAA,CAAA;AAE1B,SAAS,aACR,GAAA,EACA,CAAA,EACA,EAAA,EACA,CAAA,EACA,KAAA,EACA,WAAW,EAAA,EACX,WAAW,EAAA,EACV;IACD,MAAM,IAAA,CAAK,CAAC,KAAK,CAAA,IAAA,kLAAM,KAAA,GAAK,GAAA;IAC5B,MAAM,IAAI,KAAK,GAAA,CAAI,CAAC;IACpB,MAAM,IAAI,KAAK,GAAA,CAAI,CAAC;IACpB,MAAM,KAAK,IAAI,IAAI,IAAI;IACvB,MAAM,KAAK,IAAI,IAAI,IAAI;IAEvB,OACC,CAAA,yHAAA,EAA4H,KAAK,CAAA,gIAAA,EAAmI,EAAE,CAAA,MAAA,EAAS,EAAE,CAAA,0FAAA,EAChR,IAAI,EACL,CAAA,OAAA,EAAU,IAAI,CAAA,+BAAA,CAAA,GAAoC,EAAE,CAAA,0BAAA,CAAA,GACpD,IAAI,UAAA,CAAW,CAAA,CAAA,CAAA,EAAK,CAAA,CAAA,CAAG,IACvB,CAAA,aAAA,EAAgB,QAAQ,CAAA,CAAA,EAAI,QAAQ,CAAA,SAAA,CAAA;AAEtC;AAEA,MAAM,iBAAiB;IACtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAIA,MAAM,UAAgD;IACrD,MAAM,IAAM;IACZ,aAAa,CAAC,GAAG,GAAG,IAAM,aAAa,UAAU,GAAG,GAAG,GAAG,CAAC;IAC3D,aAAa,CAAC,GAAG,GAAG,IAAM,aAAa,UAAU,GAAG,IAAI,GAAG,CAAC;IAC5D,eAAe,CAAC,GAAG,GAAG,IAAM,aAAa,YAAY,GAAG,GAAG,GAAG,CAAC;IAC/D,eAAe,CAAC,GAAG,GAAG,IAAM,aAAa,YAAY,GAAG,IAAI,GAAG,CAAC;IAChE,eAAe,CAAC,GAAG,GAAG,IAAM,aAAa,mBAAmB,GAAG,GAAG,GAAG,CAAC;IACtE,eAAe,CAAC,GAAG,GAAG,IAAM,aAAa,mBAAmB,GAAG,IAAI,GAAG,CAAC;IACvE,eAAe,CAAC,GAAG,GAAG,IAAM,aAAa,mBAAmB,GAAG,KAAK,GAAG,CAAC;IACxE,eAAe,CAAC,GAAG,GAAG,IAAM,aAAa,mBAAmB,GAAG,KAAK,GAAG,CAAC;AACzE;AAGO,SAAS,UAAU,MAAA,EAAsB,WAAW,CAAA,EAAG,QAAQ,OAAA,EAAS;IAC9E,OAAO,OAAA,CAAQ,MAAM,CAAA,sLAAE,mBAAA,EAAiB,QAAQ,GAAG,OAAO,KAAK;AAChE;AAEO,SAAS,YAAY;IAC3B,MAAM,6LAAS,YAAA,CAAU;IACzB,MAAM,mMAAY,eAAA,CAAa;IAC/B,MAAM,qMAAa,gBAAA,CAAc;IAEjC,CAAA,GAAA,oLAAA,CAAA,kBAAA,EACC,aACA,MAAM;QACL,MAAM,EAAE,IAAA,EAAM,QAAA,CAAS,CAAA,GAAI,OAAO,gBAAA,CAAiB,EAAE,MAAA;QAErD,IAAI,eAAe,QAAA,CAAS,IAAI,GAAG;YAClC,UAAU,KAAA,CAAM,WAAA,CAAY,eAAe,CAAA,gBAAA,EAAmB,IAAI,CAAA,CAAA,CAAG;YACrE;QACD;QAEA,UAAU,KAAA,CAAM,WAAA,CACf,eACA,UAAU,MAAM,UAAU,aAAa,UAAU,OAAO;IAE1D,GACA;QAAC;QAAQ;QAAW,UAAU;KAAA;AAEhC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 821, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useDarkMode.ts"],"sourcesContent":["import { useValue } from '@tldraw/state-react'\nimport React from 'react'\nimport { debugFlags } from '../utils/debug-flags'\nimport { useContainer } from './useContainer'\nimport { useEditor } from './useEditor'\nimport { useIsDarkMode } from './useIsDarkMode'\n\nexport function useDarkMode() {\n\tconst editor = useEditor()\n\tconst container = useContainer()\n\tconst isDarkMode = useIsDarkMode()\n\tconst forceSrgb = useValue(debugFlags.forceSrgb)\n\n\tReact.useEffect(() => {\n\t\tif (isDarkMode) {\n\t\t\tcontainer.setAttribute('data-color-mode', 'dark')\n\t\t\tcontainer.classList.remove('tl-theme__light')\n\t\t\tcontainer.classList.add('tl-theme__dark')\n\t\t} else {\n\t\t\tcontainer.setAttribute('data-color-mode', 'light')\n\t\t\tcontainer.classList.remove('tl-theme__dark')\n\t\t\tcontainer.classList.add('tl-theme__light')\n\t\t}\n\t\tif (forceSrgb) {\n\t\t\tcontainer.classList.add('tl-theme__force-sRGB')\n\t\t} else {\n\t\t\tcontainer.classList.remove('tl-theme__force-sRGB')\n\t\t}\n\t}, [editor, container, forceSrgb, isDarkMode])\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,gBAAgB;;AACzB,OAAO,WAAW;AAClB,SAAS,kBAAkB;AAC3B,SAAS,oBAAoB;AAC7B,SAAS,iBAAiB;AAC1B,SAAS,qBAAqB;;;;;;;AAEvB,SAAS,cAAc;IAC7B,MAAM,6LAAS,YAAA,CAAU;IACzB,MAAM,YAAY,sMAAA,CAAa;IAC/B,MAAM,qMAAa,gBAAA,CAAc;IACjC,MAAM,YAAY,6LAAA,uLAAS,aAAA,CAAW,SAAS;IAE/C,qMAAA,CAAA,UAAA,CAAM,SAAA,CAAU,MAAM;QACrB,IAAI,YAAY;YACf,UAAU,YAAA,CAAa,mBAAmB,MAAM;YAChD,UAAU,SAAA,CAAU,MAAA,CAAO,iBAAiB;YAC5C,UAAU,SAAA,CAAU,GAAA,CAAI,gBAAgB;QACzC,OAAO;YACN,UAAU,YAAA,CAAa,mBAAmB,OAAO;YACjD,UAAU,SAAA,CAAU,MAAA,CAAO,gBAAgB;YAC3C,UAAU,SAAA,CAAU,GAAA,CAAI,iBAAiB;QAC1C;QACA,IAAI,WAAW;YACd,UAAU,SAAA,CAAU,GAAA,CAAI,sBAAsB;QAC/C,OAAO;YACN,UAAU,SAAA,CAAU,MAAA,CAAO,sBAAsB;QAClD;IACD,GAAG;QAAC;QAAQ;QAAW;QAAW,UAAU;KAAC;AAC9C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 872, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useForceUpdate.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\n\n/** @public */\nexport function useForceUpdate() {\n\tconst [_, ss] = useState(0)\n\tuseEffect(() => ss((s) => s + 1), [])\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,WAAW,gBAAgB;;AAG7B,SAAS,iBAAiB;IAChC,MAAM,CAAC,GAAG,EAAE,CAAA,6MAAI,WAAA,EAAS,CAAC;IAC1B,CAAA,GAAA,qMAAA,CAAA,YAAA,EAAU,IAAM,GAAG,CAAC,IAAM,IAAI,CAAC,GAAG,CAAC,CAAC;AACrC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 889, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useRefState.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useRef, useState } from 'react'\n\n/**\n * A `useState` that uses a `ref` to keep the state in sync with the last value assigned to it.\n *\n * This is useful when creating side-effect state that behave correctly in react strict mode. The\n * obvious way to do this is to use `useState` within a `useEffect` like this:\n *\n * ```ts\n * const [state, setState] = useState(null)\n * useEffect(() => {\n *   const thing = createSideEffectThing()\n *   setState(thing)\n *   return () => thing.destroy()\n * }, [deps])\n * ```\n *\n * The problem with this is that when initially mounting in strict mode, react will:\n * - Call the initial effect and set state with an instance\n * - Call the cleanup function and destroy the instance\n * - Call the effect again and set state with a new instance\n * - Restore the state to the first instance\n *\n * Now, our effect and our state are out of sync: the effect is using the new instance, but the\n * state contains the old instance which has been destroyed.\n *\n * Using a `ref` is a solution, as it'll always keep the value last assigned to it, so it stays in\n * sync with the effect. That's no good for rendering though, as react won't trigger a re-render\n * when the contents of the ref changes.\n *\n * This hook solves this problem by using a `ref` to keep the value in sync with the effect, and\n * a `useState` to trigger a re-render when the value changes.\n *\n * @internal\n */\nexport function useRefState<T>(initialValue: T): [T, Dispatch<SetStateAction<T>>] {\n\tconst ref = useRef(initialValue)\n\tconst [state, setState] = useState(initialValue)\n\n\tif (state !== ref.current) {\n\t\tsetState(ref.current)\n\t}\n\n\tconst update: Dispatch<SetStateAction<T>> = useCallback((value) => {\n\t\tif (typeof value === 'function') {\n\t\t\tref.current = (value as any)(ref.current)\n\t\t} else {\n\t\t\tref.current = value\n\t\t}\n\n\t\tsetState(ref.current)\n\t}, [])\n\n\treturn [state, update]\n}\n"],"names":[],"mappings":";;;AAAA,SAAmC,aAAa,QAAQ,gBAAgB;;AAmCjE,SAAS,YAAe,YAAA,EAAmD;IACjF,MAAM,gNAAM,SAAA,EAAO,YAAY;IAC/B,MAAM,CAAC,OAAO,QAAQ,CAAA,GAAI,qNAAA,EAAS,YAAY;IAE/C,IAAI,UAAU,IAAI,OAAA,EAAS;QAC1B,SAAS,IAAI,OAAO;IACrB;IAEA,MAAM,UAAsC,uNAAA,EAAY,CAAC,UAAU;QAClE,IAAI,OAAO,UAAU,YAAY;YAChC,IAAI,OAAA,GAAW,MAAc,IAAI,OAAO;QACzC,OAAO;YACN,IAAI,OAAA,GAAU;QACf;QAEA,SAAS,IAAI,OAAO;IACrB,GAAG,CAAC,CAAC;IAEL,OAAO;QAAC;QAAO,MAAM;KAAA;AACtB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 921, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useLocalStore.ts"],"sourcesContent":["import { TLAsset, TLAssetStore, TLStoreSnapshot } from '@tldraw/tlschema'\nimport { WeakCache } from '@tldraw/utils'\nimport { useEffect } from 'react'\nimport { TLEditorSnapshot } from '../config/TLEditorSnapshot'\nimport { TLStoreOptions, createTLStore } from '../config/createTLStore'\nimport { TLStoreWithStatus } from '../utils/sync/StoreWithStatus'\nimport { TLLocalSyncClient } from '../utils/sync/TLLocalSyncClient'\nimport { useShallowObjectIdentity } from './useIdentity'\nimport { useRefState } from './useRefState'\n\n/** @internal */\nexport function useLocalStore(\n\toptions: {\n\t\tpersistenceKey?: string\n\t\tsessionId?: string\n\t\tsnapshot?: TLEditorSnapshot | TLStoreSnapshot\n\t} & TLStoreOptions\n): TLStoreWithStatus {\n\tconst [state, setState] = useRefState<TLStoreWithStatus>({ status: 'loading' })\n\n\toptions = useShallowObjectIdentity(options)\n\n\tuseEffect(() => {\n\t\tconst { persistenceKey, sessionId, ...rest } = options\n\n\t\tif (!persistenceKey) {\n\t\t\tsetState({\n\t\t\t\tstatus: 'not-synced',\n\t\t\t\tstore: createTLStore(rest),\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\tsetState({ status: 'loading' })\n\n\t\tconst objectURLCache = new WeakCache<TLAsset, Promise<string | null>>()\n\t\tconst assets: TLAssetStore = {\n\t\t\tupload: async (asset, file) => {\n\t\t\t\tawait client.db.storeAsset(asset.id, file)\n\t\t\t\treturn { src: asset.id }\n\t\t\t},\n\t\t\tresolve: async (asset) => {\n\t\t\t\tif (!asset.props.src) return null\n\n\t\t\t\tif (asset.props.src.startsWith('asset:')) {\n\t\t\t\t\treturn await objectURLCache.get(asset, async () => {\n\t\t\t\t\t\tconst blob = await client.db.getAsset(asset.id)\n\t\t\t\t\t\tif (!blob) return null\n\t\t\t\t\t\treturn URL.createObjectURL(blob)\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\treturn asset.props.src\n\t\t\t},\n\t\t\tremove: async (assetIds) => {\n\t\t\t\tawait client.db.removeAssets(assetIds)\n\t\t\t},\n\t\t\t...rest.assets,\n\t\t}\n\n\t\tconst store = createTLStore({ ...rest, assets })\n\n\t\tlet isClosed = false\n\n\t\tconst client = new TLLocalSyncClient(store, {\n\t\t\tsessionId,\n\t\t\tpersistenceKey,\n\t\t\tonLoad() {\n\t\t\t\tif (isClosed) return\n\t\t\t\tsetState({ store, status: 'synced-local' })\n\t\t\t},\n\t\t\tonLoadError(err: any) {\n\t\t\t\tif (isClosed) return\n\t\t\t\tsetState({ status: 'error', error: err })\n\t\t\t},\n\t\t})\n\n\t\treturn () => {\n\t\t\tisClosed = true\n\t\t\tclient.close()\n\t\t}\n\t}, [options, setState])\n\n\treturn state\n}\n"],"names":[],"mappings":";;;AACA,SAAS,iBAAiB;;AAC1B,SAAS,iBAAiB;AAE1B,SAAyB,qBAAqB;AAE9C,SAAS,yBAAyB;AAClC,SAAS,gCAAgC;AACzC,SAAS,mBAAmB;;;;;;;AAGrB,SAAS,cACf,OAAA,EAKoB;IACpB,MAAM,CAAC,OAAO,QAAQ,CAAA,yLAAI,cAAA,EAA+B;QAAE,QAAQ;IAAU,CAAC;IAE9E,gMAAU,2BAAA,EAAyB,OAAO;IAE1C,CAAA,GAAA,qMAAA,CAAA,YAAA,EAAU,MAAM;QACf,MAAM,EAAE,cAAA,EAAgB,SAAA,EAAW,GAAG,KAAK,CAAA,GAAI;QAE/C,IAAI,CAAC,gBAAgB;YACpB,SAAS;gBACR,QAAQ;gBACR,OAAO,yMAAA,EAAc,IAAI;YAC1B,CAAC;YACD;QACD;QAEA,SAAS;YAAE,QAAQ;QAAU,CAAC;QAE9B,MAAM,iBAAiB,IAAI,8KAAA,CAA2C;QACtE,MAAM,SAAuB;YAC5B,QAAQ,OAAO,OAAO,SAAS;gBAC9B,MAAM,OAAO,EAAA,CAAG,UAAA,CAAW,MAAM,EAAA,EAAI,IAAI;gBACzC,OAAO;oBAAE,KAAK,MAAM,EAAA;gBAAG;YACxB;YACA,SAAS,OAAO,UAAU;gBACzB,IAAI,CAAC,MAAM,KAAA,CAAM,GAAA,CAAK,CAAA,OAAO;gBAE7B,IAAI,MAAM,KAAA,CAAM,GAAA,CAAI,UAAA,CAAW,QAAQ,GAAG;oBACzC,OAAO,MAAM,eAAe,GAAA,CAAI,OAAO,YAAY;wBAClD,MAAM,OAAO,MAAM,OAAO,EAAA,CAAG,QAAA,CAAS,MAAM,EAAE;wBAC9C,IAAI,CAAC,KAAM,CAAA,OAAO;wBAClB,OAAO,IAAI,eAAA,CAAgB,IAAI;oBAChC,CAAC;gBACF;gBAEA,OAAO,MAAM,KAAA,CAAM,GAAA;YACpB;YACA,QAAQ,OAAO,aAAa;gBAC3B,MAAM,OAAO,EAAA,CAAG,YAAA,CAAa,QAAQ;YACtC;YACA,GAAG,KAAK,MAAA;QACT;QAEA,MAAM,iMAAQ,gBAAA,EAAc;YAAE,GAAG,IAAA;YAAM;QAAO,CAAC;QAE/C,IAAI,WAAW;QAEf,MAAM,SAAS,oMAAI,oBAAA,CAAkB,OAAO;YAC3C;YACA;YACA,SAAS;gBACR,IAAI,SAAU,CAAA;gBACd,SAAS;oBAAE;oBAAO,QAAQ;gBAAe,CAAC;YAC3C;YACA,aAAY,GAAA,EAAU;gBACrB,IAAI,SAAU,CAAA;gBACd,SAAS;oBAAE,QAAQ;oBAAS,OAAO;gBAAI,CAAC;YACzC;QACD,CAAC;QAED,OAAO,MAAM;YACZ,WAAW;YACX,OAAO,KAAA,CAAM;QACd;IACD,GAAG;QAAC;QAAS,QAAQ;KAAC;IAEtB,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1019, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useZoomCss.ts"],"sourcesContent":["import { EffectScheduler } from '@tldraw/state'\nimport { debounce } from '@tldraw/utils'\nimport * as React from 'react'\nimport { useContainer } from './useContainer'\nimport { useEditor } from './useEditor'\n\nexport function useZoomCss() {\n\tconst editor = useEditor()\n\tconst container = useContainer()\n\n\tReact.useEffect(() => {\n\t\tconst setScale = (s: number) => container.style.setProperty('--tl-zoom', s.toString())\n\t\tconst setScaleDebounced = debounce(setScale, 100)\n\n\t\tconst scheduler = new EffectScheduler('useZoomCss', () => {\n\t\t\tconst numShapes = editor.getCurrentPageShapeIds().size\n\t\t\tif (numShapes < 300) {\n\t\t\t\tsetScale(editor.getZoomLevel())\n\t\t\t} else {\n\t\t\t\tsetScaleDebounced(editor.getZoomLevel())\n\t\t\t}\n\t\t})\n\n\t\tscheduler.attach()\n\t\tscheduler.execute()\n\n\t\treturn () => {\n\t\t\tscheduler.detach()\n\t\t\tsetScaleDebounced.cancel()\n\t\t}\n\t}, [editor, container])\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,uBAAuB;;;AAChC,SAAS,gBAAgB;AACzB,YAAY,WAAW;AACvB,SAAS,oBAAoB;AAC7B,SAAS,iBAAiB;;;;;;AAEnB,SAAS,aAAa;IAC5B,MAAM,6LAAS,YAAA,CAAU;IACzB,MAAM,mMAAY,eAAA,CAAa;IAE/B,CAAA,GAAA,GAAM,kMAAN,CAAA,YAAM,EAAU,MAAM;QACrB,MAAM,WAAW,CAAC,IAAc,UAAU,KAAA,CAAM,WAAA,CAAY,aAAa,EAAE,QAAA,CAAS,CAAC;QACrF,MAAM,6LAAoB,WAAA,EAAS,UAAU,GAAG;QAEhD,MAAM,YAAY,gLAAI,kBAAA,CAAgB,cAAc,MAAM;YACzD,MAAM,YAAY,OAAO,sBAAA,CAAuB,EAAE,IAAA;YAClD,IAAI,YAAY,KAAK;gBACpB,SAAS,OAAO,YAAA,CAAa,CAAC;YAC/B,OAAO;gBACN,kBAAkB,OAAO,YAAA,CAAa,CAAC;YACxC;QACD,CAAC;QAED,UAAU,MAAA,CAAO;QACjB,UAAU,OAAA,CAAQ;QAElB,OAAO,MAAM;YACZ,UAAU,MAAA,CAAO;YACjB,kBAAkB,MAAA,CAAO;QAC1B;IACD,GAAG;QAAC;QAAQ,SAAS;KAAC;AACvB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1067, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/usePassThroughWheelEvents.ts"],"sourcesContent":["import { RefObject, useEffect } from 'react'\nimport { preventDefault } from '../utils/dom'\nimport { useContainer } from './useContainer'\n\n/** @public */\nexport function usePassThroughWheelEvents(ref: RefObject<HTMLElement>) {\n\tif (!ref) throw Error('usePassThroughWheelEvents must be passed a ref')\n\tconst container = useContainer()\n\n\tuseEffect(() => {\n\t\tfunction onWheel(e: WheelEvent) {\n\t\t\tif ((e as any).isSpecialRedispatchedEvent) return\n\n\t\t\t// if the element is scrollable, don't redispatch the event\n\t\t\tconst elm = ref.current\n\t\t\tif (elm && elm.scrollHeight > elm.clientHeight) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreventDefault(e)\n\t\t\tconst cvs = container.querySelector('.tl-canvas')\n\t\t\tif (!cvs) return\n\t\t\tconst newEvent = new WheelEvent('wheel', e as any)\n\t\t\t;(newEvent as any).isSpecialRedispatchedEvent = true\n\t\t\tcvs.dispatchEvent(newEvent)\n\t\t}\n\n\t\tconst elm = ref.current\n\t\tif (!elm) return\n\n\t\telm.addEventListener('wheel', onWheel, { passive: false })\n\t\treturn () => {\n\t\t\telm.removeEventListener('wheel', onWheel)\n\t\t}\n\t}, [container, ref])\n}\n"],"names":["elm"],"mappings":";;;AAAA,SAAoB,iBAAiB;AACrC,SAAS,sBAAsB;AAC/B,SAAS,oBAAoB;;;;AAGtB,SAAS,0BAA0B,GAAA,EAA6B;IACtE,IAAI,CAAC,IAAK,CAAA,MAAM,MAAM,gDAAgD;IACtE,MAAM,gBAAY,kMAAA,CAAa;IAE/B,CAAA,GAAA,qMAAA,CAAA,YAAA,EAAU,MAAM;QACf,SAAS,QAAQ,CAAA,EAAe;YAC/B,IAAK,EAAU,0BAAA,CAA4B,CAAA;YAG3C,MAAMA,OAAM,IAAI,OAAA;YAChB,IAAIA,QAAOA,KAAI,YAAA,GAAeA,KAAI,YAAA,EAAc;gBAC/C;YACD;YAEA,CAAA,GAAA,yKAAA,CAAA,iBAAA,EAAe,CAAC;YAChB,MAAM,MAAM,UAAU,aAAA,CAAc,YAAY;YAChD,IAAI,CAAC,IAAK,CAAA;YACV,MAAM,WAAW,IAAI,WAAW,SAAS,CAAQ;YAC/C,SAAiB,0BAAA,GAA6B;YAChD,IAAI,aAAA,CAAc,QAAQ;QAC3B;QAEA,MAAM,MAAM,IAAI,OAAA;QAChB,IAAI,CAAC,IAAK,CAAA;QAEV,IAAI,gBAAA,CAAiB,SAAS,SAAS;YAAE,SAAS;QAAM,CAAC;QACzD,OAAO,MAAM;YACZ,IAAI,mBAAA,CAAoB,SAAS,OAAO;QACzC;IACD,GAAG;QAAC;QAAW,GAAG;KAAC;AACpB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1114, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useEditorComponents.tsx"],"sourcesContent":["import { ComponentType, ReactNode, createContext, useContext, useMemo } from 'react'\nimport { DefaultBackground } from '../components/default-components/DefaultBackground'\nimport { DefaultBrush, TLBrushProps } from '../components/default-components/DefaultBrush'\nimport {\n\tDefaultCanvas,\n\tTLCanvasComponentProps,\n} from '../components/default-components/DefaultCanvas'\nimport {\n\tDefaultCollaboratorHint,\n\tTLCollaboratorHintProps,\n} from '../components/default-components/DefaultCollaboratorHint'\nimport { DefaultCursor, TLCursorProps } from '../components/default-components/DefaultCursor'\nimport {\n\tDefaultErrorFallback,\n\tTLErrorFallbackComponent,\n} from '../components/default-components/DefaultErrorFallback'\nimport { DefaultGrid, TLGridProps } from '../components/default-components/DefaultGrid'\nimport { DefaultHandle, TLHandleProps } from '../components/default-components/DefaultHandle'\nimport { DefaultHandles, TLHandlesProps } from '../components/default-components/DefaultHandles'\nimport { DefaultLoadingScreen } from '../components/default-components/DefaultLoadingScreen'\nimport { DefaultScribble, TLScribbleProps } from '../components/default-components/DefaultScribble'\nimport { TLSelectionBackgroundProps } from '../components/default-components/DefaultSelectionBackground'\nimport {\n\tDefaultSelectionForeground,\n\tTLSelectionForegroundProps,\n} from '../components/default-components/DefaultSelectionForeground'\nimport {\n\tDefaultShapeErrorFallback,\n\tTLShapeErrorFallbackComponent,\n} from '../components/default-components/DefaultShapeErrorFallback'\nimport {\n\tDefaultShapeIndicator,\n\tTLShapeIndicatorProps,\n} from '../components/default-components/DefaultShapeIndicator'\nimport {\n\tDefaultShapeIndicatorErrorFallback,\n\tTLShapeIndicatorErrorFallbackComponent,\n} from '../components/default-components/DefaultShapeIndicatorErrorFallback'\nimport { DefaultShapeIndicators } from '../components/default-components/DefaultShapeIndicators'\nimport {\n\tDefaultSnapIndicator,\n\tTLSnapIndicatorProps,\n} from '../components/default-components/DefaultSnapIndictor'\nimport { DefaultSpinner } from '../components/default-components/DefaultSpinner'\nimport { DefaultSvgDefs } from '../components/default-components/DefaultSvgDefs'\nimport { useShallowObjectIdentity } from './useIdentity'\n\n/** @public */\nexport interface TLEditorComponents {\n\tBackground?: ComponentType | null\n\tBrush?: ComponentType<TLBrushProps> | null\n\tCanvas?: ComponentType<TLCanvasComponentProps> | null\n\tCollaboratorBrush?: ComponentType<TLBrushProps> | null\n\tCollaboratorCursor?: ComponentType<TLCursorProps> | null\n\tCollaboratorHint?: ComponentType<TLCollaboratorHintProps> | null\n\tCollaboratorScribble?: ComponentType<TLScribbleProps> | null\n\tCollaboratorShapeIndicator?: ComponentType<TLShapeIndicatorProps> | null\n\tCursor?: ComponentType<TLCursorProps> | null\n\tGrid?: ComponentType<TLGridProps> | null\n\tHandle?: ComponentType<TLHandleProps> | null\n\tHandles?: ComponentType<TLHandlesProps> | null\n\tInFrontOfTheCanvas?: ComponentType | null\n\tLoadingScreen?: ComponentType | null\n\tOnTheCanvas?: ComponentType | null\n\tOverlays?: ComponentType | null\n\tScribble?: ComponentType<TLScribbleProps> | null\n\tSelectionBackground?: ComponentType<TLSelectionBackgroundProps> | null\n\tSelectionForeground?: ComponentType<TLSelectionForegroundProps> | null\n\tShapeIndicator?: ComponentType<TLShapeIndicatorProps> | null\n\tShapeIndicators?: ComponentType | null\n\tSnapIndicator?: ComponentType<TLSnapIndicatorProps> | null\n\tSpinner?: ComponentType<React.SVGProps<SVGSVGElement>> | null\n\tSvgDefs?: ComponentType | null\n\tZoomBrush?: ComponentType<TLBrushProps> | null\n\n\t// These will always have defaults\n\tErrorFallback?: TLErrorFallbackComponent\n\tShapeErrorFallback?: TLShapeErrorFallbackComponent\n\tShapeIndicatorErrorFallback?: TLShapeIndicatorErrorFallbackComponent\n}\n\nconst EditorComponentsContext = createContext<null | Required<TLEditorComponents>>(null)\n\ninterface ComponentsContextProviderProps {\n\toverrides?: TLEditorComponents\n\tchildren: ReactNode\n}\n\nexport function EditorComponentsProvider({\n\toverrides = {},\n\tchildren,\n}: ComponentsContextProviderProps) {\n\tconst _overrides = useShallowObjectIdentity(overrides)\n\tconst value = useMemo(\n\t\t(): Required<TLEditorComponents> => ({\n\t\t\tBackground: DefaultBackground,\n\t\t\tBrush: DefaultBrush,\n\t\t\tCanvas: DefaultCanvas,\n\t\t\tCollaboratorBrush: DefaultBrush,\n\t\t\tCollaboratorCursor: DefaultCursor,\n\t\t\tCollaboratorHint: DefaultCollaboratorHint,\n\t\t\tCollaboratorScribble: DefaultScribble,\n\t\t\tCollaboratorShapeIndicator: DefaultShapeIndicator,\n\t\t\tCursor: DefaultCursor,\n\t\t\tGrid: DefaultGrid,\n\t\t\tHandle: DefaultHandle,\n\t\t\tHandles: DefaultHandles,\n\t\t\tInFrontOfTheCanvas: null,\n\t\t\tLoadingScreen: DefaultLoadingScreen,\n\t\t\tOnTheCanvas: null,\n\t\t\tOverlays: null,\n\t\t\tScribble: DefaultScribble,\n\t\t\tSelectionBackground: null,\n\t\t\tSelectionForeground: DefaultSelectionForeground,\n\t\t\tShapeIndicator: DefaultShapeIndicator,\n\t\t\tShapeIndicators: DefaultShapeIndicators,\n\t\t\tSnapIndicator: DefaultSnapIndicator,\n\t\t\tSpinner: DefaultSpinner,\n\t\t\tSvgDefs: DefaultSvgDefs,\n\t\t\tZoomBrush: DefaultBrush,\n\n\t\t\tErrorFallback: DefaultErrorFallback,\n\t\t\tShapeErrorFallback: DefaultShapeErrorFallback,\n\t\t\tShapeIndicatorErrorFallback: DefaultShapeIndicatorErrorFallback,\n\n\t\t\t..._overrides,\n\t\t}),\n\t\t[_overrides]\n\t)\n\n\treturn (\n\t\t<EditorComponentsContext.Provider value={value}>{children}</EditorComponentsContext.Provider>\n\t)\n}\n\n/** @public */\nexport function useEditorComponents() {\n\tconst components = useContext(EditorComponentsContext)\n\tif (!components) {\n\t\tthrow new Error('useEditorComponents must be used inside of <EditorComponentsProvider />')\n\t}\n\treturn components\n}\n"],"names":[],"mappings":";;;;AAmIE;AAnIF,SAAmC,eAAe,YAAY,eAAe;AAC7E,SAAS,yBAAyB;AAClC,SAAS,oBAAkC;AAC3C;AAIA;AAIA,SAAS,qBAAoC;AAC7C;AAIA,SAAS,mBAAgC;AACzC,SAAS,qBAAoC;AAC7C,SAAS,sBAAsC;AAC/C,SAAS,4BAA4B;AACrC,SAAS,uBAAwC;AAEjD;AAIA;AAIA;AAIA;AAIA,SAAS,8BAA8B;AACvC;AAIA,SAAS,sBAAsB;AAC/B,SAAS,sBAAsB;AAC/B,SAAS,gCAAgC;;;;;;;;;;;;;;;;;;;;;;;AAoCzC,MAAM,8BAA0B,sNAAA,EAAmD,IAAI;AAOhF,SAAS,yBAAyB,EACxC,YAAY,CAAC,CAAA,EACb,QAAA,EACD,EAAmC;IAClC,MAAM,aAAa,iNAAA,EAAyB,SAAS;IACrD,MAAM,kNAAQ,UAAA,EACb,IAAA,CAAqC;YACpC,kOAAY,oBAAA;YACZ,wNAAO,eAAA;YACP,QAAQ,kOAAA;YACR,oOAAmB,eAAA;YACnB,sOAAoB,gBAAA;YACpB,8OAAkB,0BAAA;YAClB,0OAAsB,kBAAA;YACtB,sPAA4B,wBAAA;YAC5B,0NAAQ,gBAAA;YACR,sNAAM,cAAA;YACN,0NAAQ,gBAAA;YACR,4NAAS,iBAAA;YACT,oBAAoB;YACpB,wOAAe,uBAAA;YACf,aAAa;YACb,UAAU;YACV,8NAAU,kBAAA;YACV,qBAAqB;YACrB,oPAAqB,6BAAA;YACrB,0OAAgB,wBAAA;YAChB,4OAAiB,yBAAA;YACjB,sOAAe,wBAAA;YACf,4NAAS,iBAAA;YACT,4NAAS,iBAAA;YACT,4NAAW,eAAA;YAEX,wOAAe,uBAAA;YACf,kPAAoB,4BAAA;YACpB,6BAA6B,4QAAA;YAE7B,GAAG,UAAA;QACJ,CAAA,GACA;QAAC,UAAU;KAAA;IAGZ,OACC,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,wBAAwB,QAAA,EAAxB;QAAiC;QAAe;IAAA,CAAS;AAE5D;AAGO,SAAS,sBAAsB;IACrC,MAAM,uNAAa,aAAA,EAAW,uBAAuB;IACrD,IAAI,CAAC,YAAY;QAChB,MAAM,IAAI,MAAM,yEAAyE;IAC1F;IACA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1218, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useFixSafariDoubleTapZoomPencilEvents.ts"],"sourcesContent":["import { useEffect } from 'react'\nimport { preventDefault } from '../utils/dom'\nimport { useEditor } from './useEditor'\n\nconst IGNORED_TAGS = ['textarea', 'input']\n\n/**\n * When double tapping with the pencil in iOS, it enables a little zoom window in the UI. We don't\n * want this for drawing operations and can disable it by setting 'disableDoubleTapZoom' in the main\n * editor.\n */\nexport function useFixSafariDoubleTapZoomPencilEvents(ref: React.RefObject<HTMLElement>) {\n\tconst editor = useEditor()\n\n\tuseEffect(() => {\n\t\tconst elm = ref.current\n\n\t\tif (!elm) return\n\n\t\tconst handleEvent = (e: PointerEvent | TouchEvent) => {\n\t\t\tif (e instanceof PointerEvent && e.pointerType === 'pen') {\n\t\t\t\t;(e as any).isKilled = true\n\t\t\t\tconst { target } = e\n\n\t\t\t\t// Allow events to propagate if the app is editing a shape, or if the event is occurring in a text area or input\n\t\t\t\tif (\n\t\t\t\t\tIGNORED_TAGS.includes((target as Element).tagName?.toLocaleLowerCase()) ||\n\t\t\t\t\t(target as HTMLElement).isContentEditable ||\n\t\t\t\t\teditor.isIn('select.editing_shape')\n\t\t\t\t) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tpreventDefault(e)\n\t\t\t}\n\t\t}\n\n\t\telm.addEventListener('touchstart', handleEvent)\n\t\telm.addEventListener('touchend', handleEvent)\n\t\treturn () => {\n\t\t\telm.removeEventListener('touchstart', handleEvent)\n\t\t\telm.removeEventListener('touchend', handleEvent)\n\t\t}\n\t}, [editor, ref])\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,iBAAiB;AAC1B,SAAS,sBAAsB;AAC/B,SAAS,iBAAiB;;;;AAE1B,MAAM,eAAe;IAAC;IAAY,OAAO;CAAA;AAOlC,SAAS,sCAAsC,GAAA,EAAmC;IACxF,MAAM,aAAS,4LAAA,CAAU;IAEzB,CAAA,GAAA,qMAAA,CAAA,YAAA,EAAU,MAAM;QACf,MAAM,MAAM,IAAI,OAAA;QAEhB,IAAI,CAAC,IAAK,CAAA;QAEV,MAAM,cAAc,CAAC,MAAiC;YACrD,IAAI,aAAa,gBAAgB,EAAE,WAAA,KAAgB,OAAO;;gBACvD,EAAU,QAAA,GAAW;gBACvB,MAAM,EAAE,MAAA,CAAO,CAAA,GAAI;gBAGnB,IACC,aAAa,QAAA,CAAU,OAAmB,OAAA,EAAS,kBAAkB,CAAC,KACrE,OAAuB,iBAAA,IACxB,OAAO,IAAA,CAAK,sBAAsB,GACjC;oBACD;gBACD;gBAEA,CAAA,GAAA,yKAAA,CAAA,iBAAA,EAAe,CAAC;YACjB;QACD;QAEA,IAAI,gBAAA,CAAiB,cAAc,WAAW;QAC9C,IAAI,gBAAA,CAAiB,YAAY,WAAW;QAC5C,OAAO,MAAM;YACZ,IAAI,mBAAA,CAAoB,cAAc,WAAW;YACjD,IAAI,mBAAA,CAAoB,YAAY,WAAW;QAChD;IACD,GAAG;QAAC;QAAQ,GAAG;KAAC;AACjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1266, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useGestureEvents.ts"],"sourcesContent":["import type { AnyHandlerEventTypes, EventTypes, GestureKey, Handler } from '@use-gesture/core/types'\nimport { createUseGesture, pinchAction, wheelAction } from '@use-gesture/react'\nimport * as React from 'react'\nimport { TLWheelEventInfo } from '../editor/types/event-types'\nimport { Vec } from '../primitives/Vec'\nimport { preventDefault, stopEventPropagation } from '../utils/dom'\nimport { isAccelKey } from '../utils/keyboard'\nimport { normalizeWheel } from '../utils/normalizeWheel'\nimport { useEditor } from './useEditor'\n\n/*\n\n# How does pinching work?\n\nThe pinching handler is fired under two circumstances: \n- when a user is on a MacBook trackpad and is ZOOMING with a two-finger pinch\n- when a user is on a touch device and is ZOOMING with a two-finger pinch\n- when a user is on a touch device and is PANNING with two fingers\n\nZooming is much more expensive than panning (because it causes shapes to render), \nso we want to be sure that we don't zoom while two-finger panning. \n\nIn order to do this, we keep track of a \"pinchState\", which is either:\n- \"zooming\"\n- \"panning\"\n- \"not sure\"\n\nIf a user is on a trackpad, the pinchState will be set to \"zooming\". \n\nIf the user is on a touch screen, then we start in the \"not sure\" state and switch back and forth\nbetween \"zooming\", \"panning\", and \"not sure\" based on what the user is doing with their fingers.\n\nIn the \"not sure\" state, we examine whether the user has moved the center of the gesture far enough\nto suggest that they're panning; or else that they've moved their fingers further apart or closer\ntogether enough to suggest that they're zooming. \n\nIn the \"panning\" state, we check whether the user's fingers have moved far enough apart to suggest\nthat they're zooming. If they have, we switch to the \"zooming\" state.\n\nIn the \"zooming\" state, we just stay zooming—it's not YET possible to switch back to panning.\n\ntodo: compare velocities of change in order to determine whether the user has switched back to panning\n*/\n\ntype check<T extends AnyHandlerEventTypes, Key extends GestureKey> = undefined extends T[Key]\n\t? EventTypes[Key]\n\t: T[Key]\ntype PinchHandler = Handler<'pinch', check<EventTypes, 'pinch'>>\n\nconst useGesture = createUseGesture([wheelAction, pinchAction])\n\n/**\n * GOTCHA\n *\n * UseGesture fires a wheel event 140ms after the gesture actually ends, with a momentum-adjusted\n * delta. This creates a messed up interaction where after you stop scrolling suddenly the dang page\n * jumps a tick. why do they do this? you are asking the wrong person. it seems intentional though.\n * anyway we want to ignore that last event, but there's no way to directly detect it so we need to\n * keep track of timestamps. Yes this is awful, I am sorry.\n */\nlet lastWheelTime = undefined as undefined | number\n\nconst isWheelEndEvent = (time: number) => {\n\tif (lastWheelTime === undefined) {\n\t\tlastWheelTime = time\n\t\treturn false\n\t}\n\n\tif (time - lastWheelTime > 120 && time - lastWheelTime < 160) {\n\t\tlastWheelTime = time\n\t\treturn true\n\t}\n\n\tlastWheelTime = time\n\treturn false\n}\n\nexport function useGestureEvents(ref: React.RefObject<HTMLDivElement>) {\n\tconst editor = useEditor()\n\n\tconst events = React.useMemo(() => {\n\t\tlet pinchState = 'not sure' as 'not sure' | 'zooming' | 'panning'\n\n\t\tconst onWheel: Handler<'wheel', WheelEvent> = ({ event }) => {\n\t\t\tif (!editor.getInstanceState().isFocused) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpinchState = 'not sure'\n\n\t\t\tif (isWheelEndEvent(Date.now())) {\n\t\t\t\t// ignore wheelEnd events\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Awful tht we need to put this logic here, but basically\n\t\t\t// we don't want to handle the the wheel event (or call prevent\n\t\t\t// default on the evnet) if the user is wheeling over an a shape\n\t\t\t// that is scrollable which they're currently editing.\n\n\t\t\tconst editingShapeId = editor.getEditingShapeId()\n\t\t\tif (editingShapeId) {\n\t\t\t\tconst shape = editor.getShape(editingShapeId)\n\t\t\t\tif (shape) {\n\t\t\t\t\tconst util = editor.getShapeUtil(shape)\n\t\t\t\t\tif (util.canScroll(shape)) {\n\t\t\t\t\t\tconst bounds = editor.getShapePageBounds(editingShapeId)\n\t\t\t\t\t\tif (bounds?.containsPoint(editor.inputs.currentPagePoint)) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpreventDefault(event)\n\t\t\tstopEventPropagation(event)\n\t\t\tconst delta = normalizeWheel(event)\n\n\t\t\tif (delta.x === 0 && delta.y === 0) return\n\n\t\t\tconst info: TLWheelEventInfo = {\n\t\t\t\ttype: 'wheel',\n\t\t\t\tname: 'wheel',\n\t\t\t\tdelta,\n\t\t\t\tpoint: new Vec(event.clientX, event.clientY),\n\t\t\t\tshiftKey: event.shiftKey,\n\t\t\t\taltKey: event.altKey,\n\t\t\t\tctrlKey: event.metaKey || event.ctrlKey,\n\t\t\t\tmetaKey: event.metaKey,\n\t\t\t\taccelKey: isAccelKey(event),\n\t\t\t}\n\n\t\t\teditor.dispatch(info)\n\t\t}\n\n\t\tlet initDistanceBetweenFingers = 1 // the distance between the two fingers when the pinch starts\n\t\tlet initZoom = 1 // the browser's zoom level when the pinch starts\n\t\tlet currDistanceBetweenFingers = 0\n\t\tconst initPointBetweenFingers = new Vec()\n\t\tconst prevPointBetweenFingers = new Vec()\n\n\t\tconst onPinchStart: PinchHandler = (gesture) => {\n\t\t\tconst elm = ref.current\n\t\t\tpinchState = 'not sure'\n\n\t\t\tconst { event, origin, da } = gesture\n\n\t\t\tif (event instanceof WheelEvent) return\n\t\t\tif (!(event.target === elm || elm?.contains(event.target as Node))) return\n\n\t\t\tprevPointBetweenFingers.x = origin[0]\n\t\t\tprevPointBetweenFingers.y = origin[1]\n\t\t\tinitPointBetweenFingers.x = origin[0]\n\t\t\tinitPointBetweenFingers.y = origin[1]\n\t\t\tinitDistanceBetweenFingers = da[0]\n\t\t\tinitZoom = editor.getZoomLevel()\n\n\t\t\teditor.dispatch({\n\t\t\t\ttype: 'pinch',\n\t\t\t\tname: 'pinch_start',\n\t\t\t\tpoint: { x: origin[0], y: origin[1], z: editor.getZoomLevel() },\n\t\t\t\tdelta: { x: 0, y: 0 },\n\t\t\t\tshiftKey: event.shiftKey,\n\t\t\t\taltKey: event.altKey,\n\t\t\t\tctrlKey: event.metaKey || event.ctrlKey,\n\t\t\t\tmetaKey: event.metaKey,\n\t\t\t\taccelKey: isAccelKey(event),\n\t\t\t})\n\t\t}\n\n\t\t// let timeout: any\n\t\tconst updatePinchState = (isSafariTrackpadPinch: boolean) => {\n\t\t\tif (isSafariTrackpadPinch) {\n\t\t\t\tpinchState = 'zooming'\n\t\t\t}\n\n\t\t\tif (pinchState === 'zooming') {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Initial: [touch]-------origin-------[touch]\n\t\t\t// Current: [touch]-----------origin----------[touch]\n\t\t\t//                          |----|     |------------|\n\t\t\t//             originDistance ^           ^ touchDistance\n\n\t\t\t// How far have the two touch points moved towards or away from eachother?\n\t\t\tconst touchDistance = Math.abs(currDistanceBetweenFingers - initDistanceBetweenFingers)\n\t\t\t// How far has the point between the touches moved?\n\t\t\tconst originDistance = Vec.Dist(initPointBetweenFingers, prevPointBetweenFingers)\n\n\t\t\tswitch (pinchState) {\n\t\t\t\tcase 'not sure': {\n\t\t\t\t\tif (touchDistance > 24) {\n\t\t\t\t\t\tpinchState = 'zooming'\n\t\t\t\t\t} else if (originDistance > 16) {\n\t\t\t\t\t\tpinchState = 'panning'\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase 'panning': {\n\t\t\t\t\t// Slightly more touch distance needed to go from panning to zooming\n\t\t\t\t\tif (touchDistance > 64) {\n\t\t\t\t\t\tpinchState = 'zooming'\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst onPinch: PinchHandler = (gesture) => {\n\t\t\tconst elm = ref.current\n\t\t\tconst { event, origin, offset, da } = gesture\n\n\t\t\tif (event instanceof WheelEvent) return\n\t\t\tif (!(event.target === elm || elm?.contains(event.target as Node))) return\n\n\t\t\t// In (desktop) Safari, a two finger trackpad pinch will be a \"gesturechange\" event\n\t\t\t// and will have 0 touches; on iOS, a two-finger pinch will be a \"pointermove\" event\n\t\t\t// with two touches.\n\t\t\tconst isSafariTrackpadPinch =\n\t\t\t\tgesture.type === 'gesturechange' || gesture.type === 'gestureend'\n\n\t\t\t// The distance between the two touch points\n\t\t\tcurrDistanceBetweenFingers = da[0]\n\n\t\t\t// Only update the zoom if the pointers are far enough apart;\n\t\t\t// a very small touchDistance means that the user has probably\n\t\t\t// pinched out and their fingers are touching; this produces\n\t\t\t// very unstable zooming behavior.\n\n\t\t\tconst dx = origin[0] - prevPointBetweenFingers.x\n\t\t\tconst dy = origin[1] - prevPointBetweenFingers.y\n\n\t\t\tprevPointBetweenFingers.x = origin[0]\n\t\t\tprevPointBetweenFingers.y = origin[1]\n\n\t\t\tupdatePinchState(isSafariTrackpadPinch)\n\n\t\t\tswitch (pinchState) {\n\t\t\t\tcase 'zooming': {\n\t\t\t\t\tconst currZoom = offset[0] ** editor.getCameraOptions().zoomSpeed\n\n\t\t\t\t\teditor.dispatch({\n\t\t\t\t\t\ttype: 'pinch',\n\t\t\t\t\t\tname: 'pinch',\n\t\t\t\t\t\tpoint: { x: origin[0], y: origin[1], z: currZoom },\n\t\t\t\t\t\tdelta: { x: dx, y: dy },\n\t\t\t\t\t\tshiftKey: event.shiftKey,\n\t\t\t\t\t\taltKey: event.altKey,\n\t\t\t\t\t\tctrlKey: event.metaKey || event.ctrlKey,\n\t\t\t\t\t\tmetaKey: event.metaKey,\n\t\t\t\t\t\taccelKey: isAccelKey(event),\n\t\t\t\t\t})\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase 'panning': {\n\t\t\t\t\teditor.dispatch({\n\t\t\t\t\t\ttype: 'pinch',\n\t\t\t\t\t\tname: 'pinch',\n\t\t\t\t\t\tpoint: { x: origin[0], y: origin[1], z: initZoom },\n\t\t\t\t\t\tdelta: { x: dx, y: dy },\n\t\t\t\t\t\tshiftKey: event.shiftKey,\n\t\t\t\t\t\taltKey: event.altKey,\n\t\t\t\t\t\tctrlKey: event.metaKey || event.ctrlKey,\n\t\t\t\t\t\tmetaKey: event.metaKey,\n\t\t\t\t\t\taccelKey: isAccelKey(event),\n\t\t\t\t\t})\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst onPinchEnd: PinchHandler = (gesture) => {\n\t\t\tconst elm = ref.current\n\t\t\tconst { event, origin, offset } = gesture\n\n\t\t\tif (event instanceof WheelEvent) return\n\t\t\tif (!(event.target === elm || elm?.contains(event.target as Node))) return\n\n\t\t\tconst scale = offset[0] ** editor.getCameraOptions().zoomSpeed\n\n\t\t\tpinchState = 'not sure'\n\n\t\t\teditor.timers.requestAnimationFrame(() => {\n\t\t\t\teditor.dispatch({\n\t\t\t\t\ttype: 'pinch',\n\t\t\t\t\tname: 'pinch_end',\n\t\t\t\t\tpoint: { x: origin[0], y: origin[1], z: scale },\n\t\t\t\t\tdelta: { x: origin[0], y: origin[1] },\n\t\t\t\t\tshiftKey: event.shiftKey,\n\t\t\t\t\taltKey: event.altKey,\n\t\t\t\t\tctrlKey: event.metaKey || event.ctrlKey,\n\t\t\t\t\tmetaKey: event.metaKey,\n\t\t\t\t\taccelKey: isAccelKey(event),\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\treturn {\n\t\t\tonWheel,\n\t\t\tonPinchStart,\n\t\t\tonPinchEnd,\n\t\t\tonPinch,\n\t\t}\n\t}, [editor, ref])\n\n\tuseGesture(events, {\n\t\ttarget: ref,\n\t\teventOptions: { passive: false },\n\t\tpinch: {\n\t\t\tfrom: () => {\n\t\t\t\tconst { zoomSpeed } = editor.getCameraOptions()\n\t\t\t\tconst level = editor.getZoomLevel() ** (1 / zoomSpeed)\n\t\t\t\treturn [level, 0]\n\t\t\t}, // Return the camera z to use when pinch starts\n\t\t\tscaleBounds: () => {\n\t\t\t\tconst baseZoom = editor.getBaseZoom()\n\t\t\t\tconst { zoomSteps, zoomSpeed } = editor.getCameraOptions()\n\t\t\t\tconst zoomMin = zoomSteps[0] * baseZoom\n\t\t\t\tconst zoomMax = zoomSteps[zoomSteps.length - 1] * baseZoom\n\n\t\t\t\treturn {\n\t\t\t\t\tmax: zoomMax ** (1 / zoomSpeed),\n\t\t\t\t\tmin: zoomMin ** (1 / zoomSpeed),\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t})\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1542, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useHandleEvents.ts"],"sourcesContent":["import { TLArrowShape, TLLineShape, TLShapeId } from '@tldraw/tlschema'\nimport * as React from 'react'\nimport { Editor } from '../editor/Editor'\nimport { loopToHtmlElement, releasePointerCapture, setPointerCapture } from '../utils/dom'\nimport { getPointerInfo } from '../utils/getPointerInfo'\nimport { useEditor } from './useEditor'\n\nfunction getHandle(editor: Editor, id: TLShapeId, handleId: string) {\n\tconst shape = editor.getShape<TLArrowShape | TLLineShape>(id)!\n\tconst handles = editor.getShapeHandles(shape)!\n\treturn { shape, handle: handles.find((h) => h.id === handleId) }\n}\n\nexport function useHandleEvents(id: TLShapeId, handleId: string) {\n\tconst editor = useEditor()\n\n\treturn React.useMemo(() => {\n\t\tconst onPointerDown = (e: React.PointerEvent) => {\n\t\t\tif ((e as any).isKilled) return\n\n\t\t\t// Must set pointer capture on an HTML element!\n\t\t\tconst target = loopToHtmlElement(e.currentTarget)\n\t\t\tsetPointerCapture(target, e)\n\n\t\t\tconst { shape, handle } = getHandle(editor, id, handleId)\n\n\t\t\tif (!handle) return\n\n\t\t\teditor.dispatch({\n\t\t\t\ttype: 'pointer',\n\t\t\t\ttarget: 'handle',\n\t\t\t\thandle,\n\t\t\t\tshape,\n\t\t\t\tname: 'pointer_down',\n\t\t\t\t...getPointerInfo(e),\n\t\t\t})\n\t\t}\n\n\t\t// Track the last screen point\n\t\tlet lastX: number, lastY: number\n\n\t\tconst onPointerMove = (e: React.PointerEvent) => {\n\t\t\tif ((e as any).isKilled) return\n\t\t\tif (e.clientX === lastX && e.clientY === lastY) return\n\t\t\tlastX = e.clientX\n\t\t\tlastY = e.clientY\n\n\t\t\tconst { shape, handle } = getHandle(editor, id, handleId)\n\n\t\t\tif (!handle) return\n\n\t\t\teditor.dispatch({\n\t\t\t\ttype: 'pointer',\n\t\t\t\ttarget: 'handle',\n\t\t\t\thandle,\n\t\t\t\tshape,\n\t\t\t\tname: 'pointer_move',\n\t\t\t\t...getPointerInfo(e),\n\t\t\t})\n\t\t}\n\n\t\tconst onPointerUp = (e: React.PointerEvent) => {\n\t\t\tif ((e as any).isKilled) return\n\n\t\t\tconst target = loopToHtmlElement(e.currentTarget)\n\t\t\treleasePointerCapture(target, e)\n\n\t\t\tconst { shape, handle } = getHandle(editor, id, handleId)\n\n\t\t\tif (!handle) return\n\n\t\t\teditor.dispatch({\n\t\t\t\ttype: 'pointer',\n\t\t\t\ttarget: 'handle',\n\t\t\t\thandle,\n\t\t\t\tshape,\n\t\t\t\tname: 'pointer_up',\n\t\t\t\t...getPointerInfo(e),\n\t\t\t})\n\t\t}\n\n\t\treturn {\n\t\t\tonPointerDown,\n\t\t\tonPointerMove,\n\t\t\tonPointerUp,\n\t\t}\n\t}, [editor, id, handleId])\n}\n"],"names":[],"mappings":";;;AACA,YAAY,WAAW;AAEvB,SAAS,mBAAmB,uBAAuB,yBAAyB;AAC5E,SAAS,sBAAsB;AAC/B,SAAS,iBAAiB;;;;;AAE1B,SAAS,UAAU,MAAA,EAAgB,EAAA,EAAe,QAAA,EAAkB;IACnE,MAAM,QAAQ,OAAO,QAAA,CAAqC,EAAE;IAC5D,MAAM,UAAU,OAAO,eAAA,CAAgB,KAAK;IAC5C,OAAO;QAAE;QAAO,QAAQ,QAAQ,IAAA,CAAK,CAAC,IAAM,EAAE,EAAA,KAAO,QAAQ;IAAE;AAChE;AAEO,SAAS,gBAAgB,EAAA,EAAe,QAAA,EAAkB;IAChE,MAAM,UAAS,+LAAA,CAAU;IAEzB,iNAAO,MAAM,IAAA,EAAQ,MAAM;QAC1B,MAAM,gBAAgB,CAAC,MAA0B;YAChD,IAAK,EAAU,QAAA,CAAU,CAAA;YAGzB,MAAM,uLAAS,oBAAA,EAAkB,EAAE,aAAa;YAChD,CAAA,GAAA,yKAAA,CAAA,oBAAA,EAAkB,QAAQ,CAAC;YAE3B,MAAM,EAAE,KAAA,EAAO,MAAA,CAAO,CAAA,GAAI,UAAU,QAAQ,IAAI,QAAQ;YAExD,IAAI,CAAC,OAAQ,CAAA;YAEb,OAAO,QAAA,CAAS;gBACf,MAAM;gBACN,QAAQ;gBACR;gBACA;gBACA,MAAM;gBACN,IAAG,yMAAA,EAAe,CAAC,CAAA;YACpB,CAAC;QACF;QAGA,IAAI,OAAe;QAEnB,MAAM,gBAAgB,CAAC,MAA0B;YAChD,IAAK,EAAU,QAAA,CAAU,CAAA;YACzB,IAAI,EAAE,OAAA,KAAY,SAAS,EAAE,OAAA,KAAY,MAAO,CAAA;YAChD,QAAQ,EAAE,OAAA;YACV,QAAQ,EAAE,OAAA;YAEV,MAAM,EAAE,KAAA,EAAO,MAAA,CAAO,CAAA,GAAI,UAAU,QAAQ,IAAI,QAAQ;YAExD,IAAI,CAAC,OAAQ,CAAA;YAEb,OAAO,QAAA,CAAS;gBACf,MAAM;gBACN,QAAQ;gBACR;gBACA;gBACA,MAAM;gBACN,4LAAG,iBAAA,EAAe,CAAC,CAAA;YACpB,CAAC;QACF;QAEA,MAAM,cAAc,CAAC,MAA0B;YAC9C,IAAK,EAAU,QAAA,CAAU,CAAA;YAEzB,MAAM,uLAAS,oBAAA,EAAkB,EAAE,aAAa;YAChD,CAAA,GAAA,yKAAA,CAAA,wBAAA,EAAsB,QAAQ,CAAC;YAE/B,MAAM,EAAE,KAAA,EAAO,MAAA,CAAO,CAAA,GAAI,UAAU,QAAQ,IAAI,QAAQ;YAExD,IAAI,CAAC,OAAQ,CAAA;YAEb,OAAO,QAAA,CAAS;gBACf,MAAM;gBACN,QAAQ;gBACR;gBACA;gBACA,MAAM;gBACN,4LAAG,iBAAA,EAAe,CAAC,CAAA;YACpB,CAAC;QACF;QAEA,OAAO;YACN;YACA;YACA;QACD;IACD,GAAG;QAAC;QAAQ;QAAI,QAAQ;KAAC;AAC1B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1630, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useScreenBounds.ts"],"sourcesContent":["import { throttle } from '@tldraw/utils'\nimport { useLayoutEffect } from 'react'\nimport { useEditor } from './useEditor'\n\nexport function useScreenBounds(ref: React.RefObject<HTMLElement>) {\n\tconst editor = useEditor()\n\n\tuseLayoutEffect(() => {\n\t\t// Everything else uses a debounced update...\n\t\tconst updateBounds = throttle(\n\t\t\t() => {\n\t\t\t\tif (!ref.current) return\n\t\t\t\teditor.updateViewportScreenBounds(ref.current)\n\t\t\t},\n\t\t\t200,\n\t\t\t{\n\t\t\t\ttrailing: true,\n\t\t\t}\n\t\t)\n\n\t\t// Rather than running getClientRects on every frame, we'll\n\t\t// run it once a second or when the window resizes.\n\t\tconst interval = editor.timers.setInterval(updateBounds, 1000)\n\t\twindow.addEventListener('resize', updateBounds)\n\n\t\tconst resizeObserver = new ResizeObserver((entries) => {\n\t\t\tif (!entries[0].contentRect) return\n\t\t\tupdateBounds()\n\t\t})\n\n\t\tconst container = ref.current\n\t\tlet scrollingParent: HTMLElement | Document | null = null\n\n\t\tif (container) {\n\t\t\t// When the container's size changes, update the bounds\n\t\t\tresizeObserver.observe(container)\n\n\t\t\t// When the container's nearest scrollable parent scrolls, update the bounds\n\t\t\tscrollingParent = getNearestScrollableContainer(container)\n\t\t\tscrollingParent.addEventListener('scroll', updateBounds)\n\t\t}\n\n\t\treturn () => {\n\t\t\tclearInterval(interval)\n\t\t\twindow.removeEventListener('resize', updateBounds)\n\t\t\tresizeObserver.disconnect()\n\t\t\tscrollingParent?.removeEventListener('scroll', updateBounds)\n\t\t\tupdateBounds.cancel()\n\t\t}\n\t}, [editor, ref])\n}\n\n/*!\n * Author: excalidraw\n * MIT License: https://github.com/excalidraw/excalidraw/blob/master/LICENSE\n * https://github.com/excalidraw/excalidraw/blob/48c3465b19f10ec755b3eb84e21a01a468e96e43/packages/excalidraw/utils.ts#L600\n */\nconst getNearestScrollableContainer = (element: HTMLElement): HTMLElement | Document => {\n\tlet parent = element.parentElement\n\twhile (parent) {\n\t\tif (parent === document.body) {\n\t\t\treturn document\n\t\t}\n\t\tconst { overflowY } = window.getComputedStyle(parent)\n\t\tconst hasScrollableContent = parent.scrollHeight > parent.clientHeight\n\t\tif (\n\t\t\thasScrollableContent &&\n\t\t\t(overflowY === 'auto' || overflowY === 'scroll' || overflowY === 'overlay')\n\t\t) {\n\t\t\treturn parent\n\t\t}\n\t\tparent = parent.parentElement\n\t}\n\treturn document\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,gBAAgB;;AACzB,SAAS,uBAAuB;AAChC,SAAS,iBAAiB;;;;AAEnB,SAAS,gBAAgB,GAAA,EAAmC;IAClE,MAAM,6LAAS,YAAA,CAAU;IAEzB,CAAA,GAAA,qMAAA,CAAA,kBAAA,EAAgB,MAAM;QAErB,MAAM,mBAAe,8LAAA,EACpB,MAAM;YACL,IAAI,CAAC,IAAI,OAAA,CAAS,CAAA;YAClB,OAAO,0BAAA,CAA2B,IAAI,OAAO;QAC9C,GACA,KACA;YACC,UAAU;QACX;QAKD,MAAM,WAAW,OAAO,MAAA,CAAO,WAAA,CAAY,cAAc,GAAI;QAC7D,OAAO,gBAAA,CAAiB,UAAU,YAAY;QAE9C,MAAM,iBAAiB,IAAI,eAAe,CAAC,YAAY;YACtD,IAAI,CAAC,OAAA,CAAQ,CAAC,CAAA,CAAE,WAAA,CAAa,CAAA;YAC7B,aAAa;QACd,CAAC;QAED,MAAM,YAAY,IAAI,OAAA;QACtB,IAAI,kBAAiD;QAErD,IAAI,WAAW;YAEd,eAAe,OAAA,CAAQ,SAAS;YAGhC,kBAAkB,8BAA8B,SAAS;YACzD,gBAAgB,gBAAA,CAAiB,UAAU,YAAY;QACxD;QAEA,OAAO,MAAM;YACZ,cAAc,QAAQ;YACtB,OAAO,mBAAA,CAAoB,UAAU,YAAY;YACjD,eAAe,UAAA,CAAW;YAC1B,iBAAiB,oBAAoB,UAAU,YAAY;YAC3D,aAAa,MAAA,CAAO;QACrB;IACD,GAAG;QAAC;QAAQ,GAAG;KAAC;AACjB;AAEA;;;;CAAA,GAKA,MAAM,gCAAgC,CAAC,YAAiD;IACvF,IAAI,SAAS,QAAQ,aAAA;IACrB,MAAO,OAAQ;QACd,IAAI,WAAW,SAAS,IAAA,EAAM;YAC7B,OAAO;QACR;QACA,MAAM,EAAE,SAAA,CAAU,CAAA,GAAI,OAAO,gBAAA,CAAiB,MAAM;QACpD,MAAM,uBAAuB,OAAO,YAAA,GAAe,OAAO,YAAA;QAC1D,IACC,wBAAA,CACC,cAAc,UAAU,cAAc,YAAY,cAAc,SAAA,GAChE;YACD,OAAO;QACR;QACA,SAAS,OAAO,aAAA;IACjB;IACA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1701, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/usePeerIds.ts"],"sourcesContent":["import { useComputed, useValue } from '@tldraw/state-react'\nimport { uniq } from '../utils/uniq'\nimport { useEditor } from './useEditor'\n\n// TODO: maybe move this to a computed property on the App class?\n/**\n * @returns The list of peer UserIDs\n * @public\n */\nexport function usePeerIds() {\n\tconst editor = useEditor()\n\n\tconst $userIds = useComputed(\n\t\t'userIds',\n\t\t() => uniq(editor.getCollaborators().map((p) => p.userId)).sort(),\n\t\t{ isEqual: (a, b) => a.join(',') === b.join?.(',') },\n\t\t[editor]\n\t)\n\n\treturn useValue($userIds)\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,aAAa,gBAAgB;;;AACtC,SAAS,YAAY;AACrB,SAAS,iBAAiB;;;;AAOnB,SAAS,aAAa;IAC5B,MAAM,6LAAS,YAAA,CAAU;IAEzB,MAAM,YAAW,kMAAA,EAChB,WACA,mLAAM,OAAA,EAAK,OAAO,gBAAA,CAAiB,EAAE,GAAA,CAAI,CAAC,IAAM,EAAE,MAAM,CAAC,EAAE,IAAA,CAAK,GAChE;QAAE,SAAS,CAAC,GAAG,IAAM,EAAE,IAAA,CAAK,GAAG,MAAM,EAAE,IAAA,GAAO,GAAG;IAAE,GACnD;QAAC,MAAM;KAAA;IAGR,yLAAO,WAAA,EAAS,QAAQ;AACzB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1729, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/usePresence.ts"],"sourcesContent":["import { useValue } from '@tldraw/state-react'\nimport { TLInstancePresence } from '@tldraw/tlschema'\nimport { useEditor } from './useEditor'\n\n// TODO: maybe move this to a computed property on the App class?\n/**\n * @returns The latest presence of the user matching userId\n * @public\n */\nexport function usePresence(userId: string): TLInstancePresence | null {\n\tconst editor = useEditor()\n\n\tconst latestPresence = useValue(\n\t\t`latestPresence:${userId}`,\n\t\t() => {\n\t\t\treturn editor.getCollaborators().find((c) => c.userId === userId)\n\t\t},\n\t\t[editor, userId]\n\t)\n\n\treturn latestPresence ?? null\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,gBAAgB;;AAEzB,SAAS,iBAAiB;;;AAOnB,SAAS,YAAY,MAAA,EAA2C;IACtE,MAAM,6LAAS,YAAA,CAAU;IAEzB,MAAM,mMAAiB,WAAA,EACtB,CAAA,eAAA,EAAkB,MAAM,EAAA,EACxB,MAAM;QACL,OAAO,OAAO,gBAAA,CAAiB,EAAE,IAAA,CAAK,CAAC,IAAM,EAAE,MAAA,KAAW,MAAM;IACjE,GACA;QAAC;QAAQ,MAAM;KAAA;IAGhB,OAAO,kBAAkB;AAC1B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1755, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useGlobalMenuIsOpen.ts"],"sourcesContent":["import { useValue } from '@tldraw/state-react'\nimport { useCallback, useEffect, useRef } from 'react'\nimport { tlmenus } from '../globals/menus'\n\n/** @public */\nexport function useGlobalMenuIsOpen(\n\tid: string,\n\tonChange?: (isOpen: boolean) => void,\n\tonEvent?: (id: string) => void\n) {\n\tconst rIsOpen = useRef(false)\n\n\tconst onOpenChange = useCallback(\n\t\t(isOpen: boolean) => {\n\t\t\trIsOpen.current = isOpen\n\n\t\t\tif (isOpen) {\n\t\t\t\ttlmenus.addOpenMenu(id)\n\t\t\t} else {\n\t\t\t\ttlmenus.deleteOpenMenu(id)\n\t\t\t}\n\n\t\t\tonChange?.(isOpen)\n\t\t},\n\t\t[id, onChange]\n\t)\n\n\tconst isOpen = useValue('is menu open', () => tlmenus.getOpenMenus().includes(id), [id])\n\n\tuseEffect(() => {\n\t\t// When the effect runs, if the menu is open then\n\t\t// add it to the open menus list.\n\n\t\t// This is necessary for cases where the user closes\n\t\t// the parent of a submenu before closing the submenu.\n\t\t// There is some duplication between this and `onOpenChange`\n\t\t// hook but it's necessary to handle the case where the\n\t\t// this effect runs twice or re-runs.\n\t\tif (rIsOpen.current) {\n\t\t\tonEvent?.('open-menu')\n\t\t\ttlmenus.addOpenMenu(id)\n\t\t}\n\n\t\treturn () => {\n\t\t\tif (rIsOpen.current) {\n\t\t\t\t// Close menu on unmount\n\t\t\t\ttlmenus.deleteOpenMenu(id)\n\n\t\t\t\t// Close menu and all submenus when the parent is closed\n\t\t\t\ttlmenus.getOpenMenus().forEach((menuId) => {\n\t\t\t\t\tif (menuId.startsWith(id)) {\n\t\t\t\t\t\tonEvent?.('close-menu')\n\t\t\t\t\t\ttlmenus.deleteOpenMenu(menuId)\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\trIsOpen.current = false\n\t\t\t}\n\t\t}\n\t}, [id, onEvent])\n\n\treturn [isOpen, onOpenChange] as const\n}\n"],"names":["isOpen"],"mappings":";;;AAAA,SAAS,gBAAgB;;AACzB,SAAS,aAAa,WAAW,cAAc;AAC/C,SAAS,eAAe;;;;AAGjB,SAAS,oBACf,EAAA,EACA,QAAA,EACA,OAAA,EACC;IACD,MAAM,oNAAU,SAAA,EAAO,KAAK;IAE5B,MAAM,eAAe,wNAAA,EACpB,CAACA,YAAoB;QACpB,QAAQ,OAAA,GAAUA;QAElB,IAAIA,SAAQ;YACX,6KAAA,CAAA,UAAA,CAAQ,WAAA,CAAY,EAAE;QACvB,OAAO;YACN,6KAAA,CAAA,UAAA,CAAQ,cAAA,CAAe,EAAE;QAC1B;QAEA,WAAWA,OAAM;IAClB,GACA;QAAC;QAAI,QAAQ;KAAA;IAGd,MAAM,2LAAS,WAAA,EAAS,gBAAgB,kLAAM,UAAA,CAAQ,YAAA,CAAa,EAAE,QAAA,CAAS,EAAE,GAAG;QAAC,EAAE;KAAC;IAEvF,CAAA,GAAA,qMAAA,CAAA,YAAA,EAAU,MAAM;QASf,IAAI,QAAQ,OAAA,EAAS;YACpB,UAAU,WAAW;YACrB,6KAAA,CAAA,UAAA,CAAQ,WAAA,CAAY,EAAE;QACvB;QAEA,OAAO,MAAM;YACZ,IAAI,QAAQ,OAAA,EAAS;gBAEpB,6KAAA,CAAA,UAAA,CAAQ,cAAA,CAAe,EAAE;gBAGzB,6KAAA,CAAA,UAAA,CAAQ,YAAA,CAAa,EAAE,OAAA,CAAQ,CAAC,WAAW;oBAC1C,IAAI,OAAO,UAAA,CAAW,EAAE,GAAG;wBAC1B,UAAU,YAAY;wBACtB,6KAAA,CAAA,UAAA,CAAQ,cAAA,CAAe,MAAM;oBAC9B;gBACD,CAAC;gBAED,QAAQ,OAAA,GAAU;YACnB;QACD;IACD,GAAG;QAAC;QAAI,OAAO;KAAC;IAEhB,OAAO;QAAC;QAAQ,YAAY;KAAA;AAC7B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1816, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useIsCropping.ts"],"sourcesContent":["import { useValue } from '@tldraw/state-react'\nimport { TLShapeId } from '@tldraw/tlschema'\nimport { useEditor } from './useEditor'\n\n/** @public */\nexport function useIsCropping(shapeId: TLShapeId) {\n\tconst editor = useEditor()\n\treturn useValue('isCropping', () => editor.getCroppingShapeId() === shapeId, [editor, shapeId])\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,gBAAgB;;AAEzB,SAAS,iBAAiB;;;AAGnB,SAAS,cAAc,OAAA,EAAoB;IACjD,MAAM,6LAAS,YAAA,CAAU;IACzB,yLAAO,WAAA,EAAS,cAAc,IAAM,OAAO,kBAAA,CAAmB,MAAM,SAAS;QAAC;QAAQ,OAAO;KAAC;AAC/F","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1839, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useIsEditing.ts"],"sourcesContent":["import { useValue } from '@tldraw/state-react'\nimport { TLShapeId } from '@tldraw/tlschema'\nimport { useEditor } from './useEditor'\n\n/** @public */\nexport function useIsEditing(shapeId: TLShapeId) {\n\tconst editor = useEditor()\n\treturn useValue('isEditing', () => editor.getEditingShapeId() === shapeId, [editor, shapeId])\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,gBAAgB;;AAEzB,SAAS,iBAAiB;;;AAGnB,SAAS,aAAa,OAAA,EAAoB;IAChD,MAAM,6LAAS,YAAA,CAAU;IACzB,yLAAO,WAAA,EAAS,aAAa,IAAM,OAAO,iBAAA,CAAkB,MAAM,SAAS;QAAC;QAAQ,OAAO;KAAC;AAC7F","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1862, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/usePassThroughMouseOverEvents.ts"],"sourcesContent":["import { RefObject, useEffect } from 'react'\nimport { preventDefault } from '../utils/dom'\nimport { useContainer } from './useContainer'\n\n/** @public */\nexport function usePassThroughMouseOverEvents(ref: RefObject<HTMLElement>) {\n\tif (!ref) throw Error('usePassThroughWheelEvents must be passed a ref')\n\tconst container = useContainer()\n\n\tuseEffect(() => {\n\t\tfunction onMouseOver(e: MouseEvent) {\n\t\t\tif ((e as any).isSpecialRedispatchedEvent) return\n\t\t\tpreventDefault(e)\n\t\t\tconst cvs = container.querySelector('.tl-canvas')\n\t\t\tif (!cvs) return\n\t\t\tconst newEvent = new PointerEvent(e.type, e as any)\n\t\t\t;(newEvent as any).isSpecialRedispatchedEvent = true\n\t\t\tcvs.dispatchEvent(newEvent)\n\t\t}\n\n\t\tconst elm = ref.current\n\t\tif (!elm) return\n\n\t\telm.addEventListener('mouseover', onMouseOver, { passive: false })\n\t\treturn () => {\n\t\t\telm.removeEventListener('mouseover', onMouseOver)\n\t\t}\n\t}, [container, ref])\n}\n"],"names":[],"mappings":";;;AAAA,SAAoB,iBAAiB;AACrC,SAAS,sBAAsB;AAC/B,SAAS,oBAAoB;;;;AAGtB,SAAS,8BAA8B,GAAA,EAA6B;IAC1E,IAAI,CAAC,IAAK,CAAA,MAAM,MAAM,gDAAgD;IACtE,MAAM,mMAAY,eAAA,CAAa;IAE/B,CAAA,GAAA,qMAAA,CAAA,YAAA,EAAU,MAAM;QACf,SAAS,YAAY,CAAA,EAAe;YACnC,IAAK,EAAU,0BAAA,CAA4B,CAAA;YAC3C,CAAA,GAAA,yKAAA,CAAA,iBAAA,EAAe,CAAC;YAChB,MAAM,MAAM,UAAU,aAAA,CAAc,YAAY;YAChD,IAAI,CAAC,IAAK,CAAA;YACV,MAAM,WAAW,IAAI,aAAa,EAAE,IAAA,EAAM,CAAQ;YAChD,SAAiB,0BAAA,GAA6B;YAChD,IAAI,aAAA,CAAc,QAAQ;QAC3B;QAEA,MAAM,MAAM,IAAI,OAAA;QAChB,IAAI,CAAC,IAAK,CAAA;QAEV,IAAI,gBAAA,CAAiB,aAAa,aAAa;YAAE,SAAS;QAAM,CAAC;QACjE,OAAO,MAAM;YACZ,IAAI,mBAAA,CAAoB,aAAa,WAAW;QACjD;IACD,GAAG;QAAC;QAAW,GAAG;KAAC;AACpB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1905, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useSelectionEvents.ts"],"sourcesContent":["import { useMemo } from 'react'\nimport { RIGHT_MOUSE_BUTTON } from '../constants'\nimport { TLSelectionHandle } from '../editor/types/selection-types'\nimport {\n\tloopToHtmlElement,\n\treleasePointerCapture,\n\tsetPointerCapture,\n\tstopEventPropagation,\n} from '../utils/dom'\nimport { getPointerInfo } from '../utils/getPointerInfo'\nimport { useEditor } from './useEditor'\n\n/** @public */\nexport function useSelectionEvents(handle: TLSelectionHandle) {\n\tconst editor = useEditor()\n\n\tconst events = useMemo(\n\t\tfunction selectionEvents() {\n\t\t\tconst onPointerDown: React.PointerEventHandler = (e) => {\n\t\t\t\tif ((e as any).isKilled) return\n\n\t\t\t\tif (e.button === RIGHT_MOUSE_BUTTON) {\n\t\t\t\t\teditor.dispatch({\n\t\t\t\t\t\ttype: 'pointer',\n\t\t\t\t\t\ttarget: 'selection',\n\t\t\t\t\t\thandle,\n\t\t\t\t\t\tname: 'right_click',\n\t\t\t\t\t\t...getPointerInfo(e),\n\t\t\t\t\t})\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (e.button !== 0) return\n\n\t\t\t\t// Because the events are probably set on SVG elements,\n\t\t\t\t// we need to instead place pointer capture on the first HTML\n\t\t\t\t// element above the event's target; and set a listener to\n\t\t\t\t// remove pointer capture when the pointer is released.\n\n\t\t\t\tconst elm = loopToHtmlElement(e.currentTarget)\n\n\t\t\t\tfunction releaseCapture() {\n\t\t\t\t\telm.removeEventListener('pointerup', releaseCapture)\n\t\t\t\t\treleasePointerCapture(elm, e)\n\t\t\t\t}\n\n\t\t\t\tsetPointerCapture(elm, e)\n\t\t\t\telm.addEventListener('pointerup', releaseCapture)\n\n\t\t\t\teditor.dispatch({\n\t\t\t\t\tname: 'pointer_down',\n\t\t\t\t\ttype: 'pointer',\n\t\t\t\t\ttarget: 'selection',\n\t\t\t\t\thandle,\n\t\t\t\t\t...getPointerInfo(e),\n\t\t\t\t})\n\t\t\t\tstopEventPropagation(e)\n\t\t\t}\n\n\t\t\t// Track the last screen point\n\t\t\tlet lastX: number, lastY: number\n\n\t\t\tfunction onPointerMove(e: React.PointerEvent) {\n\t\t\t\tif ((e as any).isKilled) return\n\t\t\t\tif (e.button !== 0) return\n\t\t\t\tif (e.clientX === lastX && e.clientY === lastY) return\n\t\t\t\tlastX = e.clientX\n\t\t\t\tlastY = e.clientY\n\n\t\t\t\teditor.dispatch({\n\t\t\t\t\tname: 'pointer_move',\n\t\t\t\t\ttype: 'pointer',\n\t\t\t\t\ttarget: 'selection',\n\t\t\t\t\thandle,\n\t\t\t\t\t...getPointerInfo(e),\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst onPointerUp: React.PointerEventHandler = (e) => {\n\t\t\t\tif ((e as any).isKilled) return\n\t\t\t\tif (e.button !== 0) return\n\n\t\t\t\teditor.dispatch({\n\t\t\t\t\tname: 'pointer_up',\n\t\t\t\t\ttype: 'pointer',\n\t\t\t\t\ttarget: 'selection',\n\t\t\t\t\thandle,\n\t\t\t\t\t...getPointerInfo(e),\n\t\t\t\t})\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tonPointerDown,\n\t\t\t\tonPointerMove,\n\t\t\t\tonPointerUp,\n\t\t\t}\n\t\t},\n\t\t[editor, handle]\n\t)\n\n\treturn events\n}\n"],"names":[],"mappings":";;;AAAA,SAAS,eAAe;AACxB,SAAS,0BAA0B;AAEnC;AAMA,SAAS,sBAAsB;AAC/B,SAAS,iBAAiB;;;;;;AAGnB,SAAS,mBAAmB,MAAA,EAA2B;IAC7D,MAAM,6LAAS,YAAA,CAAU;IAEzB,MAAM,SAAS,oNAAA,EACd,SAAS,kBAAkB;QAC1B,MAAM,gBAA2C,CAAC,MAAM;YACvD,IAAK,EAAU,QAAA,CAAU,CAAA;YAEzB,IAAI,EAAE,MAAA,4KAAW,qBAAA,EAAoB;gBACpC,OAAO,QAAA,CAAS;oBACf,MAAM;oBACN,QAAQ;oBACR;oBACA,MAAM;oBACN,GAAG,0MAAA,EAAe,CAAC,CAAA;gBACpB,CAAC;gBACD;YACD;YAEA,IAAI,EAAE,MAAA,KAAW,EAAG,CAAA;YAOpB,MAAM,OAAM,iMAAA,EAAkB,EAAE,aAAa;YAE7C,SAAS,iBAAiB;gBACzB,IAAI,mBAAA,CAAoB,aAAa,cAAc;gBACnD,CAAA,GAAA,yKAAA,CAAA,wBAAA,EAAsB,KAAK,CAAC;YAC7B;YAEA,CAAA,GAAA,yKAAA,CAAA,oBAAA,EAAkB,KAAK,CAAC;YACxB,IAAI,gBAAA,CAAiB,aAAa,cAAc;YAEhD,OAAO,QAAA,CAAS;gBACf,MAAM;gBACN,MAAM;gBACN,QAAQ;gBACR;gBACA,4LAAG,iBAAA,EAAe,CAAC,CAAA;YACpB,CAAC;YACD,CAAA,GAAA,yKAAA,CAAA,uBAAA,EAAqB,CAAC;QACvB;QAGA,IAAI,OAAe;QAEnB,SAAS,cAAc,CAAA,EAAuB;YAC7C,IAAK,EAAU,QAAA,CAAU,CAAA;YACzB,IAAI,EAAE,MAAA,KAAW,EAAG,CAAA;YACpB,IAAI,EAAE,OAAA,KAAY,SAAS,EAAE,OAAA,KAAY,MAAO,CAAA;YAChD,QAAQ,EAAE,OAAA;YACV,QAAQ,EAAE,OAAA;YAEV,OAAO,QAAA,CAAS;gBACf,MAAM;gBACN,MAAM;gBACN,QAAQ;gBACR;gBACA,4LAAG,iBAAA,EAAe,CAAC,CAAA;YACpB,CAAC;QACF;QAEA,MAAM,cAAyC,CAAC,MAAM;YACrD,IAAK,EAAU,QAAA,CAAU,CAAA;YACzB,IAAI,EAAE,MAAA,KAAW,EAAG,CAAA;YAEpB,OAAO,QAAA,CAAS;gBACf,MAAM;gBACN,MAAM;gBACN,QAAQ;gBACR;gBACA,4LAAG,iBAAA,EAAe,CAAC,CAAA;YACpB,CAAC;QACF;QAEA,OAAO;YACN;YACA;YACA;QACD;IACD,GACA;QAAC;QAAQ,MAAM;KAAA;IAGhB,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1995, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useTLStore.ts"],"sourcesContent":["import { areObjectsShallowEqual } from '@tldraw/utils'\nimport { useState } from 'react'\nimport {\n\tTLStoreOptions,\n\tTLStoreSchemaOptions,\n\tcreateTLSchemaFromUtils,\n\tcreateTLStore,\n} from '../config/createTLStore'\n\n/** @public */\nexport function useTLStore(opts: TLStoreOptions) {\n\tconst [current, setCurrent] = useState(() => ({ store: createTLStore(opts), opts }))\n\n\tif (!areObjectsShallowEqual(current.opts, opts)) {\n\t\tconst next = { store: createTLStore(opts), opts }\n\t\tsetCurrent(next)\n\t\treturn next.store\n\t}\n\n\treturn current.store\n}\n\n/** @public */\nexport function useTLSchemaFromUtils(opts: TLStoreSchemaOptions) {\n\tconst [current, setCurrent] = useState(() => ({ opts, schema: createTLSchemaFromUtils(opts) }))\n\n\tif (!areObjectsShallowEqual(current.opts, opts)) {\n\t\tconst next = createTLSchemaFromUtils(opts)\n\t\tsetCurrent({ opts, schema: next })\n\t\treturn next\n\t}\n\n\treturn current.schema\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,8BAA8B;;AACvC,SAAS,gBAAgB;AACzB;;;;AAQO,SAAS,WAAW,IAAA,EAAsB;IAChD,MAAM,CAAC,SAAS,UAAU,CAAA,6MAAI,WAAA,EAAS,IAAA,CAAO;YAAE,OAAO,yMAAA,EAAc,IAAI;YAAG;QAAK,CAAA,CAAE;IAEnF,IAAI,wKAAC,yBAAA,EAAuB,QAAQ,IAAA,EAAM,IAAI,GAAG;QAChD,MAAM,OAAO;YAAE,gMAAO,gBAAA,EAAc,IAAI;YAAG;QAAK;QAChD,WAAW,IAAI;QACf,OAAO,KAAK,KAAA;IACb;IAEA,OAAO,QAAQ,KAAA;AAChB;AAGO,SAAS,qBAAqB,IAAA,EAA4B;IAChE,MAAM,CAAC,SAAS,UAAU,CAAA,6MAAI,WAAA,EAAS,IAAA,CAAO;YAAE;YAAM,SAAQ,kNAAA,EAAwB,IAAI;QAAE,CAAA,CAAE;IAE9F,IAAI,wKAAC,yBAAA,EAAuB,QAAQ,IAAA,EAAM,IAAI,GAAG;QAChD,MAAM,gMAAO,0BAAA,EAAwB,IAAI;QACzC,WAAW;YAAE;YAAM,QAAQ;QAAK,CAAC;QACjC,OAAO;IACR;IAEA,OAAO,QAAQ,MAAA;AAChB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2044, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/an/studio/node_modules/%40tldraw/editor/src/lib/hooks/useViewportHeight.ts"],"sourcesContent":["import { useLayoutEffect, useState } from 'react'\n\n/*!\n * BSD License: https://github.com/outline/rich-markdown-editor/blob/main/LICENSE\n * Copyright (c) 2020 General Outline, Inc (https://www.getoutline.com/) and individual contributors.\n *\n * Returns the height of the viewport.\n * This is mainly to account for virtual keyboards on mobile devices.\n *\n * N.B. On iOS, you have to take into account the offsetTop as well so that you get an accurate position\n * while using the virtual keyboard.\n */\n/** @public */\nexport function useViewportHeight(): number {\n\tconst visualViewport = window.visualViewport\n\tconst [height, setHeight] = useState<number>(() =>\n\t\tvisualViewport ? visualViewport.height + visualViewport.offsetTop : window.innerHeight\n\t)\n\n\tuseLayoutEffect(() => {\n\t\tconst handleResize = () => {\n\t\t\tconst visualViewport = window.visualViewport\n\t\t\tsetHeight(() =>\n\t\t\t\tvisualViewport ? visualViewport.height + visualViewport.offsetTop : window.innerHeight\n\t\t\t)\n\t\t}\n\n\t\twindow.visualViewport?.addEventListener('resize', handleResize)\n\t\twindow.visualViewport?.addEventListener('scroll', handleResize)\n\n\t\treturn () => {\n\t\t\twindow.visualViewport?.removeEventListener('resize', handleResize)\n\t\t\twindow.visualViewport?.removeEventListener('scroll', handleResize)\n\t\t}\n\t}, [])\n\treturn height\n}\n"],"names":["visualViewport"],"mappings":";;;AAAA,SAAS,iBAAiB,gBAAgB;;AAE1C;;;;;;;;;CAAA,GAWO,SAAS,oBAA4B;IAC3C,MAAM,iBAAiB,OAAO,cAAA;IAC9B,MAAM,CAAC,QAAQ,SAAS,CAAA,6MAAI,WAAA,EAAiB,IAC5C,iBAAiB,eAAe,MAAA,GAAS,eAAe,SAAA,GAAY,OAAO,WAAA;IAG5E,CAAA,GAAA,qMAAA,CAAA,kBAAA,EAAgB,MAAM;QACrB,MAAM,eAAe,MAAM;YAC1B,MAAMA,kBAAiB,OAAO,cAAA;YAC9B,UAAU,IACTA,kBAAiBA,gBAAe,MAAA,GAASA,gBAAe,SAAA,GAAY,OAAO,WAAA;QAE7E;QAEA,OAAO,cAAA,EAAgB,iBAAiB,UAAU,YAAY;QAC9D,OAAO,cAAA,EAAgB,iBAAiB,UAAU,YAAY;QAE9D,OAAO,MAAM;YACZ,OAAO,cAAA,EAAgB,oBAAoB,UAAU,YAAY;YACjE,OAAO,cAAA,EAAgB,oBAAoB,UAAU,YAAY;QAClE;IACD,GAAG,CAAC,CAAC;IACL,OAAO;AACR","ignoreList":[0],"debugId":null}}]
}