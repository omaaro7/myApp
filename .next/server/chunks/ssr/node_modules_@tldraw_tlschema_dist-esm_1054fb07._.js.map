{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/misc/id-validator.ts"],"sourcesContent":["import type { RecordId, UnknownRecord } from '@tldraw/store'\nimport { T } from '@tldraw/validate'\n\n/** @public */\nexport function idValidator<Id extends RecordId<UnknownRecord>>(\n\tprefix: Id['__type__']['typeName']\n): T.Validator<Id> {\n\treturn T.string.refine((id) => {\n\t\tif (!id.startsWith(`${prefix}:`)) {\n\t\t\tthrow new Error(`${prefix} ID must start with \"${prefix}:\"`)\n\t\t}\n\t\treturn id as Id\n\t})\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,SAAS;;AAGX,SAAS,YACf,MAAA,EACkB;IAClB,8MAAO,IAAA,CAAE,MAAA,CAAO,MAAA,CAAO,CAAC,OAAO;QAC9B,IAAI,CAAC,GAAG,UAAA,CAAW,GAAG,MAAM,CAAA,CAAA,CAAG,GAAG;YACjC,MAAM,IAAI,MAAM,GAAG,MAAM,CAAA,qBAAA,EAAwB,MAAM,CAAA,EAAA,CAAI;QAC5D;QACA,OAAO;IACR,CAAC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/assets/TLBaseAsset.ts"],"sourcesContent":["import { BaseRecord } from '@tldraw/store'\nimport { JsonObject } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { idValidator } from '../misc/id-validator'\nimport { TLAssetId } from '../records/TLAsset'\n\n/** @public */\nexport interface TLBaseAsset<Type extends string, Props> extends BaseRecord<'asset', TLAssetId> {\n\ttype: Type\n\tprops: Props\n\tmeta: JsonObject\n}\n\n/**\n * A validator for asset record type Ids.\n *\n * @public */\nexport const assetIdValidator = idValidator<TLAssetId>('asset')\n\n/**\n * Create a validator for an asset record type.\n *\n * @param type - The type of the asset\n * @param props - The validator for the asset's props\n *\n * @public */\nexport function createAssetValidator<Type extends string, Props extends JsonObject>(\n\ttype: Type,\n\tprops: T.Validator<Props>\n) {\n\treturn T.object<{\n\t\tid: TLAssetId\n\t\ttypeName: 'asset'\n\t\ttype: Type\n\t\tprops: Props\n\t\tmeta: JsonObject\n\t}>({\n\t\tid: assetIdValidator,\n\t\ttypeName: T.literal('asset'),\n\t\ttype: T.literal(type),\n\t\tprops,\n\t\tmeta: T.jsonValue as T.ObjectValidator<JsonObject>,\n\t})\n}\n"],"names":[],"mappings":";;;;AAEA,SAAS,SAAS;;AAClB,SAAS,mBAAmB;;;AAcrB,MAAM,uMAAmB,cAAA,EAAuB,OAAO;AASvD,SAAS,qBACf,IAAA,EACA,KAAA,EACC;IACD,8MAAO,IAAA,CAAE,MAAA,CAMN;QACF,IAAI;QACJ,iNAAU,IAAA,CAAE,OAAA,CAAQ,OAAO;QAC3B,6MAAM,IAAA,CAAE,OAAA,CAAQ,IAAI;QACpB;QACA,6MAAM,IAAA,CAAE,SAAA;IACT,CAAC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/misc/geometry-types.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\n\n/**\n * A serializable model for 2D boxes.\n *\n * @public */\nexport interface BoxModel {\n\tx: number\n\ty: number\n\tw: number\n\th: number\n}\n\n/**\n * A serializable model for 2D vectors.\n *\n * @public */\nexport interface VecModel {\n\tx: number\n\ty: number\n\tz?: number\n}\n\n/** @public */\nexport const vecModelValidator: T.ObjectValidator<VecModel> = T.object({\n\tx: T.number,\n\ty: T.number,\n\tz: T.number.optional(),\n})\n\n/** @public */\nexport const boxModelValidator: T.ObjectValidator<BoxModel> = T.object({\n\tx: T.number,\n\ty: T.number,\n\tw: T.number,\n\th: T.number,\n})\n"],"names":[],"mappings":";;;;;AAAA,SAAS,SAAS;;AAwBX,MAAM,2NAAiD,IAAA,CAAE,MAAA,CAAO;IACtE,0MAAG,IAAA,CAAE,MAAA;IACL,0MAAG,IAAA,CAAE,MAAA;IACL,0MAAG,IAAA,CAAE,MAAA,CAAO,QAAA,CAAS;AACtB,CAAC;AAGM,MAAM,2NAAiD,IAAA,CAAE,MAAA,CAAO;IACtE,0MAAG,IAAA,CAAE,MAAA;IACL,0MAAG,IAAA,CAAE,MAAA;IACL,0MAAG,IAAA,CAAE,MAAA;IACL,0MAAG,IAAA,CAAE,MAAA;AACN,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/misc/TLOpacity.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\n\n/** @public */\nexport type TLOpacityType = number\n\n/** @public */\nexport const opacityValidator = T.number.check((n) => {\n\tif (n < 0 || n > 1) {\n\t\tthrow new T.ValidationError('Opacity must be between 0 and 1')\n\t}\n})\n"],"names":[],"mappings":";;;;AAAA,SAAS,SAAS;;AAMX,MAAM,0NAAmB,IAAA,CAAE,MAAA,CAAO,KAAA,CAAM,CAAC,MAAM;IACrD,IAAI,IAAI,KAAK,IAAI,GAAG;QACnB,MAAM,2MAAI,IAAA,CAAE,eAAA,CAAgB,iCAAiC;IAC9D;AACD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/shapes/TLBaseShape.ts"],"sourcesContent":["import { BaseRecord } from '@tldraw/store'\nimport { IndexKey, JsonObject } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { TLOpacityType, opacityValidator } from '../misc/TLOpacity'\nimport { idValidator } from '../misc/id-validator'\nimport { TLParentId, TLShapeId } from '../records/TLShape'\n\n/** @public */\nexport interface TLBaseShape<Type extends string, Props extends object>\n\textends BaseRecord<'shape', TLShapeId> {\n\ttype: Type\n\tx: number\n\ty: number\n\trotation: number\n\tindex: IndexKey\n\tparentId: TLParentId\n\tisLocked: boolean\n\topacity: TLOpacityType\n\tprops: Props\n\tmeta: JsonObject\n}\n\n/** @public */\nexport const parentIdValidator = T.string.refine((id) => {\n\tif (!id.startsWith('page:') && !id.startsWith('shape:')) {\n\t\tthrow new Error('Parent ID must start with \"page:\" or \"shape:\"')\n\t}\n\treturn id as TLParentId\n})\n\n/** @public */\nexport const shapeIdValidator = idValidator<TLShapeId>('shape')\n\n/** @public */\nexport function createShapeValidator<\n\tType extends string,\n\tProps extends JsonObject,\n\tMeta extends JsonObject,\n>(\n\ttype: Type,\n\tprops?: { [K in keyof Props]: T.Validatable<Props[K]> },\n\tmeta?: { [K in keyof Meta]: T.Validatable<Meta[K]> }\n) {\n\treturn T.object<TLBaseShape<Type, Props>>({\n\t\tid: shapeIdValidator,\n\t\ttypeName: T.literal('shape'),\n\t\tx: T.number,\n\t\ty: T.number,\n\t\trotation: T.number,\n\t\tindex: T.indexKey,\n\t\tparentId: parentIdValidator,\n\t\ttype: T.literal(type),\n\t\tisLocked: T.boolean,\n\t\topacity: opacityValidator,\n\t\tprops: props ? T.object(props) : (T.jsonValue as any),\n\t\tmeta: meta ? T.object(meta) : (T.jsonValue as any),\n\t})\n}\n"],"names":[],"mappings":";;;;;AAEA,SAAS,SAAS;;AAClB,SAAwB,wBAAwB;AAChD,SAAS,mBAAmB;;;;AAmBrB,MAAM,2NAAoB,IAAA,CAAE,MAAA,CAAO,MAAA,CAAO,CAAC,OAAO;IACxD,IAAI,CAAC,GAAG,UAAA,CAAW,OAAO,KAAK,CAAC,GAAG,UAAA,CAAW,QAAQ,GAAG;QACxD,MAAM,IAAI,MAAM,+CAA+C;IAChE;IACA,OAAO;AACR,CAAC;AAGM,MAAM,uMAAmB,cAAA,EAAuB,OAAO;AAGvD,SAAS,qBAKf,IAAA,EACA,KAAA,EACA,IAAA,EACC;IACD,8MAAO,IAAA,CAAE,MAAA,CAAiC;QACzC,IAAI;QACJ,iNAAU,IAAA,CAAE,OAAA,CAAQ,OAAO;QAC3B,0MAAG,IAAA,CAAE,MAAA;QACL,0MAAG,IAAA,CAAE,MAAA;QACL,iNAAU,IAAA,CAAE,MAAA;QACZ,8MAAO,IAAA,CAAE,QAAA;QACT,UAAU;QACV,MAAM,2MAAA,CAAE,OAAA,CAAQ,IAAI;QACpB,iNAAU,IAAA,CAAE,OAAA;QACZ,mLAAS,mBAAA;QACT,OAAO,+MAAQ,IAAA,CAAE,MAAA,CAAO,KAAK,2MAAK,IAAA,CAAE,SAAA;QACpC,MAAM,8MAAO,IAAA,CAAE,MAAA,CAAO,IAAI,2MAAK,IAAA,CAAE,SAAA;IAClC,CAAC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/bindings/TLBaseBinding.ts"],"sourcesContent":["import { BaseRecord } from '@tldraw/store'\nimport { JsonObject } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { idValidator } from '../misc/id-validator'\nimport { TLBindingId } from '../records/TLBinding'\nimport { TLShapeId } from '../records/TLShape'\nimport { shapeIdValidator } from '../shapes/TLBaseShape'\n\n/** @public */\nexport interface TLBaseBinding<Type extends string, Props extends object>\n\textends BaseRecord<'binding', TLBindingId> {\n\ttype: Type\n\tfromId: TLShapeId\n\ttoId: TLShapeId\n\tprops: Props\n\tmeta: JsonObject\n}\n\n/** @public */\nexport const bindingIdValidator = idValidator<TLBindingId>('binding')\n\n/** @public */\nexport function createBindingValidator<\n\tType extends string,\n\tProps extends JsonObject,\n\tMeta extends JsonObject,\n>(\n\ttype: Type,\n\tprops?: { [K in keyof Props]: T.Validatable<Props[K]> },\n\tmeta?: { [K in keyof Meta]: T.Validatable<Meta[K]> }\n) {\n\treturn T.object<TLBaseBinding<Type, Props>>({\n\t\tid: bindingIdValidator,\n\t\ttypeName: T.literal('binding'),\n\t\ttype: T.literal(type),\n\t\tfromId: shapeIdValidator,\n\t\ttoId: shapeIdValidator,\n\t\tprops: props ? T.object(props) : (T.jsonValue as any),\n\t\tmeta: meta ? T.object(meta) : (T.jsonValue as any),\n\t})\n}\n"],"names":[],"mappings":";;;;AAEA,SAAS,SAAS;;AAClB,SAAS,mBAAmB;AAG5B,SAAS,wBAAwB;;;;AAa1B,MAAM,yMAAqB,cAAA,EAAyB,SAAS;AAG7D,SAAS,uBAKf,IAAA,EACA,KAAA,EACA,IAAA,EACC;IACD,6MAAO,KAAA,CAAE,MAAA,CAAmC;QAC3C,IAAI;QACJ,iNAAU,IAAA,CAAE,OAAA,CAAQ,SAAS;QAC7B,6MAAM,IAAA,CAAE,OAAA,CAAQ,IAAI;QACpB,QAAQ,iMAAA;QACR,oLAAM,mBAAA;QACN,OAAO,+MAAQ,IAAA,CAAE,MAAA,CAAO,KAAK,IAAK,2MAAA,CAAE,SAAA;QACpC,MAAM,8MAAO,IAAA,CAAE,MAAA,CAAO,IAAI,2MAAK,IAAA,CAAE,SAAA;IAClC,CAAC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/records/TLBinding.ts"],"sourcesContent":["import {\n\tRecordId,\n\tUnknownRecord,\n\tcreateMigrationIds,\n\tcreateRecordMigrationSequence,\n\tcreateRecordType,\n} from '@tldraw/store'\nimport { Expand, mapObjectMapValues, uniqueId } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { TLArrowBinding } from '../bindings/TLArrowBinding'\nimport { TLBaseBinding, createBindingValidator } from '../bindings/TLBaseBinding'\nimport { SchemaPropsInfo } from '../createTLSchema'\nimport { TLPropsMigrations } from '../recordsWithProps'\n\n/**\n * The default set of bindings that are available in the editor.\n *\n * @public */\nexport type TLDefaultBinding = TLArrowBinding\n\n/**\n * A type for a binding that is available in the editor but whose type is\n * unknown—either one of the editor's default bindings or else a custom binding.\n *\n * @public */\nexport type TLUnknownBinding = TLBaseBinding<string, object>\n\n/**\n * The set of all bindings that are available in the editor, including unknown bindings.\n *\n * @public\n */\nexport type TLBinding = TLDefaultBinding | TLUnknownBinding\n\n/** @public */\nexport type TLBindingUpdate<T extends TLBinding = TLBinding> = Expand<{\n\tid: TLBindingId\n\ttype: T['type']\n\ttypeName?: T['typeName']\n\tfromId?: T['fromId']\n\ttoId?: T['toId']\n\tprops?: Partial<T['props']>\n\tmeta?: Partial<T['meta']>\n}>\n\n/** @public */\nexport type TLBindingCreate<T extends TLBinding = TLBinding> = Expand<{\n\tid?: TLBindingId\n\ttype: T['type']\n\ttypeName?: T['typeName']\n\tfromId: T['fromId']\n\ttoId: T['toId']\n\tprops?: Partial<T['props']>\n\tmeta?: Partial<T['meta']>\n}>\n\n/**\n * An ID for a {@link TLBinding}.\n *\n * @public\n */\nexport type TLBindingId = RecordId<TLUnknownBinding>\n\n/** @public */\nexport const rootBindingVersions = createMigrationIds('com.tldraw.binding', {} as const)\n\n/** @public */\nexport const rootBindingMigrations = createRecordMigrationSequence({\n\tsequenceId: 'com.tldraw.binding',\n\trecordType: 'binding',\n\tsequence: [],\n})\n\n/** @public */\nexport function isBinding(record?: UnknownRecord): record is TLBinding {\n\tif (!record) return false\n\treturn record.typeName === 'binding'\n}\n\n/** @public */\nexport function isBindingId(id?: string): id is TLBindingId {\n\tif (!id) return false\n\treturn id.startsWith('binding:')\n}\n\n/** @public */\nexport function createBindingId(id?: string): TLBindingId {\n\treturn `binding:${id ?? uniqueId()}` as TLBindingId\n}\n\n/**\n * @public\n */\nexport function createBindingPropsMigrationSequence(\n\tmigrations: TLPropsMigrations\n): TLPropsMigrations {\n\treturn migrations\n}\n\n/**\n * @public\n */\nexport function createBindingPropsMigrationIds<S extends string, T extends Record<string, number>>(\n\tbindingType: S,\n\tids: T\n): { [k in keyof T]: `com.tldraw.binding.${S}/${T[k]}` } {\n\treturn mapObjectMapValues(ids, (_k, v) => `com.tldraw.binding.${bindingType}/${v}`) as any\n}\n\n/** @internal */\nexport function createBindingRecordType(bindings: Record<string, SchemaPropsInfo>) {\n\treturn createRecordType<TLBinding>('binding', {\n\t\tscope: 'document',\n\t\tvalidator: T.model(\n\t\t\t'binding',\n\t\t\tT.union(\n\t\t\t\t'type',\n\t\t\t\tmapObjectMapValues(bindings, (type, { props, meta }) =>\n\t\t\t\t\tcreateBindingValidator(type, props, meta)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t}).withDefaultProperties(() => ({\n\t\tmeta: {},\n\t}))\n}\n"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;AAOA,SAAiB,oBAAoB,gBAAgB;;AACrD,SAAS,SAAS;AAElB,SAAwB,8BAA8B;;;;;AAsD/C,MAAM,8LAAsB,qBAAA,EAAmB,sBAAsB,CAAC,CAAU;AAGhF,MAAM,gMAAwB,gCAAA,EAA8B;IAClE,YAAY;IACZ,YAAY;IACZ,UAAU,CAAC,CAAA;AACZ,CAAC;AAGM,SAAS,UAAU,MAAA,EAA6C;IACtE,IAAI,CAAC,OAAQ,CAAA,OAAO;IACpB,OAAO,OAAO,QAAA,KAAa;AAC5B;AAGO,SAAS,YAAY,EAAA,EAAgC;IAC3D,IAAI,CAAC,GAAI,CAAA,OAAO;IAChB,OAAO,GAAG,UAAA,CAAW,UAAU;AAChC;AAGO,SAAS,gBAAgB,EAAA,EAA0B;IACzD,OAAO,CAAA,QAAA,EAAW,yKAAM,WAAA,CAAS,CAAC,GAAA;AACnC;AAKO,SAAS,oCACf,UAAA,EACoB;IACpB,OAAO;AACR;AAKO,SAAS,+BACf,WAAA,EACA,GAAA,EACwD;IACxD,8KAAO,qBAAA,EAAmB,KAAK,CAAC,IAAI,IAAM,CAAA,mBAAA,EAAsB,WAAW,CAAA,CAAA,EAAI,CAAC,EAAE;AACnF;AAGO,SAAS,wBAAwB,QAAA,EAA2C;IAClF,QAAO,6LAAA,EAA4B,WAAW;QAC7C,OAAO;QACP,kNAAW,IAAA,CAAE,KAAA,CACZ,kNACA,IAAA,CAAE,KAAA,CACD,SACA,2LAAA,EAAmB,UAAU,CAAC,MAAM,EAAE,KAAA,EAAO,IAAA,CAAK,CAAA,yLACjD,yBAAA,EAAuB,MAAM,OAAO,IAAI;IAI5C,CAAC,EAAE,qBAAA,CAAsB,IAAA,CAAO;YAC/B,MAAM,CAAC;QACR,CAAA,CAAE;AACH","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/styles/StyleProp.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\n\n/**\n * A `StyleProp` is a property of a shape that follows some special rules.\n *\n * 1. The same value can be set on lots of shapes at the same time.\n *\n * 2. The last used value is automatically saved and applied to new shapes.\n *\n * For example, {@link DefaultColorStyle} is a style prop used by tldraw's default shapes to set\n * their color. If you try selecting several shapes on tldraw.com and changing their color, you'll\n * see that the color is applied to all of them. Then, if you draw a new shape, it'll have the same\n * color as the one you just set.\n *\n * You can use styles in your own shapes by either defining your own (see {@link StyleProp.define}\n * and {@link StyleProp.defineEnum}) or using tldraw's default ones, like {@link DefaultColorStyle}.\n * When you define a shape, pass a `props` object describing all of your shape's properties, using\n * `StyleProp`s for the ones you want to be styles. See the\n * {@link https://github.com/tldraw/tldraw/tree/main/apps/examples | custom styles example}\n * for more.\n *\n * @public\n */\nexport class StyleProp<Type> implements T.Validatable<Type> {\n\t/**\n\t * Define a new {@link StyleProp}.\n\t *\n\t * @param uniqueId - Each StyleProp must have a unique ID. We recommend you prefix this with\n\t * your app/library name.\n\t * @param options -\n\t * - `defaultValue`: The default value for this style prop.\n\t *\n\t * - `type`: Optionally, describe what type of data you expect for this style prop.\n\t *\n\t * @example\n\t * ```ts\n\t * import {T} from '@tldraw/validate'\n\t * import {StyleProp} from '@tldraw/tlschema'\n\t *\n\t * const MyLineWidthProp = StyleProp.define('myApp:lineWidth', {\n\t *   defaultValue: 1,\n\t *   type: T.number,\n\t * })\n\t * ```\n\t * @public\n\t */\n\tstatic define<Type>(\n\t\tuniqueId: string,\n\t\toptions: { defaultValue: Type; type?: T.Validatable<Type> }\n\t) {\n\t\tconst { defaultValue, type = T.any } = options\n\t\treturn new StyleProp<Type>(uniqueId, defaultValue, type)\n\t}\n\n\t/**\n\t * Define a new {@link StyleProp} as a list of possible values.\n\t *\n\t * @param uniqueId - Each StyleProp must have a unique ID. We recommend you prefix this with\n\t * your app/library name.\n\t * @param options -\n\t * - `defaultValue`: The default value for this style prop.\n\t *\n\t * - `values`: An array of possible values of this style prop.\n\t *\n\t * @example\n\t * ```ts\n\t * import {StyleProp} from '@tldraw/tlschema'\n\t *\n\t * const MySizeProp = StyleProp.defineEnum('myApp:size', {\n\t *   defaultValue: 'medium',\n\t *   values: ['small', 'medium', 'large'],\n\t * })\n\t * ```\n\t */\n\tstatic defineEnum<const Values extends readonly unknown[]>(\n\t\tuniqueId: string,\n\t\toptions: { defaultValue: Values[number]; values: Values }\n\t) {\n\t\tconst { defaultValue, values } = options\n\t\treturn new EnumStyleProp<Values[number]>(uniqueId, defaultValue, values)\n\t}\n\n\t/** @internal */\n\tprotected constructor(\n\t\treadonly id: string,\n\t\tpublic defaultValue: Type,\n\t\treadonly type: T.Validatable<Type>\n\t) {}\n\n\tsetDefaultValue(value: Type) {\n\t\tthis.defaultValue = value\n\t}\n\n\tvalidate(value: unknown) {\n\t\treturn this.type.validate(value)\n\t}\n\n\tvalidateUsingKnownGoodVersion(prevValue: Type, newValue: unknown) {\n\t\tif (this.type.validateUsingKnownGoodVersion) {\n\t\t\treturn this.type.validateUsingKnownGoodVersion(prevValue, newValue)\n\t\t} else {\n\t\t\treturn this.validate(newValue)\n\t\t}\n\t}\n}\n\n/**\n * See {@link StyleProp} & {@link StyleProp.defineEnum}\n *\n * @public\n */\nexport class EnumStyleProp<T> extends StyleProp<T> {\n\t/** @internal */\n\tconstructor(\n\t\tid: string,\n\t\tdefaultValue: T,\n\t\treadonly values: readonly T[]\n\t) {\n\t\tsuper(id, defaultValue, T.literalEnum(...values))\n\t}\n}\n\n/**\n * @public\n */\nexport type StylePropValue<T extends StyleProp<any>> = T extends StyleProp<infer U> ? U : never\n"],"names":[],"mappings":";;;;;AAAA,SAAS,SAAS;;AAuBX,MAAM,UAA+C;IAAA,cAAA,GA4DjD,YACA,EAAA,EACF,YAAA,EACE,IAAA,CACR;QAHQ,IAAA,CAAA,EAAA,GAAA;QACF,IAAA,CAAA,YAAA,GAAA;QACE,IAAA,CAAA,IAAA,GAAA;IACP;IAAA;;;;;;;;;;;;;;;;;;;;;GAAA,GAzCH,OAAO,OACN,QAAA,EACA,OAAA,EACC;QACD,MAAM,EAAE,YAAA,EAAc,8MAAO,IAAA,CAAE,GAAA,CAAI,CAAA,GAAI;QACvC,OAAO,IAAI,UAAgB,UAAU,cAAc,IAAI;IACxD;IAAA;;;;;;;;;;;;;;;;;;;GAAA,GAsBA,OAAO,WACN,QAAA,EACA,OAAA,EACC;QACD,MAAM,EAAE,YAAA,EAAc,MAAA,CAAO,CAAA,GAAI;QACjC,OAAO,IAAI,cAA8B,UAAU,cAAc,MAAM;IACxE;IASA,gBAAgB,KAAA,EAAa;QAC5B,IAAA,CAAK,YAAA,GAAe;IACrB;IAEA,SAAS,KAAA,EAAgB;QACxB,OAAO,IAAA,CAAK,IAAA,CAAK,QAAA,CAAS,KAAK;IAChC;IAEA,8BAA8B,SAAA,EAAiB,QAAA,EAAmB;QACjE,IAAI,IAAA,CAAK,IAAA,CAAK,6BAAA,EAA+B;YAC5C,OAAO,IAAA,CAAK,IAAA,CAAK,6BAAA,CAA8B,WAAW,QAAQ;QACnE,OAAO;YACN,OAAO,IAAA,CAAK,QAAA,CAAS,QAAQ;QAC9B;IACD;AACD;AAOO,MAAM,sBAAyB,UAAa;IAAA,cAAA,GAElD,YACC,EAAA,EACA,YAAA,EACS,MAAA,CACR;QACD,KAAA,CAAM,IAAI,qNAAc,IAAA,CAAE,WAAA,CAAY,GAAG,MAAM,CAAC;QAFvC,IAAA,CAAA,MAAA,GAAA;IAGV;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/records/TLShape.ts"],"sourcesContent":["import {\n\tRecordId,\n\tUnknownRecord,\n\tcreateMigrationIds,\n\tcreateRecordMigrationSequence,\n\tcreateRecordType,\n} from '@tldraw/store'\nimport { mapObjectMapValues, uniqueId } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { SchemaPropsInfo } from '../createTLSchema'\nimport { TLPropsMigrations } from '../recordsWithProps'\nimport { TLArrowShape } from '../shapes/TLArrowShape'\nimport { TLBaseShape, createShapeValidator } from '../shapes/TLBaseShape'\nimport { TLBookmarkShape } from '../shapes/TLBookmarkShape'\nimport { TLDrawShape } from '../shapes/TLDrawShape'\nimport { TLEmbedShape } from '../shapes/TLEmbedShape'\nimport { TLFrameShape } from '../shapes/TLFrameShape'\nimport { TLGeoShape } from '../shapes/TLGeoShape'\nimport { TLGroupShape } from '../shapes/TLGroupShape'\nimport { TLHighlightShape } from '../shapes/TLHighlightShape'\nimport { TLImageShape } from '../shapes/TLImageShape'\nimport { TLLineShape } from '../shapes/TLLineShape'\nimport { TLNoteShape } from '../shapes/TLNoteShape'\nimport { TLTextShape } from '../shapes/TLTextShape'\nimport { TLVideoShape } from '../shapes/TLVideoShape'\nimport { StyleProp } from '../styles/StyleProp'\nimport { TLPageId } from './TLPage'\n\n/**\n * The default set of shapes that are available in the editor.\n *\n * @public */\nexport type TLDefaultShape =\n\t| TLArrowShape\n\t| TLBookmarkShape\n\t| TLDrawShape\n\t| TLEmbedShape\n\t| TLFrameShape\n\t| TLGeoShape\n\t| TLGroupShape\n\t| TLImageShape\n\t| TLLineShape\n\t| TLNoteShape\n\t| TLTextShape\n\t| TLVideoShape\n\t| TLHighlightShape\n\n/**\n * A type for a shape that is available in the editor but whose type is\n * unknown—either one of the editor's default shapes or else a custom shape.\n *\n * @public */\nexport type TLUnknownShape = TLBaseShape<string, object>\n\n/**\n * The set of all shapes that are available in the editor, including unknown shapes.\n *\n * @public\n */\nexport type TLShape = TLDefaultShape | TLUnknownShape\n\n/** @public */\nexport type TLShapePartial<T extends TLShape = TLShape> = T extends T\n\t? {\n\t\t\tid: TLShapeId\n\t\t\ttype: T['type']\n\t\t\tprops?: Partial<T['props']>\n\t\t\tmeta?: Partial<T['meta']>\n\t\t} & Partial<Omit<T, 'type' | 'id' | 'props' | 'meta'>>\n\t: never\n\n/** @public */\nexport type TLShapeId = RecordId<TLUnknownShape>\n\n/** @public */\nexport type TLParentId = TLPageId | TLShapeId\n\n/** @public */\nexport const rootShapeVersions = createMigrationIds('com.tldraw.shape', {\n\tAddIsLocked: 1,\n\tHoistOpacity: 2,\n\tAddMeta: 3,\n\tAddWhite: 4,\n} as const)\n\n/** @public */\nexport const rootShapeMigrations = createRecordMigrationSequence({\n\tsequenceId: 'com.tldraw.shape',\n\trecordType: 'shape',\n\tsequence: [\n\t\t{\n\t\t\tid: rootShapeVersions.AddIsLocked,\n\t\t\tup: (record: any) => {\n\t\t\t\trecord.isLocked = false\n\t\t\t},\n\t\t\tdown: (record: any) => {\n\t\t\t\tdelete record.isLocked\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: rootShapeVersions.HoistOpacity,\n\t\t\tup: (record: any) => {\n\t\t\t\trecord.opacity = Number(record.props.opacity ?? '1')\n\t\t\t\tdelete record.props.opacity\n\t\t\t},\n\t\t\tdown: (record: any) => {\n\t\t\t\tconst opacity = record.opacity\n\t\t\t\tdelete record.opacity\n\t\t\t\trecord.props.opacity =\n\t\t\t\t\topacity < 0.175\n\t\t\t\t\t\t? '0.1'\n\t\t\t\t\t\t: opacity < 0.375\n\t\t\t\t\t\t\t? '0.25'\n\t\t\t\t\t\t\t: opacity < 0.625\n\t\t\t\t\t\t\t\t? '0.5'\n\t\t\t\t\t\t\t\t: opacity < 0.875\n\t\t\t\t\t\t\t\t\t? '0.75'\n\t\t\t\t\t\t\t\t\t: '1'\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: rootShapeVersions.AddMeta,\n\t\t\tup: (record: any) => {\n\t\t\t\trecord.meta = {}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: rootShapeVersions.AddWhite,\n\t\t\tup: (_record) => {\n\t\t\t\t// noop\n\t\t\t},\n\t\t\tdown: (record: any) => {\n\t\t\t\tif (record.props.color === 'white') {\n\t\t\t\t\trecord.props.color = 'black'\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t],\n})\n\n/** @public */\nexport function isShape(record?: UnknownRecord): record is TLShape {\n\tif (!record) return false\n\treturn record.typeName === 'shape'\n}\n\n/** @public */\nexport function isShapeId(id?: string): id is TLShapeId {\n\tif (!id) return false\n\treturn id.startsWith('shape:')\n}\n\n/** @public */\nexport function createShapeId(id?: string): TLShapeId {\n\treturn `shape:${id ?? uniqueId()}` as TLShapeId\n}\n\n/** @internal */\nexport function getShapePropKeysByStyle(props: Record<string, T.Validatable<any>>) {\n\tconst propKeysByStyle = new Map<StyleProp<unknown>, string>()\n\tfor (const [key, prop] of Object.entries(props)) {\n\t\tif (prop instanceof StyleProp) {\n\t\t\tif (propKeysByStyle.has(prop)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Duplicate style prop ${prop.id}. Each style prop can only be used once within a shape.`\n\t\t\t\t)\n\t\t\t}\n\t\t\tpropKeysByStyle.set(prop, key)\n\t\t}\n\t}\n\treturn propKeysByStyle\n}\n\n/**\n * @public\n */\nexport function createShapePropsMigrationSequence(\n\tmigrations: TLPropsMigrations\n): TLPropsMigrations {\n\treturn migrations\n}\n\n/**\n * @public\n */\nexport function createShapePropsMigrationIds<\n\tconst S extends string,\n\tconst T extends Record<string, number>,\n>(shapeType: S, ids: T): { [k in keyof T]: `com.tldraw.shape.${S}/${T[k]}` } {\n\treturn mapObjectMapValues(ids, (_k, v) => `com.tldraw.shape.${shapeType}/${v}`) as any\n}\n\n/** @internal */\nexport function createShapeRecordType(shapes: Record<string, SchemaPropsInfo>) {\n\treturn createRecordType<TLShape>('shape', {\n\t\tscope: 'document',\n\t\tvalidator: T.model(\n\t\t\t'shape',\n\t\t\tT.union(\n\t\t\t\t'type',\n\t\t\t\tmapObjectMapValues(shapes, (type, { props, meta }) =>\n\t\t\t\t\tcreateShapeValidator(type, props, meta)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t}).withDefaultProperties(() => ({\n\t\tx: 0,\n\t\ty: 0,\n\t\trotation: 0,\n\t\tisLocked: false,\n\t\topacity: 1,\n\t\tmeta: {},\n\t}))\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 450, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/recordsWithProps.ts"],"sourcesContent":["import {\n\tMigration,\n\tMigrationId,\n\tMigrationSequence,\n\tRecordType,\n\tStandaloneDependsOn,\n\tUnknownRecord,\n\tcreateMigrationSequence,\n} from '@tldraw/store'\nimport { MakeUndefinedOptional, assert } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { SchemaPropsInfo } from './createTLSchema'\n\n/** @public */\nexport type RecordProps<R extends UnknownRecord & { props: object }> = {\n\t[K in keyof R['props']]: T.Validatable<R['props'][K]>\n}\n\n/** @public */\nexport type RecordPropsType<Config extends Record<string, T.Validatable<any>>> =\n\tMakeUndefinedOptional<{\n\t\t[K in keyof Config]: T.TypeOf<Config[K]>\n\t}>\n\n/**\n * @public\n */\nexport interface TLPropsMigration {\n\treadonly id: MigrationId\n\treadonly dependsOn?: MigrationId[]\n\t// eslint-disable-next-line @typescript-eslint/method-signature-style\n\treadonly up: (props: any) => any\n\t/**\n\t * If a down migration was deployed more than a couple of months ago it should be safe to retire it.\n\t * We only really need them to smooth over the transition between versions, and some folks do keep\n\t * browser tabs open for months without refreshing, but at a certain point that kind of behavior is\n\t * on them. Plus anyway recently chrome has started to actually kill tabs that are open for too long\n\t * rather than just suspending them, so if other browsers follow suit maybe it's less of a concern.\n\t *\n\t * @public\n\t */\n\treadonly down?: 'none' | 'retired' | ((props: any) => any)\n}\n\n/**\n * @public\n */\nexport interface TLPropsMigrations {\n\treadonly sequence: Array<StandaloneDependsOn | TLPropsMigration>\n}\n\nexport function processPropsMigrations<R extends UnknownRecord & { type: string; props: object }>(\n\ttypeName: R['typeName'],\n\trecords: Record<string, SchemaPropsInfo>\n) {\n\tconst result: MigrationSequence[] = []\n\n\tfor (const [subType, { migrations }] of Object.entries(records)) {\n\t\tconst sequenceId = `com.tldraw.${typeName}.${subType}`\n\t\tif (!migrations) {\n\t\t\t// provide empty migrations sequence to allow for future migrations\n\t\t\tresult.push(\n\t\t\t\tcreateMigrationSequence({\n\t\t\t\t\tsequenceId,\n\t\t\t\t\tretroactive: true,\n\t\t\t\t\tsequence: [],\n\t\t\t\t})\n\t\t\t)\n\t\t} else if ('sequenceId' in migrations) {\n\t\t\tassert(\n\t\t\t\tsequenceId === migrations.sequenceId,\n\t\t\t\t`sequenceId mismatch for ${subType} ${RecordType} migrations. Expected '${sequenceId}', got '${migrations.sequenceId}'`\n\t\t\t)\n\t\t\tresult.push(migrations)\n\t\t} else if ('sequence' in migrations) {\n\t\t\tresult.push(\n\t\t\t\tcreateMigrationSequence({\n\t\t\t\t\tsequenceId,\n\t\t\t\t\tretroactive: true,\n\t\t\t\t\tsequence: migrations.sequence.map((m) =>\n\t\t\t\t\t\t'id' in m ? createPropsMigration(typeName, subType, m) : m\n\t\t\t\t\t),\n\t\t\t\t})\n\t\t\t)\n\t\t} else {\n\t\t\t// legacy migrations, will be removed in the future\n\t\t\tresult.push(\n\t\t\t\tcreateMigrationSequence({\n\t\t\t\t\tsequenceId,\n\t\t\t\t\tretroactive: true,\n\t\t\t\t\tsequence: Object.keys(migrations.migrators)\n\t\t\t\t\t\t.map((k) => Number(k))\n\t\t\t\t\t\t.sort((a: number, b: number) => a - b)\n\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t(version): Migration => ({\n\t\t\t\t\t\t\t\tid: `${sequenceId}/${version}`,\n\t\t\t\t\t\t\t\tscope: 'record',\n\t\t\t\t\t\t\t\tfilter: (r) => r.typeName === typeName && (r as R).type === subType,\n\t\t\t\t\t\t\t\tup: (record: any) => {\n\t\t\t\t\t\t\t\t\tconst result = migrations.migrators[version].up(record)\n\t\t\t\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\t\t\t\treturn result\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdown: (record: any) => {\n\t\t\t\t\t\t\t\t\tconst result = migrations.migrators[version].down(record)\n\t\t\t\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\t\t\t\treturn result\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t),\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\t}\n\n\treturn result\n}\n\nexport function createPropsMigration<R extends UnknownRecord & { type: string; props: object }>(\n\ttypeName: R['typeName'],\n\tsubType: R['type'],\n\tm: TLPropsMigration\n): Migration {\n\treturn {\n\t\tid: m.id,\n\t\tdependsOn: m.dependsOn,\n\t\tscope: 'record',\n\t\tfilter: (r) => r.typeName === typeName && (r as R).type === subType,\n\t\tup: (record: any) => {\n\t\t\tconst result = m.up(record.props)\n\t\t\tif (result) {\n\t\t\t\trecord.props = result\n\t\t\t}\n\t\t},\n\t\tdown:\n\t\t\ttypeof m.down === 'function'\n\t\t\t\t? (record: any) => {\n\t\t\t\t\t\tconst result = (m.down as (props: any) => any)(record.props)\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\trecord.props = result\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t: undefined,\n\t}\n}\n"],"names":["result"],"mappings":";;;;AAAA;;;AASA,SAAgC,cAAc;;;;AA0CvC,SAAS,uBACf,QAAA,EACA,OAAA,EACC;IACD,MAAM,SAA8B,CAAC,CAAA;IAErC,KAAA,MAAW,CAAC,SAAS,EAAE,UAAA,CAAW,CAAC,CAAA,IAAK,OAAO,OAAA,CAAQ,OAAO,EAAG;QAChE,MAAM,aAAa,CAAA,WAAA,EAAc,QAAQ,CAAA,CAAA,EAAI,OAAO,EAAA;QACpD,IAAI,CAAC,YAAY;YAEhB,OAAO,IAAA,yKACN,0BAAA,EAAwB;gBACvB;gBACA,aAAa;gBACb,UAAU,CAAC,CAAA;YACZ,CAAC;QAEH,OAAA,IAAW,gBAAgB,YAAY;YACtC,CAAA,GAAA,mKAAA,CAAA,SAAA,EACC,eAAe,WAAW,UAAA,EAC1B,CAAA,wBAAA,EAA2B,OAAO,CAAA,CAAA,yKAAI,aAAU,CAAA,uBAAA,EAA0B,UAAU,CAAA,QAAA,EAAW,WAAW,UAAU,CAAA,CAAA,CAAA;YAErH,OAAO,IAAA,CAAK,UAAU;QACvB,OAAA,IAAW,cAAc,YAAY;YACpC,OAAO,IAAA,yKACN,0BAAA,EAAwB;gBACvB;gBACA,aAAa;gBACb,UAAU,WAAW,QAAA,CAAS,GAAA,CAAI,CAAC,IAClC,QAAQ,IAAI,qBAAqB,UAAU,SAAS,CAAC,IAAI;YAE3D,CAAC;QAEH,OAAO;YAEN,OAAO,IAAA,yKACN,0BAAA,EAAwB;gBACvB;gBACA,aAAa;gBACb,UAAU,OAAO,IAAA,CAAK,WAAW,SAAS,EACxC,GAAA,CAAI,CAAC,IAAM,OAAO,CAAC,CAAC,EACpB,IAAA,CAAK,CAAC,GAAW,IAAc,IAAI,CAAC,EACpC,GAAA,CACA,CAAC,UAAA,CAAwB;wBACxB,IAAI,GAAG,UAAU,CAAA,CAAA,EAAI,OAAO,EAAA;wBAC5B,OAAO;wBACP,QAAQ,CAAC,IAAM,EAAE,QAAA,KAAa,YAAa,EAAQ,IAAA,KAAS;wBAC5D,IAAI,CAAC,WAAgB;4BACpB,MAAMA,UAAS,WAAW,SAAA,CAAU,OAAO,CAAA,CAAE,EAAA,CAAG,MAAM;4BACtD,IAAIA,SAAQ;gCACX,OAAOA;4BACR;wBACD;wBACA,MAAM,CAAC,WAAgB;4BACtB,MAAMA,UAAS,WAAW,SAAA,CAAU,OAAO,CAAA,CAAE,IAAA,CAAK,MAAM;4BACxD,IAAIA,SAAQ;gCACX,OAAOA;4BACR;wBACD;oBACD,CAAA;YAEH,CAAC;QAEH;IACD;IAEA,OAAO;AACR;AAEO,SAAS,qBACf,QAAA,EACA,OAAA,EACA,CAAA,EACY;IACZ,OAAO;QACN,IAAI,EAAE,EAAA;QACN,WAAW,EAAE,SAAA;QACb,OAAO;QACP,QAAQ,CAAC,IAAM,EAAE,QAAA,KAAa,YAAa,EAAQ,IAAA,KAAS;QAC5D,IAAI,CAAC,WAAgB;YACpB,MAAM,SAAS,EAAE,EAAA,CAAG,OAAO,KAAK;YAChC,IAAI,QAAQ;gBACX,OAAO,KAAA,GAAQ;YAChB;QACD;QACA,MACC,OAAO,EAAE,IAAA,KAAS,aACf,CAAC,WAAgB;YACjB,MAAM,SAAU,EAAE,IAAA,CAA6B,OAAO,KAAK;YAC3D,IAAI,QAAQ;gBACX,OAAO,KAAA,GAAQ;YAChB;QACD,IACC,KAAA;IACL;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 534, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/styles/TLColorStyle.ts"],"sourcesContent":["import { Expand } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { StyleProp } from './StyleProp'\n\n/** @public */\nexport const defaultColorNames = [\n\t'black',\n\t'grey',\n\t'light-violet',\n\t'violet',\n\t'blue',\n\t'light-blue',\n\t'yellow',\n\t'orange',\n\t'green',\n\t'light-green',\n\t'light-red',\n\t'red',\n\t'white',\n] as const\n\n/** @public */\nexport interface TLDefaultColorThemeColor {\n\tsolid: string\n\tsemi: string\n\tpattern: string\n\tfill: string // same as solid\n\tframe: {\n\t\theadingStroke: string\n\t\theadingFill: string\n\t\tstroke: string\n\t\tfill: string\n\t\ttext: string\n\t}\n\tnote: {\n\t\tfill: string\n\t\ttext: string\n\t}\n\thighlight: {\n\t\tsrgb: string\n\t\tp3: string\n\t}\n}\n\n/** @public */\nexport type TLDefaultColorTheme = Expand<\n\t{\n\t\tid: 'light' | 'dark'\n\t\ttext: string\n\t\tbackground: string\n\t\tsolid: string\n\t} & Record<(typeof defaultColorNames)[number], TLDefaultColorThemeColor>\n>\n\n/** @public */\nexport const DefaultColorThemePalette: {\n\tlightMode: TLDefaultColorTheme\n\tdarkMode: TLDefaultColorTheme\n} = {\n\tlightMode: {\n\t\tid: 'light',\n\t\ttext: '#000000',\n\t\tbackground: '#f9fafb',\n\t\tsolid: '#fcfffe',\n\t\tblack: {\n\t\t\tsolid: '#1d1d1d',\n\t\t\tfill: '#1d1d1d',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#717171',\n\t\t\t\theadingFill: '#ffffff',\n\t\t\t\tstroke: '#717171',\n\t\t\t\tfill: '#ffffff',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#FCE19C',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tsemi: '#e8e8e8',\n\t\t\tpattern: '#494949',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#fddd00',\n\t\t\t\tp3: 'color(display-p3 0.972 0.8205 0.05)',\n\t\t\t},\n\t\t},\n\t\tblue: {\n\t\t\tsolid: '#4465e9',\n\t\t\tfill: '#4465e9',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#6681ec',\n\t\t\t\theadingFill: '#f9fafe',\n\t\t\t\tstroke: '#6681ec',\n\t\t\t\tfill: '#f9fafe',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#8AA3FF',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tsemi: '#dce1f8',\n\t\t\tpattern: '#6681ee',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#10acff',\n\t\t\t\tp3: 'color(display-p3 0.308 0.6632 0.9996)',\n\t\t\t},\n\t\t},\n\t\tgreen: {\n\t\t\tsolid: '#099268',\n\t\t\tfill: '#099268',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#37a684',\n\t\t\t\theadingFill: '#f8fcfa',\n\t\t\t\tstroke: '#37a684',\n\t\t\t\tfill: '#f8fcfa',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#6FC896',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tsemi: '#d3e9e3',\n\t\t\tpattern: '#39a785',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#00ffc8',\n\t\t\t\tp3: 'color(display-p3 0.2536 0.984 0.7981)',\n\t\t\t},\n\t\t},\n\t\tgrey: {\n\t\t\tsolid: '#9fa8b2',\n\t\t\tfill: '#9fa8b2',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#aaaaab',\n\t\t\t\theadingFill: '#fbfcfc',\n\t\t\t\tstroke: '#aaaaab',\n\t\t\t\tfill: '#fcfcfd',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#C0CAD3',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tsemi: '#eceef0',\n\t\t\tpattern: '#bcc3c9',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#cbe7f1',\n\t\t\t\tp3: 'color(display-p3 0.8163 0.9023 0.9416)',\n\t\t\t},\n\t\t},\n\t\t'light-blue': {\n\t\t\tsolid: '#4ba1f1',\n\t\t\tfill: '#4ba1f1',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#6cb2f3',\n\t\t\t\theadingFill: '#f8fbfe',\n\t\t\t\tstroke: '#6cb2f3',\n\t\t\t\tfill: '#fafcff',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#9BC4FD',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tsemi: '#ddedfa',\n\t\t\tpattern: '#6fbbf8',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#00f4ff',\n\t\t\t\tp3: 'color(display-p3 0.1512 0.9414 0.9996)',\n\t\t\t},\n\t\t},\n\t\t'light-green': {\n\t\t\tsolid: '#4cb05e',\n\t\t\tfill: '#4cb05e',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#6dbe7c',\n\t\t\t\theadingFill: '#f8fcf9',\n\t\t\t\tstroke: '#6dbe7c',\n\t\t\t\tfill: '#fafdfa',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#98D08A',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tsemi: '#dbf0e0',\n\t\t\tpattern: '#65cb78',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#65f641',\n\t\t\t\tp3: 'color(display-p3 0.563 0.9495 0.3857)',\n\t\t\t},\n\t\t},\n\t\t'light-red': {\n\t\t\tsolid: '#f87777',\n\t\t\tfill: '#f87777',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#f89090',\n\t\t\t\theadingFill: '#fffafa',\n\t\t\t\tstroke: '#f89090',\n\t\t\t\tfill: '#fffbfb',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#F7A5A1',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tsemi: '#f4dadb',\n\t\t\tpattern: '#fe9e9e',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#ff7fa3',\n\t\t\t\tp3: 'color(display-p3 0.9988 0.5301 0.6397)',\n\t\t\t},\n\t\t},\n\t\t'light-violet': {\n\t\t\tsolid: '#e085f4',\n\t\t\tfill: '#e085f4',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#e59bf5',\n\t\t\t\theadingFill: '#fefaff',\n\t\t\t\tstroke: '#e59bf5',\n\t\t\t\tfill: '#fefbff',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#DFB0F9',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tsemi: '#f5eafa',\n\t\t\tpattern: '#e9acf8',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#ff88ff',\n\t\t\t\tp3: 'color(display-p3 0.9676 0.5652 0.9999)',\n\t\t\t},\n\t\t},\n\t\torange: {\n\t\t\tsolid: '#e16919',\n\t\t\tfill: '#e16919',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#e68544',\n\t\t\t\theadingFill: '#fef9f6',\n\t\t\t\tstroke: '#e68544',\n\t\t\t\tfill: '#fef9f6',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#FAA475',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tsemi: '#f8e2d4',\n\t\t\tpattern: '#f78438',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#ffa500',\n\t\t\t\tp3: 'color(display-p3 0.9988 0.6905 0.266)',\n\t\t\t},\n\t\t},\n\t\tred: {\n\t\t\tsolid: '#e03131',\n\t\t\tfill: '#e03131',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#e55757',\n\t\t\t\theadingFill: '#fef7f7',\n\t\t\t\tstroke: '#e55757',\n\t\t\t\tfill: '#fef9f9',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#FC8282',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tsemi: '#f4dadb',\n\t\t\tpattern: '#e55959',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#ff636e',\n\t\t\t\tp3: 'color(display-p3 0.9992 0.4376 0.45)',\n\t\t\t},\n\t\t},\n\t\tviolet: {\n\t\t\tsolid: '#ae3ec9',\n\t\t\tfill: '#ae3ec9',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#bc62d3',\n\t\t\t\theadingFill: '#fcf7fd',\n\t\t\t\tstroke: '#bc62d3',\n\t\t\t\tfill: '#fdf9fd',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#DB91FD',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tsemi: '#ecdcf2',\n\t\t\tpattern: '#bd63d3',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#c77cff',\n\t\t\t\tp3: 'color(display-p3 0.7469 0.5089 0.9995)',\n\t\t\t},\n\t\t},\n\t\tyellow: {\n\t\t\tsolid: '#f1ac4b',\n\t\t\tfill: '#f1ac4b',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#f3bb6c',\n\t\t\t\theadingFill: '#fefcf8',\n\t\t\t\tstroke: '#f3bb6c',\n\t\t\t\tfill: '#fffdfa',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#FED49A',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tsemi: '#f9f0e6',\n\t\t\tpattern: '#fecb92',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#fddd00',\n\t\t\t\tp3: 'color(display-p3 0.972 0.8705 0.05)',\n\t\t\t},\n\t\t},\n\t\twhite: {\n\t\t\tsolid: '#FFFFFF',\n\t\t\tfill: '#FFFFFF',\n\t\t\tsemi: '#f5f5f5',\n\t\t\tpattern: '#f9f9f9',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#7d7d7d',\n\t\t\t\theadingFill: '#ffffff',\n\t\t\t\tstroke: '#7d7d7d',\n\t\t\t\tfill: '#ffffff',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#FFFFFF',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#ffffff',\n\t\t\t\tp3: 'color(display-p3 1 1 1)',\n\t\t\t},\n\t\t},\n\t},\n\tdarkMode: {\n\t\tid: 'dark',\n\t\ttext: 'hsl(210, 17%, 98%)',\n\t\tbackground: 'hsl(240, 5%, 6.5%)',\n\t\tsolid: '#010403',\n\n\t\tblack: {\n\t\t\tsolid: '#f2f2f2',\n\t\t\tfill: '#f2f2f2',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#5c5c5c',\n\t\t\t\theadingFill: '#252525',\n\t\t\t\tstroke: '#5c5c5c',\n\t\t\t\tfill: '#0c0c0c',\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#2c2c2c',\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tsemi: '#2c3036',\n\t\t\tpattern: '#989898',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#d2b700',\n\t\t\t\tp3: 'color(display-p3 0.8078 0.6225 0.0312)',\n\t\t\t},\n\t\t},\n\t\tblue: {\n\t\t\tsolid: '#4f72fc', // 3c60f0\n\t\t\tfill: '#4f72fc',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#384994',\n\t\t\t\theadingFill: '#1C2036',\n\t\t\t\tstroke: '#384994',\n\t\t\t\tfill: '#11141f',\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#2A3F98',\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tsemi: '#262d40',\n\t\t\tpattern: '#3a4b9e',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#0079d2',\n\t\t\t\tp3: 'color(display-p3 0.0032 0.4655 0.7991)',\n\t\t\t},\n\t\t},\n\t\tgreen: {\n\t\t\tsolid: '#099268',\n\t\t\tfill: '#099268',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#10513C',\n\t\t\t\theadingFill: '#14241f',\n\t\t\t\tstroke: '#10513C',\n\t\t\t\tfill: '#0E1614',\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#014429',\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tsemi: '#253231',\n\t\t\tpattern: '#366a53',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#009774',\n\t\t\t\tp3: 'color(display-p3 0.0085 0.582 0.4604)',\n\t\t\t},\n\t\t},\n\t\tgrey: {\n\t\t\tsolid: '#9398b0',\n\t\t\tfill: '#9398b0',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#42474D',\n\t\t\t\theadingFill: '#23262A',\n\t\t\t\tstroke: '#42474D',\n\t\t\t\tfill: '#151719',\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#56595F',\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tsemi: '#33373c',\n\t\t\tpattern: '#7c8187',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#9cb4cb',\n\t\t\t\tp3: 'color(display-p3 0.6299 0.7012 0.7856)',\n\t\t\t},\n\t\t},\n\t\t'light-blue': {\n\t\t\tsolid: '#4dabf7',\n\t\t\tfill: '#4dabf7',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#075797',\n\t\t\t\theadingFill: '#142839',\n\t\t\t\tstroke: '#075797',\n\t\t\t\tfill: '#0B1823',\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#1F5495',\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tsemi: '#2a3642',\n\t\t\tpattern: '#4d7aa9',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#00bdc8',\n\t\t\t\tp3: 'color(display-p3 0.0023 0.7259 0.7735)',\n\t\t\t},\n\t\t},\n\t\t'light-green': {\n\t\t\tsolid: '#40c057',\n\t\t\tfill: '#40c057',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#1C5427',\n\t\t\t\theadingFill: '#18251A',\n\t\t\t\tstroke: '#1C5427',\n\t\t\t\tfill: '#0F1911',\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#21581D',\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tsemi: '#2a3830',\n\t\t\tpattern: '#4e874e',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#00a000',\n\t\t\t\tp3: 'color(display-p3 0.2711 0.6172 0.0195)',\n\t\t\t},\n\t\t},\n\t\t'light-red': {\n\t\t\tsolid: '#ff8787',\n\t\t\tfill: '#ff8787',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#6f3232', // Darker and desaturated variant of solid\n\t\t\t\theadingFill: '#341818', // Deep, muted dark red\n\t\t\t\tstroke: '#6f3232', // Matches headingStroke\n\t\t\t\tfill: '#181212', // Darker, muted background shade\n\t\t\t\ttext: '#f2f2f2', // Consistent bright text color\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#7a3333', // Medium-dark, muted variant of solid\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tsemi: '#3c2b2b', // Subdued, darker neutral-red tone\n\t\t\tpattern: '#a56767', // Existing pattern shade retained\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#db005b',\n\t\t\t\tp3: 'color(display-p3 0.7849 0.0585 0.3589)',\n\t\t\t},\n\t\t},\n\t\t'light-violet': {\n\t\t\tsolid: '#e599f7',\n\t\t\tfill: '#e599f7',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#6c367a',\n\t\t\t\theadingFill: '#2D2230',\n\t\t\t\tstroke: '#6c367a',\n\t\t\t\tfill: '#1C151E',\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#762F8E',\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tsemi: '#383442',\n\t\t\tpattern: '#9770a9',\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#c400c7',\n\t\t\t\tp3: 'color(display-p3 0.7024 0.0403 0.753)',\n\t\t\t},\n\t\t},\n\t\torange: {\n\t\t\tsolid: '#f76707',\n\t\t\tfill: '#f76707',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#773a0e', // Darker, muted version of solid\n\t\t\t\theadingFill: '#2f1d13', // Deep, warm, muted background\n\t\t\t\tstroke: '#773a0e', // Matches headingStroke\n\t\t\t\tfill: '#1c1512', // Darker, richer muted background\n\t\t\t\ttext: '#f2f2f2', // Bright text for contrast\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#7c3905', // Muted dark variant for note fill\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tsemi: '#3b2e27', // Muted neutral-orange tone\n\t\t\tpattern: '#9f552d', // Retained existing shade\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#d07a00',\n\t\t\t\tp3: 'color(display-p3 0.7699 0.4937 0.0085)',\n\t\t\t},\n\t\t},\n\t\tred: {\n\t\t\tsolid: '#e03131',\n\t\t\tfill: '#e03131',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#701e1e', // Darker, muted variation of solid\n\t\t\t\theadingFill: '#301616', // Deep, muted reddish backdrop\n\t\t\t\tstroke: '#701e1e', // Matches headingStroke\n\t\t\t\tfill: '#1b1313', // Rich, dark muted background\n\t\t\t\ttext: '#f2f2f2', // Bright text for readability\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#7e201f', // Muted dark variant for note fill\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tsemi: '#382726', // Dark neutral-red tone\n\t\t\tpattern: '#8f3734', // Existing pattern color retained\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#de002c',\n\t\t\t\tp3: 'color(display-p3 0.7978 0.0509 0.2035)',\n\t\t\t},\n\t\t},\n\t\tviolet: {\n\t\t\tsolid: '#ae3ec9',\n\t\t\tfill: '#ae3ec9',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#6d1583', // Darker, muted variation of solid\n\t\t\t\theadingFill: '#27152e', // Deep, rich muted violet backdrop\n\t\t\t\tstroke: '#6d1583', // Matches headingStroke\n\t\t\t\tfill: '#1b0f21', // Darker muted violet background\n\t\t\t\ttext: '#f2f2f2', // Consistent bright text color\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#5f1c70', // Muted dark variant for note fill\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tsemi: '#342938', // Dark neutral-violet tone\n\t\t\tpattern: '#763a8b', // Retained existing pattern color\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#9e00ee',\n\t\t\t\tp3: 'color(display-p3 0.5651 0.0079 0.8986)',\n\t\t\t},\n\t\t},\n\t\tyellow: {\n\t\t\tsolid: '#ffc034',\n\t\t\tfill: '#ffc034',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#684e12', // Darker, muted variant of solid\n\t\t\t\theadingFill: '#2a2113', // Rich, muted dark-yellow background\n\t\t\t\tstroke: '#684e12', // Matches headingStroke\n\t\t\t\tfill: '#1e1911', // Darker muted shade for background fill\n\t\t\t\ttext: '#f2f2f2', // Bright text color for readability\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#8a5e1c', // Muted, dark complementary variant\n\t\t\t\ttext: '#f2f2f2',\n\t\t\t},\n\t\t\tsemi: '#3b352b', // Dark muted neutral-yellow tone\n\t\t\tpattern: '#fecb92', // Existing shade retained\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#d2b700',\n\t\t\t\tp3: 'color(display-p3 0.8078 0.7225 0.0312)',\n\t\t\t},\n\t\t},\n\t\twhite: {\n\t\t\tsolid: '#f3f3f3',\n\t\t\tfill: '#f3f3f3',\n\t\t\tsemi: '#f5f5f5',\n\t\t\tpattern: '#f9f9f9',\n\t\t\tframe: {\n\t\t\t\theadingStroke: '#ffffff',\n\t\t\t\theadingFill: '#ffffff',\n\t\t\t\tstroke: '#ffffff',\n\t\t\t\tfill: '#ffffff',\n\t\t\t\ttext: '#000000',\n\t\t\t},\n\t\t\tnote: {\n\t\t\t\tfill: '#eaeaea',\n\t\t\t\ttext: '#1d1d1d',\n\t\t\t},\n\t\t\thighlight: {\n\t\t\t\tsrgb: '#ffffff',\n\t\t\t\tp3: 'color(display-p3 1 1 1)',\n\t\t\t},\n\t\t},\n\t},\n}\n\n/** @public */\nexport function getDefaultColorTheme(opts: { isDarkMode: boolean }): TLDefaultColorTheme {\n\treturn opts.isDarkMode ? DefaultColorThemePalette.darkMode : DefaultColorThemePalette.lightMode\n}\n\n/** @public */\nexport const DefaultColorStyle = StyleProp.defineEnum('tldraw:color', {\n\tdefaultValue: 'black',\n\tvalues: defaultColorNames,\n})\n\n/** @public */\nexport const DefaultLabelColorStyle = StyleProp.defineEnum('tldraw:labelColor', {\n\tdefaultValue: 'black',\n\tvalues: defaultColorNames,\n})\n\n/** @public */\nexport type TLDefaultColorStyle = T.TypeOf<typeof DefaultColorStyle>\n"],"names":[],"mappings":";;;;;;;AAEA,SAAS,iBAAiB;;AAGnB,MAAM,oBAAoB;IAChC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAoCO,MAAM,2BAGT;IACH,WAAW;QACV,IAAI;QACJ,MAAM;QACN,YAAY;QACZ,OAAO;QACP,OAAO;YACN,OAAO;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;QACA,MAAM;YACL,OAAO;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;QACA,OAAO;YACN,OAAO;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;QACA,MAAM;YACL,OAAO;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;QACA,cAAc;YACb,OAAO;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;QACA,eAAe;YACd,OAAO;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;QACA,aAAa;YACZ,OAAO;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;QACA,gBAAgB;YACf,OAAO;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;QACA,QAAQ;YACP,OAAO;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;QACA,KAAK;YACJ,OAAO;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;QACA,QAAQ;YACP,OAAO;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;QACA,QAAQ;YACP,OAAO;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;QACA,OAAO;YACN,OAAO;YACP,MAAM;YACN,MAAM;YACN,SAAS;YACT,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;IACD;IACA,UAAU;QACT,IAAI;QACJ,MAAM;QACN,YAAY;QACZ,OAAO;QAEP,OAAO;YACN,OAAO;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;QACA,MAAM;YACL,OAAO;YAAA,SAAA;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;QACA,OAAO;YACN,OAAO;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;gBACV,MAAM;gBACN,IAAI;YACL;QACD;QACA,MAAM;YACL,OAAO;YACP,MAAM;YACN,OAAO;gBACN,eAAe;gBACf,aAAa;gBACb,QAAQ;gBACR,MAAM;gBACN,MAAM;YACP;YACA,MAAM;gBACL,MAAM;gBACN,MAAM;YACP;YACA,MAAM;YACN,SAAS;YACT,WAAW;g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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1173, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/styles/TLDashStyle.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { StyleProp } from './StyleProp'\n\n/** @public */\nexport const DefaultDashStyle = StyleProp.defineEnum('tldraw:dash', {\n\tdefaultValue: 'draw',\n\tvalues: ['draw', 'solid', 'dashed', 'dotted'],\n})\n\n/** @public */\nexport type TLDefaultDashStyle = T.TypeOf<typeof DefaultDashStyle>\n"],"names":[],"mappings":";;;AACA,SAAS,iBAAiB;;AAGnB,MAAM,+LAAmB,YAAA,CAAU,UAAA,CAAW,eAAe;IACnE,cAAc;IACd,QAAQ;QAAC;QAAQ;QAAS;QAAU,QAAQ;KAAA;AAC7C,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1195, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/styles/TLFillStyle.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { StyleProp } from './StyleProp'\n\n/** @public */\nexport const DefaultFillStyle = StyleProp.defineEnum('tldraw:fill', {\n\tdefaultValue: 'none',\n\tvalues: ['none', 'semi', 'solid', 'pattern', 'fill'],\n})\n\n/** @public */\nexport type TLDefaultFillStyle = T.TypeOf<typeof DefaultFillStyle>\n"],"names":[],"mappings":";;;AACA,SAAS,iBAAiB;;AAGnB,MAAM,+LAAmB,YAAA,CAAU,UAAA,CAAW,eAAe;IACnE,cAAc;IACd,QAAQ;QAAC;QAAQ;QAAQ;QAAS;QAAW,MAAM;KAAA;AACpD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1218, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/styles/TLFontStyle.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { StyleProp } from './StyleProp'\n\n/** @public */\nexport const DefaultFontStyle = StyleProp.defineEnum('tldraw:font', {\n\tdefaultValue: 'draw',\n\tvalues: ['draw', 'sans', 'serif', 'mono'],\n})\n\n/** @public */\nexport type TLDefaultFontStyle = T.TypeOf<typeof DefaultFontStyle>\n\n/** @public */\nexport const DefaultFontFamilies = {\n\tdraw: \"'tldraw_draw', sans-serif\",\n\tsans: \"'tldraw_sans', sans-serif\",\n\tserif: \"'tldraw_serif', serif\",\n\tmono: \"'tldraw_mono', monospace\",\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,iBAAiB;;AAGnB,MAAM,+LAAmB,YAAA,CAAU,UAAA,CAAW,eAAe;IACnE,cAAc;IACd,QAAQ;QAAC;QAAQ;QAAQ;QAAS,MAAM;KAAA;AACzC,CAAC;AAMM,MAAM,sBAAsB;IAClC,MAAM;IACN,MAAM;IACN,OAAO;IACP,MAAM;AACP","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1247, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/styles/TLSizeStyle.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { StyleProp } from './StyleProp'\n\n/** @public */\nexport const DefaultSizeStyle = StyleProp.defineEnum('tldraw:size', {\n\tdefaultValue: 'm',\n\tvalues: ['s', 'm', 'l', 'xl'],\n})\n\n/** @public */\nexport type TLDefaultSizeStyle = T.TypeOf<typeof DefaultSizeStyle>\n"],"names":[],"mappings":";;;AACA,SAAS,iBAAiB;;AAGnB,MAAM,+LAAmB,YAAA,CAAU,UAAA,CAAW,eAAe;IACnE,cAAc;IACd,QAAQ;QAAC;QAAK;QAAK;QAAK,IAAI;KAAA;AAC7B,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1269, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/shapes/TLArrowShape.ts"],"sourcesContent":["import { createMigrationSequence } from '@tldraw/store'\nimport { T } from '@tldraw/validate'\nimport { VecModel, vecModelValidator } from '../misc/geometry-types'\nimport { createBindingId } from '../records/TLBinding'\nimport { TLShapeId, createShapePropsMigrationIds } from '../records/TLShape'\nimport { RecordProps, TLPropsMigration, createPropsMigration } from '../recordsWithProps'\nimport { StyleProp } from '../styles/StyleProp'\nimport {\n\tDefaultColorStyle,\n\tDefaultLabelColorStyle,\n\tTLDefaultColorStyle,\n} from '../styles/TLColorStyle'\nimport { DefaultDashStyle, TLDefaultDashStyle } from '../styles/TLDashStyle'\nimport { DefaultFillStyle, TLDefaultFillStyle } from '../styles/TLFillStyle'\nimport { DefaultFontStyle, TLDefaultFontStyle } from '../styles/TLFontStyle'\nimport { DefaultSizeStyle, TLDefaultSizeStyle } from '../styles/TLSizeStyle'\nimport { TLBaseShape } from './TLBaseShape'\n\nconst arrowKinds = ['arc', 'elbow'] as const\n/** @public */\nexport const ArrowShapeKindStyle = StyleProp.defineEnum('tldraw:arrowKind', {\n\tdefaultValue: 'arc',\n\tvalues: arrowKinds,\n})\n\n/** @public */\nexport type TLArrowShapeKind = T.TypeOf<typeof ArrowShapeKindStyle>\n\nconst arrowheadTypes = [\n\t'arrow',\n\t'triangle',\n\t'square',\n\t'dot',\n\t'pipe',\n\t'diamond',\n\t'inverted',\n\t'bar',\n\t'none',\n] as const\n\n/** @public */\nexport const ArrowShapeArrowheadStartStyle = StyleProp.defineEnum('tldraw:arrowheadStart', {\n\tdefaultValue: 'none',\n\tvalues: arrowheadTypes,\n})\n\n/** @public */\nexport const ArrowShapeArrowheadEndStyle = StyleProp.defineEnum('tldraw:arrowheadEnd', {\n\tdefaultValue: 'arrow',\n\tvalues: arrowheadTypes,\n})\n\n/** @public */\nexport type TLArrowShapeArrowheadStyle = T.TypeOf<typeof ArrowShapeArrowheadStartStyle>\n\n/** @public */\nexport interface TLArrowShapeProps {\n\tkind: TLArrowShapeKind\n\tlabelColor: TLDefaultColorStyle\n\tcolor: TLDefaultColorStyle\n\tfill: TLDefaultFillStyle\n\tdash: TLDefaultDashStyle\n\tsize: TLDefaultSizeStyle\n\tarrowheadStart: TLArrowShapeArrowheadStyle\n\tarrowheadEnd: TLArrowShapeArrowheadStyle\n\tfont: TLDefaultFontStyle\n\tstart: VecModel\n\tend: VecModel\n\tbend: number\n\ttext: string\n\tlabelPosition: number\n\tscale: number\n\telbowMidPoint: number\n}\n\n/** @public */\nexport type TLArrowShape = TLBaseShape<'arrow', TLArrowShapeProps>\n\n/** @public */\nexport const arrowShapeProps: RecordProps<TLArrowShape> = {\n\tkind: ArrowShapeKindStyle,\n\tlabelColor: DefaultLabelColorStyle,\n\tcolor: DefaultColorStyle,\n\tfill: DefaultFillStyle,\n\tdash: DefaultDashStyle,\n\tsize: DefaultSizeStyle,\n\tarrowheadStart: ArrowShapeArrowheadStartStyle,\n\tarrowheadEnd: ArrowShapeArrowheadEndStyle,\n\tfont: DefaultFontStyle,\n\tstart: vecModelValidator,\n\tend: vecModelValidator,\n\tbend: T.number,\n\ttext: T.string,\n\tlabelPosition: T.number,\n\tscale: T.nonZeroNumber,\n\telbowMidPoint: T.number,\n}\n\n/** @public */\nexport const arrowShapeVersions = createShapePropsMigrationIds('arrow', {\n\tAddLabelColor: 1,\n\tAddIsPrecise: 2,\n\tAddLabelPosition: 3,\n\tExtractBindings: 4,\n\tAddScale: 5,\n\tAddElbow: 6,\n})\n\nfunction propsMigration(migration: TLPropsMigration) {\n\treturn createPropsMigration<TLArrowShape>('shape', 'arrow', migration)\n}\n\n/** @public */\nexport const arrowShapeMigrations = createMigrationSequence({\n\tsequenceId: 'com.tldraw.shape.arrow',\n\tretroactive: false,\n\tsequence: [\n\t\tpropsMigration({\n\t\t\tid: arrowShapeVersions.AddLabelColor,\n\t\t\tup: (props) => {\n\t\t\t\tprops.labelColor = 'black'\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t}),\n\n\t\tpropsMigration({\n\t\t\tid: arrowShapeVersions.AddIsPrecise,\n\t\t\tup: ({ start, end }) => {\n\t\t\t\tif (start.type === 'binding') {\n\t\t\t\t\tstart.isPrecise = !(start.normalizedAnchor.x === 0.5 && start.normalizedAnchor.y === 0.5)\n\t\t\t\t}\n\t\t\t\tif (end.type === 'binding') {\n\t\t\t\t\tend.isPrecise = !(end.normalizedAnchor.x === 0.5 && end.normalizedAnchor.y === 0.5)\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: ({ start, end }) => {\n\t\t\t\tif (start.type === 'binding') {\n\t\t\t\t\tif (!start.isPrecise) {\n\t\t\t\t\t\tstart.normalizedAnchor = { x: 0.5, y: 0.5 }\n\t\t\t\t\t}\n\t\t\t\t\tdelete start.isPrecise\n\t\t\t\t}\n\t\t\t\tif (end.type === 'binding') {\n\t\t\t\t\tif (!end.isPrecise) {\n\t\t\t\t\t\tend.normalizedAnchor = { x: 0.5, y: 0.5 }\n\t\t\t\t\t}\n\t\t\t\t\tdelete end.isPrecise\n\t\t\t\t}\n\t\t\t},\n\t\t}),\n\n\t\tpropsMigration({\n\t\t\tid: arrowShapeVersions.AddLabelPosition,\n\t\t\tup: (props) => {\n\t\t\t\tprops.labelPosition = 0.5\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.labelPosition\n\t\t\t},\n\t\t}),\n\n\t\t{\n\t\t\tid: arrowShapeVersions.ExtractBindings,\n\t\t\tscope: 'store',\n\t\t\tup: (oldStore) => {\n\t\t\t\ttype OldArrowTerminal =\n\t\t\t\t\t| {\n\t\t\t\t\t\t\ttype: 'point'\n\t\t\t\t\t\t\tx: number\n\t\t\t\t\t\t\ty: number\n\t\t\t\t\t  }\n\t\t\t\t\t| {\n\t\t\t\t\t\t\ttype: 'binding'\n\t\t\t\t\t\t\tboundShapeId: TLShapeId\n\t\t\t\t\t\t\tnormalizedAnchor: VecModel\n\t\t\t\t\t\t\tisExact: boolean\n\t\t\t\t\t\t\tisPrecise: boolean\n\t\t\t\t\t  }\n\t\t\t\t\t// new type:\n\t\t\t\t\t| { type?: undefined; x: number; y: number }\n\n\t\t\t\ttype OldArrow = TLBaseShape<'arrow', { start: OldArrowTerminal; end: OldArrowTerminal }>\n\n\t\t\t\tconst arrows = Object.values(oldStore).filter(\n\t\t\t\t\t(r: any): r is OldArrow => r.typeName === 'shape' && r.type === 'arrow'\n\t\t\t\t)\n\n\t\t\t\tfor (const arrow of arrows) {\n\t\t\t\t\tconst { start, end } = arrow.props\n\t\t\t\t\tif (start.type === 'binding') {\n\t\t\t\t\t\tconst id = createBindingId()\n\t\t\t\t\t\tconst binding = {\n\t\t\t\t\t\t\ttypeName: 'binding',\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\ttype: 'arrow',\n\t\t\t\t\t\t\tfromId: arrow.id,\n\t\t\t\t\t\t\ttoId: start.boundShapeId,\n\t\t\t\t\t\t\tmeta: {},\n\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\tterminal: 'start',\n\t\t\t\t\t\t\t\tnormalizedAnchor: start.normalizedAnchor,\n\t\t\t\t\t\t\t\tisExact: start.isExact,\n\t\t\t\t\t\t\t\tisPrecise: start.isPrecise,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toldStore[id] = binding\n\t\t\t\t\t\tarrow.props.start = { x: 0, y: 0 }\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete arrow.props.start.type\n\t\t\t\t\t}\n\t\t\t\t\tif (end.type === 'binding') {\n\t\t\t\t\t\tconst id = createBindingId()\n\t\t\t\t\t\tconst binding = {\n\t\t\t\t\t\t\ttypeName: 'binding',\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\ttype: 'arrow',\n\t\t\t\t\t\t\tfromId: arrow.id,\n\t\t\t\t\t\t\ttoId: end.boundShapeId,\n\t\t\t\t\t\t\tmeta: {},\n\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\tterminal: 'end',\n\t\t\t\t\t\t\t\tnormalizedAnchor: end.normalizedAnchor,\n\t\t\t\t\t\t\t\tisExact: end.isExact,\n\t\t\t\t\t\t\t\tisPrecise: end.isPrecise,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toldStore[id] = binding\n\t\t\t\t\t\tarrow.props.end = { x: 0, y: 0 }\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete arrow.props.end.type\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\tpropsMigration({\n\t\t\tid: arrowShapeVersions.AddScale,\n\t\t\tup: (props) => {\n\t\t\t\tprops.scale = 1\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.scale\n\t\t\t},\n\t\t}),\n\t\tpropsMigration({\n\t\t\tid: arrowShapeVersions.AddElbow,\n\t\t\tup: (props) => {\n\t\t\t\tprops.kind = 'arc'\n\t\t\t\tprops.elbowMidPoint = 0.5\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.kind\n\t\t\t\tdelete props.elbowMidPoint\n\t\t\t},\n\t\t}),\n\t],\n})\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1498, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/bindings/TLArrowBinding.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { VecModel, vecModelValidator } from '../misc/geometry-types'\nimport {\n\tcreateBindingPropsMigrationIds,\n\tcreateBindingPropsMigrationSequence,\n} from '../records/TLBinding'\nimport { RecordProps } from '../recordsWithProps'\nimport { arrowShapeVersions } from '../shapes/TLArrowShape'\nimport { TLBaseBinding } from './TLBaseBinding'\n\n/** @public */\nexport const ElbowArrowSnap = T.literalEnum('center', 'edge-point', 'edge', 'none')\n/** @public */\nexport type ElbowArrowSnap = T.TypeOf<typeof ElbowArrowSnap>\n\n/** @public */\nexport interface TLArrowBindingProps {\n\tterminal: 'start' | 'end'\n\tnormalizedAnchor: VecModel\n\t/**\n\t * exact is whether the arrow head 'enters' the bound shape to point directly at the binding\n\t * anchor point\n\t */\n\tisExact: boolean\n\t/**\n\t * precise is whether to bind to the normalizedAnchor, or to the middle of the shape\n\t */\n\tisPrecise: boolean\n\tsnap: ElbowArrowSnap\n}\n\n/** @public */\nexport const arrowBindingProps: RecordProps<TLArrowBinding> = {\n\tterminal: T.literalEnum('start', 'end'),\n\tnormalizedAnchor: vecModelValidator,\n\tisExact: T.boolean,\n\tisPrecise: T.boolean,\n\tsnap: ElbowArrowSnap,\n}\n\n/** @public */\nexport type TLArrowBinding = TLBaseBinding<'arrow', TLArrowBindingProps>\n\n/** @public */\nexport const arrowBindingVersions = createBindingPropsMigrationIds('arrow', {\n\tAddSnap: 1,\n})\n\n/** @public */\nexport const arrowBindingMigrations = createBindingPropsMigrationSequence({\n\tsequence: [\n\t\t{ dependsOn: [arrowShapeVersions.ExtractBindings] },\n\t\t{\n\t\t\tid: arrowBindingVersions.AddSnap,\n\t\t\tup: (props) => {\n\t\t\t\tprops.snap = 'none'\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.snap\n\t\t\t},\n\t\t},\n\t],\n})\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,SAAS;;AAClB,SAAmB,yBAAyB;AAC5C;AAKA,SAAS,0BAA0B;;;;;AAI5B,MAAM,wNAAiB,IAAA,CAAE,WAAA,CAAY,UAAU,cAAc,QAAQ,MAAM;AAqB3E,MAAM,oBAAiD;IAC7D,iNAAU,IAAA,CAAE,WAAA,CAAY,SAAS,KAAK;IACtC,kBAAkB,sMAAA;IAClB,gNAAS,IAAA,CAAE,OAAA;IACX,kNAAW,IAAA,CAAE,OAAA;IACb,MAAM;AACP;AAMO,MAAM,wMAAuB,iCAAA,EAA+B,SAAS;IAC3E,SAAS;AACV,CAAC;AAGM,MAAM,0MAAyB,sCAAA,EAAoC;IACzE,UAAU;QACT;YAAE,WAAW;+LAAC,qBAAA,CAAmB,eAAe;aAAA;QAAE;QAClD;YACC,IAAI,qBAAqB,OAAA;YACzB,IAAI,CAAC,UAAU;gBACd,MAAM,IAAA,GAAO;YACd;YACA,MAAM,CAAC,UAAU;gBAChB,OAAO,MAAM,IAAA;YACd;QACD;KACD;AACD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1550, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/records/TLCamera.ts"],"sourcesContent":["import {\n\tBaseRecord,\n\tcreateMigrationIds,\n\tcreateRecordMigrationSequence,\n\tcreateRecordType,\n\tRecordId,\n} from '@tldraw/store'\nimport { JsonObject } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { idValidator } from '../misc/id-validator'\n\n/**\n * A camera record.\n *\n * @public\n */\nexport interface TLCamera extends BaseRecord<'camera', TLCameraId> {\n\tx: number\n\ty: number\n\tz: number\n\tmeta: JsonObject\n}\n\n/**\n * The id of a camera record.\n *\n * @public */\nexport type TLCameraId = RecordId<TLCamera>\n\n/** @public */\nexport const cameraValidator: T.Validator<TLCamera> = T.model(\n\t'camera',\n\tT.object({\n\t\ttypeName: T.literal('camera'),\n\t\tid: idValidator<TLCameraId>('camera'),\n\t\tx: T.number,\n\t\ty: T.number,\n\t\tz: T.number,\n\t\tmeta: T.jsonValue as T.ObjectValidator<JsonObject>,\n\t})\n)\n\n/** @public */\nexport const cameraVersions = createMigrationIds('com.tldraw.camera', {\n\tAddMeta: 1,\n})\n\n/** @public */\nexport const cameraMigrations = createRecordMigrationSequence({\n\tsequenceId: 'com.tldraw.camera',\n\trecordType: 'camera',\n\tsequence: [\n\t\t{\n\t\t\tid: cameraVersions.AddMeta,\n\t\t\tup: (record) => {\n\t\t\t\t;(record as any).meta = {}\n\t\t\t},\n\t\t},\n\t],\n})\n\n/** @public */\nexport const CameraRecordType = createRecordType<TLCamera>('camera', {\n\tvalidator: cameraValidator,\n\tscope: 'session',\n}).withDefaultProperties(\n\t(): Omit<TLCamera, 'id' | 'typeName'> => ({\n\t\tx: 0,\n\t\ty: 0,\n\t\tz: 1,\n\t\tmeta: {},\n\t})\n)\n"],"names":[],"mappings":";;;;;;AAAA;;;;AAQA,SAAS,SAAS;AAClB,SAAS,mBAAmB;;;;AAqBrB,MAAM,yNAAyC,IAAA,CAAE,KAAA,CACvD,iNACA,IAAA,CAAE,MAAA,CAAO;IACR,gNAAU,KAAA,CAAE,OAAA,CAAQ,QAAQ;IAC5B,wLAAI,cAAA,EAAwB,QAAQ;IACpC,0MAAG,IAAA,CAAE,MAAA;IACL,GAAG,2MAAA,CAAE,MAAA;IACL,0MAAG,IAAA,CAAE,MAAA;IACL,4MAAM,KAAA,CAAE,SAAA;AACT,CAAC;AAIK,MAAM,yLAAiB,qBAAA,EAAmB,qBAAqB;IACrE,SAAS;AACV,CAAC;AAGM,MAAM,2LAAmB,gCAAA,EAA8B;IAC7D,YAAY;IACZ,YAAY;IACZ,UAAU;QACT;YACC,IAAI,eAAe,OAAA;YACnB,IAAI,CAAC,WAAW;;gBACb,OAAe,IAAA,GAAO,CAAC;YAC1B;QACD;KACD;AACD,CAAC;AAGM,MAAM,8LAAmB,mBAAA,EAA2B,UAAU;IACpE,WAAW;IACX,OAAO;AACR,CAAC,EAAE,qBAAA,CACF,IAAA,CAA0C;QACzC,GAAG;QACH,GAAG;QACH,GAAG;QACH,MAAM,CAAC;IACR,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1606, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/misc/TLCursor.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { SetValue } from '../util-types'\n\n/**\n * The cursor types used by tldraw's default shapes.\n *\n * @public */\nexport const TL_CURSOR_TYPES = new Set([\n\t'none',\n\t'default',\n\t'pointer',\n\t'cross',\n\t'grab',\n\t'rotate',\n\t'grabbing',\n\t'resize-edge',\n\t'resize-corner',\n\t'text',\n\t'move',\n\t'ew-resize',\n\t'ns-resize',\n\t'nesw-resize',\n\t'nwse-resize',\n\t'nesw-rotate',\n\t'nwse-rotate',\n\t'swne-rotate',\n\t'senw-rotate',\n\t'zoom-in',\n\t'zoom-out',\n])\n\n/**\n * A type for the cursor types used by tldraw's default shapes.\n *\n *  @public */\nexport type TLCursorType = SetValue<typeof TL_CURSOR_TYPES>\n\n/** @public */\nexport const cursorTypeValidator = T.setEnum(TL_CURSOR_TYPES)\n\n/**\n * A cursor used by tldraw.\n *\n *  @public */\nexport interface TLCursor {\n\ttype: TLCursorType\n\trotation: number\n}\n\n/** @public */\nexport const cursorValidator: T.ObjectValidator<TLCursor> = T.object<TLCursor>({\n\ttype: cursorTypeValidator,\n\trotation: T.number,\n})\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,SAAS;;AAOX,MAAM,kBAAkB,aAAA,GAAA,IAAI,IAAI;IACtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AASM,MAAM,6NAAsB,IAAA,CAAE,OAAA,CAAQ,eAAe;AAYrD,MAAM,yNAA+C,IAAA,CAAE,MAAA,CAAiB;IAC9E,MAAM;IACN,iNAAU,IAAA,CAAE,MAAA;AACb,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1650, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/misc/TLColor.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { SetValue } from '../util-types'\n\n/**\n * The colors used by tldraw's default shapes.\n *\n *  @public */\nexport const TL_CANVAS_UI_COLOR_TYPES = new Set([\n\t'accent',\n\t'white',\n\t'black',\n\t'selection-stroke',\n\t'selection-fill',\n\t'laser',\n\t'muted-1',\n] as const)\n\n/**\n * A type for the colors used by tldraw's default shapes.\n *\n *  @public */\nexport type TLCanvasUiColor = SetValue<typeof TL_CANVAS_UI_COLOR_TYPES>\n\n/**\n * A validator for the colors used by tldraw's default shapes.\n *\n * @public */\nexport const canvasUiColorTypeValidator = T.setEnum(TL_CANVAS_UI_COLOR_TYPES)\n"],"names":[],"mappings":";;;;;AAAA,SAAS,SAAS;;AAOX,MAAM,2BAA2B,aAAA,GAAA,IAAI,IAAI;IAC/C;IACA;IACA;IACA;IACA;IACA;IACA;CACS;AAYH,MAAM,oOAA6B,IAAA,CAAE,OAAA,CAAQ,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1675, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/misc/TLScribble.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { SetValue } from '../util-types'\nimport { TLCanvasUiColor, canvasUiColorTypeValidator } from './TLColor'\nimport { VecModel, vecModelValidator } from './geometry-types'\n\n/**\n * The scribble states used by tldraw.\n *\n *  @public */\nexport const TL_SCRIBBLE_STATES = new Set(['starting', 'paused', 'active', 'stopping'] as const)\n\n/**\n * A type for the scribble used by tldraw.\n *\n * @public */\nexport interface TLScribble {\n\tid: string\n\tpoints: VecModel[]\n\tsize: number\n\tcolor: TLCanvasUiColor\n\topacity: number\n\tstate: SetValue<typeof TL_SCRIBBLE_STATES>\n\tdelay: number\n\tshrink: number\n\ttaper: boolean\n}\n\n/** @public */\nexport const scribbleValidator: T.ObjectValidator<TLScribble> = T.object({\n\tid: T.string,\n\tpoints: T.arrayOf(vecModelValidator),\n\tsize: T.positiveNumber,\n\tcolor: canvasUiColorTypeValidator,\n\topacity: T.number,\n\tstate: T.setEnum(TL_SCRIBBLE_STATES),\n\tdelay: T.number,\n\tshrink: T.number,\n\ttaper: T.boolean,\n})\n"],"names":[],"mappings":";;;;;AAAA,SAAS,SAAS;AAElB,SAA0B,kCAAkC;AAC5D,SAAmB,yBAAyB;;;;AAMrC,MAAM,qBAAqB,aAAA,GAAA,IAAI,IAAI;IAAC;IAAY;IAAU;IAAU,UAAU;CAAU;AAmBxF,MAAM,2NAAmD,IAAA,CAAE,MAAA,CAAO;IACxE,2MAAI,IAAA,CAAE,MAAA;IACN,+MAAQ,IAAA,CAAE,OAAA,mLAAQ,oBAAiB;IACnC,6MAAM,IAAA,CAAE,cAAA;IACR,+KAAO,6BAAA;IACP,gNAAS,IAAA,CAAE,MAAA;IACX,8MAAO,IAAA,CAAE,OAAA,CAAQ,kBAAkB;IACnC,8MAAO,IAAA,CAAE,MAAA;IACT,+MAAQ,IAAA,CAAE,MAAA;IACV,8MAAO,IAAA,CAAE,OAAA;AACV,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1711, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/records/TLPage.ts"],"sourcesContent":["import {\n\tBaseRecord,\n\tcreateMigrationIds,\n\tcreateRecordMigrationSequence,\n\tcreateRecordType,\n\tRecordId,\n} from '@tldraw/store'\nimport { IndexKey, JsonObject } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { idValidator } from '../misc/id-validator'\n\n/**\n * TLPage\n *\n * @public\n */\nexport interface TLPage extends BaseRecord<'page', TLPageId> {\n\tname: string\n\tindex: IndexKey\n\tmeta: JsonObject\n}\n\n/** @public */\nexport type TLPageId = RecordId<TLPage>\n\n/** @public */\nexport const pageIdValidator = idValidator<TLPageId>('page')\n\n/** @public */\nexport const pageValidator: T.Validator<TLPage> = T.model(\n\t'page',\n\tT.object({\n\t\ttypeName: T.literal('page'),\n\t\tid: pageIdValidator,\n\t\tname: T.string,\n\t\tindex: T.indexKey,\n\t\tmeta: T.jsonValue as T.ObjectValidator<JsonObject>,\n\t})\n)\n\n/** @public */\nexport const pageVersions = createMigrationIds('com.tldraw.page', {\n\tAddMeta: 1,\n})\n\n/** @public */\nexport const pageMigrations = createRecordMigrationSequence({\n\tsequenceId: 'com.tldraw.page',\n\trecordType: 'page',\n\tsequence: [\n\t\t{\n\t\t\tid: pageVersions.AddMeta,\n\t\t\tup: (record: any) => {\n\t\t\t\trecord.meta = {}\n\t\t\t},\n\t\t},\n\t],\n})\n\n/** @public */\nexport const PageRecordType = createRecordType<TLPage>('page', {\n\tvalidator: pageValidator,\n\tscope: 'document',\n}).withDefaultProperties(() => ({\n\tmeta: {},\n}))\n\n/** @public */\nexport function isPageId(id: string): id is TLPageId {\n\treturn PageRecordType.isId(id)\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;AAQA,SAAS,SAAS;AAClB,SAAS,mBAAmB;;;;AAiBrB,MAAM,sMAAkB,cAAA,EAAsB,MAAM;AAGpD,MAAM,uNAAqC,IAAA,CAAE,KAAA,CACnD,+MACA,IAAA,CAAE,MAAA,CAAO;IACR,iNAAU,IAAA,CAAE,OAAA,CAAQ,MAAM;IAC1B,IAAI;IACJ,4MAAM,KAAA,CAAE,MAAA;IACR,8MAAO,IAAA,CAAE,QAAA;IACT,6MAAM,IAAA,CAAE,SAAA;AACT,CAAC;AAIK,MAAM,uLAAe,qBAAA,EAAmB,mBAAmB;IACjE,SAAS;AACV,CAAC;AAGM,MAAM,kBAAiB,uMAAA,EAA8B;IAC3D,YAAY;IACZ,YAAY;IACZ,UAAU;QACT;YACC,IAAI,aAAa,OAAA;YACjB,IAAI,CAAC,WAAgB;gBACpB,OAAO,IAAA,GAAO,CAAC;YAChB;QACD;KACD;AACD,CAAC;AAGM,MAAM,kBAAiB,6LAAA,EAAyB,QAAQ;IAC9D,WAAW;IACX,OAAO;AACR,CAAC,EAAE,qBAAA,CAAsB,IAAA,CAAO;QAC/B,MAAM,CAAC;IACR,CAAA,CAAE;AAGK,SAAS,SAAS,EAAA,EAA4B;IACpD,OAAO,eAAe,IAAA,CAAK,EAAE;AAC9B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1768, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/records/TLInstance.ts"],"sourcesContent":["import {\n\tBaseRecord,\n\tcreateMigrationIds,\n\tcreateRecordMigrationSequence,\n\tcreateRecordType,\n\tRecordId,\n} from '@tldraw/store'\nimport { filterEntries, JsonObject } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { BoxModel, boxModelValidator } from '../misc/geometry-types'\nimport { idValidator } from '../misc/id-validator'\nimport { cursorValidator, TLCursor } from '../misc/TLCursor'\nimport { opacityValidator, TLOpacityType } from '../misc/TLOpacity'\nimport { scribbleValidator, TLScribble } from '../misc/TLScribble'\nimport { StyleProp } from '../styles/StyleProp'\nimport { pageIdValidator, TLPageId } from './TLPage'\nimport { TLShapeId } from './TLShape'\n\n/**\n * TLInstance\n *\n * State that is particular to a single browser tab\n *\n * @public\n */\nexport interface TLInstance extends BaseRecord<'instance', TLInstanceId> {\n\tcurrentPageId: TLPageId\n\topacityForNextShape: TLOpacityType\n\tstylesForNextShape: Record<string, unknown>\n\tfollowingUserId: string | null\n\thighlightedUserIds: string[]\n\tbrush: BoxModel | null\n\tcursor: TLCursor\n\tscribbles: TLScribble[]\n\tisFocusMode: boolean\n\tisDebugMode: boolean\n\tisToolLocked: boolean\n\texportBackground: boolean\n\tscreenBounds: BoxModel\n\tinsets: boolean[]\n\tzoomBrush: BoxModel | null\n\tchatMessage: string\n\tisChatting: boolean\n\tisPenMode: boolean\n\tisGridMode: boolean\n\tisFocused: boolean\n\tdevicePixelRatio: number\n\t/**\n\t * This is whether the primary input mechanism includes a pointing device of limited accuracy,\n\t * such as a finger on a touchscreen.\n\t */\n\tisCoarsePointer: boolean\n\t/**\n\t * Will be null if the pointer doesn't support hovering (e.g. touch), but true or false\n\t * otherwise\n\t */\n\tisHoveringCanvas: boolean | null\n\topenMenus: string[]\n\tisChangingStyle: boolean\n\tisReadonly: boolean\n\tmeta: JsonObject\n\tduplicateProps: {\n\t\tshapeIds: TLShapeId[]\n\t\toffset: {\n\t\t\tx: number\n\t\t\ty: number\n\t\t}\n\t} | null\n}\n\n/** @internal */\nexport const shouldKeyBePreservedBetweenSessions = {\n\t// This object defines keys that should be preserved across calls to loadSnapshot()\n\n\tid: false, // meta\n\ttypeName: false, // meta\n\n\tcurrentPageId: false, // does not preserve because who knows if the page still exists\n\topacityForNextShape: false, // does not preserve because it's a temporary state\n\tstylesForNextShape: false, // does not preserve because it's a temporary state\n\tfollowingUserId: false, // does not preserve because it's a temporary state\n\thighlightedUserIds: false, // does not preserve because it's a temporary state\n\tbrush: false, // does not preserve because it's a temporary state\n\tcursor: false, // does not preserve because it's a temporary state\n\tscribbles: false, // does not preserve because it's a temporary state\n\n\tisFocusMode: true, // preserves because it's a user preference\n\tisDebugMode: true, // preserves because it's a user preference\n\tisToolLocked: true, // preserves because it's a user preference\n\texportBackground: true, // preserves because it's a user preference\n\tscreenBounds: true, // preserves because it's capturing the user's screen state\n\tinsets: true, // preserves because it's capturing the user's screen state\n\n\tzoomBrush: false, // does not preserve because it's a temporary state\n\tchatMessage: false, // does not preserve because it's a temporary state\n\tisChatting: false, // does not preserve because it's a temporary state\n\tisPenMode: false, // does not preserve because it's a temporary state\n\n\tisGridMode: true, // preserves because it's a user preference\n\tisFocused: true, // preserves because obviously\n\tdevicePixelRatio: true, // preserves because it captures the user's screen state\n\tisCoarsePointer: true, // preserves because it captures the user's screen state\n\tisHoveringCanvas: false, // does not preserve because it's a temporary state\n\topenMenus: false, // does not preserve because it's a temporary state\n\tisChangingStyle: false, // does not preserve because it's a temporary state\n\tisReadonly: true, // preserves because it's a config option\n\tmeta: false, // does not preserve because who knows what's in there, leave it up to sdk users to save and reinstate\n\tduplicateProps: false, //\n} as const satisfies { [K in keyof TLInstance]: boolean }\n\n/** @internal */\nexport function pluckPreservingValues(val?: TLInstance | null): null | Partial<TLInstance> {\n\treturn val\n\t\t? (filterEntries(val, (key) => {\n\t\t\t\treturn shouldKeyBePreservedBetweenSessions[key as keyof TLInstance]\n\t\t\t}) as Partial<TLInstance>)\n\t\t: null\n}\n\n/** @public */\nexport type TLInstanceId = RecordId<TLInstance>\n\n/** @public */\nexport const instanceIdValidator = idValidator<TLInstanceId>('instance')\n\nexport function createInstanceRecordType(stylesById: Map<string, StyleProp<unknown>>) {\n\tconst stylesForNextShapeValidators = {} as Record<string, T.Validator<unknown>>\n\tfor (const [id, style] of stylesById) {\n\t\tstylesForNextShapeValidators[id] = T.optional(style)\n\t}\n\n\tconst instanceTypeValidator: T.Validator<TLInstance> = T.model(\n\t\t'instance',\n\t\tT.object({\n\t\t\ttypeName: T.literal('instance'),\n\t\t\tid: idValidator<TLInstanceId>('instance'),\n\t\t\tcurrentPageId: pageIdValidator,\n\t\t\tfollowingUserId: T.string.nullable(),\n\t\t\tbrush: boxModelValidator.nullable(),\n\t\t\topacityForNextShape: opacityValidator,\n\t\t\tstylesForNextShape: T.object(stylesForNextShapeValidators),\n\t\t\tcursor: cursorValidator,\n\t\t\tscribbles: T.arrayOf(scribbleValidator),\n\t\t\tisFocusMode: T.boolean,\n\t\t\tisDebugMode: T.boolean,\n\t\t\tisToolLocked: T.boolean,\n\t\t\texportBackground: T.boolean,\n\t\t\tscreenBounds: boxModelValidator,\n\t\t\tinsets: T.arrayOf(T.boolean),\n\t\t\tzoomBrush: boxModelValidator.nullable(),\n\t\t\tisPenMode: T.boolean,\n\t\t\tisGridMode: T.boolean,\n\t\t\tchatMessage: T.string,\n\t\t\tisChatting: T.boolean,\n\t\t\thighlightedUserIds: T.arrayOf(T.string),\n\t\t\tisFocused: T.boolean,\n\t\t\tdevicePixelRatio: T.number,\n\t\t\tisCoarsePointer: T.boolean,\n\t\t\tisHoveringCanvas: T.boolean.nullable(),\n\t\t\topenMenus: T.arrayOf(T.string),\n\t\t\tisChangingStyle: T.boolean,\n\t\t\tisReadonly: T.boolean,\n\t\t\tmeta: T.jsonValue as T.ObjectValidator<JsonObject>,\n\t\t\tduplicateProps: T.object({\n\t\t\t\tshapeIds: T.arrayOf(idValidator<TLShapeId>('shape')),\n\t\t\t\toffset: T.object({\n\t\t\t\t\tx: T.number,\n\t\t\t\t\ty: T.number,\n\t\t\t\t}),\n\t\t\t}).nullable(),\n\t\t})\n\t)\n\n\treturn createRecordType<TLInstance>('instance', {\n\t\tvalidator: instanceTypeValidator,\n\t\tscope: 'session',\n\t\tephemeralKeys: {\n\t\t\tcurrentPageId: false,\n\t\t\tmeta: false,\n\n\t\t\tfollowingUserId: true,\n\t\t\topacityForNextShape: true,\n\t\t\tstylesForNextShape: true,\n\t\t\tbrush: true,\n\t\t\tcursor: true,\n\t\t\tscribbles: true,\n\t\t\tisFocusMode: true,\n\t\t\tisDebugMode: true,\n\t\t\tisToolLocked: true,\n\t\t\texportBackground: true,\n\t\t\tscreenBounds: true,\n\t\t\tinsets: true,\n\t\t\tzoomBrush: true,\n\t\t\tisPenMode: true,\n\t\t\tisGridMode: true,\n\t\t\tchatMessage: true,\n\t\t\tisChatting: true,\n\t\t\thighlightedUserIds: true,\n\t\t\tisFocused: true,\n\t\t\tdevicePixelRatio: true,\n\t\t\tisCoarsePointer: true,\n\t\t\tisHoveringCanvas: true,\n\t\t\topenMenus: true,\n\t\t\tisChangingStyle: true,\n\t\t\tisReadonly: true,\n\t\t\tduplicateProps: true,\n\t\t},\n\t}).withDefaultProperties(\n\t\t(): Omit<TLInstance, 'typeName' | 'id' | 'currentPageId'> => ({\n\t\t\tfollowingUserId: null,\n\t\t\topacityForNextShape: 1,\n\t\t\tstylesForNextShape: {},\n\t\t\tbrush: null,\n\t\t\tscribbles: [],\n\t\t\tcursor: {\n\t\t\t\ttype: 'default',\n\t\t\t\trotation: 0,\n\t\t\t},\n\t\t\tisFocusMode: false,\n\t\t\texportBackground: false,\n\t\t\tisDebugMode: false,\n\t\t\tisToolLocked: false,\n\t\t\tscreenBounds: { x: 0, y: 0, w: 1080, h: 720 },\n\t\t\tinsets: [false, false, false, false],\n\t\t\tzoomBrush: null,\n\t\t\tisGridMode: false,\n\t\t\tisPenMode: false,\n\t\t\tchatMessage: '',\n\t\t\tisChatting: false,\n\t\t\thighlightedUserIds: [],\n\t\t\tisFocused: false,\n\t\t\tdevicePixelRatio: typeof window === 'undefined' ? 1 : window.devicePixelRatio,\n\t\t\tisCoarsePointer: false,\n\t\t\tisHoveringCanvas: null,\n\t\t\topenMenus: [] as string[],\n\t\t\tisChangingStyle: false,\n\t\t\tisReadonly: false,\n\t\t\tmeta: {},\n\t\t\tduplicateProps: null,\n\t\t})\n\t)\n}\n\n/** @public */\nexport const instanceVersions = createMigrationIds('com.tldraw.instance', {\n\tAddTransparentExportBgs: 1,\n\tRemoveDialog: 2,\n\tAddToolLockMode: 3,\n\tRemoveExtraPropsForNextShape: 4,\n\tAddLabelColor: 5,\n\tAddFollowingUserId: 6,\n\tRemoveAlignJustify: 7,\n\tAddZoom: 8,\n\tAddVerticalAlign: 9,\n\tAddScribbleDelay: 10,\n\tRemoveUserId: 11,\n\tAddIsPenModeAndIsGridMode: 12,\n\tHoistOpacity: 13,\n\tAddChat: 14,\n\tAddHighlightedUserIds: 15,\n\tReplacePropsForNextShapeWithStylesForNextShape: 16,\n\tAddMeta: 17,\n\tRemoveCursorColor: 18,\n\tAddLonelyProperties: 19,\n\tReadOnlyReadonly: 20,\n\tAddHoveringCanvas: 21,\n\tAddScribbles: 22,\n\tAddInset: 23,\n\tAddDuplicateProps: 24,\n\tRemoveCanMoveCamera: 25,\n} as const)\n\n// TODO: rewrite these to use mutation\n\n/** @public */\nexport const instanceMigrations = createRecordMigrationSequence({\n\tsequenceId: 'com.tldraw.instance',\n\trecordType: 'instance',\n\tsequence: [\n\t\t{\n\t\t\tid: instanceVersions.AddTransparentExportBgs,\n\t\t\tup: (instance) => {\n\t\t\t\treturn { ...instance, exportBackground: true }\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.RemoveDialog,\n\t\t\tup: ({ dialog: _, ...instance }: any) => {\n\t\t\t\treturn instance\n\t\t\t},\n\t\t},\n\n\t\t{\n\t\t\tid: instanceVersions.AddToolLockMode,\n\t\t\tup: (instance) => {\n\t\t\t\treturn { ...instance, isToolLocked: false }\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.RemoveExtraPropsForNextShape,\n\t\t\tup: ({ propsForNextShape, ...instance }: any) => {\n\t\t\t\treturn {\n\t\t\t\t\t...instance,\n\t\t\t\t\tpropsForNextShape: Object.fromEntries(\n\t\t\t\t\t\tObject.entries(propsForNextShape).filter(([key]) =>\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'color',\n\t\t\t\t\t\t\t\t'labelColor',\n\t\t\t\t\t\t\t\t'dash',\n\t\t\t\t\t\t\t\t'fill',\n\t\t\t\t\t\t\t\t'size',\n\t\t\t\t\t\t\t\t'font',\n\t\t\t\t\t\t\t\t'align',\n\t\t\t\t\t\t\t\t'verticalAlign',\n\t\t\t\t\t\t\t\t'icon',\n\t\t\t\t\t\t\t\t'geo',\n\t\t\t\t\t\t\t\t'arrowheadStart',\n\t\t\t\t\t\t\t\t'arrowheadEnd',\n\t\t\t\t\t\t\t\t'spline',\n\t\t\t\t\t\t\t].includes(key)\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.AddLabelColor,\n\t\t\tup: ({ propsForNextShape, ...instance }: any) => {\n\t\t\t\treturn {\n\t\t\t\t\t...instance,\n\t\t\t\t\tpropsForNextShape: {\n\t\t\t\t\t\t...propsForNextShape,\n\t\t\t\t\t\tlabelColor: 'black',\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.AddFollowingUserId,\n\t\t\tup: (instance) => {\n\t\t\t\treturn { ...instance, followingUserId: null }\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.RemoveAlignJustify,\n\t\t\tup: (instance: any) => {\n\t\t\t\tlet newAlign = instance.propsForNextShape.align\n\t\t\t\tif (newAlign === 'justify') {\n\t\t\t\t\tnewAlign = 'start'\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...instance,\n\t\t\t\t\tpropsForNextShape: {\n\t\t\t\t\t\t...instance.propsForNextShape,\n\t\t\t\t\t\talign: newAlign,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.AddZoom,\n\t\t\tup: (instance) => {\n\t\t\t\treturn { ...instance, zoomBrush: null }\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.AddVerticalAlign,\n\t\t\tup: (instance: any) => {\n\t\t\t\treturn {\n\t\t\t\t\t...instance,\n\t\t\t\t\tpropsForNextShape: {\n\t\t\t\t\t\t...instance.propsForNextShape,\n\t\t\t\t\t\tverticalAlign: 'middle',\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.AddScribbleDelay,\n\t\t\tup: (instance: any) => {\n\t\t\t\tif (instance.scribble !== null) {\n\t\t\t\t\treturn { ...instance, scribble: { ...instance.scribble, delay: 0 } }\n\t\t\t\t}\n\t\t\t\treturn { ...instance }\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.RemoveUserId,\n\t\t\tup: ({ userId: _, ...instance }: any) => {\n\t\t\t\treturn instance\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.AddIsPenModeAndIsGridMode,\n\t\t\tup: (instance) => {\n\t\t\t\treturn { ...instance, isPenMode: false, isGridMode: false }\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.HoistOpacity,\n\t\t\tup: ({ propsForNextShape: { opacity, ...propsForNextShape }, ...instance }: any) => {\n\t\t\t\treturn { ...instance, opacityForNextShape: Number(opacity ?? '1'), propsForNextShape }\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.AddChat,\n\t\t\tup: (instance) => {\n\t\t\t\treturn { ...instance, chatMessage: '', isChatting: false }\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.AddHighlightedUserIds,\n\t\t\tup: (instance) => {\n\t\t\t\treturn { ...instance, highlightedUserIds: [] }\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.ReplacePropsForNextShapeWithStylesForNextShape,\n\t\t\tup: ({ propsForNextShape: _, ...instance }: any) => {\n\t\t\t\treturn { ...instance, stylesForNextShape: {} }\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.AddMeta,\n\t\t\tup: (record) => {\n\t\t\t\treturn {\n\t\t\t\t\t...record,\n\t\t\t\t\tmeta: {},\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.RemoveCursorColor,\n\t\t\tup: (record: any) => {\n\t\t\t\tconst { color: _, ...cursor } = record.cursor\n\t\t\t\treturn {\n\t\t\t\t\t...record,\n\t\t\t\t\tcursor,\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.AddLonelyProperties,\n\t\t\tup: (record) => {\n\t\t\t\treturn {\n\t\t\t\t\t...record,\n\t\t\t\t\tcanMoveCamera: true,\n\t\t\t\t\tisFocused: false,\n\t\t\t\t\tdevicePixelRatio: 1,\n\t\t\t\t\tisCoarsePointer: false,\n\t\t\t\t\topenMenus: [],\n\t\t\t\t\tisChangingStyle: false,\n\t\t\t\t\tisReadOnly: false,\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.ReadOnlyReadonly,\n\t\t\tup: ({ isReadOnly: _isReadOnly, ...record }: any) => {\n\t\t\t\treturn {\n\t\t\t\t\t...record,\n\t\t\t\t\tisReadonly: _isReadOnly,\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.AddHoveringCanvas,\n\t\t\tup: (record) => {\n\t\t\t\treturn {\n\t\t\t\t\t...record,\n\t\t\t\t\tisHoveringCanvas: null,\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.AddScribbles,\n\t\t\tup: ({ scribble: _, ...record }: any) => {\n\t\t\t\treturn {\n\t\t\t\t\t...record,\n\t\t\t\t\tscribbles: [],\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.AddInset,\n\t\t\tup: (record) => {\n\t\t\t\treturn {\n\t\t\t\t\t...record,\n\t\t\t\t\tinsets: [false, false, false, false],\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: ({ insets: _, ...record }: any) => {\n\t\t\t\treturn {\n\t\t\t\t\t...record,\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.AddDuplicateProps,\n\t\t\tup: (record) => {\n\t\t\t\treturn {\n\t\t\t\t\t...record,\n\t\t\t\t\tduplicateProps: null,\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: ({ duplicateProps: _, ...record }: any) => {\n\t\t\t\treturn {\n\t\t\t\t\t...record,\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instanceVersions.RemoveCanMoveCamera,\n\t\t\tup: ({ canMoveCamera: _, ...record }: any) => {\n\t\t\t\treturn {\n\t\t\t\t\t...record,\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: (instance) => {\n\t\t\t\treturn { ...instance, canMoveCamera: true }\n\t\t\t},\n\t\t},\n\t],\n})\n\n/** @public */\nexport const TLINSTANCE_ID = 'instance:instance' as TLInstanceId\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2312, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/records/TLPageState.ts"],"sourcesContent":["import {\n\tBaseRecord,\n\tcreateMigrationIds,\n\tcreateRecordMigrationSequence,\n\tcreateRecordType,\n\tRecordId,\n} from '@tldraw/store'\nimport { JsonObject } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { idValidator } from '../misc/id-validator'\nimport { shapeIdValidator } from '../shapes/TLBaseShape'\nimport { pageIdValidator, TLPage } from './TLPage'\nimport { TLShapeId } from './TLShape'\n\n/**\n * TLInstancePageState\n *\n * State that is unique to a particular page of the document in a particular browser tab\n *\n * @public\n */\nexport interface TLInstancePageState\n\textends BaseRecord<'instance_page_state', TLInstancePageStateId> {\n\tpageId: RecordId<TLPage>\n\tselectedShapeIds: TLShapeId[]\n\thintingShapeIds: TLShapeId[]\n\terasingShapeIds: TLShapeId[]\n\thoveredShapeId: TLShapeId | null\n\teditingShapeId: TLShapeId | null\n\tcroppingShapeId: TLShapeId | null\n\tfocusedGroupId: TLShapeId | null\n\tmeta: JsonObject\n}\n\n/** @public */\nexport const instancePageStateValidator: T.Validator<TLInstancePageState> = T.model(\n\t'instance_page_state',\n\tT.object({\n\t\ttypeName: T.literal('instance_page_state'),\n\t\tid: idValidator<TLInstancePageStateId>('instance_page_state'),\n\t\tpageId: pageIdValidator,\n\t\tselectedShapeIds: T.arrayOf(shapeIdValidator),\n\t\thintingShapeIds: T.arrayOf(shapeIdValidator),\n\t\terasingShapeIds: T.arrayOf(shapeIdValidator),\n\t\thoveredShapeId: shapeIdValidator.nullable(),\n\t\teditingShapeId: shapeIdValidator.nullable(),\n\t\tcroppingShapeId: shapeIdValidator.nullable(),\n\t\tfocusedGroupId: shapeIdValidator.nullable(),\n\t\tmeta: T.jsonValue as T.ObjectValidator<JsonObject>,\n\t})\n)\n\n/** @public */\nexport const instancePageStateVersions = createMigrationIds('com.tldraw.instance_page_state', {\n\tAddCroppingId: 1,\n\tRemoveInstanceIdAndCameraId: 2,\n\tAddMeta: 3,\n\tRenameProperties: 4,\n\tRenamePropertiesAgain: 5,\n} as const)\n\n/** @public */\nexport const instancePageStateMigrations = createRecordMigrationSequence({\n\tsequenceId: 'com.tldraw.instance_page_state',\n\trecordType: 'instance_page_state',\n\tsequence: [\n\t\t{\n\t\t\tid: instancePageStateVersions.AddCroppingId,\n\t\t\tup(instance: any) {\n\t\t\t\tinstance.croppingShapeId = null\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instancePageStateVersions.RemoveInstanceIdAndCameraId,\n\t\t\tup(instance: any) {\n\t\t\t\tdelete instance.instanceId\n\t\t\t\tdelete instance.cameraId\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instancePageStateVersions.AddMeta,\n\t\t\tup: (record: any) => {\n\t\t\t\trecord.meta = {}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instancePageStateVersions.RenameProperties,\n\t\t\t// this migration is cursed: it was written wrong and doesn't do anything.\n\t\t\t// rather than replace it, I've added another migration below that fixes it.\n\t\t\tup: (_record) => {\n\t\t\t\t// noop\n\t\t\t},\n\t\t\tdown: (_record) => {\n\t\t\t\t// noop\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instancePageStateVersions.RenamePropertiesAgain,\n\t\t\tup: (record: any) => {\n\t\t\t\trecord.selectedShapeIds = record.selectedIds\n\t\t\t\tdelete record.selectedIds\n\t\t\t\trecord.hintingShapeIds = record.hintingIds\n\t\t\t\tdelete record.hintingIds\n\t\t\t\trecord.erasingShapeIds = record.erasingIds\n\t\t\t\tdelete record.erasingIds\n\t\t\t\trecord.hoveredShapeId = record.hoveredId\n\t\t\t\tdelete record.hoveredId\n\t\t\t\trecord.editingShapeId = record.editingId\n\t\t\t\tdelete record.editingId\n\t\t\t\trecord.croppingShapeId = record.croppingShapeId ?? record.croppingId ?? null\n\t\t\t\tdelete record.croppingId\n\t\t\t\trecord.focusedGroupId = record.focusLayerId\n\t\t\t\tdelete record.focusLayerId\n\t\t\t},\n\t\t\tdown: (record: any) => {\n\t\t\t\trecord.selectedIds = record.selectedShapeIds\n\t\t\t\tdelete record.selectedShapeIds\n\t\t\t\trecord.hintingIds = record.hintingShapeIds\n\t\t\t\tdelete record.hintingShapeIds\n\t\t\t\trecord.erasingIds = record.erasingShapeIds\n\t\t\t\tdelete record.erasingShapeIds\n\t\t\t\trecord.hoveredId = record.hoveredShapeId\n\t\t\t\tdelete record.hoveredShapeId\n\t\t\t\trecord.editingId = record.editingShapeId\n\t\t\t\tdelete record.editingShapeId\n\t\t\t\trecord.croppingId = record.croppingShapeId\n\t\t\t\tdelete record.croppingShapeId\n\t\t\t\trecord.focusLayerId = record.focusedGroupId\n\t\t\t\tdelete record.focusedGroupId\n\t\t\t},\n\t\t},\n\t],\n})\n\n/** @public */\nexport const InstancePageStateRecordType = createRecordType<TLInstancePageState>(\n\t'instance_page_state',\n\t{\n\t\tvalidator: instancePageStateValidator,\n\t\tscope: 'session',\n\t\tephemeralKeys: {\n\t\t\tpageId: false,\n\t\t\tselectedShapeIds: false,\n\t\t\teditingShapeId: false,\n\t\t\tcroppingShapeId: false,\n\t\t\tmeta: false,\n\n\t\t\thintingShapeIds: true,\n\t\t\terasingShapeIds: true,\n\t\t\thoveredShapeId: true,\n\t\t\tfocusedGroupId: true,\n\t\t},\n\t}\n).withDefaultProperties(\n\t(): Omit<TLInstancePageState, 'id' | 'typeName' | 'pageId'> => ({\n\t\teditingShapeId: null,\n\t\tcroppingShapeId: null,\n\t\tselectedShapeIds: [],\n\t\thoveredShapeId: null,\n\t\terasingShapeIds: [],\n\t\thintingShapeIds: [],\n\t\tfocusedGroupId: null,\n\t\tmeta: {},\n\t})\n)\n\n/** @public */\nexport type TLInstancePageStateId = RecordId<TLInstancePageState>\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2450, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/records/TLPointer.ts"],"sourcesContent":["import {\n\tBaseRecord,\n\tcreateMigrationIds,\n\tcreateRecordMigrationSequence,\n\tcreateRecordType,\n\tRecordId,\n} from '@tldraw/store'\nimport { JsonObject } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { idValidator } from '../misc/id-validator'\n\n/**\n * TLPointer\n *\n * @public\n */\nexport interface TLPointer extends BaseRecord<'pointer', TLPointerId> {\n\tx: number\n\ty: number\n\tlastActivityTimestamp: number\n\tmeta: JsonObject\n}\n\n/** @public */\nexport type TLPointerId = RecordId<TLPointer>\n\n/** @public */\nexport const pointerValidator: T.Validator<TLPointer> = T.model(\n\t'pointer',\n\tT.object({\n\t\ttypeName: T.literal('pointer'),\n\t\tid: idValidator<TLPointerId>('pointer'),\n\t\tx: T.number,\n\t\ty: T.number,\n\t\tlastActivityTimestamp: T.number,\n\t\tmeta: T.jsonValue as T.ObjectValidator<JsonObject>,\n\t})\n)\n\n/** @public */\nexport const pointerVersions = createMigrationIds('com.tldraw.pointer', {\n\tAddMeta: 1,\n})\n\n/** @public */\nexport const pointerMigrations = createRecordMigrationSequence({\n\tsequenceId: 'com.tldraw.pointer',\n\trecordType: 'pointer',\n\tsequence: [\n\t\t{\n\t\t\tid: pointerVersions.AddMeta,\n\t\t\tup: (record: any) => {\n\t\t\t\trecord.meta = {}\n\t\t\t},\n\t\t},\n\t],\n})\n\n/** @public */\nexport const PointerRecordType = createRecordType<TLPointer>('pointer', {\n\tvalidator: pointerValidator,\n\tscope: 'session',\n}).withDefaultProperties(\n\t(): Omit<TLPointer, 'id' | 'typeName'> => ({\n\t\tx: 0,\n\t\ty: 0,\n\t\tlastActivityTimestamp: 0,\n\t\tmeta: {},\n\t})\n)\n\n/** @public */\nexport const TLPOINTER_ID = PointerRecordType.createId('pointer')\n"],"names":[],"mappings":";;;;;;;AAAA;;;;AAQA,SAAS,SAAS;AAClB,SAAS,mBAAmB;;;;AAkBrB,MAAM,0NAA2C,IAAA,CAAE,KAAA,CACzD,kNACA,IAAA,CAAE,MAAA,CAAO;IACR,gNAAU,KAAA,CAAE,OAAA,CAAQ,SAAS;IAC7B,wLAAI,cAAA,EAAyB,SAAS;IACtC,0MAAG,IAAA,CAAE,MAAA;IACL,GAAG,2MAAA,CAAE,MAAA;IACL,8NAAuB,IAAA,CAAE,MAAA;IACzB,4MAAM,KAAA,CAAE,SAAA;AACT,CAAC;AAIK,MAAM,0LAAkB,qBAAA,EAAmB,sBAAsB;IACvE,SAAS;AACV,CAAC;AAGM,MAAM,qBAAoB,uMAAA,EAA8B;IAC9D,YAAY;IACZ,YAAY;IACZ,UAAU;QACT;YACC,IAAI,gBAAgB,OAAA;YACpB,IAAI,CAAC,WAAgB;gBACpB,OAAO,IAAA,GAAO,CAAC;YAChB;QACD;KACD;AACD,CAAC;AAGM,MAAM,qBAAoB,6LAAA,EAA4B,WAAW;IACvE,WAAW;IACX,OAAO;AACR,CAAC,EAAE,qBAAA,CACF,IAAA,CAA2C;QAC1C,GAAG;QACH,GAAG;QACH,uBAAuB;QACvB,MAAM,CAAC;IACR,CAAA;AAIM,MAAM,eAAe,kBAAkB,QAAA,CAAS,SAAS","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2507, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/records/TLPresence.ts"],"sourcesContent":["import {\n\tBaseRecord,\n\tcreateMigrationIds,\n\tcreateRecordMigrationSequence,\n\tcreateRecordType,\n\tRecordId,\n} from '@tldraw/store'\nimport { JsonObject } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { BoxModel, boxModelValidator } from '../misc/geometry-types'\nimport { idValidator } from '../misc/id-validator'\nimport { cursorTypeValidator, TLCursor } from '../misc/TLCursor'\nimport { scribbleValidator, TLScribble } from '../misc/TLScribble'\nimport { TLPageId } from './TLPage'\nimport { TLShapeId } from './TLShape'\n\n/** @public */\nexport interface TLInstancePresence extends BaseRecord<'instance_presence', TLInstancePresenceID> {\n\tuserId: string\n\tuserName: string\n\tlastActivityTimestamp: number | null\n\tcolor: string // can be any hex color\n\tcamera: { x: number; y: number; z: number } | null\n\tselectedShapeIds: TLShapeId[]\n\tcurrentPageId: TLPageId\n\tbrush: BoxModel | null\n\tscribbles: TLScribble[]\n\tscreenBounds: BoxModel | null\n\tfollowingUserId: string | null\n\tcursor: {\n\t\tx: number\n\t\ty: number\n\t\ttype: TLCursor['type']\n\t\trotation: number\n\t} | null\n\tchatMessage: string\n\tmeta: JsonObject\n}\n\n/** @public */\nexport type TLInstancePresenceID = RecordId<TLInstancePresence>\n\n/** @public */\nexport const instancePresenceValidator: T.Validator<TLInstancePresence> = T.model(\n\t'instance_presence',\n\tT.object({\n\t\ttypeName: T.literal('instance_presence'),\n\t\tid: idValidator<TLInstancePresenceID>('instance_presence'),\n\t\tuserId: T.string,\n\t\tuserName: T.string,\n\t\tlastActivityTimestamp: T.number.nullable(),\n\t\tfollowingUserId: T.string.nullable(),\n\t\tcursor: T.object({\n\t\t\tx: T.number,\n\t\t\ty: T.number,\n\t\t\ttype: cursorTypeValidator,\n\t\t\trotation: T.number,\n\t\t}).nullable(),\n\t\tcolor: T.string,\n\t\tcamera: T.object({\n\t\t\tx: T.number,\n\t\t\ty: T.number,\n\t\t\tz: T.number,\n\t\t}).nullable(),\n\t\tscreenBounds: boxModelValidator.nullable(),\n\t\tselectedShapeIds: T.arrayOf(idValidator<TLShapeId>('shape')),\n\t\tcurrentPageId: idValidator<TLPageId>('page'),\n\t\tbrush: boxModelValidator.nullable(),\n\t\tscribbles: T.arrayOf(scribbleValidator),\n\t\tchatMessage: T.string,\n\t\tmeta: T.jsonValue as T.ObjectValidator<JsonObject>,\n\t})\n)\n\n/** @public */\nexport const instancePresenceVersions = createMigrationIds('com.tldraw.instance_presence', {\n\tAddScribbleDelay: 1,\n\tRemoveInstanceId: 2,\n\tAddChatMessage: 3,\n\tAddMeta: 4,\n\tRenameSelectedShapeIds: 5,\n\tNullableCameraCursor: 6,\n} as const)\n\nexport const instancePresenceMigrations = createRecordMigrationSequence({\n\tsequenceId: 'com.tldraw.instance_presence',\n\trecordType: 'instance_presence',\n\tsequence: [\n\t\t{\n\t\t\tid: instancePresenceVersions.AddScribbleDelay,\n\t\t\tup: (instance: any) => {\n\t\t\t\tif (instance.scribble !== null) {\n\t\t\t\t\tinstance.scribble.delay = 0\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instancePresenceVersions.RemoveInstanceId,\n\t\t\tup: (instance: any) => {\n\t\t\t\tdelete instance.instanceId\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instancePresenceVersions.AddChatMessage,\n\t\t\tup: (instance: any) => {\n\t\t\t\tinstance.chatMessage = ''\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instancePresenceVersions.AddMeta,\n\t\t\tup: (record: any) => {\n\t\t\t\trecord.meta = {}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instancePresenceVersions.RenameSelectedShapeIds,\n\t\t\tup: (_record) => {\n\t\t\t\t// noop, whoopsie\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: instancePresenceVersions.NullableCameraCursor,\n\t\t\tup: (_record: any) => {\n\t\t\t\t// noop\n\t\t\t},\n\t\t\tdown: (record: any) => {\n\t\t\t\tif (record.camera === null) {\n\t\t\t\t\trecord.camera = { x: 0, y: 0, z: 1 }\n\t\t\t\t}\n\t\t\t\tif (record.lastActivityTimestamp === null) {\n\t\t\t\t\trecord.lastActivityTimestamp = 0\n\t\t\t\t}\n\t\t\t\tif (record.cursor === null) {\n\t\t\t\t\trecord.cursor = { type: 'default', x: 0, y: 0, rotation: 0 }\n\t\t\t\t}\n\t\t\t\tif (record.screenBounds === null) {\n\t\t\t\t\trecord.screenBounds = { x: 0, y: 0, w: 1, h: 1 }\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t],\n})\n\n/** @public */\nexport const InstancePresenceRecordType = createRecordType<TLInstancePresence>(\n\t'instance_presence',\n\t{\n\t\tvalidator: instancePresenceValidator,\n\t\tscope: 'presence',\n\t}\n).withDefaultProperties(() => ({\n\tlastActivityTimestamp: null,\n\tfollowingUserId: null,\n\tcolor: '#FF0000',\n\tcamera: null,\n\tcursor: null,\n\tscreenBounds: null,\n\tselectedShapeIds: [],\n\tbrush: null,\n\tscribbles: [],\n\tchatMessage: '',\n\tmeta: {},\n}))\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2655, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/createPresenceStateDerivation.ts"],"sourcesContent":["import { Signal, computed } from '@tldraw/state'\nimport { TLStore } from './TLStore'\nimport { CameraRecordType } from './records/TLCamera'\nimport { TLINSTANCE_ID } from './records/TLInstance'\nimport { InstancePageStateRecordType } from './records/TLPageState'\nimport { TLPOINTER_ID } from './records/TLPointer'\nimport { InstancePresenceRecordType, TLInstancePresence } from './records/TLPresence'\n\n/**\n * The information about a user which is used for multiplayer features.\n * @public\n */\nexport interface TLPresenceUserInfo {\n\t/**\n\t * id - A unique identifier for the user. This should be the same across all devices and sessions.\n\t */\n\tid: string\n\t/**\n\t * The user's display name.\n\t */\n\tname?: string | null\n\t/**\n\t * The user's color. If not given, a random color will be assigned.\n\t */\n\tcolor?: string | null\n}\n\n/**\n * Creates a derivation that represents the current presence state of the current user.\n * @public\n */\nexport function createPresenceStateDerivation(\n\t$user: Signal<TLPresenceUserInfo>,\n\tinstanceId?: TLInstancePresence['id']\n) {\n\treturn (store: TLStore): Signal<TLInstancePresence | null> => {\n\t\treturn computed('instancePresence', () => {\n\t\t\tconst user = $user.get()\n\t\t\tif (!user) return null\n\n\t\t\tconst state = getDefaultUserPresence(store, user)\n\t\t\tif (!state) return null\n\n\t\t\treturn InstancePresenceRecordType.create({\n\t\t\t\t...state,\n\t\t\t\tid: instanceId ?? InstancePresenceRecordType.createId(store.id),\n\t\t\t})\n\t\t})\n\t}\n}\n\n/** @public */\nexport type TLPresenceStateInfo = Parameters<(typeof InstancePresenceRecordType)['create']>[0]\n\n/** @public */\nexport function getDefaultUserPresence(store: TLStore, user: TLPresenceUserInfo) {\n\tconst instance = store.get(TLINSTANCE_ID)\n\tconst pageState = store.get(InstancePageStateRecordType.createId(instance?.currentPageId))\n\tconst camera = store.get(CameraRecordType.createId(instance?.currentPageId))\n\tconst pointer = store.get(TLPOINTER_ID)\n\tif (!pageState || !instance || !camera || !pointer) {\n\t\treturn null\n\t}\n\n\treturn {\n\t\tselectedShapeIds: pageState.selectedShapeIds,\n\t\tbrush: instance.brush,\n\t\tscribbles: instance.scribbles,\n\t\tuserId: user.id,\n\t\tuserName: user.name ?? '',\n\t\tfollowingUserId: instance.followingUserId,\n\t\tcamera: {\n\t\t\tx: camera.x,\n\t\t\ty: camera.y,\n\t\t\tz: camera.z,\n\t\t},\n\t\tcolor: user.color ?? '#FF0000',\n\t\tcurrentPageId: instance.currentPageId,\n\t\tcursor: {\n\t\t\tx: pointer.x,\n\t\t\ty: pointer.y,\n\t\t\trotation: instance.cursor.rotation,\n\t\t\ttype: instance.cursor.type,\n\t\t},\n\t\tlastActivityTimestamp: pointer.lastActivityTimestamp,\n\t\tscreenBounds: instance.screenBounds,\n\t\tchatMessage: instance.chatMessage,\n\t\tmeta: {},\n\t} satisfies TLPresenceStateInfo\n}\n"],"names":[],"mappings":";;;;AAAA,SAAiB,gBAAgB;;AAEjC,SAAS,wBAAwB;AACjC,SAAS,qBAAqB;AAC9B,SAAS,mCAAmC;AAC5C,SAAS,oBAAoB;AAC7B,SAAS,kCAAsD;;;;;;;AAyBxD,SAAS,8BACf,KAAA,EACA,UAAA,EACC;IACD,OAAO,CAAC,UAAsD;QAC7D,+KAAO,YAAA,EAAS,oBAAoB,MAAM;YACzC,MAAM,OAAO,MAAM,GAAA,CAAI;YACvB,IAAI,CAAC,KAAM,CAAA,OAAO;YAElB,MAAM,QAAQ,uBAAuB,OAAO,IAAI;YAChD,IAAI,CAAC,MAAO,CAAA,OAAO;YAEnB,qLAAO,6BAAA,CAA2B,MAAA,CAAO;gBACxC,GAAG,KAAA;gBACH,IAAI,4LAAc,6BAAA,CAA2B,QAAA,CAAS,MAAM,EAAE;YAC/D,CAAC;QACF,CAAC;IACF;AACD;AAMO,SAAS,uBAAuB,KAAA,EAAgB,IAAA,EAA0B;IAChF,MAAM,WAAW,MAAM,GAAA,+KAAI,gBAAa;IACxC,MAAM,YAAY,MAAM,GAAA,gLAAI,8BAAA,CAA4B,QAAA,CAAS,UAAU,aAAa,CAAC;IACzF,MAAM,SAAS,MAAM,GAAA,6KAAI,mBAAA,CAAiB,QAAA,CAAS,UAAU,aAAa,CAAC;IAC3E,MAAM,UAAU,MAAM,GAAA,8KAAI,eAAY;IACtC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS;QACnD,OAAO;IACR;IAEA,OAAO;QACN,kBAAkB,UAAU,gBAAA;QAC5B,OAAO,SAAS,KAAA;QAChB,WAAW,SAAS,SAAA;QACpB,QAAQ,KAAK,EAAA;QACb,UAAU,KAAK,IAAA,IAAQ;QACvB,iBAAiB,SAAS,eAAA;QAC1B,QAAQ;YACP,GAAG,OAAO,CAAA;YACV,GAAG,OAAO,CAAA;YACV,GAAG,OAAO,CAAA;QACX;QACA,OAAO,KAAK,KAAA,IAAS;QACrB,eAAe,SAAS,aAAA;QACxB,QAAQ;YACP,GAAG,QAAQ,CAAA;YACX,GAAG,QAAQ,CAAA;YACX,UAAU,SAAS,MAAA,CAAO,QAAA;YAC1B,MAAM,SAAS,MAAA,CAAO,IAAA;QACvB;QACA,uBAAuB,QAAQ,qBAAA;QAC/B,cAAc,SAAS,YAAA;QACvB,aAAa,SAAS,WAAA;QACtB,MAAM,CAAC;IACR;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2728, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/records/TLDocument.ts"],"sourcesContent":["import {\n\tBaseRecord,\n\tcreateMigrationIds,\n\tcreateRecordMigrationSequence,\n\tcreateRecordType,\n\tRecordId,\n\tUnknownRecord,\n} from '@tldraw/store'\nimport { JsonObject } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\n\n/**\n * TLDocument\n *\n * @public\n */\nexport interface TLDocument extends BaseRecord<'document', RecordId<TLDocument>> {\n\tgridSize: number\n\tname: string\n\tmeta: JsonObject\n}\n\n/** @public */\nexport const documentValidator: T.Validator<TLDocument> = T.model(\n\t'document',\n\tT.object({\n\t\ttypeName: T.literal('document'),\n\t\tid: T.literal('document:document' as RecordId<TLDocument>),\n\t\tgridSize: T.number,\n\t\tname: T.string,\n\t\tmeta: T.jsonValue as T.ObjectValidator<JsonObject>,\n\t})\n)\n\n/** @public */\nexport function isDocument(record?: UnknownRecord): record is TLDocument {\n\tif (!record) return false\n\treturn record.typeName === 'document'\n}\n\n/** @public */\nexport const documentVersions = createMigrationIds('com.tldraw.document', {\n\tAddName: 1,\n\tAddMeta: 2,\n} as const)\n\n/** @public */\nexport const documentMigrations = createRecordMigrationSequence({\n\tsequenceId: 'com.tldraw.document',\n\trecordType: 'document',\n\tsequence: [\n\t\t{\n\t\t\tid: documentVersions.AddName,\n\t\t\tup: (document) => {\n\t\t\t\t;(document as any).name = ''\n\t\t\t},\n\t\t\tdown: (document) => {\n\t\t\t\tdelete (document as any).name\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: documentVersions.AddMeta,\n\t\t\tup: (record) => {\n\t\t\t\t;(record as any).meta = {}\n\t\t\t},\n\t\t},\n\t],\n})\n\n/** @public */\nexport const DocumentRecordType = createRecordType<TLDocument>('document', {\n\tvalidator: documentValidator,\n\tscope: 'document',\n}).withDefaultProperties(\n\t(): Omit<TLDocument, 'id' | 'typeName'> => ({\n\t\tgridSize: 10,\n\t\tname: '',\n\t\tmeta: {},\n\t})\n)\n\n// all document records have the same ID: 'document:document'\n/** @public */\nexport const TLDOCUMENT_ID: RecordId<TLDocument> = DocumentRecordType.createId('document')\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;AASA,SAAS,SAAS;;;AAcX,MAAM,2NAA6C,IAAA,CAAE,KAAA,CAC3D,mNACA,IAAA,CAAE,MAAA,CAAO;IACR,iNAAU,IAAA,CAAE,OAAA,CAAQ,UAAU;IAC9B,2MAAI,IAAA,CAAE,OAAA,CAAQ,mBAA2C;IACzD,iNAAU,IAAA,CAAE,MAAA;IACZ,6MAAM,IAAA,CAAE,MAAA;IACR,6MAAM,IAAA,CAAE,SAAA;AACT,CAAC;AAIK,SAAS,WAAW,MAAA,EAA8C;IACxE,IAAI,CAAC,OAAQ,CAAA,OAAO;IACpB,OAAO,OAAO,QAAA,KAAa;AAC5B;AAGO,MAAM,2LAAmB,qBAAA,EAAmB,uBAAuB;IACzE,SAAS;IACT,SAAS;AACV,CAAU;AAGH,MAAM,sBAAqB,uMAAA,EAA8B;IAC/D,YAAY;IACZ,YAAY;IACZ,UAAU;QACT;YACC,IAAI,iBAAiB,OAAA;YACrB,IAAI,CAAC,aAAa;;gBACf,SAAiB,IAAA,GAAO;YAC3B;YACA,MAAM,CAAC,aAAa;gBACnB,OAAQ,SAAiB,IAAA;YAC1B;QACD;QACA;YACC,IAAI,iBAAiB,OAAA;YACrB,IAAI,CAAC,WAAW;;gBACb,OAAe,IAAA,GAAO,CAAC;YAC1B;QACD;KACD;AACD,CAAC;AAGM,MAAM,gMAAqB,mBAAA,EAA6B,YAAY;IAC1E,WAAW;IACX,OAAO;AACR,CAAC,EAAE,qBAAA,CACF,IAAA,CAA4C;QAC3C,UAAU;QACV,MAAM;QACN,MAAM,CAAC;IACR,CAAA;AAKM,MAAM,gBAAsC,mBAAmB,QAAA,CAAS,UAAU","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2798, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/TLStore.ts"],"sourcesContent":["import { Signal } from '@tldraw/state'\nimport {\n\tSerializedStore,\n\tStore,\n\tStoreSchema,\n\tStoreSnapshot,\n\tStoreValidationFailure,\n} from '@tldraw/store'\nimport { IndexKey, JsonObject, annotateError, structuredClone } from '@tldraw/utils'\nimport { TLAsset, TLAssetId } from './records/TLAsset'\nimport { CameraRecordType, TLCameraId } from './records/TLCamera'\nimport { DocumentRecordType, TLDOCUMENT_ID } from './records/TLDocument'\nimport { TLINSTANCE_ID } from './records/TLInstance'\nimport { PageRecordType, TLPageId } from './records/TLPage'\nimport { InstancePageStateRecordType, TLInstancePageStateId } from './records/TLPageState'\nimport { PointerRecordType, TLPOINTER_ID } from './records/TLPointer'\nimport { TLRecord } from './records/TLRecord'\n\nfunction sortByIndex<T extends { index: string }>(a: T, b: T) {\n\tif (a.index < b.index) {\n\t\treturn -1\n\t} else if (a.index > b.index) {\n\t\treturn 1\n\t}\n\treturn 0\n}\n\nfunction redactRecordForErrorReporting(record: any) {\n\tif (record.typeName === 'asset') {\n\t\tif ('src' in record) {\n\t\t\trecord.src = '<redacted>'\n\t\t}\n\n\t\tif ('src' in record.props) {\n\t\t\trecord.props.src = '<redacted>'\n\t\t}\n\t}\n}\n\n/** @public */\nexport type TLStoreSchema = StoreSchema<TLRecord, TLStoreProps>\n\n/** @public */\nexport type TLSerializedStore = SerializedStore<TLRecord>\n\n/** @public */\nexport type TLStoreSnapshot = StoreSnapshot<TLRecord>\n\n/** @public */\nexport interface TLAssetContext {\n\t/**\n\t * The scale at which the asset is being rendered on-screen relative to its native dimensions.\n\t * If the asset is 1000px wide, but it's been resized/zoom so it takes 500px on-screen, this\n\t * will be 0.5.\n\t *\n\t * The scale measures CSS pixels, not device pixels.\n\t */\n\tscreenScale: number\n\t/** The {@link TLAssetContext.screenScale}, stepped to the nearest power-of-2 multiple. */\n\tsteppedScreenScale: number\n\t/** The device pixel ratio - how many CSS pixels are in one device pixel? */\n\tdpr: number\n\t/**\n\t * An alias for\n\t * {@link https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/effectiveType | `navigator.connection.effectiveType` }\n\t * if it's available in the current browser. Use this to e.g. serve lower-resolution images to\n\t * users on slow connections.\n\t */\n\tnetworkEffectiveType: string | null\n\t/**\n\t * In some circumstances, we need to resolve a URL that points to the original version of a\n\t * particular asset. This is used when the asset will leave the current tldraw instance - e.g.\n\t * for copy/paste, or exports.\n\t */\n\tshouldResolveToOriginal: boolean\n}\n\n/**\n * A `TLAssetStore` sits alongside the main {@link TLStore} and is responsible for storing and\n * retrieving large assets such as images. Generally, this should be part of a wider sync system:\n *\n * - By default, the store is in-memory only, so `TLAssetStore` converts images to data URLs\n * - When using\n *   {@link @tldraw/editor#TldrawEditorWithoutStoreProps.persistenceKey | `persistenceKey`}, the\n *   store is synced to the browser's local IndexedDB, so `TLAssetStore` stores images there too\n * - When using a multiplayer sync server, you would implement `TLAssetStore` to upload images to\n *   e.g. an S3 bucket.\n *\n * @public\n */\nexport interface TLAssetStore {\n\t/**\n\t * Upload an asset to your storage, returning a URL that can be used to refer to the asset\n\t * long-term.\n\t *\n\t * @param asset - Information & metadata about the asset being uploaded\n\t * @param file - The `File` to be uploaded\n\t * @returns A promise that resolves to the URL of the uploaded asset\n\t */\n\tupload(\n\t\tasset: TLAsset,\n\t\tfile: File,\n\t\tabortSignal?: AbortSignal\n\t): Promise<{ src: string; meta?: JsonObject }>\n\t/**\n\t * Resolve an asset to a URL. This is used when rendering the asset in the editor. By default,\n\t * this will just use `asset.props.src`, the URL returned by `upload()`. This can be used to\n\t * rewrite that URL to add access credentials, or optimized the asset for how it's currently\n\t * being displayed using the {@link TLAssetContext | information provided}.\n\t *\n\t * @param asset - the asset being resolved\n\t * @param ctx - information about the current environment and where the asset is being used\n\t * @returns The URL of the resolved asset, or `null` if the asset is not available\n\t */\n\tresolve?(asset: TLAsset, ctx: TLAssetContext): Promise<string | null> | string | null\n\t/**\n\t * Remove an asset from storage. This is called when the asset is no longer needed, e.g. when\n\t * the user deletes it from the editor.\n\t * @param asset - the asset being removed\n\t * @returns A promise that resolves when the asset has been removed\n\t */\n\tremove?(assetIds: TLAssetId[]): Promise<void>\n}\n\n/** @public */\nexport interface TLStoreProps {\n\tdefaultName: string\n\tassets: Required<TLAssetStore>\n\t/**\n\t * Called an {@link @tldraw/editor#Editor} connected to this store is mounted.\n\t */\n\tonMount(editor: unknown): void | (() => void)\n\tcollaboration?: {\n\t\tstatus: Signal<'online' | 'offline'> | null\n\t\tmode?: Signal<'readonly' | 'readwrite'> | null\n\t}\n}\n\n/** @public */\nexport type TLStore = Store<TLRecord, TLStoreProps>\n\n/** @public */\nexport function onValidationFailure({\n\terror,\n\tphase,\n\trecord,\n\trecordBefore,\n}: StoreValidationFailure<TLRecord>): TLRecord {\n\tconst isExistingValidationIssue =\n\t\t// if we're initializing the store for the first time, we should\n\t\t// allow invalid records so people can load old buggy data:\n\t\tphase === 'initialize'\n\n\tannotateError(error, {\n\t\ttags: {\n\t\t\torigin: 'store.validateRecord',\n\t\t\tstorePhase: phase,\n\t\t\tisExistingValidationIssue,\n\t\t},\n\t\textras: {\n\t\t\trecordBefore: recordBefore\n\t\t\t\t? redactRecordForErrorReporting(structuredClone(recordBefore))\n\t\t\t\t: undefined,\n\t\t\trecordAfter: redactRecordForErrorReporting(structuredClone(record)),\n\t\t},\n\t})\n\n\tthrow error\n}\n\nfunction getDefaultPages() {\n\treturn [\n\t\tPageRecordType.create({\n\t\t\tid: 'page:page' as TLPageId,\n\t\t\tname: 'Page 1',\n\t\t\tindex: 'a1' as IndexKey,\n\t\t\tmeta: {},\n\t\t}),\n\t]\n}\n\n/** @internal */\nexport function createIntegrityChecker(store: Store<TLRecord, TLStoreProps>): () => void {\n\tconst $pageIds = store.query.ids('page')\n\tconst $pageStates = store.query.records('instance_page_state')\n\n\tconst ensureStoreIsUsable = (): void => {\n\t\t// make sure we have exactly one document\n\t\tif (!store.has(TLDOCUMENT_ID)) {\n\t\t\tstore.put([DocumentRecordType.create({ id: TLDOCUMENT_ID, name: store.props.defaultName })])\n\t\t\treturn ensureStoreIsUsable()\n\t\t}\n\n\t\tif (!store.has(TLPOINTER_ID)) {\n\t\t\tstore.put([PointerRecordType.create({ id: TLPOINTER_ID })])\n\t\t\treturn ensureStoreIsUsable()\n\t\t}\n\n\t\t// make sure there is at least one page\n\t\tconst pageIds = $pageIds.get()\n\t\tif (pageIds.size === 0) {\n\t\t\tstore.put(getDefaultPages())\n\t\t\treturn ensureStoreIsUsable()\n\t\t}\n\n\t\tconst getFirstPageId = () => [...pageIds].map((id) => store.get(id)!).sort(sortByIndex)[0].id!\n\n\t\t// make sure we have state for the current user's current tab\n\t\tconst instanceState = store.get(TLINSTANCE_ID)\n\t\tif (!instanceState) {\n\t\t\tstore.put([\n\t\t\t\tstore.schema.types.instance.create({\n\t\t\t\t\tid: TLINSTANCE_ID,\n\t\t\t\t\tcurrentPageId: getFirstPageId(),\n\t\t\t\t\texportBackground: true,\n\t\t\t\t}),\n\t\t\t])\n\n\t\t\treturn ensureStoreIsUsable()\n\t\t} else if (!pageIds.has(instanceState.currentPageId)) {\n\t\t\tstore.put([{ ...instanceState, currentPageId: getFirstPageId() }])\n\t\t\treturn ensureStoreIsUsable()\n\t\t}\n\n\t\t// make sure we have page states and cameras for all the pages\n\t\tconst missingPageStateIds = new Set<TLInstancePageStateId>()\n\t\tconst missingCameraIds = new Set<TLCameraId>()\n\t\tfor (const id of pageIds) {\n\t\t\tconst pageStateId = InstancePageStateRecordType.createId(id)\n\t\t\tconst pageState = store.get(pageStateId)\n\t\t\tif (!pageState) {\n\t\t\t\tmissingPageStateIds.add(pageStateId)\n\t\t\t}\n\t\t\tconst cameraId = CameraRecordType.createId(id)\n\t\t\tif (!store.has(cameraId)) {\n\t\t\t\tmissingCameraIds.add(cameraId)\n\t\t\t}\n\t\t}\n\n\t\tif (missingPageStateIds.size > 0) {\n\t\t\tstore.put(\n\t\t\t\t[...missingPageStateIds].map((id) =>\n\t\t\t\t\tInstancePageStateRecordType.create({\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tpageId: InstancePageStateRecordType.parseId(id) as TLPageId,\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\n\t\tif (missingCameraIds.size > 0) {\n\t\t\tstore.put([...missingCameraIds].map((id) => CameraRecordType.create({ id })))\n\t\t}\n\n\t\tconst pageStates = $pageStates.get()\n\t\tfor (const pageState of pageStates) {\n\t\t\tif (!pageIds.has(pageState.pageId)) {\n\t\t\t\tstore.remove([pageState.id])\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tif (pageState.croppingShapeId && !store.has(pageState.croppingShapeId)) {\n\t\t\t\tstore.put([{ ...pageState, croppingShapeId: null }])\n\t\t\t\treturn ensureStoreIsUsable()\n\t\t\t}\n\t\t\tif (pageState.focusedGroupId && !store.has(pageState.focusedGroupId)) {\n\t\t\t\tstore.put([{ ...pageState, focusedGroupId: null }])\n\t\t\t\treturn ensureStoreIsUsable()\n\t\t\t}\n\t\t\tif (pageState.hoveredShapeId && !store.has(pageState.hoveredShapeId)) {\n\t\t\t\tstore.put([{ ...pageState, hoveredShapeId: null }])\n\t\t\t\treturn ensureStoreIsUsable()\n\t\t\t}\n\t\t\tconst filteredSelectedIds = pageState.selectedShapeIds.filter((id) => store.has(id))\n\t\t\tif (filteredSelectedIds.length !== pageState.selectedShapeIds.length) {\n\t\t\t\tstore.put([{ ...pageState, selectedShapeIds: filteredSelectedIds }])\n\t\t\t\treturn ensureStoreIsUsable()\n\t\t\t}\n\t\t\tconst filteredHintingIds = pageState.hintingShapeIds.filter((id) => store.has(id))\n\t\t\tif (filteredHintingIds.length !== pageState.hintingShapeIds.length) {\n\t\t\t\tstore.put([{ ...pageState, hintingShapeIds: filteredHintingIds }])\n\t\t\t\treturn ensureStoreIsUsable()\n\t\t\t}\n\t\t\tconst filteredErasingIds = pageState.erasingShapeIds.filter((id) => store.has(id))\n\t\t\tif (filteredErasingIds.length !== pageState.erasingShapeIds.length) {\n\t\t\t\tstore.put([{ ...pageState, erasingShapeIds: filteredErasingIds }])\n\t\t\t\treturn ensureStoreIsUsable()\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ensureStoreIsUsable\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3014, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/assets/TLBookmarkAsset.ts"],"sourcesContent":["import { createMigrationIds, createRecordMigrationSequence } from '@tldraw/store'\nimport { T } from '@tldraw/validate'\nimport { TLAsset } from '../records/TLAsset'\nimport { TLBaseAsset, createAssetValidator } from './TLBaseAsset'\n\n/**\n * An asset used for URL bookmarks, used by the TLBookmarkShape.\n *\n *  @public */\nexport type TLBookmarkAsset = TLBaseAsset<\n\t'bookmark',\n\t{\n\t\ttitle: string\n\t\tdescription: string\n\t\timage: string\n\t\tfavicon: string\n\t\tsrc: string | null\n\t}\n>\n\n/** @public */\nexport const bookmarkAssetValidator: T.Validator<TLBookmarkAsset> = createAssetValidator(\n\t'bookmark',\n\tT.object({\n\t\ttitle: T.string,\n\t\tdescription: T.string,\n\t\timage: T.string,\n\t\tfavicon: T.string,\n\t\tsrc: T.srcUrl.nullable(),\n\t})\n)\n\nconst Versions = createMigrationIds('com.tldraw.asset.bookmark', {\n\tMakeUrlsValid: 1,\n\tAddFavicon: 2,\n} as const)\n\nexport { Versions as bookmarkAssetVersions }\n\n/** @public */\nexport const bookmarkAssetMigrations = createRecordMigrationSequence({\n\tsequenceId: 'com.tldraw.asset.bookmark',\n\trecordType: 'asset',\n\tfilter: (asset) => (asset as TLAsset).type === 'bookmark',\n\tsequence: [\n\t\t{\n\t\t\tid: Versions.MakeUrlsValid,\n\t\t\tup: (asset: any) => {\n\t\t\t\tif (!T.srcUrl.isValid(asset.props.src)) {\n\t\t\t\t\tasset.props.src = ''\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: (_asset) => {\n\t\t\t\t// noop\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddFavicon,\n\t\t\tup: (asset: any) => {\n\t\t\t\tif (!T.srcUrl.isValid(asset.props.favicon)) {\n\t\t\t\t\tasset.props.favicon = ''\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: (asset: any) => {\n\t\t\t\tdelete asset.props.favicon\n\t\t\t},\n\t\t},\n\t],\n})\n"],"names":[],"mappings":";;;;;AAAA,SAAS,oBAAoB,qCAAqC;;AAClE,SAAS,SAAS;;AAElB,SAAsB,4BAA4B;;;;AAkB3C,MAAM,2MAAuD,uBAAA,EACnE,mNACA,IAAA,CAAE,MAAA,CAAO;IACR,8MAAO,IAAA,CAAE,MAAA;IACT,oNAAa,IAAA,CAAE,MAAA;IACf,8MAAO,IAAA,CAAE,MAAA;IACT,gNAAS,IAAA,CAAE,MAAA;IACX,2MAAK,KAAA,CAAE,MAAA,CAAO,QAAA,CAAS;AACxB,CAAC;AAGF,MAAM,mLAAW,qBAAA,EAAmB,6BAA6B;IAChE,eAAe;IACf,YAAY;AACb,CAAU;AAKH,MAAM,kMAA0B,gCAAA,EAA8B;IACpE,YAAY;IACZ,YAAY;IACZ,QAAQ,CAAC,QAAW,MAAkB,IAAA,KAAS;IAC/C,UAAU;QACT;YACC,IAAI,SAAS,aAAA;YACb,IAAI,CAAC,UAAe;gBACnB,IAAI,wMAAC,IAAA,CAAE,MAAA,CAAO,OAAA,CAAQ,MAAM,KAAA,CAAM,GAAG,GAAG;oBACvC,MAAM,KAAA,CAAM,GAAA,GAAM;gBACnB;YACD;YACA,MAAM,CAAC,UAEP,CAFkB;QAGnB;QACA;YACC,IAAI,SAAS,UAAA;YACb,IAAI,CAAC,UAAe;gBACnB,IAAI,wMAAC,IAAA,CAAE,MAAA,CAAO,OAAA,CAAQ,MAAM,KAAA,CAAM,OAAO,GAAG;oBAC3C,MAAM,KAAA,CAAM,OAAA,GAAU;gBACvB;YACD;YACA,MAAM,CAAC,UAAe;gBACrB,OAAO,MAAM,KAAA,CAAM,OAAA;YACpB;QACD;KACD;AACD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3073, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/assets/TLImageAsset.ts"],"sourcesContent":["import { createMigrationIds, createRecordMigrationSequence } from '@tldraw/store'\nimport { T } from '@tldraw/validate'\nimport { TLAsset } from '../records/TLAsset'\nimport { TLBaseAsset, createAssetValidator } from './TLBaseAsset'\n\n/**\n * An asset for images such as PNGs and JPEGs, used by the TLImageShape.\n *\n * @public */\nexport type TLImageAsset = TLBaseAsset<\n\t'image',\n\t{\n\t\tw: number\n\t\th: number\n\t\tname: string\n\t\tisAnimated: boolean\n\t\tmimeType: string | null\n\t\tsrc: string | null\n\t\tfileSize?: number\n\t}\n>\n\n/** @public */\nexport const imageAssetValidator: T.Validator<TLImageAsset> = createAssetValidator(\n\t'image',\n\tT.object({\n\t\tw: T.number,\n\t\th: T.number,\n\t\tname: T.string,\n\t\tisAnimated: T.boolean,\n\t\tmimeType: T.string.nullable(),\n\t\tsrc: T.srcUrl.nullable(),\n\t\tfileSize: T.nonZeroNumber.optional(),\n\t})\n)\n\nconst Versions = createMigrationIds('com.tldraw.asset.image', {\n\tAddIsAnimated: 1,\n\tRenameWidthHeight: 2,\n\tMakeUrlsValid: 3,\n\tAddFileSize: 4,\n\tMakeFileSizeOptional: 5,\n} as const)\n\nexport { Versions as imageAssetVersions }\n\n/** @public */\nexport const imageAssetMigrations = createRecordMigrationSequence({\n\tsequenceId: 'com.tldraw.asset.image',\n\trecordType: 'asset',\n\tfilter: (asset) => (asset as TLAsset).type === 'image',\n\tsequence: [\n\t\t{\n\t\t\tid: Versions.AddIsAnimated,\n\t\t\tup: (asset: any) => {\n\t\t\t\tasset.props.isAnimated = false\n\t\t\t},\n\t\t\tdown: (asset: any) => {\n\t\t\t\tdelete asset.props.isAnimated\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.RenameWidthHeight,\n\t\t\tup: (asset: any) => {\n\t\t\t\tasset.props.w = asset.props.width\n\t\t\t\tasset.props.h = asset.props.height\n\t\t\t\tdelete asset.props.width\n\t\t\t\tdelete asset.props.height\n\t\t\t},\n\t\t\tdown: (asset: any) => {\n\t\t\t\tasset.props.width = asset.props.w\n\t\t\t\tasset.props.height = asset.props.h\n\t\t\t\tdelete asset.props.w\n\t\t\t\tdelete asset.props.h\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.MakeUrlsValid,\n\t\t\tup: (asset: any) => {\n\t\t\t\tif (!T.srcUrl.isValid(asset.props.src)) {\n\t\t\t\t\tasset.props.src = ''\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: (_asset) => {\n\t\t\t\t// noop\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddFileSize,\n\t\t\tup: (asset: any) => {\n\t\t\t\tasset.props.fileSize = -1\n\t\t\t},\n\t\t\tdown: (asset: any) => {\n\t\t\t\tdelete asset.props.fileSize\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.MakeFileSizeOptional,\n\t\t\tup: (asset: any) => {\n\t\t\t\tif (asset.props.fileSize === -1) {\n\t\t\t\t\tasset.props.fileSize = undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: (asset: any) => {\n\t\t\t\tif (asset.props.fileSize === undefined) {\n\t\t\t\t\tasset.props.fileSize = -1\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t],\n})\n"],"names":[],"mappings":";;;;;AAAA,SAAS,oBAAoB,qCAAqC;;AAClE,SAAS,SAAS;;AAElB,SAAsB,4BAA4B;;;;AAoB3C,MAAM,wMAAiD,uBAAA,EAC7D,gNACA,IAAA,CAAE,MAAA,CAAO;IACR,0MAAG,IAAA,CAAE,MAAA;IACL,GAAG,2MAAA,CAAE,MAAA;IACL,6MAAM,IAAA,CAAE,MAAA;IACR,mNAAY,IAAA,CAAE,OAAA;IACd,iNAAU,IAAA,CAAE,MAAA,CAAO,QAAA,CAAS;IAC5B,4MAAK,IAAA,CAAE,MAAA,CAAO,QAAA,CAAS;IACvB,iNAAU,IAAA,CAAE,aAAA,CAAc,QAAA,CAAS;AACpC,CAAC;AAGF,MAAM,mLAAW,qBAAA,EAAmB,0BAA0B;IAC7D,eAAe;IACf,mBAAmB;IACnB,eAAe;IACf,aAAa;IACb,sBAAsB;AACvB,CAAU;AAKH,MAAM,uBAAuB,wMAAA,EAA8B;IACjE,YAAY;IACZ,YAAY;IACZ,QAAQ,CAAC,QAAW,MAAkB,IAAA,KAAS;IAC/C,UAAU;QACT;YACC,IAAI,SAAS,aAAA;YACb,IAAI,CAAC,UAAe;gBACnB,MAAM,KAAA,CAAM,UAAA,GAAa;YAC1B;YACA,MAAM,CAAC,UAAe;gBACrB,OAAO,MAAM,KAAA,CAAM,UAAA;YACpB;QACD;QACA;YACC,IAAI,SAAS,iBAAA;YACb,IAAI,CAAC,UAAe;gBACnB,MAAM,KAAA,CAAM,CAAA,GAAI,MAAM,KAAA,CAAM,KAAA;gBAC5B,MAAM,KAAA,CAAM,CAAA,GAAI,MAAM,KAAA,CAAM,MAAA;gBAC5B,OAAO,MAAM,KAAA,CAAM,KAAA;gBACnB,OAAO,MAAM,KAAA,CAAM,MAAA;YACpB;YACA,MAAM,CAAC,UAAe;gBACrB,MAAM,KAAA,CAAM,KAAA,GAAQ,MAAM,KAAA,CAAM,CAAA;gBAChC,MAAM,KAAA,CAAM,MAAA,GAAS,MAAM,KAAA,CAAM,CAAA;gBACjC,OAAO,MAAM,KAAA,CAAM,CAAA;gBACnB,OAAO,MAAM,KAAA,CAAM,CAAA;YACpB;QACD;QACA;YACC,IAAI,SAAS,aAAA;YACb,IAAI,CAAC,UAAe;gBACnB,IAAI,wMAAC,IAAA,CAAE,MAAA,CAAO,OAAA,CAAQ,MAAM,KAAA,CAAM,GAAG,GAAG;oBACvC,MAAM,KAAA,CAAM,GAAA,GAAM;gBACnB;YACD;YACA,MAAM,CAAC,UAEP,CAFkB;QAGnB;QACA;YACC,IAAI,SAAS,WAAA;YACb,IAAI,CAAC,UAAe;gBACnB,MAAM,KAAA,CAAM,QAAA,GAAW,CAAA;YACxB;YACA,MAAM,CAAC,UAAe;gBACrB,OAAO,MAAM,KAAA,CAAM,QAAA;YACpB;QACD;QACA;YACC,IAAI,SAAS,oBAAA;YACb,IAAI,CAAC,UAAe;gBACnB,IAAI,MAAM,KAAA,CAAM,QAAA,KAAa,CAAA,GAAI;oBAChC,MAAM,KAAA,CAAM,QAAA,GAAW,KAAA;gBACxB;YACD;YACA,MAAM,CAAC,UAAe;gBACrB,IAAI,MAAM,KAAA,CAAM,QAAA,KAAa,KAAA,GAAW;oBACvC,MAAM,KAAA,CAAM,QAAA,GAAW,CAAA;gBACxB;YACD;QACD;KACD;AACD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3172, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/assets/TLVideoAsset.ts"],"sourcesContent":["import { createMigrationIds, createRecordMigrationSequence } from '@tldraw/store'\nimport { T } from '@tldraw/validate'\nimport { TLAsset } from '../records/TLAsset'\nimport { TLBaseAsset, createAssetValidator } from './TLBaseAsset'\n\n/**\n * An asset used for videos, used by the TLVideoShape.\n *\n * @public */\nexport type TLVideoAsset = TLBaseAsset<\n\t'video',\n\t{\n\t\tw: number\n\t\th: number\n\t\tname: string\n\t\tisAnimated: boolean\n\t\tmimeType: string | null\n\t\tsrc: string | null\n\t\tfileSize?: number\n\t}\n>\n\n/** @public */\nexport const videoAssetValidator: T.Validator<TLVideoAsset> = createAssetValidator(\n\t'video',\n\tT.object({\n\t\tw: T.number,\n\t\th: T.number,\n\t\tname: T.string,\n\t\tisAnimated: T.boolean,\n\t\tmimeType: T.string.nullable(),\n\t\tsrc: T.srcUrl.nullable(),\n\t\tfileSize: T.number.optional(),\n\t})\n)\n\nconst Versions = createMigrationIds('com.tldraw.asset.video', {\n\tAddIsAnimated: 1,\n\tRenameWidthHeight: 2,\n\tMakeUrlsValid: 3,\n\tAddFileSize: 4,\n\tMakeFileSizeOptional: 5,\n} as const)\n\nexport { Versions as videoAssetVersions }\n\n/** @public */\nexport const videoAssetMigrations = createRecordMigrationSequence({\n\tsequenceId: 'com.tldraw.asset.video',\n\trecordType: 'asset',\n\tfilter: (asset) => (asset as TLAsset).type === 'video',\n\tsequence: [\n\t\t{\n\t\t\tid: Versions.AddIsAnimated,\n\t\t\tup: (asset: any) => {\n\t\t\t\tasset.props.isAnimated = false\n\t\t\t},\n\t\t\tdown: (asset: any) => {\n\t\t\t\tdelete asset.props.isAnimated\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.RenameWidthHeight,\n\t\t\tup: (asset: any) => {\n\t\t\t\tasset.props.w = asset.props.width\n\t\t\t\tasset.props.h = asset.props.height\n\t\t\t\tdelete asset.props.width\n\t\t\t\tdelete asset.props.height\n\t\t\t},\n\t\t\tdown: (asset: any) => {\n\t\t\t\tasset.props.width = asset.props.w\n\t\t\t\tasset.props.height = asset.props.h\n\t\t\t\tdelete asset.props.w\n\t\t\t\tdelete asset.props.h\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.MakeUrlsValid,\n\t\t\tup: (asset: any) => {\n\t\t\t\tif (!T.srcUrl.isValid(asset.props.src)) {\n\t\t\t\t\tasset.props.src = ''\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: (_asset) => {\n\t\t\t\t// noop\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddFileSize,\n\t\t\tup: (asset: any) => {\n\t\t\t\tasset.props.fileSize = -1\n\t\t\t},\n\t\t\tdown: (asset: any) => {\n\t\t\t\tdelete asset.props.fileSize\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.MakeFileSizeOptional,\n\t\t\tup: (asset: any) => {\n\t\t\t\tif (asset.props.fileSize === -1) {\n\t\t\t\t\tasset.props.fileSize = undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: (asset: any) => {\n\t\t\t\tif (asset.props.fileSize === undefined) {\n\t\t\t\t\tasset.props.fileSize = -1\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t],\n})\n"],"names":[],"mappings":";;;;;AAAA,SAAS,oBAAoB,qCAAqC;;AAClE,SAAS,SAAS;;AAElB,SAAsB,4BAA4B;;;;AAoB3C,MAAM,wMAAiD,uBAAA,EAC7D,gNACA,IAAA,CAAE,MAAA,CAAO;IACR,0MAAG,IAAA,CAAE,MAAA;IACL,GAAG,2MAAA,CAAE,MAAA;IACL,6MAAM,IAAA,CAAE,MAAA;IACR,mNAAY,IAAA,CAAE,OAAA;IACd,iNAAU,IAAA,CAAE,MAAA,CAAO,QAAA,CAAS;IAC5B,4MAAK,IAAA,CAAE,MAAA,CAAO,QAAA,CAAS;IACvB,iNAAU,IAAA,CAAE,MAAA,CAAO,QAAA,CAAS;AAC7B,CAAC;AAGF,MAAM,mLAAW,qBAAA,EAAmB,0BAA0B;IAC7D,eAAe;IACf,mBAAmB;IACnB,eAAe;IACf,aAAa;IACb,sBAAsB;AACvB,CAAU;AAKH,MAAM,uBAAuB,wMAAA,EAA8B;IACjE,YAAY;IACZ,YAAY;IACZ,QAAQ,CAAC,QAAW,MAAkB,IAAA,KAAS;IAC/C,UAAU;QACT;YACC,IAAI,SAAS,aAAA;YACb,IAAI,CAAC,UAAe;gBACnB,MAAM,KAAA,CAAM,UAAA,GAAa;YAC1B;YACA,MAAM,CAAC,UAAe;gBACrB,OAAO,MAAM,KAAA,CAAM,UAAA;YACpB;QACD;QACA;YACC,IAAI,SAAS,iBAAA;YACb,IAAI,CAAC,UAAe;gBACnB,MAAM,KAAA,CAAM,CAAA,GAAI,MAAM,KAAA,CAAM,KAAA;gBAC5B,MAAM,KAAA,CAAM,CAAA,GAAI,MAAM,KAAA,CAAM,MAAA;gBAC5B,OAAO,MAAM,KAAA,CAAM,KAAA;gBACnB,OAAO,MAAM,KAAA,CAAM,MAAA;YACpB;YACA,MAAM,CAAC,UAAe;gBACrB,MAAM,KAAA,CAAM,KAAA,GAAQ,MAAM,KAAA,CAAM,CAAA;gBAChC,MAAM,KAAA,CAAM,MAAA,GAAS,MAAM,KAAA,CAAM,CAAA;gBACjC,OAAO,MAAM,KAAA,CAAM,CAAA;gBACnB,OAAO,MAAM,KAAA,CAAM,CAAA;YACpB;QACD;QACA;YACC,IAAI,SAAS,aAAA;YACb,IAAI,CAAC,UAAe;gBACnB,IAAI,wMAAC,IAAA,CAAE,MAAA,CAAO,OAAA,CAAQ,MAAM,KAAA,CAAM,GAAG,GAAG;oBACvC,MAAM,KAAA,CAAM,GAAA,GAAM;gBACnB;YACD;YACA,MAAM,CAAC,UAEP,CAFkB;QAGnB;QACA;YACC,IAAI,SAAS,WAAA;YACb,IAAI,CAAC,UAAe;gBACnB,MAAM,KAAA,CAAM,QAAA,GAAW,CAAA;YACxB;YACA,MAAM,CAAC,UAAe;gBACrB,OAAO,MAAM,KAAA,CAAM,QAAA;YACpB;QACD;QACA;YACC,IAAI,SAAS,oBAAA;YACb,IAAI,CAAC,UAAe;gBACnB,IAAI,MAAM,KAAA,CAAM,QAAA,KAAa,CAAA,GAAI;oBAChC,MAAM,KAAA,CAAM,QAAA,GAAW,KAAA;gBACxB;YACD;YACA,MAAM,CAAC,UAAe;gBACrB,IAAI,MAAM,KAAA,CAAM,QAAA,KAAa,KAAA,GAAW;oBACvC,MAAM,KAAA,CAAM,QAAA,GAAW,CAAA;gBACxB;YACD;QACD;KACD;AACD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3271, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/records/TLAsset.ts"],"sourcesContent":["import {\n\tcreateMigrationIds,\n\tcreateRecordMigrationSequence,\n\tcreateRecordType,\n\tRecordId,\n} from '@tldraw/store'\nimport { T } from '@tldraw/validate'\nimport { TLBaseAsset } from '../assets/TLBaseAsset'\nimport { bookmarkAssetValidator, TLBookmarkAsset } from '../assets/TLBookmarkAsset'\nimport { imageAssetValidator, TLImageAsset } from '../assets/TLImageAsset'\nimport { TLVideoAsset, videoAssetValidator } from '../assets/TLVideoAsset'\nimport { TLShape } from './TLShape'\n\n/** @public */\nexport type TLAsset = TLImageAsset | TLVideoAsset | TLBookmarkAsset\n\n/** @public */\nexport const assetValidator: T.Validator<TLAsset> = T.model(\n\t'asset',\n\tT.union('type', {\n\t\timage: imageAssetValidator,\n\t\tvideo: videoAssetValidator,\n\t\tbookmark: bookmarkAssetValidator,\n\t})\n)\n\n/** @public */\nexport const assetVersions = createMigrationIds('com.tldraw.asset', {\n\tAddMeta: 1,\n} as const)\n\n/** @public */\nexport const assetMigrations = createRecordMigrationSequence({\n\tsequenceId: 'com.tldraw.asset',\n\trecordType: 'asset',\n\tsequence: [\n\t\t{\n\t\t\tid: assetVersions.AddMeta,\n\t\t\tup: (record) => {\n\t\t\t\t;(record as any).meta = {}\n\t\t\t},\n\t\t},\n\t],\n})\n\n/** @public */\nexport type TLAssetPartial<T extends TLAsset = TLAsset> = T extends T\n\t? {\n\t\t\tid: TLAssetId\n\t\t\ttype: T['type']\n\t\t\tprops?: Partial<T['props']>\n\t\t\tmeta?: Partial<T['meta']>\n\t\t} & Partial<Omit<T, 'type' | 'id' | 'props' | 'meta'>>\n\t: never\n\n/** @public */\nexport const AssetRecordType = createRecordType<TLAsset>('asset', {\n\tvalidator: assetValidator,\n\tscope: 'document',\n}).withDefaultProperties(() => ({\n\tmeta: {},\n}))\n\n/** @public */\nexport type TLAssetId = RecordId<TLBaseAsset<any, any>>\n\n/** @public */\nexport type TLAssetShape = Extract<TLShape, { props: { assetId: TLAssetId } }>\n"],"names":[],"mappings":";;;;;;AAAA;;;;AAMA,SAAS,SAAS;AAElB,SAAS,8BAA+C;AACxD,SAAS,2BAAyC;AAClD,SAAuB,2BAA2B;;;;;;AAO3C,MAAM,wNAAuC,IAAA,CAAE,KAAA,CACrD,gNACA,IAAA,CAAE,KAAA,CAAM,QAAQ;IACf,sLAAO,sBAAA;IACP,sLAAO,sBAAA;IACP,4LAAU,yBAAA;AACX,CAAC;AAIK,MAAM,wLAAgB,qBAAA,EAAmB,oBAAoB;IACnE,SAAS;AACV,CAAU;AAGH,MAAM,mBAAkB,uMAAA,EAA8B;IAC5D,YAAY;IACZ,YAAY;IACZ,UAAU;QACT;YACC,IAAI,cAAc,OAAA;YAClB,IAAI,CAAC,WAAW;;gBACb,OAAe,IAAA,GAAO,CAAC;YAC1B;QACD;KACD;AACD,CAAC;AAaM,MAAM,6LAAkB,mBAAA,EAA0B,SAAS;IACjE,WAAW;IACX,OAAO;AACR,CAAC,EAAE,qBAAA,CAAsB,IAAA,CAAO;QAC/B,MAAM,CAAC;IACR,CAAA,CAAE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3325, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/shapes/TLBookmarkShape.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { assetIdValidator } from '../assets/TLBaseAsset'\nimport { TLAssetId } from '../records/TLAsset'\nimport { createShapePropsMigrationIds, createShapePropsMigrationSequence } from '../records/TLShape'\nimport { RecordProps } from '../recordsWithProps'\nimport { TLBaseShape } from './TLBaseShape'\n\n/** @public */\nexport interface TLBookmarkShapeProps {\n\tw: number\n\th: number\n\tassetId: TLAssetId | null\n\turl: string\n}\n\n/** @public */\nexport type TLBookmarkShape = TLBaseShape<'bookmark', TLBookmarkShapeProps>\n\n/** @public */\nexport const bookmarkShapeProps: RecordProps<TLBookmarkShape> = {\n\tw: T.nonZeroNumber,\n\th: T.nonZeroNumber,\n\tassetId: assetIdValidator.nullable(),\n\turl: T.linkUrl,\n}\n\nconst Versions = createShapePropsMigrationIds('bookmark', {\n\tNullAssetId: 1,\n\tMakeUrlsValid: 2,\n})\n\nexport { Versions as bookmarkShapeVersions }\n\n/** @public */\nexport const bookmarkShapeMigrations = createShapePropsMigrationSequence({\n\tsequence: [\n\t\t{\n\t\t\tid: Versions.NullAssetId,\n\t\t\tup: (props) => {\n\t\t\t\tif (props.assetId === undefined) {\n\t\t\t\t\tprops.assetId = null\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: Versions.MakeUrlsValid,\n\t\t\tup: (props) => {\n\t\t\t\tif (!T.linkUrl.isValid(props.url)) {\n\t\t\t\t\tprops.url = ''\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: (_props) => {\n\t\t\t\t// noop\n\t\t\t},\n\t\t},\n\t],\n})\n"],"names":[],"mappings":";;;;;AAAA,SAAS,SAAS;;AAClB,SAAS,wBAAwB;AAEjC,SAAS,8BAA8B,yCAAyC;;;;AAgBzE,MAAM,qBAAmD;IAC/D,0MAAG,IAAA,CAAE,aAAA;IACL,0MAAG,IAAA,CAAE,aAAA;IACL,uLAAS,mBAAA,CAAiB,QAAA,CAAS;IACnC,4MAAK,IAAA,CAAE,OAAA;AACR;AAEA,MAAM,WAAW,8MAAA,EAA6B,YAAY;IACzD,aAAa;IACb,eAAe;AAChB,CAAC;AAKM,MAAM,yMAA0B,oCAAA,EAAkC;IACxE,UAAU;QACT;YACC,IAAI,SAAS,WAAA;YACb,IAAI,CAAC,UAAU;gBACd,IAAI,MAAM,OAAA,KAAY,KAAA,GAAW;oBAChC,MAAM,OAAA,GAAU;gBACjB;YACD;YACA,MAAM;QACP;QACA;YACC,IAAI,SAAS,aAAA;YACb,IAAI,CAAC,UAAU;gBACd,IAAI,wMAAC,IAAA,CAAE,OAAA,CAAQ,OAAA,CAAQ,MAAM,GAAG,GAAG;oBAClC,MAAM,GAAA,GAAM;gBACb;YACD;YACA,MAAM,CAAC,UAEP,CAFkB;QAGnB;KACD;AACD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3377, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/shapes/TLDrawShape.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { VecModel, vecModelValidator } from '../misc/geometry-types'\nimport { createShapePropsMigrationIds, createShapePropsMigrationSequence } from '../records/TLShape'\nimport { RecordProps } from '../recordsWithProps'\nimport { DefaultColorStyle, TLDefaultColorStyle } from '../styles/TLColorStyle'\nimport { DefaultDashStyle, TLDefaultDashStyle } from '../styles/TLDashStyle'\nimport { DefaultFillStyle, TLDefaultFillStyle } from '../styles/TLFillStyle'\nimport { DefaultSizeStyle, TLDefaultSizeStyle } from '../styles/TLSizeStyle'\nimport { TLBaseShape } from './TLBaseShape'\n\n/** @public */\nexport interface TLDrawShapeSegment {\n\ttype: 'free' | 'straight'\n\tpoints: VecModel[]\n}\n\n/** @public */\nexport const DrawShapeSegment: T.ObjectValidator<TLDrawShapeSegment> = T.object({\n\ttype: T.literalEnum('free', 'straight'),\n\tpoints: T.arrayOf(vecModelValidator),\n})\n\n/** @public */\nexport interface TLDrawShapeProps {\n\tcolor: TLDefaultColorStyle\n\tfill: TLDefaultFillStyle\n\tdash: TLDefaultDashStyle\n\tsize: TLDefaultSizeStyle\n\tsegments: TLDrawShapeSegment[]\n\tisComplete: boolean\n\tisClosed: boolean\n\tisPen: boolean\n\tscale: number\n}\n\n/** @public */\nexport type TLDrawShape = TLBaseShape<'draw', TLDrawShapeProps>\n\n/** @public */\nexport const drawShapeProps: RecordProps<TLDrawShape> = {\n\tcolor: DefaultColorStyle,\n\tfill: DefaultFillStyle,\n\tdash: DefaultDashStyle,\n\tsize: DefaultSizeStyle,\n\tsegments: T.arrayOf(DrawShapeSegment),\n\tisComplete: T.boolean,\n\tisClosed: T.boolean,\n\tisPen: T.boolean,\n\tscale: T.nonZeroNumber,\n}\n\nconst Versions = createShapePropsMigrationIds('draw', {\n\tAddInPen: 1,\n\tAddScale: 2,\n})\n\nexport { Versions as drawShapeVersions }\n\n/** @public */\nexport const drawShapeMigrations = createShapePropsMigrationSequence({\n\tsequence: [\n\t\t{\n\t\t\tid: Versions.AddInPen,\n\t\t\tup: (props) => {\n\t\t\t\t// Rather than checking to see whether the shape is a pen at runtime,\n\t\t\t\t// from now on we're going to use the type of device reported to us\n\t\t\t\t// as well as the pressure data received; but for existing shapes we\n\t\t\t\t// need to check the pressure data to see if it's a pen or not.\n\n\t\t\t\tconst { points } = props.segments[0]\n\n\t\t\t\tif (points.length === 0) {\n\t\t\t\t\tprops.isPen = false\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tlet isPen = !(points[0].z === 0 || points[0].z === 0.5)\n\n\t\t\t\tif (points[1]) {\n\t\t\t\t\t// Double check if we have a second point (we probably should)\n\t\t\t\t\tisPen = isPen && !(points[1].z === 0 || points[1].z === 0.5)\n\t\t\t\t}\n\t\t\t\tprops.isPen = isPen\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddScale,\n\t\t\tup: (props) => {\n\t\t\t\tprops.scale = 1\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.scale\n\t\t\t},\n\t\t},\n\t],\n})\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,SAAS;;AAClB,SAAmB,yBAAyB;AAC5C,SAAS,8BAA8B,yCAAyC;AAEhF,SAAS,yBAA8C;AACvD,SAAS,wBAA4C;AACrD,SAAS,wBAA4C;AACrD,SAAS,wBAA4C;;;;;;;;AAU9C,MAAM,0NAA0D,IAAA,CAAE,MAAA,CAAO;IAC/E,6MAAM,IAAA,CAAE,WAAA,CAAY,QAAQ,UAAU;IACtC,+MAAQ,IAAA,CAAE,OAAA,mLAAQ,oBAAiB;AACpC,CAAC;AAmBM,MAAM,iBAA2C;IACvD,sLAAO,oBAAA;IACP,oLAAM,mBAAA;IACN,oLAAM,mBAAA;IACN,oLAAM,mBAAA;IACN,iNAAU,IAAA,CAAE,OAAA,CAAQ,gBAAgB;IACpC,mNAAY,IAAA,CAAE,OAAA;IACd,iNAAU,IAAA,CAAE,OAAA;IACZ,8MAAO,IAAA,CAAE,OAAA;IACT,8MAAO,IAAA,CAAE,aAAA;AACV;AAEA,MAAM,WAAW,8MAAA,EAA6B,QAAQ;IACrD,UAAU;IACV,UAAU;AACX,CAAC;AAKM,MAAM,qMAAsB,oCAAA,EAAkC;IACpE,UAAU;QACT;YACC,IAAI,SAAS,QAAA;YACb,IAAI,CAAC,UAAU;gBAMd,MAAM,EAAE,MAAA,CAAO,CAAA,GAAI,MAAM,QAAA,CAAS,CAAC,CAAA;gBAEnC,IAAI,OAAO,MAAA,KAAW,GAAG;oBACxB,MAAM,KAAA,GAAQ;oBACd;gBACD;gBAEA,IAAI,QAAQ,CAAA,CAAE,MAAA,CAAO,CAAC,CAAA,CAAE,CAAA,KAAM,KAAK,MAAA,CAAO,CAAC,CAAA,CAAE,CAAA,KAAM,GAAA;gBAEnD,IAAI,MAAA,CAAO,CAAC,CAAA,EAAG;oBAEd,QAAQ,SAAS,CAAA,CAAE,MAAA,CAAO,CAAC,CAAA,CAAE,CAAA,KAAM,KAAK,MAAA,CAAO,CAAC,CAAA,CAAE,CAAA,KAAM,GAAA;gBACzD;gBACA,MAAM,KAAA,GAAQ;YACf;YACA,MAAM;QACP;QACA;YACC,IAAI,SAAS,QAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,KAAA,GAAQ;YACf;YACA,MAAM,CAAC,UAAU;gBAChB,OAAO,MAAM,KAAA;YACd;QACD;KACD;AACD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3454, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/shapes/TLEmbedShape.ts"],"sourcesContent":["import { safeParseUrl } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { createShapePropsMigrationIds, createShapePropsMigrationSequence } from '../records/TLShape'\nimport { RecordProps } from '../recordsWithProps'\nimport { TLBaseShape } from './TLBaseShape'\n\n// Only allow multiplayer embeds. If we add additional routes later for example '/help' this won't match\nconst TLDRAW_APP_RE = /(^\\/r\\/[^/]+\\/?$)/\n\nconst EMBED_DEFINITIONS = [\n\t{\n\t\thostnames: ['beta.tldraw.com', 'tldraw.com', 'localhost:3000'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(TLDRAW_APP_RE)) {\n\t\t\t\treturn url\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['figma.com'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/embed\\/?$/)) {\n\t\t\t\tconst outUrl = urlObj.searchParams.get('url')\n\t\t\t\tif (outUrl) {\n\t\t\t\t\treturn outUrl\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['google.*'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (!urlObj) return\n\n\t\t\tconst matches = urlObj.pathname.match(/^\\/maps\\/embed\\/v1\\/view\\/?$/)\n\t\t\tif (matches && urlObj.searchParams.has('center') && urlObj.searchParams.get('zoom')) {\n\t\t\t\tconst zoom = urlObj.searchParams.get('zoom')\n\t\t\t\tconst [lat, lon] = urlObj.searchParams.get('center')!.split(',')\n\t\t\t\treturn `https://www.google.com/maps/@${lat},${lon},${zoom}z`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['val.town'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\t// e.g. extract \"steveruizok/mathFact\" from https://www.val.town/v/steveruizok/mathFact\n\t\t\tconst matches = urlObj && urlObj.pathname.match(/\\/embed\\/(.+)\\/?/)\n\t\t\tif (matches) {\n\t\t\t\treturn `https://www.val.town/v/${matches[1]}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['codesandbox.io'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tconst matches = urlObj && urlObj.pathname.match(/\\/embed\\/([^/]+)\\/?/)\n\t\t\tif (matches) {\n\t\t\t\treturn `https://codesandbox.io/s/${matches[1]}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['codepen.io'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst CODEPEN_EMBED_REGEXP = /https:\\/\\/codepen.io\\/([^/]+)\\/embed\\/([^/]+)/\n\t\t\tconst matches = url.match(CODEPEN_EMBED_REGEXP)\n\t\t\tif (matches) {\n\t\t\t\tconst [_, user, id] = matches\n\t\t\t\treturn `https://codepen.io/${user}/pen/${id}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['scratch.mit.edu'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst SCRATCH_EMBED_REGEXP = /https:\\/\\/scratch.mit.edu\\/projects\\/embed\\/([^/]+)/\n\t\t\tconst matches = url.match(SCRATCH_EMBED_REGEXP)\n\t\t\tif (matches) {\n\t\t\t\tconst [_, id] = matches\n\t\t\t\treturn `https://scratch.mit.edu/projects/${id}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['*.youtube.com', 'youtube.com', 'youtu.be'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (!urlObj) return\n\n\t\t\tconst hostname = urlObj.hostname.replace(/^www./, '')\n\t\t\tif (hostname === 'youtube.com') {\n\t\t\t\tconst matches = urlObj.pathname.match(/^\\/embed\\/([^/]+)\\/?/)\n\t\t\t\tif (matches) {\n\t\t\t\t\treturn `https://www.youtube.com/watch?v=${matches[1]}`\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['calendar.google.*'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tconst srcQs = urlObj?.searchParams.get('src')\n\n\t\t\tif (urlObj?.pathname.match(/\\/calendar\\/embed/) && srcQs) {\n\t\t\t\turlObj.pathname = '/calendar/u/0'\n\t\t\t\tconst keys = Array.from(urlObj.searchParams.keys())\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\turlObj.searchParams.delete(key)\n\t\t\t\t}\n\t\t\t\turlObj.searchParams.set('cid', srcQs)\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['docs.google.*'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\n\t\t\tif (urlObj?.pathname.match(/^\\/presentation/) && urlObj?.pathname.match(/\\/embed\\/?$/)) {\n\t\t\t\turlObj.pathname = urlObj.pathname.replace(/\\/embed$/, '/pub')\n\t\t\t\tconst keys = Array.from(urlObj.searchParams.keys())\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\turlObj.searchParams.delete(key)\n\t\t\t\t}\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['gist.github.com'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/\\/([^/]+)\\/([^/]+)/)) {\n\t\t\t\tif (!url.split('/').pop()) return\n\t\t\t\treturn url\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['replit.com'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (\n\t\t\t\turlObj &&\n\t\t\t\turlObj.pathname.match(/\\/@([^/]+)\\/([^/]+)/) &&\n\t\t\t\turlObj.searchParams.has('embed')\n\t\t\t) {\n\t\t\t\turlObj.searchParams.delete('embed')\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['felt.com'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/embed\\/map\\//)) {\n\t\t\t\turlObj.pathname = urlObj.pathname.replace(/^\\/embed/, '')\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['open.spotify.com'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/embed\\/(artist|album)\\//)) {\n\t\t\t\treturn urlObj.origin + urlObj.pathname.replace(/^\\/embed/, '')\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['vimeo.com', 'player.vimeo.com'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.hostname === 'player.vimeo.com') {\n\t\t\t\tconst matches = urlObj.pathname.match(/^\\/video\\/([^/]+)\\/?$/)\n\t\t\t\tif (matches) {\n\t\t\t\t\treturn 'https://vimeo.com/' + matches[1]\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['excalidraw.com'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.hash.match(/#room=/)) {\n\t\t\t\treturn url\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['observablehq.com'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/embed\\/@([^/]+)\\/([^/]+)\\/?$/)) {\n\t\t\t\treturn `${urlObj.origin}${urlObj.pathname.replace('/embed', '')}#cell-*`\n\t\t\t}\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/embed\\/([^/]+)\\/?$/)) {\n\t\t\t\treturn `${urlObj.origin}${urlObj.pathname.replace('/embed', '/d')}#cell-*`\n\t\t\t}\n\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\thostnames: ['desmos.com'],\n\t\tfromEmbedUrl: (url: string) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (\n\t\t\t\turlObj &&\n\t\t\t\turlObj.hostname === 'www.desmos.com' &&\n\t\t\t\turlObj.pathname.match(/^\\/calculator\\/([^/]+)\\/?$/) &&\n\t\t\t\turlObj.search === '?embed' &&\n\t\t\t\turlObj.hash === ''\n\t\t\t) {\n\t\t\t\treturn url.replace('?embed', '')\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n]\n\n/** @public */\nexport interface TLEmbedShapeProps {\n\tw: number\n\th: number\n\turl: string\n}\n\n/** @public */\nexport type TLEmbedShape = TLBaseShape<'embed', TLEmbedShapeProps>\n\n/** @public */\nexport const embedShapeProps: RecordProps<TLEmbedShape> = {\n\tw: T.nonZeroNumber,\n\th: T.nonZeroNumber,\n\turl: T.string,\n}\n\nconst Versions = createShapePropsMigrationIds('embed', {\n\tGenOriginalUrlInEmbed: 1,\n\tRemoveDoesResize: 2,\n\tRemoveTmpOldUrl: 3,\n\tRemovePermissionOverrides: 4,\n})\n\nexport { Versions as embedShapeVersions }\n\n/** @public */\nexport const embedShapeMigrations = createShapePropsMigrationSequence({\n\tsequence: [\n\t\t{\n\t\t\tid: Versions.GenOriginalUrlInEmbed,\n\t\t\t// add tmpOldUrl property\n\t\t\tup: (props) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst url = props.url\n\t\t\t\t\tconst host = new URL(url).host.replace('www.', '')\n\t\t\t\t\tlet originalUrl\n\t\t\t\t\tfor (const localEmbedDef of EMBED_DEFINITIONS) {\n\t\t\t\t\t\tif (localEmbedDef.hostnames.includes(host)) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\toriginalUrl = localEmbedDef.fromEmbedUrl(url)\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tconsole.warn(err)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tprops.tmpOldUrl = props.url\n\t\t\t\t\tprops.url = originalUrl ?? ''\n\t\t\t\t} catch {\n\t\t\t\t\tprops.url = ''\n\t\t\t\t\tprops.tmpOldUrl = props.url\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: Versions.RemoveDoesResize,\n\t\t\tup: (props) => {\n\t\t\t\tdelete props.doesResize\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: Versions.RemoveTmpOldUrl,\n\t\t\tup: (props) => {\n\t\t\t\tdelete props.tmpOldUrl\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: Versions.RemovePermissionOverrides,\n\t\t\tup: (props) => {\n\t\t\t\tdelete props.overridePermissions\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t],\n})\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3800, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/shapes/TLFrameShape.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { createShapePropsMigrationIds, createShapePropsMigrationSequence } from '../records/TLShape'\nimport { RecordProps } from '../recordsWithProps'\nimport { DefaultColorStyle, TLDefaultColorStyle } from '../styles/TLColorStyle'\nimport { TLBaseShape } from './TLBaseShape'\n\n/** @public */\nexport interface TLFrameShapeProps {\n\tw: number\n\th: number\n\tname: string\n\tcolor: TLDefaultColorStyle\n}\n\n/** @public */\nexport type TLFrameShape = TLBaseShape<'frame', TLFrameShapeProps>\n\n/** @public */\nexport const frameShapeProps: RecordProps<TLFrameShape> = {\n\tw: T.nonZeroNumber,\n\th: T.nonZeroNumber,\n\tname: T.string,\n\t// because shape colors are an option, we don't want them to be picked up by the editor as a\n\t// style prop by default, so instead of a proper style we just supply an equivalent validator.\n\t// Check `FrameShapeUtil.configure` for how we replace this with the original\n\t// `DefaultColorStyle` style when the option is turned on.\n\tcolor: T.literalEnum(...DefaultColorStyle.values),\n}\n\nconst Versions = createShapePropsMigrationIds('frame', {\n\tAddColorProp: 1,\n})\n\nexport { Versions as frameShapeVersions }\n\n/** @public */\nexport const frameShapeMigrations = createShapePropsMigrationSequence({\n\tsequence: [\n\t\t{\n\t\t\tid: Versions.AddColorProp,\n\t\t\tup: (props) => {\n\t\t\t\tprops.color = 'black'\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.color\n\t\t\t},\n\t\t},\n\t],\n})\n"],"names":[],"mappings":";;;;;AAAA,SAAS,SAAS;;AAClB,SAAS,8BAA8B,yCAAyC;AAEhF,SAAS,yBAA8C;;;;AAehD,MAAM,kBAA6C;IACzD,0MAAG,IAAA,CAAE,aAAA;IACL,0MAAG,IAAA,CAAE,aAAA;IACL,6MAAM,IAAA,CAAE,MAAA;IAAA,4FAAA;IAAA,8FAAA;IAAA,6EAAA;IAAA,0DAAA;IAKR,8MAAO,IAAA,CAAE,WAAA,CAAY,kLAAG,oBAAA,CAAkB,MAAM;AACjD;AAEA,MAAM,YAAW,6MAAA,EAA6B,SAAS;IACtD,cAAc;AACf,CAAC;AAKM,MAAM,sMAAuB,oCAAA,EAAkC;IACrE,UAAU;QACT;YACC,IAAI,SAAS,YAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,KAAA,GAAQ;YACf;YACA,MAAM,CAAC,UAAU;gBAChB,OAAO,MAAM,KAAA;YACd;QACD;KACD;AACD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3846, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/misc/TLRichText.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\n\n/** @public */\nexport const richTextValidator = T.object({ type: T.string, content: T.arrayOf(T.unknown) })\n\n/** @public */\nexport type TLRichText = T.TypeOf<typeof richTextValidator>\n\n/** @public */\nexport function toRichText(text: string): TLRichText {\n\tconst lines = text.split('\\n')\n\tconst content = lines.map((text) => {\n\t\tif (!text) {\n\t\t\treturn {\n\t\t\t\ttype: 'paragraph',\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttype: 'paragraph',\n\t\t\tcontent: [{ type: 'text', text }],\n\t\t}\n\t})\n\n\treturn {\n\t\ttype: 'doc',\n\t\tcontent,\n\t}\n}\n"],"names":["text"],"mappings":";;;;;AAAA,SAAS,SAAS;;AAGX,MAAM,2NAAoB,IAAA,CAAE,MAAA,CAAO;IAAE,6MAAM,IAAA,CAAE,MAAA;IAAQ,gNAAS,IAAA,CAAE,OAAA,wMAAQ,IAAA,CAAE,OAAO;AAAE,CAAC;AAMpF,SAAS,WAAW,IAAA,EAA0B;IACpD,MAAM,QAAQ,KAAK,KAAA,CAAM,IAAI;IAC7B,MAAM,UAAU,MAAM,GAAA,CAAI,CAACA,UAAS;QACnC,IAAI,CAACA,OAAM;YACV,OAAO;gBACN,MAAM;YACP;QACD;QAEA,OAAO;YACN,MAAM;YACN,SAAS;gBAAC;oBAAE,MAAM;oBAAQ,MAAAA;gBAAK,CAAC;aAAA;QACjC;IACD,CAAC;IAED,OAAO;QACN,MAAM;QACN;IACD;AACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3888, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/styles/TLHorizontalAlignStyle.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { StyleProp } from './StyleProp'\n\n/** @public */\nexport const DefaultHorizontalAlignStyle = StyleProp.defineEnum('tldraw:horizontalAlign', {\n\tdefaultValue: 'middle',\n\tvalues: ['start', 'middle', 'end', 'start-legacy', 'end-legacy', 'middle-legacy'],\n})\n\n/** @public */\nexport type TLDefaultHorizontalAlignStyle = T.TypeOf<typeof DefaultHorizontalAlignStyle>\n"],"names":[],"mappings":";;;AACA,SAAS,iBAAiB;;AAGnB,MAAM,0MAA8B,YAAA,CAAU,UAAA,CAAW,0BAA0B;IACzF,cAAc;IACd,QAAQ;QAAC;QAAS;QAAU;QAAO;QAAgB;QAAc,eAAe;KAAA;AACjF,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3912, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/styles/TLVerticalAlignStyle.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { StyleProp } from './StyleProp'\n\n/** @public */\nexport const DefaultVerticalAlignStyle = StyleProp.defineEnum('tldraw:verticalAlign', {\n\tdefaultValue: 'middle',\n\tvalues: ['start', 'middle', 'end'],\n})\n\n/** @public */\nexport type TLDefaultVerticalAlignStyle = T.TypeOf<typeof DefaultVerticalAlignStyle>\n"],"names":[],"mappings":";;;AACA,SAAS,iBAAiB;;AAGnB,MAAM,wMAA4B,YAAA,CAAU,UAAA,CAAW,wBAAwB;IACrF,cAAc;IACd,QAAQ;QAAC;QAAS;QAAU,KAAK;KAAA;AAClC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3933, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/shapes/TLGeoShape.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { TLRichText, richTextValidator, toRichText } from '../misc/TLRichText'\nimport { createShapePropsMigrationIds, createShapePropsMigrationSequence } from '../records/TLShape'\nimport { RecordProps } from '../recordsWithProps'\nimport { StyleProp } from '../styles/StyleProp'\nimport {\n\tDefaultColorStyle,\n\tDefaultLabelColorStyle,\n\tTLDefaultColorStyle,\n} from '../styles/TLColorStyle'\nimport { DefaultDashStyle, TLDefaultDashStyle } from '../styles/TLDashStyle'\nimport { DefaultFillStyle, TLDefaultFillStyle } from '../styles/TLFillStyle'\nimport { DefaultFontStyle, TLDefaultFontStyle } from '../styles/TLFontStyle'\nimport {\n\tDefaultHorizontalAlignStyle,\n\tTLDefaultHorizontalAlignStyle,\n} from '../styles/TLHorizontalAlignStyle'\nimport { DefaultSizeStyle, TLDefaultSizeStyle } from '../styles/TLSizeStyle'\nimport {\n\tDefaultVerticalAlignStyle,\n\tTLDefaultVerticalAlignStyle,\n} from '../styles/TLVerticalAlignStyle'\nimport { TLBaseShape } from './TLBaseShape'\n\n/** @public */\nexport const GeoShapeGeoStyle = StyleProp.defineEnum('tldraw:geo', {\n\tdefaultValue: 'rectangle',\n\tvalues: [\n\t\t'cloud',\n\t\t'rectangle',\n\t\t'ellipse',\n\t\t'triangle',\n\t\t'diamond',\n\t\t'pentagon',\n\t\t'hexagon',\n\t\t'octagon',\n\t\t'star',\n\t\t'rhombus',\n\t\t'rhombus-2',\n\t\t'oval',\n\t\t'trapezoid',\n\t\t'arrow-right',\n\t\t'arrow-left',\n\t\t'arrow-up',\n\t\t'arrow-down',\n\t\t'x-box',\n\t\t'check-box',\n\t\t'heart',\n\t],\n})\n\n/** @public */\nexport type TLGeoShapeGeoStyle = T.TypeOf<typeof GeoShapeGeoStyle>\n\n/** @public */\nexport interface TLGeoShapeProps {\n\tgeo: TLGeoShapeGeoStyle\n\tdash: TLDefaultDashStyle\n\turl: string\n\tw: number\n\th: number\n\tgrowY: number\n\tscale: number\n\n\t// Text properties\n\tlabelColor: TLDefaultColorStyle\n\tcolor: TLDefaultColorStyle\n\tfill: TLDefaultFillStyle\n\tsize: TLDefaultSizeStyle\n\tfont: TLDefaultFontStyle\n\talign: TLDefaultHorizontalAlignStyle\n\tverticalAlign: TLDefaultVerticalAlignStyle\n\trichText: TLRichText\n}\n\n/** @public */\nexport type TLGeoShape = TLBaseShape<'geo', TLGeoShapeProps>\n\n/** @public */\nexport const geoShapeProps: RecordProps<TLGeoShape> = {\n\tgeo: GeoShapeGeoStyle,\n\tdash: DefaultDashStyle,\n\turl: T.linkUrl,\n\tw: T.nonZeroNumber,\n\th: T.nonZeroNumber,\n\tgrowY: T.positiveNumber,\n\tscale: T.nonZeroNumber,\n\n\t// Text properties\n\tlabelColor: DefaultLabelColorStyle,\n\tcolor: DefaultColorStyle,\n\tfill: DefaultFillStyle,\n\tsize: DefaultSizeStyle,\n\tfont: DefaultFontStyle,\n\talign: DefaultHorizontalAlignStyle,\n\tverticalAlign: DefaultVerticalAlignStyle,\n\trichText: richTextValidator,\n}\n\nconst geoShapeVersions = createShapePropsMigrationIds('geo', {\n\tAddUrlProp: 1,\n\tAddLabelColor: 2,\n\tRemoveJustify: 3,\n\tAddCheckBox: 4,\n\tAddVerticalAlign: 5,\n\tMigrateLegacyAlign: 6,\n\tAddCloud: 7,\n\tMakeUrlsValid: 8,\n\tAddScale: 9,\n\tAddRichText: 10,\n})\n\nexport { geoShapeVersions as geoShapeVersions }\n\n/** @public */\nexport const geoShapeMigrations = createShapePropsMigrationSequence({\n\tsequence: [\n\t\t{\n\t\t\tid: geoShapeVersions.AddUrlProp,\n\t\t\tup: (props) => {\n\t\t\t\tprops.url = ''\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: geoShapeVersions.AddLabelColor,\n\t\t\tup: (props) => {\n\t\t\t\tprops.labelColor = 'black'\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: geoShapeVersions.RemoveJustify,\n\t\t\tup: (props) => {\n\t\t\t\tif (props.align === 'justify') {\n\t\t\t\t\tprops.align = 'start'\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: geoShapeVersions.AddCheckBox,\n\t\t\tup: (_props) => {\n\t\t\t\t// noop\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: geoShapeVersions.AddVerticalAlign,\n\t\t\tup: (props) => {\n\t\t\t\tprops.verticalAlign = 'middle'\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: geoShapeVersions.MigrateLegacyAlign,\n\t\t\tup: (props) => {\n\t\t\t\tlet newAlign: TLDefaultHorizontalAlignStyle\n\t\t\t\tswitch (props.align) {\n\t\t\t\t\tcase 'start':\n\t\t\t\t\t\tnewAlign = 'start-legacy'\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'end':\n\t\t\t\t\t\tnewAlign = 'end-legacy'\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tnewAlign = 'middle-legacy'\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tprops.align = newAlign\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: geoShapeVersions.AddCloud,\n\t\t\tup: (_props) => {\n\t\t\t\t// noop\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: geoShapeVersions.MakeUrlsValid,\n\t\t\tup: (props) => {\n\t\t\t\tif (!T.linkUrl.isValid(props.url)) {\n\t\t\t\t\tprops.url = ''\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: (_props) => {\n\t\t\t\t// noop\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: geoShapeVersions.AddScale,\n\t\t\tup: (props) => {\n\t\t\t\tprops.scale = 1\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.scale\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: geoShapeVersions.AddRichText,\n\t\t\tup: (props) => {\n\t\t\t\tprops.richText = toRichText(props.text)\n\t\t\t\tdelete props.text\n\t\t\t},\n\t\t\t// N.B. Explicitly no down state so that we force clients to update.\n\t\t\t// down: (props) => {\n\t\t\t// \tdelete props.richText\n\t\t\t// },\n\t\t},\n\t],\n})\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4113, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/shapes/TLGroupShape.ts"],"sourcesContent":["import { createShapePropsMigrationSequence } from '../records/TLShape'\nimport { RecordProps } from '../recordsWithProps'\nimport { TLBaseShape } from './TLBaseShape'\n\n/** @public */\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface TLGroupShapeProps {}\n\n/** @public */\nexport type TLGroupShape = TLBaseShape<'group', TLGroupShapeProps>\n\n/** @public */\nexport const groupShapeProps: RecordProps<TLGroupShape> = {}\n\n/** @public */\nexport const groupShapeMigrations = createShapePropsMigrationSequence({ sequence: [] })\n"],"names":[],"mappings":";;;;AAAA,SAAS,yCAAyC;;AAY3C,MAAM,kBAA6C,CAAC;AAGpD,MAAM,sMAAuB,oCAAA,EAAkC;IAAE,UAAU,CAAC,CAAA;AAAE,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4131, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/shapes/TLHighlightShape.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { createShapePropsMigrationIds, createShapePropsMigrationSequence } from '../records/TLShape'\nimport { RecordProps } from '../recordsWithProps'\nimport { DefaultColorStyle, TLDefaultColorStyle } from '../styles/TLColorStyle'\nimport { DefaultSizeStyle, TLDefaultSizeStyle } from '../styles/TLSizeStyle'\nimport { TLBaseShape } from './TLBaseShape'\nimport { DrawShapeSegment, TLDrawShapeSegment } from './TLDrawShape'\n\n/** @public */\nexport interface TLHighlightShapeProps {\n\tcolor: TLDefaultColorStyle\n\tsize: TLDefaultSizeStyle\n\tsegments: TLDrawShapeSegment[]\n\tisComplete: boolean\n\tisPen: boolean\n\tscale: number\n}\n\n/** @public */\nexport type TLHighlightShape = TLBaseShape<'highlight', TLHighlightShapeProps>\n\n/** @public */\nexport const highlightShapeProps: RecordProps<TLHighlightShape> = {\n\tcolor: DefaultColorStyle,\n\tsize: DefaultSizeStyle,\n\tsegments: T.arrayOf(DrawShapeSegment),\n\tisComplete: T.boolean,\n\tisPen: T.boolean,\n\tscale: T.nonZeroNumber,\n}\n\nconst Versions = createShapePropsMigrationIds('highlight', {\n\tAddScale: 1,\n})\n\nexport { Versions as highlightShapeVersions }\n\n/** @public */\nexport const highlightShapeMigrations = createShapePropsMigrationSequence({\n\tsequence: [\n\t\t{\n\t\t\tid: Versions.AddScale,\n\t\t\tup: (props) => {\n\t\t\t\tprops.scale = 1\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.scale\n\t\t\t},\n\t\t},\n\t],\n})\n"],"names":[],"mappings":";;;;;AAAA,SAAS,SAAS;;AAClB,SAAS,8BAA8B,yCAAyC;AAEhF,SAAS,yBAA8C;AACvD,SAAS,wBAA4C;AAErD,SAAS,wBAA4C;;;;;;AAgB9C,MAAM,sBAAqD;IACjE,sLAAO,oBAAA;IACP,oLAAM,mBAAA;IACN,iNAAU,IAAA,CAAE,OAAA,CAAQ,iMAAgB;IACpC,mNAAY,IAAA,CAAE,OAAA;IACd,8MAAO,IAAA,CAAE,OAAA;IACT,8MAAO,IAAA,CAAE,aAAA;AACV;AAEA,MAAM,YAAW,6MAAA,EAA6B,aAAa;IAC1D,UAAU;AACX,CAAC;AAKM,MAAM,0MAA2B,oCAAA,EAAkC;IACzE,UAAU;QACT;YACC,IAAI,SAAS,QAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,KAAA,GAAQ;YACf;YACA,MAAM,CAAC,UAAU;gBAChB,OAAO,MAAM,KAAA;YACd;QACD;KACD;AACD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4179, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/shapes/TLImageShape.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { assetIdValidator } from '../assets/TLBaseAsset'\nimport { vecModelValidator } from '../misc/geometry-types'\nimport { TLAssetId } from '../records/TLAsset'\nimport { createShapePropsMigrationIds, createShapePropsMigrationSequence } from '../records/TLShape'\nimport { RecordProps } from '../recordsWithProps'\nimport { TLShapeCrop } from './ShapeWithCrop'\nimport { TLBaseShape } from './TLBaseShape'\n\n/** @public */\nexport const ImageShapeCrop: T.ObjectValidator<TLShapeCrop> = T.object({\n\ttopLeft: vecModelValidator,\n\tbottomRight: vecModelValidator,\n\tisCircle: T.boolean.optional(),\n})\n\n/** @public */\nexport interface TLImageShapeProps {\n\tw: number\n\th: number\n\tplaying: boolean\n\turl: string\n\tassetId: TLAssetId | null\n\tcrop: TLShapeCrop | null\n\tflipX: boolean\n\tflipY: boolean\n\taltText: string\n}\n\n/** @public */\nexport type TLImageShape = TLBaseShape<'image', TLImageShapeProps>\n\n/** @public */\nexport const imageShapeProps: RecordProps<TLImageShape> = {\n\tw: T.nonZeroNumber,\n\th: T.nonZeroNumber,\n\tplaying: T.boolean,\n\turl: T.linkUrl,\n\tassetId: assetIdValidator.nullable(),\n\tcrop: ImageShapeCrop.nullable(),\n\tflipX: T.boolean,\n\tflipY: T.boolean,\n\taltText: T.string,\n}\n\nconst Versions = createShapePropsMigrationIds('image', {\n\tAddUrlProp: 1,\n\tAddCropProp: 2,\n\tMakeUrlsValid: 3,\n\tAddFlipProps: 4,\n\tAddAltText: 5,\n})\n\nexport { Versions as imageShapeVersions }\n\n/** @public */\nexport const imageShapeMigrations = createShapePropsMigrationSequence({\n\tsequence: [\n\t\t{\n\t\t\tid: Versions.AddUrlProp,\n\t\t\tup: (props) => {\n\t\t\t\tprops.url = ''\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddCropProp,\n\t\t\tup: (props) => {\n\t\t\t\tprops.crop = null\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.crop\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.MakeUrlsValid,\n\t\t\tup: (props) => {\n\t\t\t\tif (!T.linkUrl.isValid(props.url)) {\n\t\t\t\t\tprops.url = ''\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: (_props) => {\n\t\t\t\t// noop\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddFlipProps,\n\t\t\tup: (props) => {\n\t\t\t\tprops.flipX = false\n\t\t\t\tprops.flipY = false\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.flipX\n\t\t\t\tdelete props.flipY\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddAltText,\n\t\t\tup: (props) => {\n\t\t\t\tprops.altText = ''\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.altText\n\t\t\t},\n\t\t},\n\t],\n})\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,SAAS;;AAClB,SAAS,wBAAwB;AACjC,SAAS,yBAAyB;AAElC,SAAS,8BAA8B,yCAAyC;;;;;AAMzE,MAAM,wNAAiD,IAAA,CAAE,MAAA,CAAO;IACtE,2LAAS,oBAAA;IACT,+LAAa,oBAAA;IACb,gNAAU,KAAA,CAAE,OAAA,CAAQ,QAAA,CAAS;AAC9B,CAAC;AAmBM,MAAM,kBAA6C;IACzD,0MAAG,IAAA,CAAE,aAAA;IACL,0MAAG,IAAA,CAAE,aAAA;IACL,gNAAS,IAAA,CAAE,OAAA;IACX,4MAAK,IAAA,CAAE,OAAA;IACP,SAAS,iMAAA,CAAiB,QAAA,CAAS;IACnC,MAAM,eAAe,QAAA,CAAS;IAC9B,8MAAO,IAAA,CAAE,OAAA;IACT,8MAAO,IAAA,CAAE,OAAA;IACT,gNAAS,IAAA,CAAE,MAAA;AACZ;AAEA,MAAM,0LAAW,+BAAA,EAA6B,SAAS;IACtD,YAAY;IACZ,aAAa;IACb,eAAe;IACf,cAAc;IACd,YAAY;AACb,CAAC;AAKM,MAAM,sMAAuB,oCAAA,EAAkC;IACrE,UAAU;QACT;YACC,IAAI,SAAS,UAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,GAAA,GAAM;YACb;YACA,MAAM;QACP;QACA;YACC,IAAI,SAAS,WAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,IAAA,GAAO;YACd;YACA,MAAM,CAAC,UAAU;gBAChB,OAAO,MAAM,IAAA;YACd;QACD;QACA;YACC,IAAI,SAAS,aAAA;YACb,IAAI,CAAC,UAAU;gBACd,IAAI,wMAAC,IAAA,CAAE,OAAA,CAAQ,OAAA,CAAQ,MAAM,GAAG,GAAG;oBAClC,MAAM,GAAA,GAAM;gBACb;YACD;YACA,MAAM,CAAC,UAEP,CAFkB;QAGnB;QACA;YACC,IAAI,SAAS,YAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,KAAA,GAAQ;gBACd,MAAM,KAAA,GAAQ;YACf;YACA,MAAM,CAAC,UAAU;gBAChB,OAAO,MAAM,KAAA;gBACb,OAAO,MAAM,KAAA;YACd;QACD;QACA;YACC,IAAI,SAAS,UAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,OAAA,GAAU;YACjB;YACA,MAAM,CAAC,UAAU;gBAChB,OAAO,MAAM,OAAA;YACd;QACD;KACD;AACD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4274, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/shapes/TLLineShape.ts"],"sourcesContent":["import { IndexKey, getIndices, objectMapFromEntries, sortByIndex } from '@tldraw/utils'\nimport { T } from '@tldraw/validate'\nimport { createShapePropsMigrationIds, createShapePropsMigrationSequence } from '../records/TLShape'\nimport { RecordProps } from '../recordsWithProps'\nimport { StyleProp } from '../styles/StyleProp'\nimport { DefaultColorStyle, TLDefaultColorStyle } from '../styles/TLColorStyle'\nimport { DefaultDashStyle, TLDefaultDashStyle } from '../styles/TLDashStyle'\nimport { DefaultSizeStyle, TLDefaultSizeStyle } from '../styles/TLSizeStyle'\nimport { TLBaseShape } from './TLBaseShape'\n\n/** @public */\nexport const LineShapeSplineStyle = StyleProp.defineEnum('tldraw:spline', {\n\tdefaultValue: 'line',\n\tvalues: ['cubic', 'line'],\n})\n\n/** @public */\nexport type TLLineShapeSplineStyle = T.TypeOf<typeof LineShapeSplineStyle>\n\n/** @public */\nexport interface TLLineShapePoint {\n\tid: string\n\tindex: IndexKey\n\tx: number\n\ty: number\n}\n\nconst lineShapePointValidator: T.ObjectValidator<TLLineShapePoint> = T.object({\n\tid: T.string,\n\tindex: T.indexKey,\n\tx: T.number,\n\ty: T.number,\n})\n\n/** @public */\nexport interface TLLineShapeProps {\n\tcolor: TLDefaultColorStyle\n\tdash: TLDefaultDashStyle\n\tsize: TLDefaultSizeStyle\n\tspline: TLLineShapeSplineStyle\n\tpoints: Record<string, TLLineShapePoint>\n\tscale: number\n}\n\n/** @public */\nexport type TLLineShape = TLBaseShape<'line', TLLineShapeProps>\n\n/** @public */\nexport const lineShapeProps: RecordProps<TLLineShape> = {\n\tcolor: DefaultColorStyle,\n\tdash: DefaultDashStyle,\n\tsize: DefaultSizeStyle,\n\tspline: LineShapeSplineStyle,\n\tpoints: T.dict(T.string, lineShapePointValidator),\n\tscale: T.nonZeroNumber,\n}\n\n/** @public */\nexport const lineShapeVersions = createShapePropsMigrationIds('line', {\n\tAddSnapHandles: 1,\n\tRemoveExtraHandleProps: 2,\n\tHandlesToPoints: 3,\n\tPointIndexIds: 4,\n\tAddScale: 5,\n})\n\n/** @public */\nexport const lineShapeMigrations = createShapePropsMigrationSequence({\n\tsequence: [\n\t\t{\n\t\t\tid: lineShapeVersions.AddSnapHandles,\n\t\t\tup: (props) => {\n\t\t\t\tfor (const handle of Object.values(props.handles)) {\n\t\t\t\t\t;(handle as any).canSnap = true\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: lineShapeVersions.RemoveExtraHandleProps,\n\t\t\tup: (props) => {\n\t\t\t\tprops.handles = objectMapFromEntries(\n\t\t\t\t\tObject.values(props.handles).map((handle: any) => [\n\t\t\t\t\t\thandle.index,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tx: handle.x,\n\t\t\t\t\t\t\ty: handle.y,\n\t\t\t\t\t\t},\n\t\t\t\t\t])\n\t\t\t\t)\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tconst handles = Object.entries(props.handles)\n\t\t\t\t\t.map(([index, handle]: any) => ({ index, ...handle }))\n\t\t\t\t\t.sort(sortByIndex)\n\t\t\t\tprops.handles = Object.fromEntries(\n\t\t\t\t\thandles.map((handle, i) => {\n\t\t\t\t\t\tconst id =\n\t\t\t\t\t\t\ti === 0 ? 'start' : i === handles.length - 1 ? 'end' : `handle:${handle.index}`\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\ttype: 'vertex',\n\t\t\t\t\t\t\t\tcanBind: false,\n\t\t\t\t\t\t\t\tcanSnap: true,\n\t\t\t\t\t\t\t\tindex: handle.index,\n\t\t\t\t\t\t\t\tx: handle.x,\n\t\t\t\t\t\t\t\ty: handle.y,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: lineShapeVersions.HandlesToPoints,\n\t\t\tup: (props) => {\n\t\t\t\tconst sortedHandles = (\n\t\t\t\t\tObject.entries(props.handles) as [IndexKey, { x: number; y: number }][]\n\t\t\t\t)\n\t\t\t\t\t.map(([index, { x, y }]) => ({ x, y, index }))\n\t\t\t\t\t.sort(sortByIndex)\n\n\t\t\t\tprops.points = sortedHandles.map(({ x, y }) => ({ x, y }))\n\t\t\t\tdelete props.handles\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tconst indices = getIndices(props.points.length)\n\n\t\t\t\tprops.handles = Object.fromEntries(\n\t\t\t\t\tprops.points.map((handle: { x: number; y: number }, i: number) => {\n\t\t\t\t\t\tconst index = indices[i]\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tx: handle.x,\n\t\t\t\t\t\t\t\ty: handle.y,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t)\n\n\t\t\t\tdelete props.points\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: lineShapeVersions.PointIndexIds,\n\t\t\tup: (props) => {\n\t\t\t\tconst indices = getIndices(props.points.length)\n\n\t\t\t\tprops.points = Object.fromEntries(\n\t\t\t\t\tprops.points.map((point: { x: number; y: number }, i: number) => {\n\t\t\t\t\t\tconst id = indices[i]\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: id,\n\t\t\t\t\t\t\t\tindex: id,\n\t\t\t\t\t\t\t\tx: point.x,\n\t\t\t\t\t\t\t\ty: point.y,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tconst sortedHandles = (\n\t\t\t\t\tObject.values(props.points) as { x: number; y: number; index: IndexKey }[]\n\t\t\t\t).sort(sortByIndex)\n\n\t\t\t\tprops.points = sortedHandles.map(({ x, y }) => ({ x, y }))\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: lineShapeVersions.AddScale,\n\t\t\tup: (props) => {\n\t\t\t\tprops.scale = 1\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.scale\n\t\t\t},\n\t\t},\n\t],\n})\n"],"names":[],"mappings":";;;;;;AAAA,SAAmB,YAAY,sBAAsB,mBAAmB;;;AACxE,SAAS,SAAS;;AAClB,SAAS,8BAA8B,yCAAyC;AAEhF,SAAS,iBAAiB;AAC1B,SAAS,yBAA8C;AACvD,SAAS,wBAA4C;AACrD,SAAS,wBAA4C;;;;;;;;AAI9C,MAAM,mMAAuB,YAAA,CAAU,UAAA,CAAW,iBAAiB;IACzE,cAAc;IACd,QAAQ;QAAC;QAAS,MAAM;KAAA;AACzB,CAAC;AAaD,MAAM,iOAA+D,IAAA,CAAE,MAAA,CAAO;IAC7E,2MAAI,IAAA,CAAE,MAAA;IACN,8MAAO,IAAA,CAAE,QAAA;IACT,0MAAG,IAAA,CAAE,MAAA;IACL,0MAAG,IAAA,CAAE,MAAA;AACN,CAAC;AAgBM,MAAM,iBAA2C;IACvD,sLAAO,oBAAA;IACP,oLAAM,mBAAA;IACN,oLAAM,mBAAA;IACN,QAAQ;IACR,+MAAQ,IAAA,CAAE,IAAA,wMAAK,IAAA,CAAE,MAAA,EAAQ,uBAAuB;IAChD,8MAAO,IAAA,CAAE,aAAA;AACV;AAGO,MAAM,oBAAoB,8MAAA,EAA6B,QAAQ;IACrE,gBAAgB;IAChB,wBAAwB;IACxB,iBAAiB;IACjB,eAAe;IACf,UAAU;AACX,CAAC;AAGM,MAAM,0BAAsB,+MAAA,EAAkC;IACpE,UAAU;QACT;YACC,IAAI,kBAAkB,cAAA;YACtB,IAAI,CAAC,UAAU;gBACd,KAAA,MAAW,UAAU,OAAO,MAAA,CAAO,MAAM,OAAO,EAAG;;oBAChD,OAAe,OAAA,GAAU;gBAC5B;YACD;YACA,MAAM;QACP;QACA;YACC,IAAI,kBAAkB,sBAAA;YACtB,IAAI,CAAC,UAAU;gBACd,MAAM,OAAA,0KAAU,uBAAA,EACf,OAAO,MAAA,CAAO,MAAM,OAAO,EAAE,GAAA,CAAI,CAAC,SAAgB;wBACjD,OAAO,KAAA;wBACP;4BACC,GAAG,OAAO,CAAA;4BACV,GAAG,OAAO,CAAA;wBACX;qBACA;YAEH;YACA,MAAM,CAAC,UAAU;gBAChB,MAAM,UAAU,OAAO,OAAA,CAAQ,MAAM,OAAO,EAC1C,GAAA,CAAI,CAAC,CAAC,OAAO,MAAM,CAAA,GAAA,CAAY;wBAAE;wBAAO,GAAG,MAAA;oBAAO,CAAA,CAAE,EACpD,IAAA,wKAAK,cAAW;gBAClB,MAAM,OAAA,GAAU,OAAO,WAAA,CACtB,QAAQ,GAAA,CAAI,CAAC,QAAQ,MAAM;oBAC1B,MAAM,KACL,MAAM,IAAI,UAAU,MAAM,QAAQ,MAAA,GAAS,IAAI,QAAQ,CAAA,OAAA,EAAU,OAAO,KAAK,EAAA;oBAC9E,OAAO;wBACN;wBACA;4BACC;4BACA,MAAM;4BACN,SAAS;4BACT,SAAS;4BACT,OAAO,OAAO,KAAA;4BACd,GAAG,OAAO,CAAA;4BACV,GAAG,OAAO,CAAA;wBACX;qBACD;gBACD,CAAC;YAEH;QACD;QACA;YACC,IAAI,kBAAkB,eAAA;YACtB,IAAI,CAAC,UAAU;gBACd,MAAM,gBACL,OAAO,OAAA,CAAQ,MAAM,OAAO,EAE3B,GAAA,CAAI,CAAC,CAAC,OAAO,EAAE,CAAA,EAAG,CAAA,CAAE,CAAC,CAAA,GAAA,CAAO;wBAAE;wBAAG;wBAAG;oBAAM,CAAA,CAAE,EAC5C,IAAA,wKAAK,cAAW;gBAElB,MAAM,MAAA,GAAS,cAAc,GAAA,CAAI,CAAC,EAAE,CAAA,EAAG,CAAA,CAAE,CAAA,GAAA,CAAO;wBAAE;wBAAG;oBAAE,CAAA,CAAE;gBACzD,OAAO,MAAM,OAAA;YACd;YACA,MAAM,CAAC,UAAU;gBAChB,MAAM,qLAAU,aAAA,EAAW,MAAM,MAAA,CAAO,MAAM;gBAE9C,MAAM,OAAA,GAAU,OAAO,WAAA,CACtB,MAAM,MAAA,CAAO,GAAA,CAAI,CAAC,QAAkC,MAAc;oBACjE,MAAM,QAAQ,OAAA,CAAQ,CAAC,CAAA;oBACvB,OAAO;wBACN;wBACA;4BACC,GAAG,OAAO,CAAA;4BACV,GAAG,OAAO,CAAA;wBACX;qBACD;gBACD,CAAC;gBAGF,OAAO,MAAM,MAAA;YACd;QACD;QACA;YACC,IAAI,kBAAkB,aAAA;YACtB,IAAI,CAAC,UAAU;gBACd,MAAM,qLAAU,aAAA,EAAW,MAAM,MAAA,CAAO,MAAM;gBAE9C,MAAM,MAAA,GAAS,OAAO,WAAA,CACrB,MAAM,MAAA,CAAO,GAAA,CAAI,CAAC,OAAiC,MAAc;oBAChE,MAAM,KAAK,OAAA,CAAQ,CAAC,CAAA;oBACpB,OAAO;wBACN;wBACA;4BACC;4BACA,OAAO;4BACP,GAAG,MAAM,CAAA;4BACT,GAAG,MAAM,CAAA;wBACV;qBACD;gBACD,CAAC;YAEH;YACA,MAAM,CAAC,UAAU;gBAChB,MAAM,gBACL,OAAO,MAAA,CAAO,MAAM,MAAM,EACzB,IAAA,CAAK,qLAAW;gBAElB,MAAM,MAAA,GAAS,cAAc,GAAA,CAAI,CAAC,EAAE,CAAA,EAAG,CAAA,CAAE,CAAA,GAAA,CAAO;wBAAE;wBAAG;oBAAE,CAAA,CAAE;YAC1D;QACD;QACA;YACC,IAAI,kBAAkB,QAAA;YACtB,IAAI,CAAC,UAAU;gBACd,MAAM,KAAA,GAAQ;YACf;YACA,MAAM,CAAC,UAAU;gBAChB,OAAO,MAAM,KAAA;YACd;QACD;KACD;AACD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4443, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/shapes/TLNoteShape.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { TLRichText, richTextValidator, toRichText } from '../misc/TLRichText'\nimport { createShapePropsMigrationIds, createShapePropsMigrationSequence } from '../records/TLShape'\nimport { RecordProps } from '../recordsWithProps'\nimport {\n\tDefaultColorStyle,\n\tDefaultLabelColorStyle,\n\tTLDefaultColorStyle,\n} from '../styles/TLColorStyle'\nimport { DefaultFontStyle, TLDefaultFontStyle } from '../styles/TLFontStyle'\nimport {\n\tDefaultHorizontalAlignStyle,\n\tTLDefaultHorizontalAlignStyle,\n} from '../styles/TLHorizontalAlignStyle'\nimport { DefaultSizeStyle, TLDefaultSizeStyle } from '../styles/TLSizeStyle'\nimport {\n\tDefaultVerticalAlignStyle,\n\tTLDefaultVerticalAlignStyle,\n} from '../styles/TLVerticalAlignStyle'\nimport { TLBaseShape } from './TLBaseShape'\n\n/** @public */\nexport interface TLNoteShapeProps {\n\tcolor: TLDefaultColorStyle\n\tlabelColor: TLDefaultColorStyle\n\tsize: TLDefaultSizeStyle\n\tfont: TLDefaultFontStyle\n\tfontSizeAdjustment: number\n\talign: TLDefaultHorizontalAlignStyle\n\tverticalAlign: TLDefaultVerticalAlignStyle\n\tgrowY: number\n\turl: string\n\trichText: TLRichText\n\tscale: number\n}\n\n/** @public */\nexport type TLNoteShape = TLBaseShape<'note', TLNoteShapeProps>\n\n/** @public */\nexport const noteShapeProps: RecordProps<TLNoteShape> = {\n\tcolor: DefaultColorStyle,\n\tlabelColor: DefaultLabelColorStyle,\n\tsize: DefaultSizeStyle,\n\tfont: DefaultFontStyle,\n\tfontSizeAdjustment: T.positiveNumber,\n\talign: DefaultHorizontalAlignStyle,\n\tverticalAlign: DefaultVerticalAlignStyle,\n\tgrowY: T.positiveNumber,\n\turl: T.linkUrl,\n\trichText: richTextValidator,\n\tscale: T.nonZeroNumber,\n}\n\nconst Versions = createShapePropsMigrationIds('note', {\n\tAddUrlProp: 1,\n\tRemoveJustify: 2,\n\tMigrateLegacyAlign: 3,\n\tAddVerticalAlign: 4,\n\tMakeUrlsValid: 5,\n\tAddFontSizeAdjustment: 6,\n\tAddScale: 7,\n\tAddLabelColor: 8,\n\tAddRichText: 9,\n})\n\nexport { Versions as noteShapeVersions }\n\n/** @public */\nexport const noteShapeMigrations = createShapePropsMigrationSequence({\n\tsequence: [\n\t\t{\n\t\t\tid: Versions.AddUrlProp,\n\t\t\tup: (props) => {\n\t\t\t\tprops.url = ''\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: Versions.RemoveJustify,\n\t\t\tup: (props) => {\n\t\t\t\tif (props.align === 'justify') {\n\t\t\t\t\tprops.align = 'start'\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: Versions.MigrateLegacyAlign,\n\t\t\tup: (props) => {\n\t\t\t\tswitch (props.align) {\n\t\t\t\t\tcase 'start':\n\t\t\t\t\t\tprops.align = 'start-legacy'\n\t\t\t\t\t\treturn\n\t\t\t\t\tcase 'end':\n\t\t\t\t\t\tprops.align = 'end-legacy'\n\t\t\t\t\t\treturn\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tprops.align = 'middle-legacy'\n\t\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddVerticalAlign,\n\t\t\tup: (props) => {\n\t\t\t\tprops.verticalAlign = 'middle'\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: Versions.MakeUrlsValid,\n\t\t\tup: (props) => {\n\t\t\t\tif (!T.linkUrl.isValid(props.url)) {\n\t\t\t\t\tprops.url = ''\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: (_props) => {\n\t\t\t\t// noop\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddFontSizeAdjustment,\n\t\t\tup: (props) => {\n\t\t\t\tprops.fontSizeAdjustment = 0\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.fontSizeAdjustment\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddScale,\n\t\t\tup: (props) => {\n\t\t\t\tprops.scale = 1\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.scale\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddLabelColor,\n\t\t\tup: (props) => {\n\t\t\t\tprops.labelColor = 'black'\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.labelColor\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddRichText,\n\t\t\tup: (props) => {\n\t\t\t\tprops.richText = toRichText(props.text)\n\t\t\t\tdelete props.text\n\t\t\t},\n\t\t\t// N.B. Explicitly no down state so that we force clients to update.\n\t\t\t// down: (props) => {\n\t\t\t// \tdelete props.richText\n\t\t\t// },\n\t\t},\n\t],\n})\n"],"names":[],"mappings":";;;;;AAAA,SAAS,SAAS;;AAClB,SAAqB,mBAAmB,kBAAkB;AAC1D,SAAS,8BAA8B,yCAAyC;AAEhF;AAKA,SAAS,wBAA4C;AACrD;AAIA,SAAS,wBAA4C;AACrD;;;;;;;;;AAyBO,MAAM,iBAA2C;IACvD,sLAAO,oBAAA;IACP,2LAAY,yBAAA;IACZ,oLAAM,mBAAA;IACN,oLAAM,mBAAA;IACN,2NAAoB,IAAA,CAAE,cAAA;IACtB,gMAAO,8BAAA;IACP,sMAAe,4BAAA;IACf,8MAAO,IAAA,CAAE,cAAA;IACT,KAAK,2MAAA,CAAE,OAAA;IACP,qLAAU,oBAAA;IACV,8MAAO,IAAA,CAAE,aAAA;AACV;AAEA,MAAM,YAAW,6MAAA,EAA6B,QAAQ;IACrD,YAAY;IACZ,eAAe;IACf,oBAAoB;IACpB,kBAAkB;IAClB,eAAe;IACf,uBAAuB;IACvB,UAAU;IACV,eAAe;IACf,aAAa;AACd,CAAC;AAKM,MAAM,qMAAsB,oCAAA,EAAkC;IACpE,UAAU;QACT;YACC,IAAI,SAAS,UAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,GAAA,GAAM;YACb;YACA,MAAM;QACP;QACA;YACC,IAAI,SAAS,aAAA;YACb,IAAI,CAAC,UAAU;gBACd,IAAI,MAAM,KAAA,KAAU,WAAW;oBAC9B,MAAM,KAAA,GAAQ;gBACf;YACD;YACA,MAAM;QACP;QACA;YACC,IAAI,SAAS,kBAAA;YACb,IAAI,CAAC,UAAU;gBACd,OAAQ,MAAM,KAAA,EAAO;oBACpB,KAAK;wBACJ,MAAM,KAAA,GAAQ;wBACd;oBACD,KAAK;wBACJ,MAAM,KAAA,GAAQ;wBACd;oBACD;wBACC,MAAM,KAAA,GAAQ;wBACd;gBACF;YACD;YACA,MAAM;QACP;QACA;YACC,IAAI,SAAS,gBAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,aAAA,GAAgB;YACvB;YACA,MAAM;QACP;QACA;YACC,IAAI,SAAS,aAAA;YACb,IAAI,CAAC,UAAU;gBACd,IAAI,wMAAC,IAAA,CAAE,OAAA,CAAQ,OAAA,CAAQ,MAAM,GAAG,GAAG;oBAClC,MAAM,GAAA,GAAM;gBACb;YACD;YACA,MAAM,CAAC,UAEP,CAFkB;QAGnB;QACA;YACC,IAAI,SAAS,qBAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,kBAAA,GAAqB;YAC5B;YACA,MAAM,CAAC,UAAU;gBAChB,OAAO,MAAM,kBAAA;YACd;QACD;QACA;YACC,IAAI,SAAS,QAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,KAAA,GAAQ;YACf;YACA,MAAM,CAAC,UAAU;gBAChB,OAAO,MAAM,KAAA;YACd;QACD;QACA;YACC,IAAI,SAAS,aAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,UAAA,GAAa;YACpB;YACA,MAAM,CAAC,UAAU;gBAChB,OAAO,MAAM,UAAA;YACd;QACD;QACA;YACC,IAAI,SAAS,WAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,QAAA,kLAAW,aAAA,EAAW,MAAM,IAAI;gBACtC,OAAO,MAAM,IAAA;YACd;QAKD;KACD;AACD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4584, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/styles/TLTextAlignStyle.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { StyleProp } from './StyleProp'\n\n/** @public */\nexport const DefaultTextAlignStyle = StyleProp.defineEnum('tldraw:textAlign', {\n\tdefaultValue: 'start',\n\tvalues: ['start', 'middle', 'end'],\n})\n\n/** @public */\nexport type TLDefaultTextAlignStyle = T.TypeOf<typeof DefaultTextAlignStyle>\n"],"names":[],"mappings":";;;AACA,SAAS,iBAAiB;;AAGnB,MAAM,oMAAwB,YAAA,CAAU,UAAA,CAAW,oBAAoB;IAC7E,cAAc;IACd,QAAQ;QAAC;QAAS;QAAU,KAAK;KAAA;AAClC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4605, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/shapes/TLTextShape.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { TLRichText, richTextValidator, toRichText } from '../misc/TLRichText'\nimport { createShapePropsMigrationIds, createShapePropsMigrationSequence } from '../records/TLShape'\nimport { RecordProps } from '../recordsWithProps'\nimport { DefaultColorStyle, TLDefaultColorStyle } from '../styles/TLColorStyle'\nimport { DefaultFontStyle, TLDefaultFontStyle } from '../styles/TLFontStyle'\nimport { DefaultSizeStyle, TLDefaultSizeStyle } from '../styles/TLSizeStyle'\nimport { DefaultTextAlignStyle, TLDefaultTextAlignStyle } from '../styles/TLTextAlignStyle'\nimport { TLBaseShape } from './TLBaseShape'\n\n/** @public */\nexport interface TLTextShapeProps {\n\tcolor: TLDefaultColorStyle\n\tsize: TLDefaultSizeStyle\n\tfont: TLDefaultFontStyle\n\ttextAlign: TLDefaultTextAlignStyle\n\tw: number\n\trichText: TLRichText\n\tscale: number\n\tautoSize: boolean\n}\n\n/** @public */\nexport type TLTextShape = TLBaseShape<'text', TLTextShapeProps>\n\n/** @public */\nexport const textShapeProps: RecordProps<TLTextShape> = {\n\tcolor: DefaultColorStyle,\n\tsize: DefaultSizeStyle,\n\tfont: DefaultFontStyle,\n\ttextAlign: DefaultTextAlignStyle,\n\tw: T.nonZeroNumber,\n\trichText: richTextValidator,\n\tscale: T.nonZeroNumber,\n\tautoSize: T.boolean,\n}\n\nconst Versions = createShapePropsMigrationIds('text', {\n\tRemoveJustify: 1,\n\tAddTextAlign: 2,\n\tAddRichText: 3,\n})\n\nexport { Versions as textShapeVersions }\n\n/** @public */\nexport const textShapeMigrations = createShapePropsMigrationSequence({\n\tsequence: [\n\t\t{\n\t\t\tid: Versions.RemoveJustify,\n\t\t\tup: (props) => {\n\t\t\t\tif (props.align === 'justify') {\n\t\t\t\t\tprops.align = 'start'\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddTextAlign,\n\t\t\tup: (props) => {\n\t\t\t\tprops.textAlign = props.align\n\t\t\t\tdelete props.align\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tprops.align = props.textAlign\n\t\t\t\tdelete props.textAlign\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddRichText,\n\t\t\tup: (props) => {\n\t\t\t\tprops.richText = toRichText(props.text)\n\t\t\t\tdelete props.text\n\t\t\t},\n\t\t\t// N.B. Explicitly no down state so that we force clients to update.\n\t\t\t// down: (props) => {\n\t\t\t// \tdelete props.richText\n\t\t\t// },\n\t\t},\n\t],\n})\n"],"names":[],"mappings":";;;;;AAAA,SAAS,SAAS;;AAClB,SAAqB,mBAAmB,kBAAkB;AAC1D,SAAS,8BAA8B,yCAAyC;AAEhF,SAAS,yBAA8C;AACvD,SAAS,wBAA4C;AACrD,SAAS,wBAA4C;AACrD,SAAS,6BAAsD;;;;;;;;AAmBxD,MAAM,iBAA2C;IACvD,sLAAO,oBAAA;IACP,oLAAM,mBAAA;IACN,oLAAM,mBAAA;IACN,6LAAW,yBAAA;IACX,0MAAG,IAAA,CAAE,aAAA;IACL,qLAAU,oBAAA;IACV,8MAAO,IAAA,CAAE,aAAA;IACT,gNAAU,KAAA,CAAE,OAAA;AACb;AAEA,MAAM,0LAAW,+BAAA,EAA6B,QAAQ;IACrD,eAAe;IACf,cAAc;IACd,aAAa;AACd,CAAC;AAKM,MAAM,qMAAsB,oCAAA,EAAkC;IACpE,UAAU;QACT;YACC,IAAI,SAAS,aAAA;YACb,IAAI,CAAC,UAAU;gBACd,IAAI,MAAM,KAAA,KAAU,WAAW;oBAC9B,MAAM,KAAA,GAAQ;gBACf;YACD;YACA,MAAM;QACP;QACA;YACC,IAAI,SAAS,YAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,SAAA,GAAY,MAAM,KAAA;gBACxB,OAAO,MAAM,KAAA;YACd;YACA,MAAM,CAAC,UAAU;gBAChB,MAAM,KAAA,GAAQ,MAAM,SAAA;gBACpB,OAAO,MAAM,SAAA;YACd;QACD;QACA;YACC,IAAI,SAAS,WAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,QAAA,kLAAW,aAAA,EAAW,MAAM,IAAI;gBACtC,OAAO,MAAM,IAAA;YACd;QAKD;KACD;AACD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4679, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/shapes/TLVideoShape.ts"],"sourcesContent":["import { T } from '@tldraw/validate'\nimport { assetIdValidator } from '../assets/TLBaseAsset'\nimport { TLAssetId } from '../records/TLAsset'\nimport { createShapePropsMigrationIds, createShapePropsMigrationSequence } from '../records/TLShape'\nimport { RecordProps } from '../recordsWithProps'\nimport { TLBaseShape } from './TLBaseShape'\n\n/** @public */\nexport interface TLVideoShapeProps {\n\tw: number\n\th: number\n\ttime: number\n\tplaying: boolean\n\tautoplay: boolean\n\turl: string\n\tassetId: TLAssetId | null\n\taltText: string\n}\n\n/** @public */\nexport type TLVideoShape = TLBaseShape<'video', TLVideoShapeProps>\n\n/** @public */\nexport const videoShapeProps: RecordProps<TLVideoShape> = {\n\tw: T.nonZeroNumber,\n\th: T.nonZeroNumber,\n\ttime: T.number,\n\tplaying: T.boolean,\n\tautoplay: T.boolean,\n\turl: T.linkUrl,\n\tassetId: assetIdValidator.nullable(),\n\taltText: T.string,\n}\n\nconst Versions = createShapePropsMigrationIds('video', {\n\tAddUrlProp: 1,\n\tMakeUrlsValid: 2,\n\tAddAltText: 3,\n\tAddAutoplay: 4,\n})\n\nexport { Versions as videoShapeVersions }\n\n/** @public */\nexport const videoShapeMigrations = createShapePropsMigrationSequence({\n\tsequence: [\n\t\t{\n\t\t\tid: Versions.AddUrlProp,\n\t\t\tup: (props) => {\n\t\t\t\tprops.url = ''\n\t\t\t},\n\t\t\tdown: 'retired',\n\t\t},\n\t\t{\n\t\t\tid: Versions.MakeUrlsValid,\n\t\t\tup: (props) => {\n\t\t\t\tif (!T.linkUrl.isValid(props.url)) {\n\t\t\t\t\tprops.url = ''\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: (_props) => {\n\t\t\t\t// noop\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddAltText,\n\t\t\tup: (props) => {\n\t\t\t\tprops.altText = ''\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.altText\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddAutoplay,\n\t\t\tup: (props) => {\n\t\t\t\tprops.autoplay = true\n\t\t\t},\n\t\t\tdown: (props) => {\n\t\t\t\tdelete props.autoplay\n\t\t\t},\n\t\t},\n\t],\n})\n"],"names":[],"mappings":";;;;;AAAA,SAAS,SAAS;;AAClB,SAAS,wBAAwB;AAEjC,SAAS,8BAA8B,yCAAyC;;;;AAoBzE,MAAM,kBAA6C;IACzD,0MAAG,IAAA,CAAE,aAAA;IACL,0MAAG,IAAA,CAAE,aAAA;IACL,6MAAM,IAAA,CAAE,MAAA;IACR,gNAAS,IAAA,CAAE,OAAA;IACX,iNAAU,IAAA,CAAE,OAAA;IACZ,4MAAK,IAAA,CAAE,OAAA;IACP,uLAAS,mBAAA,CAAiB,QAAA,CAAS;IACnC,+MAAS,KAAA,CAAE,MAAA;AACZ;AAEA,MAAM,0LAAW,+BAAA,EAA6B,SAAS;IACtD,YAAY;IACZ,eAAe;IACf,YAAY;IACZ,aAAa;AACd,CAAC;AAKM,MAAM,sMAAuB,oCAAA,EAAkC;IACrE,UAAU;QACT;YACC,IAAI,SAAS,UAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,GAAA,GAAM;YACb;YACA,MAAM;QACP;QACA;YACC,IAAI,SAAS,aAAA;YACb,IAAI,CAAC,UAAU;gBACd,IAAI,wMAAC,IAAA,CAAE,OAAA,CAAQ,OAAA,CAAQ,MAAM,GAAG,GAAG;oBAClC,MAAM,GAAA,GAAM;gBACb;YACD;YACA,MAAM,CAAC,UAEP,CAFkB;QAGnB;QACA;YACC,IAAI,SAAS,UAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,OAAA,GAAU;YACjB;YACA,MAAM,CAAC,UAAU;gBAChB,OAAO,MAAM,OAAA;YACd;QACD;QACA;YACC,IAAI,SAAS,WAAA;YACb,IAAI,CAAC,UAAU;gBACd,MAAM,QAAA,GAAW;YAClB;YACA,MAAM,CAAC,UAAU;gBAChB,OAAO,MAAM,QAAA;YACd;QACD;KACD;AACD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4753, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/store-migrations.ts"],"sourcesContent":["import { createMigrationIds, createMigrationSequence } from '@tldraw/store'\nimport { objectMapEntries } from '@tldraw/utils'\nimport { TLShape } from './records/TLShape'\n\nconst Versions = createMigrationIds('com.tldraw.store', {\n\tRemoveCodeAndIconShapeTypes: 1,\n\tAddInstancePresenceType: 2,\n\tRemoveTLUserAndPresenceAndAddPointer: 3,\n\tRemoveUserDocument: 4,\n} as const)\n\nexport { Versions as storeVersions }\n\n/** @public */\nexport const storeMigrations = createMigrationSequence({\n\tsequenceId: 'com.tldraw.store',\n\tretroactive: false,\n\tsequence: [\n\t\t{\n\t\t\tid: Versions.RemoveCodeAndIconShapeTypes,\n\t\t\tscope: 'store',\n\t\t\tup: (store) => {\n\t\t\t\tfor (const [id, record] of objectMapEntries(store)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\trecord.typeName === 'shape' &&\n\t\t\t\t\t\t((record as TLShape).type === 'icon' || (record as TLShape).type === 'code')\n\t\t\t\t\t) {\n\t\t\t\t\t\tdelete store[id]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tid: Versions.AddInstancePresenceType,\n\t\t\tscope: 'store',\n\t\t\tup(_store) {\n\t\t\t\t// noop\n\t\t\t\t// there used to be a down migration for this but we made down migrations optional\n\t\t\t\t// and we don't use them on store-level migrations so we can just remove it\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// remove user and presence records and add pointer records\n\t\t\tid: Versions.RemoveTLUserAndPresenceAndAddPointer,\n\t\t\tscope: 'store',\n\t\t\tup: (store) => {\n\t\t\t\tfor (const [id, record] of objectMapEntries(store)) {\n\t\t\t\t\tif (record.typeName.match(/^(user|user_presence)$/)) {\n\t\t\t\t\t\tdelete store[id]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// remove user document records\n\t\t\tid: Versions.RemoveUserDocument,\n\t\t\tscope: 'store',\n\t\t\tup: (store) => {\n\t\t\t\tfor (const [id, record] of objectMapEntries(store)) {\n\t\t\t\t\tif (record.typeName.match('user_document')) {\n\t\t\t\t\t\tdelete store[id]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t],\n})\n"],"names":[],"mappings":";;;;AAAA,SAAS,oBAAoB,+BAA+B;;AAC5D,SAAS,wBAAwB;;;;AAGjC,MAAM,mLAAW,qBAAA,EAAmB,oBAAoB;IACvD,6BAA6B;IAC7B,yBAAyB;IACzB,sCAAsC;IACtC,oBAAoB;AACrB,CAAU;AAKH,MAAM,sBAAkB,8LAAA,EAAwB;IACtD,YAAY;IACZ,aAAa;IACb,UAAU;QACT;YACC,IAAI,SAAS,2BAAA;YACb,OAAO;YACP,IAAI,CAAC,UAAU;gBACd,KAAA,MAAW,CAAC,IAAI,MAAM,CAAA,KAAK,yLAAA,EAAiB,KAAK,EAAG;oBACnD,IACC,OAAO,QAAA,KAAa,WAAA,CAClB,OAAmB,IAAA,KAAS,UAAW,OAAmB,IAAA,KAAS,MAAA,GACpE;wBACD,OAAO,KAAA,CAAM,EAAE,CAAA;oBAChB;gBACD;YACD;QACD;QACA;YACC,IAAI,SAAS,uBAAA;YACb,OAAO;YACP,IAAG,MAAA,EAAQ,CAIX;QACD;QACA;YAAA,2DAAA;YAEC,IAAI,SAAS,oCAAA;YACb,OAAO;YACP,IAAI,CAAC,UAAU;gBACd,KAAA,MAAW,CAAC,IAAI,MAAM,CAAA,2KAAK,mBAAA,EAAiB,KAAK,EAAG;oBACnD,IAAI,OAAO,QAAA,CAAS,KAAA,CAAM,wBAAwB,GAAG;wBACpD,OAAO,KAAA,CAAM,EAAE,CAAA;oBAChB;gBACD;YACD;QACD;QACA;YAAA,+BAAA;YAEC,IAAI,SAAS,kBAAA;YACb,OAAO;YACP,IAAI,CAAC,UAAU;gBACd,KAAA,MAAW,CAAC,IAAI,MAAM,CAAA,2KAAK,mBAAA,EAAiB,KAAK,EAAG;oBACnD,IAAI,OAAO,QAAA,CAAS,KAAA,CAAM,eAAe,GAAG;wBAC3C,OAAO,KAAA,CAAM,EAAE,CAAA;oBAChB;gBACD;YACD;QACD;KACD;AACD,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4823, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/createTLSchema.ts"],"sourcesContent":["import { LegacyMigrations, MigrationSequence, StoreSchema, StoreValidator } from '@tldraw/store'\nimport { objectMapValues } from '@tldraw/utils'\nimport { TLStoreProps, createIntegrityChecker, onValidationFailure } from './TLStore'\nimport { bookmarkAssetMigrations } from './assets/TLBookmarkAsset'\nimport { imageAssetMigrations } from './assets/TLImageAsset'\nimport { videoAssetMigrations } from './assets/TLVideoAsset'\nimport { arrowBindingMigrations, arrowBindingProps } from './bindings/TLArrowBinding'\nimport { AssetRecordType, assetMigrations } from './records/TLAsset'\nimport { TLBinding, TLDefaultBinding, createBindingRecordType } from './records/TLBinding'\nimport { CameraRecordType, cameraMigrations } from './records/TLCamera'\nimport { DocumentRecordType, documentMigrations } from './records/TLDocument'\nimport { createInstanceRecordType, instanceMigrations } from './records/TLInstance'\nimport { PageRecordType, pageMigrations } from './records/TLPage'\nimport { InstancePageStateRecordType, instancePageStateMigrations } from './records/TLPageState'\nimport { PointerRecordType, pointerMigrations } from './records/TLPointer'\nimport { InstancePresenceRecordType, instancePresenceMigrations } from './records/TLPresence'\nimport { TLRecord } from './records/TLRecord'\nimport {\n\tTLDefaultShape,\n\tTLShape,\n\tcreateShapeRecordType,\n\tgetShapePropKeysByStyle,\n\trootShapeMigrations,\n} from './records/TLShape'\nimport { TLPropsMigrations, processPropsMigrations } from './recordsWithProps'\nimport { arrowShapeMigrations, arrowShapeProps } from './shapes/TLArrowShape'\nimport { bookmarkShapeMigrations, bookmarkShapeProps } from './shapes/TLBookmarkShape'\nimport { drawShapeMigrations, drawShapeProps } from './shapes/TLDrawShape'\nimport { embedShapeMigrations, embedShapeProps } from './shapes/TLEmbedShape'\nimport { frameShapeMigrations, frameShapeProps } from './shapes/TLFrameShape'\nimport { geoShapeMigrations, geoShapeProps } from './shapes/TLGeoShape'\nimport { groupShapeMigrations, groupShapeProps } from './shapes/TLGroupShape'\nimport { highlightShapeMigrations, highlightShapeProps } from './shapes/TLHighlightShape'\nimport { imageShapeMigrations, imageShapeProps } from './shapes/TLImageShape'\nimport { lineShapeMigrations, lineShapeProps } from './shapes/TLLineShape'\nimport { noteShapeMigrations, noteShapeProps } from './shapes/TLNoteShape'\nimport { textShapeMigrations, textShapeProps } from './shapes/TLTextShape'\nimport { videoShapeMigrations, videoShapeProps } from './shapes/TLVideoShape'\nimport { storeMigrations } from './store-migrations'\nimport { StyleProp } from './styles/StyleProp'\n\n/** @public */\nexport interface SchemaPropsInfo {\n\tmigrations?: LegacyMigrations | TLPropsMigrations | MigrationSequence\n\tprops?: Record<string, StoreValidator<any>>\n\tmeta?: Record<string, StoreValidator<any>>\n}\n\n/** @public */\nexport type TLSchema = StoreSchema<TLRecord, TLStoreProps>\n\n/** @public */\nexport const defaultShapeSchemas = {\n\tarrow: { migrations: arrowShapeMigrations, props: arrowShapeProps },\n\tbookmark: { migrations: bookmarkShapeMigrations, props: bookmarkShapeProps },\n\tdraw: { migrations: drawShapeMigrations, props: drawShapeProps },\n\tembed: { migrations: embedShapeMigrations, props: embedShapeProps },\n\tframe: { migrations: frameShapeMigrations, props: frameShapeProps },\n\tgeo: { migrations: geoShapeMigrations, props: geoShapeProps },\n\tgroup: { migrations: groupShapeMigrations, props: groupShapeProps },\n\thighlight: { migrations: highlightShapeMigrations, props: highlightShapeProps },\n\timage: { migrations: imageShapeMigrations, props: imageShapeProps },\n\tline: { migrations: lineShapeMigrations, props: lineShapeProps },\n\tnote: { migrations: noteShapeMigrations, props: noteShapeProps },\n\ttext: { migrations: textShapeMigrations, props: textShapeProps },\n\tvideo: { migrations: videoShapeMigrations, props: videoShapeProps },\n} satisfies { [T in TLDefaultShape['type']]: SchemaPropsInfo }\n\n/** @public */\nexport const defaultBindingSchemas = {\n\tarrow: { migrations: arrowBindingMigrations, props: arrowBindingProps },\n} satisfies { [T in TLDefaultBinding['type']]: SchemaPropsInfo }\n\n/**\n * Create a TLSchema with custom shapes. Custom shapes cannot override default shapes.\n *\n * @param opts - Options\n *\n * @public */\nexport function createTLSchema({\n\tshapes = defaultShapeSchemas,\n\tbindings = defaultBindingSchemas,\n\tmigrations,\n}: {\n\tshapes?: Record<string, SchemaPropsInfo>\n\tbindings?: Record<string, SchemaPropsInfo>\n\tmigrations?: readonly MigrationSequence[]\n} = {}): TLSchema {\n\tconst stylesById = new Map<string, StyleProp<unknown>>()\n\tfor (const shape of objectMapValues(shapes)) {\n\t\tfor (const style of getShapePropKeysByStyle(shape.props ?? {}).keys()) {\n\t\t\tif (stylesById.has(style.id) && stylesById.get(style.id) !== style) {\n\t\t\t\tthrow new Error(`Multiple StyleProp instances with the same id: ${style.id}`)\n\t\t\t}\n\t\t\tstylesById.set(style.id, style)\n\t\t}\n\t}\n\n\tconst ShapeRecordType = createShapeRecordType(shapes)\n\tconst BindingRecordType = createBindingRecordType(bindings)\n\tconst InstanceRecordType = createInstanceRecordType(stylesById)\n\n\treturn StoreSchema.create(\n\t\t{\n\t\t\tasset: AssetRecordType,\n\t\t\tbinding: BindingRecordType,\n\t\t\tcamera: CameraRecordType,\n\t\t\tdocument: DocumentRecordType,\n\t\t\tinstance: InstanceRecordType,\n\t\t\tinstance_page_state: InstancePageStateRecordType,\n\t\t\tpage: PageRecordType,\n\t\t\tinstance_presence: InstancePresenceRecordType,\n\t\t\tpointer: PointerRecordType,\n\t\t\tshape: ShapeRecordType,\n\t\t},\n\t\t{\n\t\t\tmigrations: [\n\t\t\t\tstoreMigrations,\n\t\t\t\tassetMigrations,\n\t\t\t\tcameraMigrations,\n\t\t\t\tdocumentMigrations,\n\t\t\t\tinstanceMigrations,\n\t\t\t\tinstancePageStateMigrations,\n\t\t\t\tpageMigrations,\n\t\t\t\tinstancePresenceMigrations,\n\t\t\t\tpointerMigrations,\n\t\t\t\trootShapeMigrations,\n\n\t\t\t\tbookmarkAssetMigrations,\n\t\t\t\timageAssetMigrations,\n\t\t\t\tvideoAssetMigrations,\n\n\t\t\t\t...processPropsMigrations<TLShape>('shape', shapes),\n\t\t\t\t...processPropsMigrations<TLBinding>('binding', bindings),\n\n\t\t\t\t...(migrations ?? []),\n\t\t\t],\n\t\t\tonValidationFailure,\n\t\t\tcreateIntegrityChecker,\n\t\t}\n\t)\n}\n"],"names":[],"mappings":";;;;;AAAA,SAA8C,mBAAmC;;AACjF,SAAS,uBAAuB;;AAChC,SAAuB,wBAAwB,2BAA2B;AAC1E,SAAS,+BAA+B;AACxC,SAAS,4BAA4B;AACrC,SAAS,4BAA4B;AACrC,SAAS,wBAAwB,yBAAyB;AAC1D,SAAS,iBAAiB,uBAAuB;AACjD,SAAsC,+BAA+B;AACrE,SAAS,kBAAkB,wBAAwB;AACnD,SAAS,oBAAoB,0BAA0B;AACvD,SAAS,0BAA0B,0BAA0B;AAC7D,SAAS,gBAAgB,sBAAsB;AAC/C,SAAS,6BAA6B,mCAAmC;AACzE,SAAS,mBAAmB,yBAAyB;AACrD,SAAS,4BAA4B,kCAAkC;AAEvE;AAOA,SAA4B,8BAA8B;AAC1D,SAAS,sBAAsB,uBAAuB;AACtD,SAAS,yBAAyB,0BAA0B;AAC5D,SAAS,qBAAqB,sBAAsB;AACpD,SAAS,sBAAsB,uBAAuB;AACtD,SAAS,sBAAsB,uBAAuB;AACtD,SAAS,oBAAoB,qBAAqB;AAClD,SAAS,sBAAsB,uBAAuB;AACtD,SAAS,0BAA0B,2BAA2B;AAC9D,SAAS,sBAAsB,uBAAuB;AACtD,SAAS,qBAAqB,sBAAsB;AACpD,SAAS,qBAAqB,sBAAsB;AACpD,SAAS,qBAAqB,sBAAsB;AACpD,SAAS,sBAAsB,uBAAuB;AACtD,SAAS,uBAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAczB,MAAM,sBAAsB;IAClC,OAAO;QAAE,2LAAY,uBAAA;QAAsB,OAAO,iMAAA;IAAgB;IAClE,UAAU;QAAE,8LAAY,0BAAA;QAAyB,yLAAO,qBAAA;IAAmB;IAC3E,MAAM;QAAE,0LAAY,sBAAA;QAAqB,qLAAO,iBAAA;IAAe;IAC/D,OAAO;QAAE,2LAAY,uBAAA;QAAsB,OAAO,iMAAA;IAAgB;IAClE,OAAO;QAAE,2LAAY,uBAAA;QAAsB,sLAAO,kBAAA;IAAgB;IAClE,KAAK;QAAE,YAAY,kMAAA;QAAoB,oLAAO,gBAAA;IAAc;IAC5D,OAAO;QAAE,2LAAY,uBAAA;QAAsB,OAAO,iMAAA;IAAgB;IAClE,WAAW;QAAE,+LAAY,2BAAA;QAA0B,0LAAO,sBAAA;IAAoB;IAC9E,OAAO;QAAE,2LAAY,uBAAA;QAAsB,qLAAO,mBAAA;IAAgB;IAClE,MAAM;QAAE,0LAAY,sBAAA;QAAqB,qLAAO,iBAAA;IAAe;IAC/D,MAAM;QAAE,0LAAY,sBAAA;QAAqB,qLAAO,iBAAA;IAAe;IAC/D,MAAM;QAAE,0LAAY,sBAAA;QAAqB,qLAAO,iBAAA;IAAe;IAC/D,OAAO;QAAE,2LAAY,uBAAA;QAAsB,sLAAO,kBAAA;IAAgB;AACnE;AAGO,MAAM,wBAAwB;IACpC,OAAO;QAAE,YAAY,4MAAA;QAAwB,0LAAO,oBAAA;IAAkB;AACvE;AAQO,SAAS,eAAe,EAC9B,SAAS,mBAAA,EACT,WAAW,qBAAA,EACX,UAAA,EACD,GAII,CAAC,CAAA,EAAa;IACjB,MAAM,aAAa,aAAA,GAAA,IAAI,IAAgC;IACvD,KAAA,MAAW,gLAAS,kBAAA,EAAgB,MAAM,EAAG;QAC5C,KAAA,MAAW,wLAAS,0BAAA,EAAwB,MAAM,KAAA,IAAS,CAAC,CAAC,EAAE,IAAA,CAAK,EAAG;YACtE,IAAI,WAAW,GAAA,CAAI,MAAM,EAAE,KAAK,WAAW,GAAA,CAAI,MAAM,EAAE,MAAM,OAAO;gBACnE,MAAM,IAAI,MAAM,CAAA,+CAAA,EAAkD,MAAM,EAAE,EAAE;YAC7E;YACA,WAAW,GAAA,CAAI,MAAM,EAAA,EAAI,KAAK;QAC/B;IACD;IAEA,MAAM,iMAAkB,wBAAA,EAAsB,MAAM;IACpD,MAAM,qMAAoB,0BAAA,EAAwB,QAAQ;IAC1D,MAAM,qBAAqB,6MAAA,EAAyB,UAAU;IAE9D,+KAAO,cAAA,CAAY,MAAA,CAClB;QACC,kLAAO,kBAAA;QACP,SAAS;QACT,mLAAQ,oBAAA;QACR,wLAAU,qBAAA;QACV,UAAU;QACV,oMAAqB,8BAAA;QACrB,gLAAM,iBAAA;QACN,iMAAmB,6BAAA;QACnB,qLAAS,qBAAA;QACT,OAAO;IACR,GACA;QACC,YAAY;wLACX,kBAAA;uLACA,kBAAA;wLACA,mBAAA;0LACA,qBAAA;yLACA,sBAAA;2LACA,8BAAA;sLACA,iBAAA;0LACA,6BAAA;yLACA,oBAAA;uLACA,sBAAA;8LAEA,0BAAA;YACA,sMAAA;2LACA,uBAAA;4LAEG,yBAAA,EAAgC,SAAS,MAAM;4LAC/C,yBAAA,EAAkC,WAAW,QAAQ;eAEpD,aAAc,CAAC,EAAA;SACpB;6LACA,sBAAA;gMACA,yBAAA;IACD;AAEF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5009, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/misc/TLHandle.ts"],"sourcesContent":["import { IndexKey } from '@tldraw/utils'\nimport { SetValue } from '../util-types'\n\n/**\n * The handle types used by tldraw's default shapes.\n *\n * @public */\nexport const TL_HANDLE_TYPES = new Set(['vertex', 'virtual', 'create', 'clone'] as const)\n\n/**\n * A type for the handle types used by tldraw's default shapes.\n *\n * @public */\nexport type TLHandleType = SetValue<typeof TL_HANDLE_TYPES>\n\n/**\n * A base interface for a shape's handles.\n *\n * @public\n */\nexport interface TLHandle {\n\t/** A unique identifier for the handle. */\n\tid: string\n\t// TODO(mime): this needs to be required.\n\tlabel?: string\n\ttype: TLHandleType\n\tcanSnap?: boolean\n\tindex: IndexKey\n\tx: number\n\ty: number\n}\n"],"names":[],"mappings":";;;AAOO,MAAM,kBAAkB,aAAA,GAAA,IAAI,IAAI;IAAC;IAAU;IAAW;IAAU,OAAO;CAAU","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5026, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/translations/languages.ts"],"sourcesContent":["// This file is automatically generated by internal/scripts/refresh-assets.ts.\n// Do not edit manually. Or do, I'm a comment, not a cop.\n\n/** @public */\nexport const LANGUAGES = [\n\t{ locale: 'id', label: 'Bahasa Indonesia' },\n\t{ locale: 'ms', label: 'Bahasa Melayu' },\n\t{ locale: 'ca', label: 'Català' },\n\t{ locale: 'cs', label: 'Čeština' },\n\t{ locale: 'da', label: 'Danish' },\n\t{ locale: 'de', label: 'Deutsch' },\n\t{ locale: 'en', label: 'English' },\n\t{ locale: 'es', label: 'Español' },\n\t{ locale: 'tl', label: 'Filipino' },\n\t{ locale: 'fr', label: 'Français' },\n\t{ locale: 'gl', label: 'Galego' },\n\t{ locale: 'hr', label: 'Hrvatski' },\n\t{ locale: 'it', label: 'Italiano' },\n\t{ locale: 'hu', label: 'Magyar' },\n\t{ locale: 'nl', label: 'Nederlands' },\n\t{ locale: 'no', label: 'Norwegian' },\n\t{ locale: 'pl', label: 'Polski' },\n\t{ locale: 'pt-br', label: 'Português - Brasil' },\n\t{ locale: 'pt-pt', label: 'Português - Europeu' },\n\t{ locale: 'ro', label: 'Română' },\n\t{ locale: 'sl', label: 'Slovenščina' },\n\t{ locale: 'so', label: 'Somali' },\n\t{ locale: 'fi', label: 'Suomi' },\n\t{ locale: 'sv', label: 'Svenska' },\n\t{ locale: 'vi', label: 'Tiếng Việt' },\n\t{ locale: 'tr', label: 'Türkçe' },\n\t{ locale: 'el', label: 'Ελληνικά' },\n\t{ locale: 'ru', label: 'Русский' },\n\t{ locale: 'uk', label: 'Українська' },\n\t{ locale: 'he', label: 'עברית' },\n\t{ locale: 'ur', label: 'اردو' },\n\t{ locale: 'ar', label: 'عربي' },\n\t{ locale: 'fa', label: 'فارسی' },\n\t{ locale: 'ne', label: 'नेपाली' },\n\t{ locale: 'mr', label: 'मराठी' },\n\t{ locale: 'hi-in', label: 'हिन्दी' },\n\t{ locale: 'bn', label: 'বাংলা' },\n\t{ locale: 'pa', label: 'ਪੰਜਾਬੀ' },\n\t{ locale: 'gu-in', label: 'ગુજરાતી' },\n\t{ locale: 'ta', label: 'தமிழ்' },\n\t{ locale: 'te', label: 'తెలుగు' },\n\t{ locale: 'kn', label: 'ಕನ್ನಡ' },\n\t{ locale: 'ml', label: 'മലയാളം' },\n\t{ locale: 'th', label: 'ภาษาไทย' },\n\t{ locale: 'km-kh', label: 'ភាសាខ្មែរ' },\n\t{ locale: 'ko-kr', label: '한국어' },\n\t{ locale: 'ja', label: '日本語' },\n\t{ locale: 'zh-cn', label: '简体中文' },\n\t{ locale: 'zh-tw', label: '繁體中文 (台灣)' },\n] as const\n"],"names":[],"mappings":";;;AAIO,MAAM,YAAY;IACxB;QAAE,QAAQ;QAAM,OAAO;IAAmB;IAC1C;QAAE,QAAQ;QAAM,OAAO;IAAgB;IACvC;QAAE,QAAQ;QAAM,OAAO;IAAS;IAChC;QAAE,QAAQ;QAAM,OAAO;IAAU;IACjC;QAAE,QAAQ;QAAM,OAAO;IAAS;IAChC;QAAE,QAAQ;QAAM,OAAO;IAAU;IACjC;QAAE,QAAQ;QAAM,OAAO;IAAU;IACjC;QAAE,QAAQ;QAAM,OAAO;IAAU;IACjC;QAAE,QAAQ;QAAM,OAAO;IAAW;IAClC;QAAE,QAAQ;QAAM,OAAO;IAAW;IAClC;QAAE,QAAQ;QAAM,OAAO;IAAS;IAChC;QAAE,QAAQ;QAAM,OAAO;IAAW;IAClC;QAAE,QAAQ;QAAM,OAAO;IAAW;IAClC;QAAE,QAAQ;QAAM,OAAO;IAAS;IAChC;QAAE,QAAQ;QAAM,OAAO;IAAa;IACpC;QAAE,QAAQ;QAAM,OAAO;IAAY;IACnC;QAAE,QAAQ;QAAM,OAAO;IAAS;IAChC;QAAE,QAAQ;QAAS,OAAO;IAAqB;IAC/C;QAAE,QAAQ;QAAS,OAAO;IAAsB;IAChD;QAAE,QAAQ;QAAM,OAAO;IAAS;IAChC;QAAE,QAAQ;QAAM,OAAO;IAAc;IACrC;QAAE,QAAQ;QAAM,OAAO;IAAS;IAChC;QAAE,QAAQ;QAAM,OAAO;IAAQ;IAC/B;QAAE,QAAQ;QAAM,OAAO;IAAU;IACjC;QAAE,QAAQ;QAAM,OAAO;IAAa;IACpC;QAAE,QAAQ;QAAM,OAAO;IAAS;IAChC;QAAE,QAAQ;QAAM,OAAO;IAAW;IAClC;QAAE,QAAQ;QAAM,OAAO;IAAU;IACjC;QAAE,QAAQ;QAAM,OAAO;IAAa;IACpC;QAAE,QAAQ;QAAM,OAAO;IAAQ;IAC/B;QAAE,QAAQ;QAAM,OAAO;IAAO;IAC9B;QAAE,QAAQ;QAAM,OAAO;IAAO;IAC9B;QAAE,QAAQ;QAAM,OAAO;IAAQ;IAC/B;QAAE,QAAQ;QAAM,OAAO;IAAS;IAChC;QAAE,QAAQ;QAAM,OAAO;IAAQ;IAC/B;QAAE,QAAQ;QAAS,OAAO;IAAS;IACnC;QAAE,QAAQ;QAAM,OAAO;IAAQ;IAC/B;QAAE,QAAQ;QAAM,OAAO;IAAS;IAChC;QAAE,QAAQ;QAAS,OAAO;IAAU;IACpC;QAAE,QAAQ;QAAM,OAAO;IAAQ;IAC/B;QAAE,QAAQ;QAAM,OAAO;IAAS;IAChC;QAAE,QAAQ;QAAM,OAAO;IAAQ;IAC/B;QAAE,QAAQ;QAAM,OAAO;IAAS;IAChC;QAAE,QAAQ;QAAM,OAAO;IAAU;IACjC;QAAE,QAAQ;QAAS,OAAO;IAAY;IACtC;QAAE,QAAQ;QAAS,OAAO;IAAM;IAChC;QAAE,QAAQ;QAAM,OAAO;IAAM;IAC7B;QAAE,QAAQ;QAAS,OAAO;IAAO;IACjC;QAAE,QAAQ;QAAS,OAAO;IAAY;CACvC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5235, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/translations/translations.ts"],"sourcesContent":["import { LANGUAGES } from './languages'\n\n/** @public */\nexport { LANGUAGES }\n\n/** @public */\nexport type TLLanguage = (typeof LANGUAGES)[number]\n// {\n// \treadonly locale: string\n// \treadonly label: string\n// }\n\n/** @public */\nexport function getDefaultTranslationLocale(): TLLanguage['locale'] {\n\tconst locales = typeof window !== 'undefined' ? (window.navigator.languages ?? ['en']) : ['en']\n\treturn _getDefaultTranslationLocale(locales)\n}\n\n/** @internal */\nexport function _getDefaultTranslationLocale(locales: readonly string[]): TLLanguage['locale'] {\n\tfor (const locale of locales) {\n\t\tconst supportedLocale = getSupportedLocale(locale)\n\t\tif (supportedLocale) {\n\t\t\treturn supportedLocale\n\t\t}\n\t}\n\treturn 'en'\n}\n\n/** @public */\nconst DEFAULT_LOCALE_REGIONS: { [locale: string]: TLLanguage['locale'] } = {\n\tzh: 'zh-cn',\n\tpt: 'pt-br',\n\tko: 'ko-kr',\n\thi: 'hi-in',\n}\n\n/** @public */\nfunction getSupportedLocale(locale: string): TLLanguage['locale'] | null {\n\t// If we have an exact match, return it!\n\t// (e.g. if the user has 'fr' and we have 'fr')\n\t// (or if the user has 'pt-BR' and we have 'pt-br')\n\tconst exactMatch = LANGUAGES.find((t) => t.locale === locale.toLowerCase())\n\tif (exactMatch) {\n\t\treturn exactMatch.locale\n\t}\n\n\t// Otherwise, we need to be more flexible...\n\tconst [language, region] = locale.split(/[-_]/).map((s) => s.toLowerCase())\n\n\t// If the user's language has a region...\n\t// let's try to find non-region-specific locale for them\n\t// (e.g. if they have 'fr-CA' but we only have 'fr')\n\tif (region) {\n\t\tconst languageMatch = LANGUAGES.find((t) => t.locale === language)\n\t\tif (languageMatch) {\n\t\t\treturn languageMatch.locale\n\t\t}\n\t}\n\n\t// If the user's language doesn't have a region...\n\t// let's try to find a region-specific locale for them\n\t// (e.g. if they have 'pt' but we only have 'pt-pt' or 'pt-br')\n\t//\n\t// In this case, we choose the hard-coded default region for that language\n\tif (language in DEFAULT_LOCALE_REGIONS) {\n\t\treturn DEFAULT_LOCALE_REGIONS[language]\n\t}\n\n\t// Oh no! We don't have a translation for this language!\n\t// Let's give up...\n\treturn null\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,iBAAiB;;AAanB,SAAS,8BAAoD;IACnE,MAAM,UAAU,OAAO,WAAW,cAAe,OAAO,SAAA,CAAU,SAAA,IAAa;QAAC,IAAI;KAAA,GAAK;QAAC,IAAI;KAAA;IAC9F,OAAO,6BAA6B,OAAO;AAC5C;AAGO,SAAS,6BAA6B,OAAA,EAAkD;IAC9F,KAAA,MAAW,UAAU,QAAS;QAC7B,MAAM,kBAAkB,mBAAmB,MAAM;QACjD,IAAI,iBAAiB;YACpB,OAAO;QACR;IACD;IACA,OAAO;AACR;AAGA,MAAM,yBAAqE;IAC1E,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;AACL;AAGA,SAAS,mBAAmB,MAAA,EAA6C;IAIxE,MAAM,+LAAa,YAAA,CAAU,IAAA,CAAK,CAAC,IAAM,EAAE,MAAA,KAAW,OAAO,WAAA,CAAY,CAAC;IAC1E,IAAI,YAAY;QACf,OAAO,WAAW,MAAA;IACnB;IAGA,MAAM,CAAC,UAAU,MAAM,CAAA,GAAI,OAAO,KAAA,CAAM,MAAM,EAAE,GAAA,CAAI,CAAC,IAAM,EAAE,WAAA,CAAY,CAAC;IAK1E,IAAI,QAAQ;QACX,MAAM,kMAAgB,YAAA,CAAU,IAAA,CAAK,CAAC,IAAM,EAAE,MAAA,KAAW,QAAQ;QACjE,IAAI,eAAe;YAClB,OAAO,cAAc,MAAA;QACtB;IACD;IAOA,IAAI,YAAY,wBAAwB;QACvC,OAAO,sBAAA,CAAuB,QAAQ,CAAA;IACvC;IAIA,OAAO;AACR","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5298, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omar/Desktop/studio/node_modules/%40tldraw/tlschema/src/index.ts"],"sourcesContent":["import { registerTldrawLibraryVersion } from '@tldraw/utils'\nexport { assetIdValidator, createAssetValidator, type TLBaseAsset } from './assets/TLBaseAsset'\nexport { type TLBookmarkAsset } from './assets/TLBookmarkAsset'\nexport { type TLImageAsset } from './assets/TLImageAsset'\nexport { type TLVideoAsset } from './assets/TLVideoAsset'\nexport {\n\tarrowBindingMigrations,\n\tarrowBindingProps,\n\tarrowBindingVersions,\n\tElbowArrowSnap,\n\ttype TLArrowBinding,\n\ttype TLArrowBindingProps,\n} from './bindings/TLArrowBinding'\nexport {\n\tbindingIdValidator,\n\tcreateBindingValidator,\n\ttype TLBaseBinding,\n} from './bindings/TLBaseBinding'\nexport {\n\tcreatePresenceStateDerivation,\n\tgetDefaultUserPresence,\n\ttype TLPresenceStateInfo,\n\ttype TLPresenceUserInfo,\n} from './createPresenceStateDerivation'\nexport {\n\tcreateTLSchema,\n\tdefaultBindingSchemas,\n\tdefaultShapeSchemas,\n\ttype SchemaPropsInfo,\n\ttype TLSchema,\n} from './createTLSchema'\nexport {\n\tboxModelValidator,\n\tvecModelValidator,\n\ttype BoxModel,\n\ttype VecModel,\n} from './misc/geometry-types'\nexport { idValidator } from './misc/id-validator'\nexport {\n\tcanvasUiColorTypeValidator,\n\tTL_CANVAS_UI_COLOR_TYPES,\n\ttype TLCanvasUiColor,\n} from './misc/TLColor'\nexport { TL_CURSOR_TYPES, type TLCursor, type TLCursorType } from './misc/TLCursor'\nexport { TL_HANDLE_TYPES, type TLHandle, type TLHandleType } from './misc/TLHandle'\nexport { opacityValidator, type TLOpacityType } from './misc/TLOpacity'\nexport { richTextValidator, toRichText, type TLRichText } from './misc/TLRichText'\nexport { scribbleValidator, TL_SCRIBBLE_STATES, type TLScribble } from './misc/TLScribble'\nexport {\n\tassetMigrations,\n\tAssetRecordType,\n\tassetValidator,\n\ttype TLAsset,\n\ttype TLAssetId,\n\ttype TLAssetPartial,\n\ttype TLAssetShape,\n} from './records/TLAsset'\nexport {\n\tcreateBindingId,\n\tcreateBindingPropsMigrationIds,\n\tcreateBindingPropsMigrationSequence,\n\tisBinding,\n\tisBindingId,\n\trootBindingMigrations,\n\ttype TLBinding,\n\ttype TLBindingCreate,\n\ttype TLBindingId,\n\ttype TLBindingUpdate,\n\ttype TLDefaultBinding,\n\ttype TLUnknownBinding,\n} from './records/TLBinding'\nexport { CameraRecordType, type TLCamera, type TLCameraId } from './records/TLCamera'\nexport {\n\tDocumentRecordType,\n\tisDocument,\n\tTLDOCUMENT_ID,\n\ttype TLDocument,\n} from './records/TLDocument'\nexport {\n\tpluckPreservingValues,\n\tTLINSTANCE_ID,\n\ttype TLInstance,\n\ttype TLInstanceId,\n} from './records/TLInstance'\nexport {\n\tisPageId,\n\tpageIdValidator,\n\tPageRecordType,\n\ttype TLPage,\n\ttype TLPageId,\n} from './records/TLPage'\nexport {\n\tInstancePageStateRecordType,\n\ttype TLInstancePageState,\n\ttype TLInstancePageStateId,\n} from './records/TLPageState'\nexport {\n\tPointerRecordType,\n\tTLPOINTER_ID,\n\ttype TLPointer,\n\ttype TLPointerId,\n} from './records/TLPointer'\nexport {\n\tInstancePresenceRecordType,\n\ttype TLInstancePresence,\n\ttype TLInstancePresenceID,\n} from './records/TLPresence'\nexport { type TLRecord } from './records/TLRecord'\nexport {\n\tcreateShapeId,\n\tcreateShapePropsMigrationIds,\n\tcreateShapePropsMigrationSequence,\n\tgetShapePropKeysByStyle,\n\tisShape,\n\tisShapeId,\n\trootShapeMigrations,\n\ttype TLDefaultShape,\n\ttype TLParentId,\n\ttype TLShape,\n\ttype TLShapeId,\n\ttype TLShapePartial,\n\ttype TLUnknownShape,\n} from './records/TLShape'\nexport {\n\ttype RecordProps,\n\ttype RecordPropsType,\n\ttype TLPropsMigration,\n\ttype TLPropsMigrations,\n} from './recordsWithProps'\nexport { type ShapeWithCrop, type TLShapeCrop } from './shapes/ShapeWithCrop'\nexport {\n\tArrowShapeArrowheadEndStyle,\n\tArrowShapeArrowheadStartStyle,\n\tArrowShapeKindStyle,\n\tarrowShapeMigrations,\n\tarrowShapeProps,\n\tarrowShapeVersions,\n\ttype TLArrowShape,\n\ttype TLArrowShapeArrowheadStyle,\n\ttype TLArrowShapeKind,\n\ttype TLArrowShapeProps,\n} from './shapes/TLArrowShape'\nexport {\n\tcreateShapeValidator,\n\tparentIdValidator,\n\tshapeIdValidator,\n\ttype TLBaseShape,\n} from './shapes/TLBaseShape'\nexport {\n\tbookmarkShapeMigrations,\n\tbookmarkShapeProps,\n\ttype TLBookmarkShape,\n\ttype TLBookmarkShapeProps,\n} from './shapes/TLBookmarkShape'\nexport {\n\tdrawShapeMigrations,\n\tdrawShapeProps,\n\ttype TLDrawShape,\n\ttype TLDrawShapeProps,\n\ttype TLDrawShapeSegment,\n} from './shapes/TLDrawShape'\nexport {\n\tembedShapeMigrations,\n\tembedShapeProps,\n\ttype TLEmbedShape,\n\ttype TLEmbedShapeProps,\n} from './shapes/TLEmbedShape'\nexport {\n\tframeShapeMigrations,\n\tframeShapeProps,\n\ttype TLFrameShape,\n\ttype TLFrameShapeProps,\n} from './shapes/TLFrameShape'\nexport {\n\tGeoShapeGeoStyle,\n\tgeoShapeMigrations,\n\tgeoShapeProps,\n\ttype TLGeoShape,\n\ttype TLGeoShapeGeoStyle,\n\ttype TLGeoShapeProps,\n} from './shapes/TLGeoShape'\nexport {\n\tgroupShapeMigrations,\n\tgroupShapeProps,\n\ttype TLGroupShape,\n\ttype TLGroupShapeProps,\n} from './shapes/TLGroupShape'\nexport {\n\thighlightShapeMigrations,\n\thighlightShapeProps,\n\ttype TLHighlightShape,\n\ttype TLHighlightShapeProps,\n} from './shapes/TLHighlightShape'\nexport {\n\tImageShapeCrop,\n\timageShapeMigrations,\n\timageShapeProps,\n\ttype TLImageShape,\n\ttype TLImageShapeProps,\n} from './shapes/TLImageShape'\nexport {\n\tlineShapeMigrations,\n\tlineShapeProps,\n\tLineShapeSplineStyle,\n\ttype TLLineShape,\n\ttype TLLineShapePoint,\n\ttype TLLineShapeProps,\n\ttype TLLineShapeSplineStyle,\n} from './shapes/TLLineShape'\nexport {\n\tnoteShapeMigrations,\n\tnoteShapeProps,\n\ttype TLNoteShape,\n\ttype TLNoteShapeProps,\n} from './shapes/TLNoteShape'\nexport {\n\ttextShapeMigrations,\n\ttextShapeProps,\n\ttype TLTextShape,\n\ttype TLTextShapeProps,\n} from './shapes/TLTextShape'\nexport {\n\tvideoShapeMigrations,\n\tvideoShapeProps,\n\ttype TLVideoShape,\n\ttype TLVideoShapeProps,\n} from './shapes/TLVideoShape'\nexport { EnumStyleProp, StyleProp, type StylePropValue } from './styles/StyleProp'\nexport {\n\tdefaultColorNames,\n\tDefaultColorStyle,\n\tDefaultColorThemePalette,\n\tgetDefaultColorTheme,\n\ttype TLDefaultColorStyle,\n\ttype TLDefaultColorTheme,\n\ttype TLDefaultColorThemeColor,\n} from './styles/TLColorStyle'\nexport { DefaultDashStyle, type TLDefaultDashStyle } from './styles/TLDashStyle'\nexport { DefaultFillStyle, type TLDefaultFillStyle } from './styles/TLFillStyle'\nexport {\n\tDefaultFontFamilies,\n\tDefaultFontStyle,\n\ttype TLDefaultFontStyle,\n} from './styles/TLFontStyle'\nexport {\n\tDefaultHorizontalAlignStyle,\n\ttype TLDefaultHorizontalAlignStyle,\n} from './styles/TLHorizontalAlignStyle'\nexport { DefaultSizeStyle, type TLDefaultSizeStyle } from './styles/TLSizeStyle'\nexport { DefaultTextAlignStyle, type TLDefaultTextAlignStyle } from './styles/TLTextAlignStyle'\nexport {\n\tDefaultVerticalAlignStyle,\n\ttype TLDefaultVerticalAlignStyle,\n} from './styles/TLVerticalAlignStyle'\nexport {\n\ttype TLAssetContext,\n\ttype TLAssetStore,\n\ttype TLSerializedStore,\n\ttype TLStore,\n\ttype TLStoreProps,\n\ttype TLStoreSchema,\n\ttype TLStoreSnapshot,\n} from './TLStore'\nexport {\n\tgetDefaultTranslationLocale,\n\tLANGUAGES,\n\ttype TLLanguage,\n} from './translations/translations'\nexport { type SetValue } from './util-types'\n\nregisterTldrawLibraryVersion(\n\t(globalThis as any).TLDRAW_LIBRARY_NAME,\n\t(globalThis as any).TLDRAW_LIBRARY_VERSION,\n\t(globalThis as any).TLDRAW_LIBRARY_MODULES\n)\n"],"names":[],"mappings":";AAAA,SAAS,oCAAoC;;AAC7C,SAAS,kBAAkB,4BAA8C;AAIzE;AAQA;AAKA;AAMA;AAOA;AAMA,SAAS,mBAAmB;AAC5B;AAKA,SAAS,uBAAyD;AAClE,SAAS,uBAAyD;AAClE,SAAS,wBAA4C;AACrD,SAAS,mBAAmB,kBAAmC;AAC/D,SAAS,mBAAmB,0BAA2C;AACvE;AASA;AAcA,SAAS,wBAAwD;AACjE;AAMA;AAMA;AAOA;AAKA;AAMA;AAMA;AAsBA;AAYA;AAMA;AAMA;AAOA;AAMA;AAMA;AAQA;AAMA;AAMA;AAOA;AASA;AAMA;AAMA;AAMA,SAAS,eAAe,iBAAsC;AAC9D;AASA,SAAS,wBAAiD;AAC1D,SAAS,wBAAiD;AAC1D;AAKA;AAIA,SAAS,wBAAiD;AAC1D,SAAS,6BAA2D;AACpE;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wKAOA,+BAAA,EACE,oBACA,UACA","ignoreList":[0],"debugId":null}}]
}