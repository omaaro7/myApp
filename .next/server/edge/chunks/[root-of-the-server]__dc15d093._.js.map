{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["\nimport { NextRequest, NextResponse } from 'next/server';\n\nconst locales = ['en', 'ar'];\nconst defaultLocale = 'en';\n\nfunction getLocale(request: NextRequest): string {\n  const acceptLanguage = request.headers.get('accept-language');\n  if (acceptLanguage) {\n    const languages = acceptLanguage.split(',').map(lang => lang.split(';')[0].trim());\n    for (const lang of languages) {\n      if (locales.includes(lang)) {\n        return lang;\n      }\n    }\n  }\n  return defaultLocale;\n}\n\nexport function middleware(request: NextRequest) {\n  const { pathname } = request.nextUrl;\n\n  const pathnameHasLocale = locales.some(\n    (locale) => pathname.startsWith(`/${locale}/`) || pathname === `/${locale}`\n  );\n\n  if (pathnameHasLocale) return;\n\n  const locale = getLocale(request);\n  request.nextUrl.pathname = `/${locale}${pathname}`;\n  \n  return NextResponse.redirect(request.nextUrl);\n}\n\nexport const config = {\n  matcher: [\n    // Skip all internal paths (_next)\n    '/((?!_next|api|favicon.ico).*)',\n  ],\n};\n"],"names":[],"mappings":";;;;AACA;AAAA;;AAEA,MAAM,UAAU;IAAC;IAAM;CAAK;AAC5B,MAAM,gBAAgB;AAEtB,SAAS,UAAU,OAAoB;IACrC,MAAM,iBAAiB,QAAQ,OAAO,CAAC,GAAG,CAAC;IAC3C,IAAI,gBAAgB;QAClB,MAAM,YAAY,eAAe,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA,OAAQ,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI;QAC/E,KAAK,MAAM,QAAQ,UAAW;YAC5B,IAAI,QAAQ,QAAQ,CAAC,OAAO;gBAC1B,OAAO;YACT;QACF;IACF;IACA,OAAO;AACT;AAEO,SAAS,WAAW,OAAoB;IAC7C,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,MAAM,oBAAoB,QAAQ,IAAI,CACpC,CAAC,SAAW,SAAS,UAAU,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,KAAK,aAAa,CAAC,CAAC,EAAE,QAAQ;IAG7E,IAAI,mBAAmB;IAEvB,MAAM,SAAS,UAAU;IACzB,QAAQ,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,SAAS,UAAU;IAElD,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,QAAQ,OAAO;AAC9C;AAEO,MAAM,SAAS;IACpB,SAAS;QACP,kCAAkC;QAClC;KACD;AACH"}}]
}